{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../node_modules/lodash.merge/index.js","webpack:///../node_modules/objection/lib/model/AjvValidator.js","webpack:///../node_modules/objection/lib/model/Model.js","webpack:///../node_modules/objection/lib/model/ModifierNotFoundError.js","webpack:///../node_modules/objection/lib/model/NotFoundError.js","webpack:///../node_modules/objection/lib/model/RelationDoesNotExistError.js","webpack:///../node_modules/objection/lib/model/ValidationError.js","webpack:///../node_modules/objection/lib/model/Validator.js","webpack:///../node_modules/objection/lib/model/graph/ModelGraph.js","webpack:///../node_modules/objection/lib/model/graph/ModelGraphBuilder.js","webpack:///../node_modules/objection/lib/model/graph/ModelGraphEdge.js","webpack:///../node_modules/objection/lib/model/graph/ModelGraphNode.js","webpack:///../node_modules/objection/lib/model/inheritModel.js","webpack:///../node_modules/objection/lib/model/modelBindKnex.js","webpack:///../node_modules/objection/lib/model/modelClone.js","webpack:///../node_modules/objection/lib/model/modelColPropMap.js","webpack:///../node_modules/objection/lib/model/modelFilter.js","webpack:///../node_modules/objection/lib/model/modelId.js","webpack:///../node_modules/objection/lib/model/modelJsonAttributes.js","webpack:///../node_modules/objection/lib/model/modelParseRelations.js","webpack:///../node_modules/objection/lib/model/modelQueryProps.js","webpack:///../node_modules/objection/lib/model/modelSet.js","webpack:///../node_modules/objection/lib/model/modelTableMetadata.js","webpack:///../node_modules/objection/lib/model/modelToJson.js","webpack:///../node_modules/objection/lib/model/modelUtils.js","webpack:///../node_modules/objection/lib/model/modelValidate.js","webpack:///../node_modules/objection/lib/model/modelValues.js","webpack:///../node_modules/objection/lib/model/modelVisitor.js","webpack:///../node_modules/objection/lib/objection.js","webpack:///../node_modules/objection/lib/queryBuilder/InternalOptions.js","webpack:///../node_modules/objection/lib/queryBuilder/JoinBuilder.js","webpack:///../node_modules/objection/lib/queryBuilder/LiteralBuilder.js","webpack:///../node_modules/objection/lib/queryBuilder/QueryBuilder.js","webpack:///../node_modules/objection/lib/queryBuilder/QueryBuilderBase.js","webpack:///../node_modules/objection/lib/queryBuilder/QueryBuilderContext.js","webpack:///../node_modules/objection/lib/queryBuilder/QueryBuilderContextBase.js","webpack:///../node_modules/objection/lib/queryBuilder/QueryBuilderOperationSupport.js","webpack:///../node_modules/objection/lib/queryBuilder/QueryBuilderUserContext.js","webpack:///../node_modules/objection/lib/queryBuilder/RawBuilder.js","webpack:///../node_modules/objection/lib/queryBuilder/ReferenceBuilder.js","webpack:///../node_modules/objection/lib/queryBuilder/RelationExpression.js","webpack:///../node_modules/objection/lib/queryBuilder/StaticHookArguments.js","webpack:///../node_modules/objection/lib/queryBuilder/graph/GraphAction.js","webpack:///../node_modules/objection/lib/queryBuilder/graph/GraphOperation.js","webpack:///../node_modules/objection/lib/queryBuilder/graph/GraphOptions.js","webpack:///../node_modules/objection/lib/queryBuilder/graph/GraphUpsert.js","webpack:///../node_modules/objection/lib/queryBuilder/graph/delete/GraphDelete.js","webpack:///../node_modules/objection/lib/queryBuilder/graph/delete/GraphDeleteAction.js","webpack:///../node_modules/objection/lib/queryBuilder/graph/insert/GraphInsert.js","webpack:///../node_modules/objection/lib/queryBuilder/graph/insert/GraphInsertAction.js","webpack:///../node_modules/objection/lib/queryBuilder/graph/insert/JoinRowGraphInsertAction.js","webpack:///../node_modules/objection/lib/queryBuilder/graph/patch/GraphPatch.js","webpack:///../node_modules/objection/lib/queryBuilder/graph/patch/GraphPatchAction.js","webpack:///../node_modules/objection/lib/queryBuilder/graph/recursiveUpsert/GraphRecursiveUpsert.js","webpack:///../node_modules/objection/lib/queryBuilder/graph/recursiveUpsert/GraphRecursiveUpsertAction.js","webpack:///../node_modules/objection/lib/queryBuilder/join/JoinResultColumn.js","webpack:///../node_modules/objection/lib/queryBuilder/join/JoinResultParser.js","webpack:///../node_modules/objection/lib/queryBuilder/join/RelationJoiner.js","webpack:///../node_modules/objection/lib/queryBuilder/join/TableNode.js","webpack:///../node_modules/objection/lib/queryBuilder/join/TableTree.js","webpack:///../node_modules/objection/lib/queryBuilder/join/utils.js","webpack:///../node_modules/objection/lib/queryBuilder/operations/DelegateOperation.js","webpack:///../node_modules/objection/lib/queryBuilder/operations/DeleteOperation.js","webpack:///../node_modules/objection/lib/queryBuilder/operations/FindByIdOperation.js","webpack:///../node_modules/objection/lib/queryBuilder/operations/FindByIdsOperation.js","webpack:///../node_modules/objection/lib/queryBuilder/operations/FindOperation.js","webpack:///../node_modules/objection/lib/queryBuilder/operations/FirstOperation.js","webpack:///../node_modules/objection/lib/queryBuilder/operations/FromOperation.js","webpack:///../node_modules/objection/lib/queryBuilder/operations/InsertAndFetchOperation.js","webpack:///../node_modules/objection/lib/queryBuilder/operations/InsertGraphAndFetchOperation.js","webpack:///../node_modules/objection/lib/queryBuilder/operations/InsertGraphOperation.js","webpack:///../node_modules/objection/lib/queryBuilder/operations/InsertOperation.js","webpack:///../node_modules/objection/lib/queryBuilder/operations/InstanceDeleteOperation.js","webpack:///../node_modules/objection/lib/queryBuilder/operations/InstanceFindOperation.js","webpack:///../node_modules/objection/lib/queryBuilder/operations/InstanceInsertOperation.js","webpack:///../node_modules/objection/lib/queryBuilder/operations/InstanceUpdateOperation.js","webpack:///../node_modules/objection/lib/queryBuilder/operations/JoinRelationOperation.js","webpack:///../node_modules/objection/lib/queryBuilder/operations/KnexOperation.js","webpack:///../node_modules/objection/lib/queryBuilder/operations/ObjectionToKnexConvertingOperation.js","webpack:///../node_modules/objection/lib/queryBuilder/operations/OnBuildKnexOperation.js","webpack:///../node_modules/objection/lib/queryBuilder/operations/OnBuildOperation.js","webpack:///../node_modules/objection/lib/queryBuilder/operations/OnErrorOperation.js","webpack:///../node_modules/objection/lib/queryBuilder/operations/QueryBuilderOperation.js","webpack:///../node_modules/objection/lib/queryBuilder/operations/RangeOperation.js","webpack:///../node_modules/objection/lib/queryBuilder/operations/RelateOperation.js","webpack:///../node_modules/objection/lib/queryBuilder/operations/ReturningOperation.js","webpack:///../node_modules/objection/lib/queryBuilder/operations/RunAfterOperation.js","webpack:///../node_modules/objection/lib/queryBuilder/operations/RunBeforeOperation.js","webpack:///../node_modules/objection/lib/queryBuilder/operations/UnrelateOperation.js","webpack:///../node_modules/objection/lib/queryBuilder/operations/UpdateAndFetchOperation.js","webpack:///../node_modules/objection/lib/queryBuilder/operations/UpdateOperation.js","webpack:///../node_modules/objection/lib/queryBuilder/operations/UpsertGraphAndFetchOperation.js","webpack:///../node_modules/objection/lib/queryBuilder/operations/UpsertGraphOperation.js","webpack:///../node_modules/objection/lib/queryBuilder/operations/WhereCompositeOperation.js","webpack:///../node_modules/objection/lib/queryBuilder/operations/eager/EagerOperation.js","webpack:///../node_modules/objection/lib/queryBuilder/operations/eager/JoinEagerOperation.js","webpack:///../node_modules/objection/lib/queryBuilder/operations/eager/NaiveEagerOperation.js","webpack:///../node_modules/objection/lib/queryBuilder/operations/eager/WhereInEagerOperation.js","webpack:///../node_modules/objection/lib/queryBuilder/operations/jsonApi/WhereJsonHasPostgresOperation.js","webpack:///../node_modules/objection/lib/queryBuilder/operations/jsonApi/WhereJsonNotObjectPostgresOperation.js","webpack:///../node_modules/objection/lib/queryBuilder/operations/jsonApi/WhereJsonPostgresOperation.js","webpack:///../node_modules/objection/lib/queryBuilder/operations/jsonApi/postgresJsonApi.js","webpack:///../node_modules/objection/lib/queryBuilder/operations/select/SelectOperation.js","webpack:///../node_modules/objection/lib/queryBuilder/operations/select/Selection.js","webpack:///../node_modules/objection/lib/queryBuilder/operations/whereInComposite/WhereInCompositeMsSqlOperation.js","webpack:///../node_modules/objection/lib/queryBuilder/operations/whereInComposite/WhereInCompositeOperation.js","webpack:///../node_modules/objection/lib/queryBuilder/operations/whereInComposite/WhereInCompositeSqliteOperation.js","webpack:///../node_modules/objection/lib/queryBuilder/parsers/jsonFieldExpressionParser.js","webpack:///../node_modules/objection/lib/queryBuilder/parsers/relationExpressionParser.js","webpack:///../node_modules/objection/lib/relations/Relation.js","webpack:///../node_modules/objection/lib/relations/RelationDeleteOperation.js","webpack:///../node_modules/objection/lib/relations/RelationFindOperation.js","webpack:///../node_modules/objection/lib/relations/RelationInsertOperation.js","webpack:///../node_modules/objection/lib/relations/RelationProperty.js","webpack:///../node_modules/objection/lib/relations/RelationSubqueryOperation.js","webpack:///../node_modules/objection/lib/relations/RelationUpdateOperation.js","webpack:///../node_modules/objection/lib/relations/belongsToOne/BelongsToOneDeleteOperation.js","webpack:///../node_modules/objection/lib/relations/belongsToOne/BelongsToOneInsertOperation.js","webpack:///../node_modules/objection/lib/relations/belongsToOne/BelongsToOneRelateOperation.js","webpack:///../node_modules/objection/lib/relations/belongsToOne/BelongsToOneRelation.js","webpack:///../node_modules/objection/lib/relations/belongsToOne/BelongsToOneUnrelateOperation.js","webpack:///../node_modules/objection/lib/relations/hasMany/HasManyInsertOperation.js","webpack:///../node_modules/objection/lib/relations/hasMany/HasManyRelateOperation.js","webpack:///../node_modules/objection/lib/relations/hasMany/HasManyRelation.js","webpack:///../node_modules/objection/lib/relations/hasMany/HasManyUnrelateOperation.js","webpack:///../node_modules/objection/lib/relations/hasOne/HasOneRelation.js","webpack:///../node_modules/objection/lib/relations/hasOneThrough/HasOneThroughRelation.js","webpack:///../node_modules/objection/lib/relations/manyToMany/ManyToManyModifyMixin.js","webpack:///../node_modules/objection/lib/relations/manyToMany/ManyToManyMySqlModifyMixin.js","webpack:///../node_modules/objection/lib/relations/manyToMany/ManyToManyRelation.js","webpack:///../node_modules/objection/lib/relations/manyToMany/ManyToManySqliteModifyMixin.js","webpack:///../node_modules/objection/lib/relations/manyToMany/delete/ManyToManyDeleteMySqlOperation.js","webpack:///../node_modules/objection/lib/relations/manyToMany/delete/ManyToManyDeleteOperation.js","webpack:///../node_modules/objection/lib/relations/manyToMany/delete/ManyToManyDeleteOperationBase.js","webpack:///../node_modules/objection/lib/relations/manyToMany/delete/ManyToManyDeleteSqliteOperation.js","webpack:///../node_modules/objection/lib/relations/manyToMany/find/ManyToManyFindOperation.js","webpack:///../node_modules/objection/lib/relations/manyToMany/insert/ManyToManyInsertOperation.js","webpack:///../node_modules/objection/lib/relations/manyToMany/relate/ManyToManyRelateOperation.js","webpack:///../node_modules/objection/lib/relations/manyToMany/unrelate/ManyToManyUnrelateMySqlOperation.js","webpack:///../node_modules/objection/lib/relations/manyToMany/unrelate/ManyToManyUnrelateOperation.js","webpack:///../node_modules/objection/lib/relations/manyToMany/unrelate/ManyToManyUnrelateOperationBase.js","webpack:///../node_modules/objection/lib/relations/manyToMany/unrelate/ManyToManyUnrelateSqliteOperation.js","webpack:///../node_modules/objection/lib/relations/manyToMany/update/ManyToManyUpdateMySqlOperation.js","webpack:///../node_modules/objection/lib/relations/manyToMany/update/ManyToManyUpdateOperation.js","webpack:///../node_modules/objection/lib/relations/manyToMany/update/ManyToManyUpdateOperationBase.js","webpack:///../node_modules/objection/lib/relations/manyToMany/update/ManyToManyUpdateSqliteOperation.js","webpack:///../node_modules/objection/lib/transaction.js","webpack:///../node_modules/objection/lib/utils sync ^.*$","webpack:///../node_modules/objection/lib/utils/assert.js","webpack:///../node_modules/objection/lib/utils/buildUtils.js","webpack:///../node_modules/objection/lib/utils/classUtils.js","webpack:///../node_modules/objection/lib/utils/clone.js","webpack:///../node_modules/objection/lib/utils/createModifier.js","webpack:///../node_modules/objection/lib/utils/deprecate.js","webpack:///../node_modules/objection/lib/utils/identifierMapping.js","webpack:///../node_modules/objection/lib/utils/internalPropUtils.js","webpack:///../node_modules/objection/lib/utils/knexUtils.js","webpack:///../node_modules/objection/lib/utils/mixin.js","webpack:///../node_modules/objection/lib/utils/normalizeIds.js","webpack:///../node_modules/objection/lib/utils/objectUtils.js","webpack:///../node_modules/objection/lib/utils/parseFieldExpression.js","webpack:///../node_modules/objection/lib/utils/promiseUtils/after.js","webpack:///../node_modules/objection/lib/utils/promiseUtils/afterReturn.js","webpack:///../node_modules/objection/lib/utils/promiseUtils/index.js","webpack:///../node_modules/objection/lib/utils/promiseUtils/isPromise.js","webpack:///../node_modules/objection/lib/utils/promiseUtils/map.js","webpack:///../node_modules/objection/lib/utils/promiseUtils/mapAfterAllReturn.js","webpack:///../node_modules/objection/lib/utils/promiseUtils/try.js","webpack:///../node_modules/objection/lib/utils/resolveModel.js","webpack:///../node_modules/objection/lib/utils/tmpColumnUtils.js","webpack:///./config.js","webpack:///./constants/user.js","webpack:///./handler.js","webpack:///./models/user.js","webpack:///./node_modules/aws-sdk/clients/acm.js","webpack:///./node_modules/aws-sdk/clients/acmpca.js","webpack:///./node_modules/aws-sdk/clients/alexaforbusiness.js","webpack:///./node_modules/aws-sdk/clients/all.js","webpack:///./node_modules/aws-sdk/clients/amplify.js","webpack:///./node_modules/aws-sdk/clients/apigateway.js","webpack:///./node_modules/aws-sdk/clients/apigatewaymanagementapi.js","webpack:///./node_modules/aws-sdk/clients/apigatewayv2.js","webpack:///./node_modules/aws-sdk/clients/applicationautoscaling.js","webpack:///./node_modules/aws-sdk/clients/applicationinsights.js","webpack:///./node_modules/aws-sdk/clients/appmesh.js","webpack:///./node_modules/aws-sdk/clients/appstream.js","webpack:///./node_modules/aws-sdk/clients/appsync.js","webpack:///./node_modules/aws-sdk/clients/athena.js","webpack:///./node_modules/aws-sdk/clients/autoscaling.js","webpack:///./node_modules/aws-sdk/clients/autoscalingplans.js","webpack:///./node_modules/aws-sdk/clients/backup.js","webpack:///./node_modules/aws-sdk/clients/batch.js","webpack:///./node_modules/aws-sdk/clients/budgets.js","webpack:///./node_modules/aws-sdk/clients/chime.js","webpack:///./node_modules/aws-sdk/clients/cloud9.js","webpack:///./node_modules/aws-sdk/clients/clouddirectory.js","webpack:///./node_modules/aws-sdk/clients/cloudformation.js","webpack:///./node_modules/aws-sdk/clients/cloudfront.js","webpack:///./node_modules/aws-sdk/clients/cloudhsm.js","webpack:///./node_modules/aws-sdk/clients/cloudhsmv2.js","webpack:///./node_modules/aws-sdk/clients/cloudsearch.js","webpack:///./node_modules/aws-sdk/clients/cloudsearchdomain.js","webpack:///./node_modules/aws-sdk/clients/cloudtrail.js","webpack:///./node_modules/aws-sdk/clients/cloudwatch.js","webpack:///./node_modules/aws-sdk/clients/cloudwatchevents.js","webpack:///./node_modules/aws-sdk/clients/cloudwatchlogs.js","webpack:///./node_modules/aws-sdk/clients/codebuild.js","webpack:///./node_modules/aws-sdk/clients/codecommit.js","webpack:///./node_modules/aws-sdk/clients/codedeploy.js","webpack:///./node_modules/aws-sdk/clients/codepipeline.js","webpack:///./node_modules/aws-sdk/clients/codestar.js","webpack:///./node_modules/aws-sdk/clients/cognitoidentity.js","webpack:///./node_modules/aws-sdk/clients/cognitoidentityserviceprovider.js","webpack:///./node_modules/aws-sdk/clients/cognitosync.js","webpack:///./node_modules/aws-sdk/clients/comprehend.js","webpack:///./node_modules/aws-sdk/clients/comprehendmedical.js","webpack:///./node_modules/aws-sdk/clients/configservice.js","webpack:///./node_modules/aws-sdk/clients/connect.js","webpack:///./node_modules/aws-sdk/clients/costexplorer.js","webpack:///./node_modules/aws-sdk/clients/cur.js","webpack:///./node_modules/aws-sdk/clients/datapipeline.js","webpack:///./node_modules/aws-sdk/clients/datasync.js","webpack:///./node_modules/aws-sdk/clients/dax.js","webpack:///./node_modules/aws-sdk/clients/devicefarm.js","webpack:///./node_modules/aws-sdk/clients/directconnect.js","webpack:///./node_modules/aws-sdk/clients/directoryservice.js","webpack:///./node_modules/aws-sdk/clients/discovery.js","webpack:///./node_modules/aws-sdk/clients/dlm.js","webpack:///./node_modules/aws-sdk/clients/dms.js","webpack:///./node_modules/aws-sdk/clients/docdb.js","webpack:///./node_modules/aws-sdk/clients/dynamodb.js","webpack:///./node_modules/aws-sdk/clients/dynamodbstreams.js","webpack:///./node_modules/aws-sdk/clients/ec2.js","webpack:///./node_modules/aws-sdk/clients/ec2instanceconnect.js","webpack:///./node_modules/aws-sdk/clients/ecr.js","webpack:///./node_modules/aws-sdk/clients/ecs.js","webpack:///./node_modules/aws-sdk/clients/efs.js","webpack:///./node_modules/aws-sdk/clients/eks.js","webpack:///./node_modules/aws-sdk/clients/elasticache.js","webpack:///./node_modules/aws-sdk/clients/elasticbeanstalk.js","webpack:///./node_modules/aws-sdk/clients/elastictranscoder.js","webpack:///./node_modules/aws-sdk/clients/elb.js","webpack:///./node_modules/aws-sdk/clients/elbv2.js","webpack:///./node_modules/aws-sdk/clients/emr.js","webpack:///./node_modules/aws-sdk/clients/es.js","webpack:///./node_modules/aws-sdk/clients/eventbridge.js","webpack:///./node_modules/aws-sdk/clients/firehose.js","webpack:///./node_modules/aws-sdk/clients/fms.js","webpack:///./node_modules/aws-sdk/clients/fsx.js","webpack:///./node_modules/aws-sdk/clients/gamelift.js","webpack:///./node_modules/aws-sdk/clients/glacier.js","webpack:///./node_modules/aws-sdk/clients/globalaccelerator.js","webpack:///./node_modules/aws-sdk/clients/glue.js","webpack:///./node_modules/aws-sdk/clients/greengrass.js","webpack:///./node_modules/aws-sdk/clients/groundstation.js","webpack:///./node_modules/aws-sdk/clients/guardduty.js","webpack:///./node_modules/aws-sdk/clients/health.js","webpack:///./node_modules/aws-sdk/clients/iam.js","webpack:///./node_modules/aws-sdk/clients/importexport.js","webpack:///./node_modules/aws-sdk/clients/inspector.js","webpack:///./node_modules/aws-sdk/clients/iot.js","webpack:///./node_modules/aws-sdk/clients/iot1clickdevicesservice.js","webpack:///./node_modules/aws-sdk/clients/iot1clickprojects.js","webpack:///./node_modules/aws-sdk/clients/iotanalytics.js","webpack:///./node_modules/aws-sdk/clients/iotdata.js","webpack:///./node_modules/aws-sdk/clients/iotevents.js","webpack:///./node_modules/aws-sdk/clients/ioteventsdata.js","webpack:///./node_modules/aws-sdk/clients/iotjobsdataplane.js","webpack:///./node_modules/aws-sdk/clients/iotthingsgraph.js","webpack:///./node_modules/aws-sdk/clients/kafka.js","webpack:///./node_modules/aws-sdk/clients/kinesis.js","webpack:///./node_modules/aws-sdk/clients/kinesisanalytics.js","webpack:///./node_modules/aws-sdk/clients/kinesisanalyticsv2.js","webpack:///./node_modules/aws-sdk/clients/kinesisvideo.js","webpack:///./node_modules/aws-sdk/clients/kinesisvideoarchivedmedia.js","webpack:///./node_modules/aws-sdk/clients/kinesisvideomedia.js","webpack:///./node_modules/aws-sdk/clients/kms.js","webpack:///./node_modules/aws-sdk/clients/lakeformation.js","webpack:///./node_modules/aws-sdk/clients/lambda.js","webpack:///./node_modules/aws-sdk/clients/lexmodelbuildingservice.js","webpack:///./node_modules/aws-sdk/clients/lexruntime.js","webpack:///./node_modules/aws-sdk/clients/licensemanager.js","webpack:///./node_modules/aws-sdk/clients/lightsail.js","webpack:///./node_modules/aws-sdk/clients/machinelearning.js","webpack:///./node_modules/aws-sdk/clients/macie.js","webpack:///./node_modules/aws-sdk/clients/managedblockchain.js","webpack:///./node_modules/aws-sdk/clients/marketplacecommerceanalytics.js","webpack:///./node_modules/aws-sdk/clients/marketplaceentitlementservice.js","webpack:///./node_modules/aws-sdk/clients/marketplacemetering.js","webpack:///./node_modules/aws-sdk/clients/mediaconnect.js","webpack:///./node_modules/aws-sdk/clients/mediaconvert.js","webpack:///./node_modules/aws-sdk/clients/medialive.js","webpack:///./node_modules/aws-sdk/clients/mediapackage.js","webpack:///./node_modules/aws-sdk/clients/mediapackagevod.js","webpack:///./node_modules/aws-sdk/clients/mediastore.js","webpack:///./node_modules/aws-sdk/clients/mediastoredata.js","webpack:///./node_modules/aws-sdk/clients/mediatailor.js","webpack:///./node_modules/aws-sdk/clients/migrationhub.js","webpack:///./node_modules/aws-sdk/clients/mobile.js","webpack:///./node_modules/aws-sdk/clients/mobileanalytics.js","webpack:///./node_modules/aws-sdk/clients/mq.js","webpack:///./node_modules/aws-sdk/clients/mturk.js","webpack:///./node_modules/aws-sdk/clients/neptune.js","webpack:///./node_modules/aws-sdk/clients/opsworks.js","webpack:///./node_modules/aws-sdk/clients/opsworkscm.js","webpack:///./node_modules/aws-sdk/clients/organizations.js","webpack:///./node_modules/aws-sdk/clients/personalize.js","webpack:///./node_modules/aws-sdk/clients/personalizeevents.js","webpack:///./node_modules/aws-sdk/clients/personalizeruntime.js","webpack:///./node_modules/aws-sdk/clients/pi.js","webpack:///./node_modules/aws-sdk/clients/pinpoint.js","webpack:///./node_modules/aws-sdk/clients/pinpointemail.js","webpack:///./node_modules/aws-sdk/clients/pinpointsmsvoice.js","webpack:///./node_modules/aws-sdk/clients/polly.js","webpack:///./node_modules/aws-sdk/clients/pricing.js","webpack:///./node_modules/aws-sdk/clients/quicksight.js","webpack:///./node_modules/aws-sdk/clients/ram.js","webpack:///./node_modules/aws-sdk/clients/rds.js","webpack:///./node_modules/aws-sdk/clients/rdsdataservice.js","webpack:///./node_modules/aws-sdk/clients/redshift.js","webpack:///./node_modules/aws-sdk/clients/rekognition.js","webpack:///./node_modules/aws-sdk/clients/resourcegroups.js","webpack:///./node_modules/aws-sdk/clients/resourcegroupstaggingapi.js","webpack:///./node_modules/aws-sdk/clients/robomaker.js","webpack:///./node_modules/aws-sdk/clients/route53.js","webpack:///./node_modules/aws-sdk/clients/route53domains.js","webpack:///./node_modules/aws-sdk/clients/route53resolver.js","webpack:///./node_modules/aws-sdk/clients/s3.js","webpack:///./node_modules/aws-sdk/clients/s3control.js","webpack:///./node_modules/aws-sdk/clients/sagemaker.js","webpack:///./node_modules/aws-sdk/clients/sagemakerruntime.js","webpack:///./node_modules/aws-sdk/clients/secretsmanager.js","webpack:///./node_modules/aws-sdk/clients/securityhub.js","webpack:///./node_modules/aws-sdk/clients/serverlessapplicationrepository.js","webpack:///./node_modules/aws-sdk/clients/servicecatalog.js","webpack:///./node_modules/aws-sdk/clients/servicediscovery.js","webpack:///./node_modules/aws-sdk/clients/servicequotas.js","webpack:///./node_modules/aws-sdk/clients/ses.js","webpack:///./node_modules/aws-sdk/clients/shield.js","webpack:///./node_modules/aws-sdk/clients/signer.js","webpack:///./node_modules/aws-sdk/clients/simpledb.js","webpack:///./node_modules/aws-sdk/clients/sms.js","webpack:///./node_modules/aws-sdk/clients/snowball.js","webpack:///./node_modules/aws-sdk/clients/sns.js","webpack:///./node_modules/aws-sdk/clients/sqs.js","webpack:///./node_modules/aws-sdk/clients/ssm.js","webpack:///./node_modules/aws-sdk/clients/stepfunctions.js","webpack:///./node_modules/aws-sdk/clients/storagegateway.js","webpack:///./node_modules/aws-sdk/clients/sts.js","webpack:///./node_modules/aws-sdk/clients/support.js","webpack:///./node_modules/aws-sdk/clients/swf.js","webpack:///./node_modules/aws-sdk/clients/textract.js","webpack:///./node_modules/aws-sdk/clients/transcribeservice.js","webpack:///./node_modules/aws-sdk/clients/transfer.js","webpack:///./node_modules/aws-sdk/clients/translate.js","webpack:///./node_modules/aws-sdk/clients/waf.js","webpack:///./node_modules/aws-sdk/clients/wafregional.js","webpack:///./node_modules/aws-sdk/clients/workdocs.js","webpack:///./node_modules/aws-sdk/clients/worklink.js","webpack:///./node_modules/aws-sdk/clients/workmail.js","webpack:///./node_modules/aws-sdk/clients/workspaces.js","webpack:///./node_modules/aws-sdk/clients/xray.js","webpack:///./node_modules/aws-sdk/lib/api_loader.js","webpack:///./node_modules/aws-sdk/lib/aws.js","webpack:///./node_modules/aws-sdk/lib/cloudfront/signer.js","webpack:///./node_modules/aws-sdk/lib/config.js","webpack:///./node_modules/aws-sdk/lib/core.js","webpack:///./node_modules/aws-sdk/lib/credentials.js","webpack:///./node_modules/aws-sdk/lib/credentials/chainable_temporary_credentials.js","webpack:///./node_modules/aws-sdk/lib/credentials/cognito_identity_credentials.js","webpack:///./node_modules/aws-sdk/lib/credentials/credential_provider_chain.js","webpack:///./node_modules/aws-sdk/lib/credentials/ec2_metadata_credentials.js","webpack:///./node_modules/aws-sdk/lib/credentials/ecs_credentials.js","webpack:///./node_modules/aws-sdk/lib/credentials/environment_credentials.js","webpack:///./node_modules/aws-sdk/lib/credentials/file_system_credentials.js","webpack:///./node_modules/aws-sdk/lib/credentials/process_credentials.js","webpack:///./node_modules/aws-sdk/lib/credentials/remote_credentials.js","webpack:///./node_modules/aws-sdk/lib/credentials/saml_credentials.js","webpack:///./node_modules/aws-sdk/lib/credentials/shared_ini_file_credentials.js","webpack:///./node_modules/aws-sdk/lib/credentials/temporary_credentials.js","webpack:///./node_modules/aws-sdk/lib/credentials/web_identity_credentials.js","webpack:///./node_modules/aws-sdk/lib/discover_endpoint.js","webpack:///./node_modules/aws-sdk/lib/dynamodb/converter.js","webpack:///./node_modules/aws-sdk/lib/dynamodb/document_client.js","webpack:///./node_modules/aws-sdk/lib/dynamodb/numberValue.js","webpack:///./node_modules/aws-sdk/lib/dynamodb/set.js","webpack:///./node_modules/aws-sdk/lib/dynamodb/translator.js","webpack:///./node_modules/aws-sdk/lib/dynamodb/types.js","webpack:///./node_modules/aws-sdk/lib/event-stream/buffered-create-event-stream.js","webpack:///./node_modules/aws-sdk/lib/event-stream/event-message-chunker-stream.js","webpack:///./node_modules/aws-sdk/lib/event-stream/event-message-chunker.js","webpack:///./node_modules/aws-sdk/lib/event-stream/event-message-unmarshaller-stream.js","webpack:///./node_modules/aws-sdk/lib/event-stream/int64.js","webpack:///./node_modules/aws-sdk/lib/event-stream/parse-event.js","webpack:///./node_modules/aws-sdk/lib/event-stream/parse-message.js","webpack:///./node_modules/aws-sdk/lib/event-stream/split-message.js","webpack:///./node_modules/aws-sdk/lib/event-stream/streaming-create-event-stream.js","webpack:///./node_modules/aws-sdk/lib/event_listeners.js","webpack:///./node_modules/aws-sdk/lib/http.js","webpack:///./node_modules/aws-sdk/lib/http/node.js","webpack:///./node_modules/aws-sdk/lib/json/builder.js","webpack:///./node_modules/aws-sdk/lib/json/parser.js","webpack:///./node_modules/aws-sdk/lib/metadata_service.js","webpack:///./node_modules/aws-sdk/lib/model/api.js","webpack:///./node_modules/aws-sdk/lib/model/collection.js","webpack:///./node_modules/aws-sdk/lib/model/operation.js","webpack:///./node_modules/aws-sdk/lib/model/paginator.js","webpack:///./node_modules/aws-sdk/lib/model/resource_waiter.js","webpack:///./node_modules/aws-sdk/lib/model/shape.js","webpack:///./node_modules/aws-sdk/lib/node_loader.js","webpack:///./node_modules/aws-sdk/lib/param_validator.js","webpack:///./node_modules/aws-sdk/lib/polly/presigner.js","webpack:///./node_modules/aws-sdk/lib/protocol/helpers.js","webpack:///./node_modules/aws-sdk/lib/protocol/json.js","webpack:///./node_modules/aws-sdk/lib/protocol/query.js","webpack:///./node_modules/aws-sdk/lib/protocol/rest.js","webpack:///./node_modules/aws-sdk/lib/protocol/rest_json.js","webpack:///./node_modules/aws-sdk/lib/protocol/rest_xml.js","webpack:///./node_modules/aws-sdk/lib/publisher/configuration.js","webpack:///./node_modules/aws-sdk/lib/publisher/index.js","webpack:///./node_modules/aws-sdk/lib/query/query_param_serializer.js","webpack:///./node_modules/aws-sdk/lib/rds/signer.js","webpack:///./node_modules/aws-sdk/lib/realclock/nodeClock.js","webpack:///./node_modules/aws-sdk/lib/region_config.js","webpack:///./node_modules/aws-sdk/lib/request.js","webpack:///./node_modules/aws-sdk/lib/resource_waiter.js","webpack:///./node_modules/aws-sdk/lib/response.js","webpack:///./node_modules/aws-sdk/lib/s3/managed_upload.js","webpack:///./node_modules/aws-sdk/lib/sequential_executor.js","webpack:///./node_modules/aws-sdk/lib/service.js","webpack:///./node_modules/aws-sdk/lib/services/apigateway.js","webpack:///./node_modules/aws-sdk/lib/services/cloudfront.js","webpack:///./node_modules/aws-sdk/lib/services/cloudsearchdomain.js","webpack:///./node_modules/aws-sdk/lib/services/cognitoidentity.js","webpack:///./node_modules/aws-sdk/lib/services/dynamodb.js","webpack:///./node_modules/aws-sdk/lib/services/ec2.js","webpack:///./node_modules/aws-sdk/lib/services/glacier.js","webpack:///./node_modules/aws-sdk/lib/services/iotdata.js","webpack:///./node_modules/aws-sdk/lib/services/lambda.js","webpack:///./node_modules/aws-sdk/lib/services/machinelearning.js","webpack:///./node_modules/aws-sdk/lib/services/polly.js","webpack:///./node_modules/aws-sdk/lib/services/rds.js","webpack:///./node_modules/aws-sdk/lib/services/route53.js","webpack:///./node_modules/aws-sdk/lib/services/s3.js","webpack:///./node_modules/aws-sdk/lib/services/s3control.js","webpack:///./node_modules/aws-sdk/lib/services/sqs.js","webpack:///./node_modules/aws-sdk/lib/services/sts.js","webpack:///./node_modules/aws-sdk/lib/services/swf.js","webpack:///./node_modules/aws-sdk/lib/shared-ini/index.js","webpack:///./node_modules/aws-sdk/lib/shared-ini/ini-loader.js","webpack:///./node_modules/aws-sdk/lib/signers/presign.js","webpack:///./node_modules/aws-sdk/lib/signers/request_signer.js","webpack:///./node_modules/aws-sdk/lib/signers/s3.js","webpack:///./node_modules/aws-sdk/lib/signers/v2.js","webpack:///./node_modules/aws-sdk/lib/signers/v3.js","webpack:///./node_modules/aws-sdk/lib/signers/v3https.js","webpack:///./node_modules/aws-sdk/lib/signers/v4.js","webpack:///./node_modules/aws-sdk/lib/signers/v4_credentials.js","webpack:///./node_modules/aws-sdk/lib/state_machine.js","webpack:///./node_modules/aws-sdk/lib/util.js","webpack:///./node_modules/aws-sdk/lib/xml/builder.js","webpack:///./node_modules/aws-sdk/lib/xml/escape-attribute.js","webpack:///./node_modules/aws-sdk/lib/xml/escape-element.js","webpack:///./node_modules/aws-sdk/lib/xml/node_parser.js","webpack:///./node_modules/aws-sdk/lib/xml/xml-node.js","webpack:///./node_modules/aws-sdk/lib/xml/xml-text.js","webpack:///./node_modules/aws-sdk/vendor/endpoint-cache/index.js","webpack:///./node_modules/aws-sdk/vendor/endpoint-cache/utils/LRU.js","webpack:///./node_modules/jmespath/jmespath.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/xml2js/lib/bom.js","webpack:///./node_modules/xml2js/lib/builder.js","webpack:///./node_modules/xml2js/lib/defaults.js","webpack:///./node_modules/xml2js/lib/parser.js","webpack:///./node_modules/xml2js/lib/processors.js","webpack:///./node_modules/xml2js/lib/xml2js.js","webpack:///./node_modules/xmlbuilder/lib/Utility.js","webpack:///./node_modules/xmlbuilder/lib/XMLAttribute.js","webpack:///./node_modules/xmlbuilder/lib/XMLCData.js","webpack:///./node_modules/xmlbuilder/lib/XMLComment.js","webpack:///./node_modules/xmlbuilder/lib/XMLDTDAttList.js","webpack:///./node_modules/xmlbuilder/lib/XMLDTDElement.js","webpack:///./node_modules/xmlbuilder/lib/XMLDTDEntity.js","webpack:///./node_modules/xmlbuilder/lib/XMLDTDNotation.js","webpack:///./node_modules/xmlbuilder/lib/XMLDeclaration.js","webpack:///./node_modules/xmlbuilder/lib/XMLDocType.js","webpack:///./node_modules/xmlbuilder/lib/XMLDocument.js","webpack:///./node_modules/xmlbuilder/lib/XMLDocumentCB.js","webpack:///./node_modules/xmlbuilder/lib/XMLElement.js","webpack:///./node_modules/xmlbuilder/lib/XMLNode.js","webpack:///./node_modules/xmlbuilder/lib/XMLProcessingInstruction.js","webpack:///./node_modules/xmlbuilder/lib/XMLRaw.js","webpack:///./node_modules/xmlbuilder/lib/XMLStreamWriter.js","webpack:///./node_modules/xmlbuilder/lib/XMLStringWriter.js","webpack:///./node_modules/xmlbuilder/lib/XMLStringifier.js","webpack:///./node_modules/xmlbuilder/lib/XMLText.js","webpack:///./node_modules/xmlbuilder/lib/XMLWriterBase.js","webpack:///./node_modules/xmlbuilder/lib/index.js","webpack:///./playground/index.js","webpack:///./playground/user.js","webpack:///./resolvers/index.js","webpack:///./resolvers/user.js","webpack:///./typeDefs/index.js","webpack:///./typeDefs/user.js","webpack:///./util/email.js","webpack:///./util/index.js","webpack:///./util/password.js","webpack:///external \"ajv\"","webpack:///external \"apollo-server-lambda\"","webpack:///external \"bluebird\"","webpack:///external \"buffer\"","webpack:///external \"child_process\"","webpack:///external \"crypto\"","webpack:///external \"dgram\"","webpack:///external \"domain\"","webpack:///external \"dotenv\"","webpack:///external \"events\"","webpack:///external \"fs\"","webpack:///external \"graphql\"","webpack:///external \"graphql/language\"","webpack:///external \"http\"","webpack:///external \"https\"","webpack:///external \"knex\"","webpack:///external \"lodash\"","webpack:///external \"os\"","webpack:///external \"path\"","webpack:///external \"querystring\"","webpack:///external \"sax\"","webpack:///external \"source-map-support/register\"","webpack:///external \"stream\"","webpack:///external \"timers\"","webpack:///external \"url\"","webpack:///external \"util\"","webpack:///external \"uuid\""],"names":["ADVITO_AIR_APPLICATION","APP_URL","EMAIL_SENDER","EMAIL_BCC","Login","User","SESSION","RECOVERY","require","config","db","Knex","client","connection","host","process","env","DB_HOST","user","DB_USER","password","DB_PASSWORD","database","ADVITO_DB_DATABASE","Model","knex","server","ApolloServer","typeDefs","resolvers","context","event","sessionToken","headers","sessiontoken","playground","graphqlHandler","createHandler","cors","origin","credentials","AdvitoUser","tableName","fullName","name_first","name_last","relationMappings","advitoUserRoleLink","relation","HasManyRelation","modelClass","AdvitoUserRoleLink","join","from","to","advitoUserSession","AdvitoUserSession","accessToken","AccessToken","EmailTemplate","tabs","Query","Mutation","name","endpoint","query","merge","Date","GraphQLScalarType","description","parseValue","value","serialize","getTime","parseLiteral","ast","kind","Kind","INT","parseInt","getUser","_","__","findById","login","username","where","first","AuthenticationError","is_enabled","pwd","dbPassword","user_salt","userSalt","passwordHashed","saltHash","roleIds","$relatedQuery","map","role","advito_role_id","session","crypto","randomBytes","toString","patch","session_end","insert","advito_user_id","id","session_token","session_start","session_duration_sec","session_type","session_expiration","getExpirationDate","session_note","created","modified","displayName","clientId","client_id","profilePicturePath","profile_picture_path","logout","sendResetPassword","email","oldToken","is_active","token","generateAccessToken","token_type","token_expiration","placeholders","NAMEFIRST","URL","sendEmail","err","ForbiddenError","message","gql","ses","AWS","SES","accessKeyId","AWS_SES_ACCESS_KEY_ID","secretAccessKey","AWS_SES_SECRET_ACCESS_KEY","region","AWS_SES_REGION","templateName","recipient","email_subject","emailSubject","email_body","emailBody","Object","keys","forEach","key","regex","RegExp","String","raw","replace","params","Source","Destination","ToAddresses","BccAddresses","Message","Body","Html","Charset","Data","Subject","promise","salt","saltHashed","createHash","update","digest","prefix","type","expirationDate","setHours","getHours"],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oCAAoC;;AAEpC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB,KAA0B;;AAE5C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,WAAW,MAAM;AACjB,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,WAAW,OAAO,WAAW;AAC7B,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA,wBAAwB;;AAExB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,iBAAiB;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA,6BAA6B,kBAAkB,EAAE;AACjD;AACA;AACA;AACA;AACA;AACA,8CAA8C,kBAAkB,EAAE;AAClE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,UAAU;AACV;AACA,aAAa,SAAS;AACtB,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA,YAAY,SAAS,GAAG,SAAS;AACjC;AACA;AACA;AACA,YAAY,SAAS,GAAG,SAAS;AACjC;AACA;AACA;AACA,UAAU,QAAQ,iBAAiB,GAAG,iBAAiB;AACvD;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,SAAS;AACtB;AACA;AACA,wCAAwC,SAAS;AACjD;AACA;AACA,WAAW,SAAS,GAAG,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,EAAE;AACf;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;ACx7Da;;AAEb,OAAO,YAAY,GAAG,mBAAO,CAAC,qEAAa;AAC3C,OAAO,sBAAsB,GAAG,mBAAO,CAAC,wFAA0B;AAClE,OAAO,mDAAmD,GAAG,mBAAO,CAAC,gFAAsB;;AAE3F;AACA;AACA,WAAW,mBAAO,CAAC,gBAAK;AACxB,GAAG;AACH;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA,qCAAqC,4BAA4B;AACjE;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,4BAA4B;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,YAAY,4BAA4B;AACxC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wBAAwB,uBAAuB,EAAE,eAAe;;AAEhE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,iCAAiC,OAAO;AACxC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,kCAAkC,OAAO;AACzC;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC/Ra;;AAEb,OAAO,QAAQ,GAAG,mBAAO,CAAC,uEAAc;AACxC,OAAO,WAAW,GAAG,mBAAO,CAAC,6EAAiB;AAC9C,OAAO,WAAW,GAAG,mBAAO,CAAC,6EAAiB;AAC9C,OAAO,UAAU,GAAG,mBAAO,CAAC,4EAAoB;AAChD,OAAO,aAAa,GAAG,mBAAO,CAAC,yEAAe;AAC9C,OAAO,cAAc,GAAG,mBAAO,CAAC,2EAAgB;AAChD,OAAO,kBAAkB,GAAG,mBAAO,CAAC,iEAAW;AAC/C,OAAO,kBAAkB,GAAG,mBAAO,CAAC,wFAAuB;AAC3D,OAAO,yBAAyB,GAAG,mBAAO,CAAC,yEAAe;AAC1D,OAAO,4BAA4B,GAAG,mBAAO,CAAC,yEAAe;AAC7D,OAAO,8BAA8B,GAAG,mBAAO,CAAC,uEAAc;AAC9D,OAAO,mCAAmC,GAAG,mBAAO,CAAC,yFAAuB;AAC5E,OAAO,oCAAoC,GAAG,mBAAO,CAAC,uFAAsB;AAC5E,OAAO,0CAA0C,GAAG,mBAAO,CAAC,gFAAsB;AAClF,OAAO,+DAA+D,GAAG,mBAAO,CAAC,mEAAY;AAC7F;AACA;AACA;AACA;AACA,CAAC,GAAG,mBAAO,CAAC,yFAAuB;AACnC,OAAO,qDAAqD,GAAG,mBAAO,CAAC,iFAAmB;;AAE1F,OAAO,MAAM,GAAG,mBAAO,CAAC,4FAA4B;AACpD,OAAO,MAAM,GAAG,mBAAO,CAAC,wGAAkC;;AAE1D,OAAO,eAAe,GAAG,mBAAO,CAAC,2EAAgB;AACjD,OAAO,eAAe,GAAG,mBAAO,CAAC,gGAA8B;AAC/D,OAAO,gBAAgB,GAAG,mBAAO,CAAC,6EAAiB;AACnD,OAAO,kBAAkB,GAAG,mBAAO,CAAC,iFAAmB;AACvD,OAAO,wBAAwB,GAAG,mBAAO,CAAC,6FAAyB;AACnE,OAAO,mBAAmB,GAAG,mBAAO,CAAC,kGAA+B;;AAEpE,OAAO,iBAAiB,GAAG,mBAAO,CAAC,4GAAoC;AACvE,OAAO,kBAAkB,GAAG,mBAAO,CAAC,gHAAsC;AAC1E,OAAO,qBAAqB,GAAG,mBAAO,CAAC,4HAA4C;AACnF,OAAO,uBAAuB,GAAG,mBAAO,CAAC,oIAAgD;AACzF,OAAO,wBAAwB,GAAG,mBAAO,CAAC,wIAAkD;;AAE5F,OAAO,wBAAwB,GAAG,mBAAO,CAAC,wIAAkD;AAC5F,OAAO,0BAA0B,GAAG,mBAAO,CAAC,4IAAoD;AAChG,OAAO,0BAA0B,GAAG,mBAAO,CAAC,4IAAoD;AAChG,OAAO,0BAA0B,GAAG,mBAAO,CAAC,4IAAoD;;AAEhG;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAAkD,iBAAiB;AACnE,OAAO;AACP;AACA,sDAAsD,iBAAiB;AACvE,OAAO;AACP;AACA,sDAAsD,iBAAiB;AACvE,OAAO;AACP;AACA;AACA;AACA,yBAAyB;AACzB,SAAS;AACT,OAAO;AACP;AACA,sDAAsD,iBAAiB;AACvE,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B;AAC7B;AACA;;AAEA;AACA;AACA,qCAAqC;AACrC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,cAAc,aAAa;AAC3B;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,+BAA+B,UAAU;AACzC;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,oBAAoB,GAAG,UAAU;AACjD,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,uCAAuC,OAAO;AAC9C;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,uCAAuC,UAAU,yBAAyB,KAAK;AAC/E;;AAEA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,0BAA0B;AAC9C;AACA;AACA;;AAEA;AACA,WAAW,uCAAuC;;AAElD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA,WAAW,uCAAuC;;AAElD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL,2CAA2C,gDAAgD;AAC3F;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,cAAc,IAAI;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,6CAA6C,EAAE;AAC1F,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,6BAA6B,0BAA0B,GAAG,MAAM;AAChE;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC31Ba;;AAEb;AACA;AACA,uEAAuE,aAAa;AACpF;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACXa;;AAEb;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACda;;AAEb;AACA;AACA,+BAA+B,aAAa;;AAE5C;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACba;;AAEb,OAAO,oBAAoB,GAAG,mBAAO,CAAC,gFAAsB;;AAE5D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,eAAe,yBAAyB,oBAAoB;AAC5D;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,IAAI,IAAI;AACnB;AACA,sBAAsB;AACtB;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AClDa;;AAEb;AACA;AACA;AACA;;AAEA;;AAEA,kBAAkB,uBAAuB;AACzC;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,uBAAuB;AACxC;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACzBa;;AAEb,OAAO,oBAAoB,GAAG,mBAAO,CAAC,2FAAqB;AAC3D;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC/Ea;;AAEb,OAAO,wCAAwC,GAAG,mBAAO,CAAC,mFAAyB;AACnF,OAAO,sBAAsB,GAAG,mBAAO,CAAC,2FAA6B;AACrE,OAAO,iBAAiB,GAAG,mBAAO,CAAC,qFAAkB;AACrD,OAAO,iBAAiB,GAAG,mBAAO,CAAC,qFAAkB;;AAErD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC,MAAM,yBAAyB,gBAAgB;AAC/E,GAAG;AACH;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACpOa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACnDa;;AAEb,OAAO,iBAAiB,GAAG,mBAAO,CAAC,qFAAkB;AACrD,OAAO,WAAW,GAAG,mBAAO,CAAC,mFAAyB;AACtD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,IAAI,GAAG,GAAG;AAC5B,OAAO;AACP,wBAAwB,IAAI,GAAG,GAAG;AAClC;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACjPa;;AAEb;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC3Ba;;AAEb,OAAO,eAAe,GAAG,mBAAO,CAAC,2EAAgB;AACjD,OAAO,oBAAoB,GAAG,mBAAO,CAAC,uEAAc;AACpD,OAAO,8BAA8B,GAAG,mBAAO,CAAC,uEAAc;;AAE9D;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AClFa;;AAEb,OAAO,sBAAsB,GAAG,mBAAO,CAAC,gFAAsB;AAC9D,OAAO,cAAc,GAAG,mBAAO,CAAC,uEAAc;AAC9C,OAAO,8BAA8B,GAAG,mBAAO,CAAC,uEAAc;AAC9D,OAAO,iBAAiB,GAAG,mBAAO,CAAC,4FAA4B;;AAE/D;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kCAAkC,OAAO;AACzC;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kCAAkC,OAAO;AACzC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA,iCAAiC,OAAO;AACxC;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yCAAyC,OAAO;AAChD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AClHa;;AAEb,OAAO,aAAa,GAAG,mBAAO,CAAC,gFAAsB;;AAErD;AACA;AACA,4DAA4D;;AAE5D;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,4DAA4D;;AAE5D;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACjCa;;AAEb,OAAO,WAAW,GAAG,mBAAO,CAAC,gFAAsB;AACnD,OAAO,iBAAiB,GAAG,mBAAO,CAAC,4FAA4B;;AAE/D;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,kCAAkC,OAAO;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kCAAkC,OAAO;AACzC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kCAAkC,OAAO;AACzC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kCAAkC,OAAO;AACzC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,iCAAiC,OAAO;AACxC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACtGa;;AAEb;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,eAAe;AACpC;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC7Da;;AAEb,OAAO,uCAAuC,GAAG,mBAAO,CAAC,gFAAsB;;AAE/E;AACA;;AAEA;AACA;AACA;AACA,wCAAwC,OAAO;AAC/C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wCAAwC,OAAO;AAC/C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3Fa;;AAEb,OAAO,WAAW,GAAG,mBAAO,CAAC,gFAAsB;;AAEnD,mEAAmE;AACnE;AACA,8BAA8B;AAC9B;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kCAAkC,OAAO;AACzC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACjFa;;AAEb,OAAO,uBAAuB,GAAG,mBAAO,CAAC,gFAAsB;AAC/D,OAAO,8BAA8B,GAAG,mBAAO,CAAC,uEAAc;AAC9D,OAAO,gCAAgC,GAAG,mBAAO,CAAC,4EAAoB;;AAEtE;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oCAAoC,OAAO;AAC3C;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,kCAAkC,OAAO;AACzC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kCAAkC,OAAO;AACzC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kCAAkC,OAAO;AACzC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AClJa;;AAEb,OAAO,iBAAiB,GAAG,mBAAO,CAAC,4FAA4B;AAC/D,OAAO,kBAAkB,GAAG,mBAAO,CAAC,iFAAmB;AACvD,OAAO,uBAAuB,GAAG,mBAAO,CAAC,gFAAsB;AAC/D,OAAO,mCAAmC,GAAG,mBAAO,CAAC,yFAAuB;;AAE5E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,oCAAoC,OAAO;AAC3C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC,OAAO;AAC3C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClIa;;AAEb,OAAO,8BAA8B,GAAG,mBAAO,CAAC,uEAAc;AAC9D,OAAO,YAAY,GAAG,mBAAO,CAAC,wFAAuB;;AAErD;;AAEA;AACA;AACA,GAAG,iEAAiE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,2CAA2C,QAAQ;;AAEnD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA,oCAAoC,QAAQ,KAAK;AACjD;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC9Ea;;AAEb,OAAO,iBAAiB,GAAG,mBAAO,CAAC,4FAA4B;AAC/D,OAAO,kBAAkB,GAAG,mBAAO,CAAC,iFAAmB;AACvD,OAAO,kCAAkC,GAAG,mBAAO,CAAC,gFAAsB;AAC1E;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kCAAkC,OAAO;AACzC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kCAAkC,OAAO;AACzC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mCAAmC,OAAO;AAC1C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA,iCAAiC,OAAO;AACxC;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC1La;;AAEb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA,oCAAoC,OAAO;AAC3C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9Ca;;AAEb,OAAO,QAAQ,GAAG,mBAAO,CAAC,uEAAc;;AAExC,2CAA2C;AAC3C;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,YAAY,gBAAgB;AAC1D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC/Ca;;AAEb,OAAO,WAAW,GAAG,mBAAO,CAAC,gFAAsB;;AAEnD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,kBAAkB;AACnC;;AAEA;AACA;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A;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACzIa;;AAEb,OAAO,oBAAoB,GAAG,mBAAO,CAAC,gFAAsB;AAC5D,OAAO,WAAW,GAAG,mBAAO,CAAC,8EAAqB;AAClD,OAAO,YAAY,GAAG,mBAAO,CAAC,4EAAoB;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,qBAAqB,mCAAmC;AACxD,KAAK;AACL;AACA;AACA;;AAEA;AACA,oBAAoB,IAAI,MAAM,WAAW;AACzC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC7Ga;;AAEb,iBAAiB,mBAAO,CAAC,0BAAU;;AAEnC,OAAO,MAAM,GAAG,mBAAO,CAAC,8EAAc;AACtC,OAAO,YAAY,GAAG,mBAAO,CAAC,4EAAoB;AAClD,OAAO,iBAAiB,GAAG,mBAAO,CAAC,sFAAyB;AAC5D,OAAO,sBAAsB,GAAG,mBAAO,CAAC,wFAA0B;AAClE,OAAO,uCAAuC,GAAG,mBAAO,CAAC,gFAAsB;AAC/E,OAAO,6CAA6C,GAAG,mBAAO,CAAC,8FAAsB;AACrF,OAAO,YAAY,GAAG,mBAAO,CAAC,gHAA+B;;AAE7D,OAAO,sBAAsB,GAAG,mBAAO,CAAC,gGAAuB;AAC/D,OAAO,mBAAmB,GAAG,mBAAO,CAAC,0FAAoB;;AAEzD,OAAO,gBAAgB,GAAG,mBAAO,CAAC,0GAA4B;AAC9D,OAAO,kBAAkB,GAAG,mBAAO,CAAC,8GAA8B;AAClE,OAAO,kBAAkB,GAAG,mBAAO,CAAC,8GAA8B;AAClE,OAAO,kBAAkB,GAAG,mBAAO,CAAC,8GAA8B;AAClE,OAAO,kBAAkB,GAAG,mBAAO,CAAC,8GAA8B;AAClE,OAAO,oBAAoB,GAAG,mBAAO,CAAC,kHAAgC;;AAEtE,OAAO,qBAAqB,GAAG,mBAAO,CAAC,gIAAuC;AAC9E,OAAO,sBAAsB,GAAG,mBAAO,CAAC,kIAAwC;AAChF,OAAO,wBAAwB,GAAG,mBAAO,CAAC,sIAA0C;;AAEpF,OAAO,+BAA+B,GAAG,mBAAO,CAAC,wIAA2C;AAC5F,OAAO,+BAA+B,GAAG,mBAAO,CAAC,wIAA2C;AAC5F,OAAO,0BAA0B,GAAG,mBAAO,CAAC,8HAAsC;AAClF,OAAO,0BAA0B,GAAG,mBAAO,CAAC,8HAAsC;AAClF,OAAO,wBAAwB,GAAG,mBAAO,CAAC,0HAAoC;AAC9E,OAAO,uBAAuB,GAAG,mBAAO,CAAC,wHAAmC;AAC5E,OAAO,uBAAuB,GAAG,mBAAO,CAAC,wHAAmC;AAC5E,OAAO,uBAAuB,GAAG,mBAAO,CAAC,wHAAmC;AAC5E,OAAO,qBAAqB,GAAG,mBAAO,CAAC,oHAAiC;AACxE,OAAO,oBAAoB,GAAG,mBAAO,CAAC,kHAAgC;AACtE,OAAO,oBAAoB,GAAG,mBAAO,CAAC,kHAAgC;AACtE,OAAO,qBAAqB,GAAG,mBAAO,CAAC,oHAAiC;AACxE,OAAO,mBAAmB,GAAG,mBAAO,CAAC,gHAA+B;AACpE,OAAO,mBAAmB,GAAG,mBAAO,CAAC,gHAA+B;AACpE,OAAO,kBAAkB,GAAG,mBAAO,CAAC,4HAAqC;AACzE,OAAO,iBAAiB,GAAG,mBAAO,CAAC,wHAAmC;AACtE,OAAO,iBAAiB,GAAG,mBAAO,CAAC,4GAA6B;AAChE,OAAO,iBAAiB,GAAG,mBAAO,CAAC,4GAA6B;AAChE,OAAO,gBAAgB,GAAG,mBAAO,CAAC,0GAA4B;AAC9D,OAAO,gBAAgB,GAAG,mBAAO,CAAC,0GAA4B;;AAE9D;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oCAAoC,UAAU,GAAG,IAAI;AACrD,KAAK;AACL,gBAAgB,UAAU,GAAG,SAAS;AACtC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,wCAAwC;;AAExC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA,6BAA6B;AAC7B,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA,+DAA+D;AAC/D,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,kCAAkC,iBAAiB;AACnD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,2CAA2C;AAC3C;AACA;;AAEA;AACA;AACA,mDAAmD;AACnD;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK,IAAI;;AAET;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK,IAAI;;AAET;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA,cAAc,eAAe,KAAK;AAClC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,SAAS,4BAA4B,IAAI;AACzC,OAAO;AACP,KAAK;AACL;AACA;AACA,iDAAiD,IAAI;AACrD,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA,4CAA4C,gBAAgB;AAC5D;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH,yBAAyB,MAAM,MAAM,SAAS;AAC9C;AACA;;AAEA;AACA;;AAEA,wBAAwB,SAAS;AACjC;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,wCAAwC,OAAO;AAC/C;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB;AACnB,GAAG;AACH;;AAEA;AACA,yCAAyC;AACzC;;AAEA;AACA,6CAA6C;AAC7C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC/9Ca;;AAEb,OAAO,+BAA+B,GAAG,mBAAO,CAAC,kHAAgC;AACjF,OAAO,oBAAoB,GAAG,mBAAO,CAAC,4EAAoB;;AAE1D,OAAO,gBAAgB,GAAG,mBAAO,CAAC,0GAA4B;AAC9D,OAAO,kBAAkB,GAAG,mBAAO,CAAC,4HAAqC;AACzE,OAAO,qBAAqB,GAAG,mBAAO,CAAC,oHAAiC;AACxE,OAAO,0BAA0B,GAAG,mBAAO,CAAC,8HAAsC;AAClF,OAAO,6BAA6B,GAAG,mBAAO,CAAC,oJAAiD;;AAEhG;AACA;AACA,CAAC,GAAG,mBAAO,CAAC,oKAAyD;AACrE;AACA;AACA,CAAC,GAAG,mBAAO,CAAC,gLAA+D;AAC3E;AACA;AACA,CAAC,GAAG,mBAAO,CAAC,8KAA8D;AAC1E;AACA;AACA,CAAC,GAAG,mBAAO,CAAC,0JAAoD;AAChE;AACA;AACA,CAAC,GAAG,mBAAO,CAAC,sKAA0D;;AAEtE;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,8EAA8E,gBAAgB;AAC9F,KAAK;AACL,6EAA6E,gBAAgB;AAC7F,KAAK;AACL,wEAAwE,gBAAgB;AACxF;;AAEA;AACA;;AAEA;AACA;AACA,6DAA6D,8BAA8B;AAC3F;AACA;AACA;;AAEA;AACA;AACA,+DAA+D,6BAA6B;AAC5F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,2DAA2D,8BAA8B;AACzF;AACA;AACA;;AAEA;AACA;AACA,6DAA6D,6BAA6B;AAC1F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,4DAA4D,8BAA8B;AAC1F;AACA;AACA;;AAEA;AACA;AACA,8DAA8D,6BAA6B;AAC3F;AACA;AACA;;AAEA;AACA;AACA,4DAA4D,8BAA8B;AAC1F;AACA;AACA;;AAEA;AACA;AACA,8DAA8D,6BAA6B;AAC3F;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uDAAuD;AACvD;;AAEA;AACA,yDAAyD;AACzD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;;;;;;;;;;;;AC7qBa;;AAEb,OAAO,0BAA0B,GAAG,mBAAO,CAAC,wGAA2B;;AAEvE;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC1Ba;;AAEb,OAAO,kBAAkB,GAAG,mBAAO,CAAC,wFAAmB;;AAEvD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AClCa;;AAEb,qBAAqB,mBAAO,CAAC,wFAAuB;;AAEpD,OAAO,eAAe,GAAG,mBAAO,CAAC,8EAAqB;AACtD,OAAO,uCAAuC,GAAG,mBAAO,CAAC,gFAAsB;AAC/E,OAAO,wBAAwB,GAAG,mBAAO,CAAC,0HAAoC;AAC9E,OAAO,0BAA0B,GAAG,mBAAO,CAAC,wGAA2B;AACvE,OAAO,0BAA0B,GAAG,mBAAO,CAAC,wGAA2B;;AAEvE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB,wBAAwB,KAAK;AACpD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAe,uCAAuC;AACtD;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACjea;;AAEb;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC9Ba;;AAEb,OAAO,gBAAgB,GAAG,mBAAO,CAAC,gFAAsB;AACxD,OAAO,WAAW,GAAG,mBAAO,CAAC,8EAAqB;;AAElD;AACA;AACA,mBAAmB,IAAI;AACvB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG,IAAI;AACP;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,oCAAoC,OAAO;AAC3C;AACA;AACA,GAAG;AACH;;AAEA,yCAAyC,OAAO;AAChD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACxFa;;AAEb,OAAO,uBAAuB,GAAG,mBAAO,CAAC,kGAA+B;AACxE,OAAO,WAAW,GAAG,mBAAO,CAAC,gFAAsB;AACnD,OAAO,YAAY,GAAG,mBAAO,CAAC,4EAAoB;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,MAAM,GAAG,YAAY;AACrC,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,UAAU,EAAE,EAAE,cAAc;AAC9C,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,IAAI,MAAM,WAAW;AAC1C,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,IAAI;AAC7B,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,IAAI;AACpB,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACpQa;;AAEb,eAAe,mBAAO,CAAC,0HAAoC;AAC3D,OAAO,sCAAsC,GAAG,mBAAO,CAAC,gFAAsB;AAC9E,OAAO,4BAA4B,GAAG,mBAAO,CAAC,4GAAoC;;AAElF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,oBAAoB,qBAAqB;AACzC,GAAG;AACH;AACA;;AAEA;AACA,eAAe,wBAAwB;AACvC;;AAEA;AACA,kBAAkB,WAAW;AAC7B;;AAEA;AACA;AACA,gBAAgB,IAAI,GAAG,UAAU;AACjC,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC,OAAO;AAC7C;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,4CAA4C,QAAQ;AACpD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5Ya;;AAEb,OAAO,UAAU,GAAG,mBAAO,CAAC,gFAAsB;;AAElD;;AAEA;AACA,eAAe,yBAAyB;AACxC;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACnIa;;AAEb,OAAO,aAAa,GAAG,mBAAO,CAAC,+EAAuB;;AAEtD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AChDa;;AAEb,OAAO,mBAAmB,GAAG,mBAAO,CAAC,mFAAyB;AAC9D,OAAO,aAAa,GAAG,mBAAO,CAAC,6FAA8B;AAC7D,OAAO,gBAAgB,GAAG,mBAAO,CAAC,wFAAgB;AAClD,OAAO,qBAAqB,GAAG,mBAAO,CAAC,+FAAuB;;AAE9D;AACA,eAAe,oCAAoC;AACnD;AACA;AACA;AACA;;AAEA,4BAA4B,+BAA+B;AAC3D;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,6CAA6C,GAAG,mBAAmB;AACnF;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA,YAAY,qCAAqC,GAAG,OAAO;AAC3D;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC7Ma;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,2CAA2C,SAAS;AACpD;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC7La;;AAEb,OAAO,aAAa,GAAG,mBAAO,CAAC,6FAA8B;AAC7D,OAAO,sBAAsB,GAAG,mBAAO,CAAC,2GAAqC;AAC7E,OAAO,iBAAiB,GAAG,mBAAO,CAAC,mGAAyB;AAC5D,OAAO,cAAc,GAAG,mBAAO,CAAC,2GAA6B;AAC7D,OAAO,aAAa,GAAG,mBAAO,CAAC,uGAA2B;AAC1D,OAAO,cAAc,GAAG,mBAAO,CAAC,2GAA6B;AAC7D,OAAO,uBAAuB,GAAG,mBAAO,CAAC,+IAA+C;AACxF,OAAO,eAAe,GAAG,mBAAO,CAAC,+FAAuB;AACxD,OAAO,sBAAsB,GAAG,mBAAO,CAAC,2FAA6B;AACrE,OAAO,qBAAqB,GAAG,mBAAO,CAAC,+FAAuB;AAC9D,OAAO,4BAA4B,GAAG,mBAAO,CAAC,mFAAyB;;AAEvE;AACA,eAAe,yCAAyC;AACxD;;AAEA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH,6CAA6C,+BAA+B;AAC5E;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,eAAe;AACpD;AACA,SAAS;AACT,OAAO;AACP;AACA,gCAAgC,eAAe,gCAAgC,0BAA0B;AACzG;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,uCAAuC,oCAAoC;AAC3E;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC/Oa;;AAEb,OAAO,iBAAiB,GAAG,mBAAO,CAAC,6FAAmB;AACtD,OAAO,oBAAoB,GAAG,mBAAO,CAAC,yGAAqB;;AAE3D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACtBa;;AAEb,OAAO,cAAc,GAAG,mBAAO,CAAC,uFAAgB;AAChD,OAAO,UAAU,GAAG,mBAAO,CAAC,sFAA4B;AACxD,qBAAqB,mBAAO,CAAC,8FAA6B;;AAE1D;AACA,eAAe,6BAA6B;AAC5C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC5Ea;;AAEb,OAAO,2BAA2B,GAAG,mBAAO,CAAC,uHAA4B;AACzE,OAAO,oBAAoB,GAAG,mBAAO,CAAC,yGAAqB;AAC3D,OAAO,iBAAiB,GAAG,mBAAO,CAAC,6FAAmB;AACtD,OAAO,iBAAiB,GAAG,mBAAO,CAAC,wGAAqC;;AAExE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACrJa;;AAEb,OAAO,cAAc,GAAG,mBAAO,CAAC,uFAAgB;AAChD,OAAO,2BAA2B,GAAG,mBAAO,CAAC,sFAA4B;AACzE,OAAO,iBAAiB,GAAG,mBAAO,CAAC,wGAAqC;AACxE,qBAAqB,mBAAO,CAAC,8FAA6B;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kDAAkD;AACjE;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kFAAkF,cAAc;AAChG;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA,wCAAwC,OAAO;AAC/C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,sCAAsC,OAAO;AAC7C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY,aAAa;;AAEzB;AACA;AACA,KAAK;;AAEL;AACA;AACA,gCAAgC,6BAA6B;AAC7D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AClOa;;AAEb,OAAO,cAAc,GAAG,mBAAO,CAAC,uFAAgB;AAChD,OAAO,iBAAiB,GAAG,mBAAO,CAAC,sFAA4B;AAC/D,qBAAqB,mBAAO,CAAC,8FAA6B;;AAE1D;AACA,eAAe,oCAAoC;AACnD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kFAAkF,cAAc;AAChG;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,WAAW,yBAAyB;AACpC,WAAW,WAAW;;AAEtB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,qBAAqB;AACvC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC9Fa;;AAEb,OAAO,iBAAiB,GAAG,mBAAO,CAAC,6FAAmB;AACtD,OAAO,mBAAmB,GAAG,mBAAO,CAAC,sGAAoB;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACvBa;;AAEb,OAAO,cAAc,GAAG,mBAAO,CAAC,uFAAgB;AAChD,OAAO,iBAAiB,GAAG,mBAAO,CAAC,kGAAkC;AACrE,OAAO,0CAA0C,GAAG,mBAAO,CAAC,sFAA4B;AACxF,qBAAqB,mBAAO,CAAC,8FAA6B;;AAE1D;AACA,eAAe,2CAA2C;AAC1D;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,WAAW,+BAA+B;AAC1C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;;AAE1B,oDAAoD,OAAO;AAC3D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;;AAE1B,oDAAoD,OAAO;AAC3D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACrNa;;AAEb,OAAO,iBAAiB,GAAG,mBAAO,CAAC,6FAAmB;AACtD,OAAO,6BAA6B,GAAG,mBAAO,CAAC,oIAA8B;;AAE7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACjCa;;AAEb,OAAO,cAAc,GAAG,mBAAO,CAAC,uFAAgB;AAChD,OAAO,UAAU,GAAG,mBAAO,CAAC,sFAA4B;AACxD,qBAAqB,mBAAO,CAAC,8FAA6B;;AAE1D;AACA,eAAe,6BAA6B;AAC5C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC5Da;;AAEb;AACA,eAAe,+BAA+B;AAC9C;AACA;AACA;AACA;;AAEA,iBAAiB,yBAAyB;AAC1C;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACtBa;;AAEb,OAAO,mBAAmB,GAAG,mBAAO,CAAC,+FAAoB;AACzD,OAAO,UAAU,GAAG,mBAAO,CAAC,mFAAyB;;AAErD;AACA,eAAe,oCAAoC;AACnD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,yCAAyC;AACxE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc,UAAU,GAAG,2BAA2B,GAAG,GAAG;AAC5D,GAAG;AACH,eAAe,GAAG;AAClB;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACtHa;;AAEb,OAAO,SAAS,GAAG,mBAAO,CAAC,mFAAyB;AACpD,OAAO,YAAY,GAAG,mBAAO,CAAC,iHAAgC;AAC9D,OAAO,iBAAiB,GAAG,mBAAO,CAAC,yFAA4B;AAC/D,OAAO,kBAAkB,GAAG,mBAAO,CAAC,2FAA0B;AAC9D,OAAO,sBAAsB,GAAG,mBAAO,CAAC,2FAA6B;;AAErE,OAAO,YAAY,GAAG,mBAAO,CAAC,iFAAa;AAC3C,OAAO,mBAAmB,GAAG,mBAAO,CAAC,+FAAoB;AACzD,OAAO,kBAAkB,GAAG,mBAAO,CAAC,yEAAS;;AAE7C;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mDAAmD,yBAAyB;AAC5E;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,+BAA+B,wCAAwC;AACvE;;AAEA;AACA,0BAA0B,uDAAuD;AACjF;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA,sBAAsB,wCAAwC;AAC9D;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA,+BAA+B,mDAAmD;AAClF;AACA;;AAEA,iBAAiB,wCAAwC;AACzD,WAAW,iCAAiC;AAC5C;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+BAA+B,gCAAgC;AAC/D,SAAS,mCAAmC;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,+CAA+C,aAAa,kBAAkB,cAAc;AAC5F,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA,8CAA8C,qBAAqB;AACnE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,SAAS,GAAG,IAAI;;AAEnC;AACA;;AAEA,+BAA+B,wCAAwC;AACvE;AACA;AACA;;AAEA;AACA;;AAEA;AACA,2DAA2D,4BAA4B;;AAEvF;AACA,kEAAkE,YAAY;AAC9E;AACA;AACA;;AAEA;AACA,+DAA+D,qBAAqB;AACpF;AACA,GAAG;AACH,iDAAiD,YAAY;;AAE7D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8CAA8C,mDAAmD;;AAEjG;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mDAAmD,4BAA4B;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA,6CAA6C,YAAY;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA,wCAAwC,qBAAqB;AAC7D;;AAEA,6CAA6C,QAAQ;AACrD;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA,iCAAiC,YAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,yBAAyB,gBAAgB,GAAG,iBAAiB;AAC7D,cAAc,UAAU,MAAM,gBAAgB;AAC9C,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,6BAA6B,MAAM,WAAW,gBAAgB;AAC9D,KAAK;AACL;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC7Ua;;AAEb;AACA,eAAe,wEAAwE;AACvF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,cAAc,WAAW,GAAG,OAAO;AACnC;;AAEA;AACA;AACA,gBAAgB,WAAW,EAAE,uBAAuB,EAAE,OAAO;AAC7D,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,+BAA+B;AACnD,OAAO;AACP,kBAAkB,sBAAsB,EAAE,uBAAuB,EAAE,MAAM;AACzE,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc,GAAG;AACjB;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc,IAAI,GAAG,IAAI;AACzB;AACA;;AAEA;AACA;AACA;;AAEA,6CAA6C,OAAO;AACpD;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC3Ja;;AAEb,OAAO,yBAAyB,GAAG,mBAAO,CAAC,yEAAS;AACpD,OAAO,YAAY,GAAG,mBAAO,CAAC,iFAAa;;AAE3C;AACA,eAAe,sDAAsD;AACrE;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,yCAAyC;AAChE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gBAAgB,yBAAyB;AACzC,2CAA2C,yBAAyB;AACpE,4BAA4B,+CAA+C;;AAE3E;AACA;AACA;AACA;;AAEA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA,qBAAqB,qCAAqC;AAC1D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACpFa;;AAEb,OAAO,sBAAsB,GAAG,mBAAO,CAAC,2FAA6B;;AAErE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sDAAsD,gBAAgB;AACtE,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACxBa;;AAEb,OAAO,wBAAwB,GAAG,mBAAO,CAAC,+GAAyB;;AAEna;;AAEb,OAAO,wBAAwB,GAAG,mBAAO,CAAC,+GAAyB;AACnE,OAAO,qBAAqB,GAAG,mBAAO,CAAC,2FAA0B;AACjE,OAAO,sBAAsB,GAAG,mBAAO,CAAC,iGAAwB;;AAEhE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,2CAA2C,UAAU;AACrD;AACA;;AAEA;AACA;AACA;;AAEA;AACA,2CAA2C,kBAAkB;AAC7D;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;;;;;;;;;;;;ACjDa;;AAEb,OAAO,wBAAwB,GAAG,mBAAO,CAAC,+GAAyB;;AAEnE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC5Ba;;AAEb,OAAO,wBAAwB,GAAG,mBAAO,CAAC,+GAAyB;;AAEnE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC5Ba;;AAEb,OAAO,wBAAwB,GAAG,mBAAO,CAAC,+GAAyB;AACnE,OAAO,sBAAsB,GAAG,mBAAO,CAAC,iGAAwB;AAChE,OAAO,gCAAgC,GAAG,mBAAO,CAAC,2FAA0B;AAC5E,OAAO,WAAW,GAAG,mBAAO,CAAC,mFAAyB;;AAEtD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,2CAA2C,UAAU;AACrD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,2CAA2C,kBAAkB;AAC7D;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qCAAqC,OAAO;AAC5C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kCAAkC,OAAO;AACzC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACrKa;;AAEb,OAAO,wBAAwB,GAAG,mBAAO,CAAC,+GAAyB;;AAEnE;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACxBa;;AAEb,OAAO,qCAAqC,GAAG,mBAAO,CAAC,yIAAsC;AAC7F,OAAO,0BAA0B,GAAG,mBAAO,CAAC,mFAAyB;;AAErE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,oBAAoB;AAChD;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACpGa;;AAEb,OAAO,kBAAkB,GAAG,mBAAO,CAAC,mGAAmB;AACvD,OAAO,oBAAoB,GAAG,mBAAO,CAAC,uGAAqB;AAC3D,OAAO,aAAa,GAAG,mBAAO,CAAC,iFAAwB;AACvD,OAAO,UAAU,GAAG,mBAAO,CAAC,mFAAyB;AACrD,OAAO,QAAQ,GAAG,mBAAO,CAAC,2FAA0B;;AAEpD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA,SAAS;AACT,KAAK;AACL;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AChDa;;AAEb,OAAO,oBAAoB,GAAG,mBAAO,CAAC,uGAAqB;AAC3D,OAAO,uBAAuB,GAAG,mBAAO,CAAC,6GAAwB;AACjE,OAAO,qBAAqB,GAAG,mBAAO,CAAC,+FAAuB;;AAE9D;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC7Ca;;AAEb,OAAO,oBAAoB,GAAG,mBAAO,CAAC,uGAAqB;AAC3D,OAAO,kBAAkB,GAAG,mBAAO,CAAC,mGAAmB;AACvD,OAAO,cAAc,GAAG,mBAAO,CAAC,6FAAsB;;AAEtD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,qCAAqC;AACrC;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC3Fa;;AAEb,OAAO,wBAAwB,GAAG,mBAAO,CAAC,+GAAyB;AACnE,OAAO,sBAAsB,GAAG,mBAAO,CAAC,iGAAwB;AAChE,OAAO,wCAAwC,GAAG,mBAAO,CAAC,2FAA0B;AACpF,OAAO,gCAAgC,GAAG,mBAAO,CAAC,+EAAuB;AACzE,OAAO,WAAW,GAAG,mBAAO,CAAC,mFAAyB;;AAEtD;AACA;AACA;AACA;;AAEA;AACA;AACA,wCAAwC,6BAA6B;AACrE;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6CAA6C,OAAO;AACpD;AACA;AACA,KAAK;AACL;AACA,6CAA6C,OAAO;AACpD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA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;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sDAAsD,EAAE,QAAQ,OAAO;AACvE;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,yDAAyD,EAAE,QAAQ,OAAO;AAC1E;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA,GAAG,IAAI;AACP;;AAEA;AACA;AACA;;;;;;;;;;;;;ACnLa;;AAEb,OAAO,wBAAwB,GAAG,mBAAO,CAAC,+GAAyB;;AAEnE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC5Ba;;AAEb,OAAO,wBAAwB,GAAG,mBAAO,CAAC,+GAAyB;;AAEnE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC5Ba;;AAEb,OAAO,wBAAwB,GAAG,mBAAO,CAAC,+GAAyB;;AAEnE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC5Ba;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnhQa;;AAEb,OAAO,wBAAwB,GAAG,mBAAO,CAAC,+GAAyB;;AAEnE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC9Ca;;AAEb,OAAO,wBAAwB,GAAG,mBAAO,CAAC,+GAAyB;;AAEnE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC1Ba;;AAEb,OAAO,UAAU,GAAG,mBAAO,CAAC,mFAAyB;AACrD,OAAO,qCAAqC,GAAG,mBAAO,CAAC,yIAAsC;;AAE7F;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC7Ba;;AAEb,OAAO,wBAAwB,GAAG,mBAAO,CAAC,+GAAyB;;AAEnE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC5Ba;;AAEb,OAAO,wBAAwB,GAAG,mBAAO,CAAC,+GAAyB;;AAEnE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC5Ba;;AAEb,OAAO,wBAAwB,GAAG,mBAAO,CAAC,+GAAyB;;AAEnE;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACtBa;;AAEb,OAAO,oBAAo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A;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,wCAAwC,OAAO;AAC/C;;AAEA,mDAAmD,QAAQ;AAC3D;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,iDAAiD,aAAa,kBAAkB,cAAc;AAC9F,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,sCAAsC,iBAAiB;AACvD,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA,wCAAwC,QAAQ;AAChD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC7Ma;;AAEb,gBAAgB,mBAAO,CAAC,2GAAmB;AAC3C,OAAO,qCAAqC,GAAG,mBAAO,CAAC,0IAAuC;;AAE9F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC1Ba;;AAEb,gBAAgB,mBAAO,CAAC,2GAAmB;AAC3C,OAAO,qCAAqC,GAAG,mBAAO,CAAC,0IAAuC;;AAE9F;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACjCa;;AAEb,gBAAgB,mBAAO,CAAC,2GAAmB;AAC3C,OAAO,qCAAqC,GAAG,mBAAO,CAAC,0IAAuC;;AAE9F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC1Ba;;AAEb,eAAe,mBAAO,CAAC,wGAAqC;AAC5D,OAAO,8BAA8B,GAAG,mBAAO,CAAC,sFAA4B;;AAE5E;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,WAAW,qCAAqC,EAAE;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,yBAAyB,EAAE;AACvC;AACA;AACA;AACA;AACA;AACA,kEAAkE,oCAAoC;AACtG,uDAAuD,yCAAyC;AAChG;AACA;AACA,eAAe,8EAA8E;AAC7F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,uBAAuB,GAAG,UAAU,EAAE,EAAE,UAAU;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA,YAAY,eAAe,GAAG,6BAA6B,GAAG,oBAAoB;AAClF;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA,aAAa,eAAe,GAAG,KAAK,GAAG,mBAAmB,GAAG,aAAa;AAC1E;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClKa;;AAEb,OAAO,UAAU,GAAG,mBAAO,CAAC,sFAA4B;AACxD,OAAO,YAAY,GAAG,mBAAO,CAAC,8FAAa;AAC3C,OAAO,qCAAqC,GAAG,mBAAO,CAAC,0IAAuC;;AAE9F;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACjEa;;AAEb,OAAO,qBAAqB,GAAG,mBAAO,CAAC,sFAA4B;;AAEnE;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC1Ha;;AAEb,OAAO,qCAAqC,GAAG,mBAAO,CAAC,0IAAuC;AAC9F,OAAO,+BAA+B,GAAG,mBAAO,CAAC,sFAA4B;AAC7E,OAAO,gBAAgB,GAAG,mBAAO,CAAC,4FAA+B;;AAEjE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,gCAAgC,6BAA6B;AAC7D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,4BAA4B,8BAA8B;AAC1D,qBAAqB,SAAS,uCAAuC;AACrE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,OAAO;AAC3C;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACjHa;;AAEb,OAAO,qCAAqC,GAAG,mBAAO,CAAC,0IAAuC;AAC9F,OAAO,qBAAqB,GAAG,mBAAO,CAAC,sFAA4B;AACnE,OAAO,qBAAqB,GAAG,mBAAO,CAAC,kFAA0B;;AAEjE;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL,eAAe;;AAEf;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA,oCAAoC,OAAO;AAC3C;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC/Fa;;AAEb,OAAO,qCAAqC,GAAG,mBAAO,CAAC,0IAAuC;AAC9F,OAAO,qBAAqB,GAAG,mBAAO,CAAC,kFAA0B;AACjE,OAAO,WAAW,GAAG,mBAAO,CAAC,sFAA4B;;AAEzD;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,eAAe;;AAE1B;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,OAAO;AAC3C;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACvGa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA,iBAAiB,8BAA8B;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,eAAe,qBAAqB;AACpC;AACA;;AAEA;;AAEA;AACA,wBAAwB,yBAAyB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,qBAAqB;AACrB,8BAA8B,wBAAwB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,KAAK;AACL;AACA,cAAc;AACd,KAAK;AACL;AACA,cAAc;AACd,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,4BAA4B,qBAAqB;AACjD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACx3BA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA,iBAAiB,8BAA8B;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,eAAe,qBAAqB;AACpC;AACA;;AAEA;;AAEA;AACA,wBAAwB,yBAAyB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,qBAAqB;AACrB,8BAA8B,wBAAwB;AACtD;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,4BAA4B,qBAAqB;AACjD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACthCa;;AAEb,OAAO,mBAAmB,GAAG,mBAAO,CAAC,uFAAoB;AACzD,uBAAuB,mBAAO,CAAC,oEAAgB;;AAE/C,OAAO,wBAAwB,GAAG,mBAAO,CAAC,iGAAyB;AACnE,OAAO,0BAA0B,GAAG,mBAAO,CAAC,qGAA2B;AACvE,OAAO,0BAA0B,GAAG,mBAAO,CAAC,qGAA2B;AACvE,OAAO,4BAA4B,GAAG,mBAAO,CAAC,yGAA6B;;AAE3E,OAAO,MAAM,GAAG,mBAAO,CAAC,wGAAkC;AAC1D,OAAO,eAAe,GAAG,mBAAO,CAAC,8EAAqB;AACtD,OAAO,eAAe,GAAG,mBAAO,CAAC,kFAAuB;AACxD,OAAO,kBAAkB,GAAG,mBAAO,CAAC,gFAAsB;AAC1D,OAAO,oBAAoB,GAAG,mBAAO,CAAC,wFAAuB;AAC7D,OAAO,iBAAiB,GAAG,mBAAO,CAAC,sFAAyB;;AAE5D;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,6CAA6C,OAAO;AACpD;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,2CAA2C,OAAO;AAClD;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B,0BAA0B,oBAAoB,UAAU,IAAI,QAAQ;AAC9F,KAAK;AACL,0BAA0B,sBAAsB,IAAI,QAAQ;AAC5D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,wCAAwC,KAAK;AAC7C;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,6BAA6B,oBAAoB;AACjD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,kGAAkG,uDAAuD;AACzJ;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA,6BAA6B,yBAAyB;AACtD;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA,WAAW,SAAS;AACpB;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL,6BAA6B,SAAS;AACtC;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA,6BAA6B,eAAe;AAC5C;;AAEA;AACA,iCAAiC,OAAO;AACxC;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH,cAAc,UAAU,MAAM,MAAM;AACpC;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACraa;;AAEb,OAAO,kBAAkB,GAAG,mBAAO,CAAC,4HAA4C;;AAEhF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACvBa;;AAEb,OAAO,gBAAgB,GAAG,mBAAO,CAAC,wHAA0C;AAC5E,OAAO,SAAS,GAAG,mBAAO,CAAC,gFAAsB;;AAEjD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,2CAA2C,OAAO;AAClD;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,yCAAyC,OAAO;AAChD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,wCAAwC,OAAO;AAC/C;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,0CAA0C,QAAQ;AAClD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uCAAuC,OAAO;AAC9C;AACA;;AAEA;AACA;;AAEA;AACA,+CAA+C,QAAQ;AACvD;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACtJa;;AAEb,OAAO,QAAQ,GAAG,mBAAO,CAAC,wFAAuB;AACjD,OAAO,kBAAkB,GAAG,mBAAO,CAAC,4HAA4C;;AAEhF;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AClCa;;AAEb,OAAO,sCAAsC,GAAG,mBAAO,CAAC,gFAAsB;AAC9E,OAAO,iBAAiB,GAAG,mBAAO,CAAC,wGAAkC;AACrE,OAAO,6BAA6B,GAAG,mBAAO,CAAC,gFAAsB;;AAErE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB,UAAU;AAC7B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB,UAAU;AAC7B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,UAAU;AAC7B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,oCAAoC,OAAO;AAC3C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AChPa;;AAEb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ACrE,OAAO,2BAA2B,GAAG,mBAAO,CAAC,+GAA4B;;AAEzE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;;;;;;;;;;;;AChDa;;AAEb,OAAO,oBAAoB,GAAG,mBAAO,CAAC,mIAAiD;;AAEvF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC,OAAO;AAChD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC7Ba;;AAEb,OAAO,kBAAkB,GAAG,mBAAO,CAAC,sGAA4B;;AAEhE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACZa;;AAEb,OAAO,qBAAqB,GAAG,mBAAO,CAAC,kHAAkC;;AAEzE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACZa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qDAAqD,WAAW;;AAEhE;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AChGa;;AAEb,OAAO,wBAAwB,GAAG,mBAAO,CAAC,4GAAyB;;AAEnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC5Ba;;AAEb,uBAAuB,mBAAO,CAAC,uEAAmB;AAClD,OAAO,WAAW,GAAG,mBAAO,CAAC,wEAAa;AAC1C,OAAO,mBAAmB,GAAG,mBAAO,CAAC,wFAAqB;;AAE1D,OAAO,MAAM,GAAG,mBAAO,CAAC,2GAAqC;AAC7D,OAAO,oBAAoB,GAAG,mBAAO,CAAC,+EAAuB;AAC7D,OAAO,eAAe,GAAG,mBAAO,CAAC,qFAA0B;AAC3D,OAAO,eAAe,GAAG,mBAAO,CAAC,qFAA0B;AAC3D,OAAO,oBAAoB,GAAG,mBAAO,CAAC,2FAA0B;AAChE,OAAO,uBAAuB,GAAG,mBAAO,CAAC,mFAAyB;;AAElE,OAAO,0BAA0B,GAAG,mBAAO,CAAC,0HAAgC;AAC5E,OAAO,4BAA4B,GAAG,mBAAO,CAAC,kIAAoC;AAClF,OAAO,4BAA4B,GAAG,mBAAO,CAAC,kIAAoC;;AAElF,OAAO,8BAA8B,GAAG,mBAAO,CAAC,0IAAwC;AACxF,OAAO,mCAAmC,GAAG,mBAAO,CAAC,oJAA6C;AAClG;AACA;AACA,CAAC,GAAG,mBAAO,CAAC,sJAA8C;;AAE1D,OAAO,4BAA4B,GAAG,mBAAO,CAAC,kIAAoC;AAClF,OAAO,iCAAiC,GAAG,mBAAO,CAAC,4IAAyC;AAC5F,OAAO,kCAAkC,GAAG,mBAAO,CAAC,8IAA0C;;AAE9F,OAAO,4BAA4B,GAAG,mBAAO,CAAC,kIAAoC;AAClF,OAAO,iCAAiC,GAAG,mBAAO,CAAC,4IAAyC;AAC5F,OAAO,kCAAkC,GAAG,mBAAO,CAAC,8IAA0C;;AAE9F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,gDAAgD,OAAO;AACvD;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,oDAAoD,OAAO;AAC3D;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yCAAyC,OAAO;AAChD;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA,2CAA2C,OAAO;AAClD;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA,uBAAuB,cAAc;AACrC;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA,uBAAuB,cAAc;AACrC;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA,wCAAwC,QAAQ;AAChD;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,sDAAsD,QAAQ;AAC9D;AACA;;AAEA,wDAAwD,QAAQ;AAChE;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH,cAAc,UAAU,MAAM,MAAM;AACpC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mFAAmF,sDAAsD;AACzI;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,6BAA6B,sBAAsB;AACnD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA,WAAW,cAAc;AACzB;AACA;AACA;;AAEA;AACA,6BAA6B,sBAAsB;AACnD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK,IAAI;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH,6BAA6B,kBAAkB;AAC/C;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA,6BAA6B,wBAAwB;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iCAAiC,OAAO;AACxC;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACtgBa;;AAEb,OAAO,wBAAwB,GAAG,mBAAO,CAAC,4GAAyB;AACnE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,SAAS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,GAAG;AACH;AACA;AACA;AACA;;AAEA,eAAe,yBAAyB;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,yBAAyB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB,yBAAyB;AAC9C;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;AC5GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8E;;;;;;;;;;;;ACnEa;;AAEb;AACA;AACA;AACA;;AAEA;AACA,wCAAwC,IAAI;AAC5C;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACjBa;;AAEb,OAAO,uBAAuB,GAAG,mBAAO,CAAC,yEAAe;;AAExD;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACpBa;;AAEb,OAAO,aAAa,GAAG,mBAAO,CAAC,yEAAe;;AAE9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC/BA,8CAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sCAAsC;;AAEtC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB,KAA0B;;AAE9C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,SAAS;AACtB,eAAe,MAAM;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,SAAS;AACtB,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,MAAM;AACnB,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,eAAe,MAAM;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,eAAe,EAAE;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,aAAa,SAAS;AACtB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,EAAE;AACf,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,EAAE;AACjB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,EAAE;AACf,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,EAAE;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,EAAE;AACf,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,EAAE;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,EAAE;AACf,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf,aAAa,QAAQ;AACrB,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,EAAE;AACf,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf,aAAa,QAAQ;AACrB;AACA;AACA;AACA,aAAa,SAAS;AACtB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,aAAa,SAAS;AACtB,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,MAAM;AACnB,eAAe,MAAM;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,MAAM;AACnB,aAAa,OAAO,WAAW;AAC/B,aAAa,SAAS;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA,0BAA0B;;AAE1B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO,WAAW;AAC/B,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO,WAAW;AAC/B,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,MAAM;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,MAAM;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf,eAAe,OAAO;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,eAAe,MAAM;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf,aAAa,OAAO;AACpB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf,eAAe,EAAE;AACjB;AACA;AACA;AACA,qBAAqB,SAAS,GAAG,SAAS;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf,eAAe,EAAE;AACjB;AACA;AACA;AACA,qBAAqB,SAAS,GAAG,SAAS;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf,aAAa,EAAE;AACf,eAAe,QAAQ;AACvB;AACA;AACA,mBAAmB;AACnB,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf,eAAe,QAAQ;AACvB;AACA;AACA;AACA,+BAA+B,kBAAkB,EAAE;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf,eAAe,QAAQ;AACvB;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf,eAAe,QAAQ;AACvB;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;AChwEY;;AAEb,OAAO,+CAA+C,GAAG,mBAAO,CAAC,yEAAe;;AAEhF,yBAAyB,wCAAwC;AACjE;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,+BAA+B,0CAA0C;AACzE;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL,6BAA6B,kCAAkC;AAC/D;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACvCa;;AAEb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACda;;AAEb,OAAO,WAAW,GAAG,mBAAO,CAAC,yEAAe;;AAE5C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB,oDAAoD,KAAK;AAClF;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,iCAAiC,OAAO;AACxC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,oBAAoB,KAAK;AAClD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,iCAAiC,OAAO;AACxC;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iCAAiC,OAAO;AACxC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oCAAoC,OAAO;AAC3C;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;;AAEA,gCAAgC,mCAAmC,KAAK;AACxE;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA,0CAA0C,OAAO;AACjD;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA,sCAAsC;AACtC;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG,IAAI;;AAEP;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACtNa;;AAEb;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACVa;;AAEb,OAAO,uBAAuB,GAAG,mBAAO,CAAC,gFAAsB;;AAE/D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvEa;;AAEb,OAAO,UAAU,GAAG,mBAAO,CAAC,yEAAe;;AAE3C;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACxBa;;AAEb,OAAO,WAAW,GAAG,mBAAO,CAAC,gFAAsB;;AAEnD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,YAAY,qBAAqB,GAAG,qBAAqB;AACzD;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,OAAO;AAC9C;AACA;AACA,OAAO;AACP;;AAEA;AACA,uCAAuC,OAAO;AAC9C;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,+CAA+C,oBAAoB;AACnE;AACA,GAAG;AACH;AACA;AACA;AACA,WAAW;AACX;AACA,YAAY,MAAM,GAAG,UAAU,GAAG,MAAM;AACxC;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,OAAO;AAC9C;AACA;AACA,OAAO;AACP;;AAEA;AACA,uCAAuC,OAAO;AAC9C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,6CAA6C,oBAAoB;AACjE;;AAEA;AACA,4CAA4C,oBAAoB,eAAe,UAAU;AACzF;;AAEA;;AAEA,iBAAiB,gBAAgB;AACjC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH,6CAA6C,oBAAoB;AACjE;AACA;;AAEA;AACA,iCAAiC,OAAO;AACxC;;AAEA,mCAAmC,QAAQ;AAC3C;;AAEA;AACA;AACA,yBAAyB,oBAAoB,oBAAoB,wBAAwB;AACzF;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iCAAiC,OAAO;AACxC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC/Ia;;AAEb,OAAO,mBAAmB,GAAG,mBAAO,CAAC,6DAAS;AAC9C;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,mCAAmC,OAAO;AAC1C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,kCAAkC,OAAO;AACzC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,iBAAiB;AAClC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA,kCAAkC,OAAO;AACzC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,iBAAiB,iBAAiB;AAClC;AACA;;AAEA,iBAAiB,iBAAiB;AAClC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oCAAoC,OAAO;AAC3C;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oCAAoC,OAAO;AAC3C;;AAEA;AACA,qBAAqB,kBAAkB;AACvC;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kCAAkC,OAAO;AACzC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,sCAAsC,OAAO;AAC7C;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,kCAAkC,OAAO;AACzC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,iCAAiC,OAAO;AACxC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kCAAkC,OAAO;AACzC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,mCAAmC,OAAO;AAC1C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClYa;;AAEb,kCAAkC,mBAAO,CAAC,0IAAmD;AAC7F;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AClDa;;AAEb,OAAO,YAAY,GAAG,mBAAO,CAAC,kFAAa;;AAE3C;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AChBa;;AAEb,OAAO,YAAY,GAAG,mBAAO,CAAC,kFAAa;;AAE3C;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AChBa;;AAEb,OAAO,YAAY,GAAG,mBAAO,CAAC,kFAAa;AAC3C,OAAO,QAAQ,GAAG,mBAAO,CAAC,0EAAS;AACnC,OAAO,cAAc,GAAG,mBAAO,CAAC,sFAAe;AAC/C,OAAO,oBAAoB,GAAG,mBAAO,CAAC,kGAAqB;AAC3D,OAAO,aAAa,GAAG,mBAAO,CAAC,sEAAO;AACtC,OAAO,aAAa,GAAG,mBAAO,CAAC,sEAAO;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChBa;;AAEb,OAAO,uBAAuB,GAAG,mBAAO,CAAC,0EAAgB;;AAEzD;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACVa;;AAEb,OAAO,YAAY,GAAG,mBAAO,CAAC,kFAAa;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wCAAwC;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC3Ga;;AAEb,OAAO,YAAY,GAAG,mBAAO,CAAC,kFAAa;;AAE3C;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC,OAAO;AACxC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC5Ba;;AAEb,OAAO,YAAY,GAAG,mBAAO,CAAC,kFAAa;;AAE3C;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACrBa;;AAEb,aAAa,mBAAO,CAAC,kBAAM;AAC3B,OAAO,6BAA6B,GAAG,mBAAO,CAAC,gFAAsB;AACrE,OAAO,eAAe,GAAG,mBAAO,CAAC,8EAAqB;;AAEtD,4BAA4B,mBAAO,CAAC,oEAAgB;AACpD;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,yBAAyB,YAAY,IAAI,YAAY;AACrD,KAAK;AACL;AACA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AAO,CAAC,qEAAoB;AAC5B,UAAU,mBAAO,CAAC,uDAAa;AAC/B;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,mBAAO,CAAC,8FAAkC;AAC1D,uBAAuB,mBAAO,CAAC,4GAAyC;AACxE;AACA,GAAG;AACH;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;AClBA,mBAAO,CAAC,gEAAe;;AAEvB,UAAU,mBAAO,CAAC,kDAAQ;;AAE1B;AACA,mBAAO,CAAC,6DAAgB;;AAExB;AACA;AACA;AACA;;;;;;;;;;;;ACVA,UAAU,mBAAO,CAAC,mDAAS;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4BAA4B,gBAAgB,2BAA2B;AACvE;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;;;;;;;;;;;ACjNA,UAAU,mBAAO,CAAC,kDAAQ;AAC1B,mBAAO,CAAC,gEAAe;AACvB,mBAAO,CAAC,oHAAyC;AACjD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,oBAAoB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA,kCAAkC;AAClC;AACA,sCAAsC;AACtC;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,oBAAoB,WAAW;AACzD;AACA;AACA,0BAA0B,oBAAoB;AAC9C;AACA,UAAU;AACV;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,oDAAoD;AACpD;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA,uCAAuC;AACvC;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA,oCAAoC,WAAW;AAC/C;AACA,mCAAmC,aAAa;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA,kCAAkC;AAClC;AACA,sCAAsC;AACtC;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA,uCAAuC;AACvC;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA,4CAA4C,YAAY;AACxD;AACA;AACA;AACA;AACA;AACA,yDAAyD,YAAY;AACrE;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA,QAAQ;AACR;AACA,wBAAwB,YAAY;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO,OAAO;AACd;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAwB,eAAe;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC5jBA;AACA;AACA;AACA,WAAW,OAAO,mBAAO,CAAC,kDAAQ;;AAElC;AACA;AACA;AACA;AACA;AACA,iBAAiB,oBAAoB;;AAErC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA,UAAU,mBAAO,CAAC,oEAAiB;AACnC,WAAW,mBAAO,CAAC,sEAAkB;AACrC,UAAU,mBAAO,CAAC,oEAAiB;AACnC,cAAc,mBAAO,CAAC,8EAAsB;AAC5C,aAAa,mBAAO,CAAC,4EAAqB;AAC1C,GAAG;;AAEH;AACA;AACA;AACA;AACA,aAAa,mBAAO,CAAC,gEAAe;AACpC;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,aAAa,mBAAO,CAAC,kEAAgB;AACrC,YAAY,mBAAO,CAAC,gEAAe;AACnC,GAAG;;AAEH;AACA;AACA;AACA;AACA,SAAS,mBAAO,CAAC,4DAAa;AAC9B,eAAe,mBAAO,CAAC,wEAAmB;AAC1C,WAAW,mBAAO,CAAC,gEAAe;AAClC,eAAe,mBAAO,CAAC,wEAAmB;AAC1C,oBAAoB,mBAAO,CAAC,oFAAyB;AACrD,GAAG;;AAEH;AACA;AACA;AACA,aAAa,mBAAO,CAAC,8DAAc;;AAEnC;AACA;AACA;AACA,iBAAiB,mBAAO,CAAC,uFAA0B;AACnD,CAAC;AACD,mBAAO,CAAC,gFAAuB;AAC/B,mBAAO,CAAC,wDAAW;AACnB,mBAAO,CAAC,sDAAU;AAClB,mBAAO,CAAC,kDAAQ;AAChB,mBAAO,CAAC,wEAAmB;AAC3B,mBAAO,CAAC,wDAAW;AACnB,mBAAO,CAAC,0DAAY;AACpB,mBAAO,CAAC,wEAAmB;AAC3B,mBAAO,CAAC,sFAA0B;AAClC,mBAAO,CAAC,wEAAmB;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA,gCAAgC;AAChC;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;AC5GD,UAAU,mBAAO,CAAC,kDAAQ;;AAE1B;AACA;AACA,IAAI,YAAY,GAAG,gBAAgB,gBAAgB,aAAa;AAChE;AACA;AACA;AACA;AACA,WAAW,WAAW,MAAM,YAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,QAAQ;AACjC;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,WAAW;AAC/D;AACA;AACA,4BAA4B,QAAQ;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,qDAAqD,WAAW;AAChE;AACA;AACA;;AAEA;AACA,mEAAmE;AACnE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA,kEAAkE,QAAQ;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,oEAAoE,QAAQ;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,MAAM,iBAAiB,MAAM;AAC/D;;AAEA;AACA;AACA;AACA,qDAAqD,IAAI;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,MAAM,iBAAiB,MAAM;AAC/D;;AAEA;AACA,mDAAmD,IAAI;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,YAAY,GAAG,gBAAgB,eAAe;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACrPA,UAAU,mBAAO,CAAC,mDAAS;AAC3B,UAAU,mBAAO,CAAC,gEAAmB;;AAErC;AACA,oDAAoD,QAAQ;AAC5D;AACA,IAAI,wBAAwB;AAC5B,IAAI,mBAAmB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,iBAAiB;AAC/B;AACA,gBAAgB,iBAAiB;AACjC;AACA,MAAM;AACN,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,QAAQ,mBAAmB,KAAK,wBAAwB;AACxD;AACA,8DAA8D,YAAY;AAC1E;AACA;AACA;AACA;AACA;AACA,kEAAkE,OAAO;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;;AAEH;AACA,kCAAkC,mBAAmB;AACrD,MAAM,wBAAwB;AAC9B,yBAAyB,YAAY;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,CAAC;;;;;;;;;;;;ACvMD,UAAU,mBAAO,CAAC,mDAAS;AAC3B,sBAAsB,mBAAO,CAAC,wFAA+B;AAC7D,UAAU,mBAAO,CAAC,gEAAmB;;AAErC;AACA;AACA;AACA;AACA;AACA,IAAI,8CAA8C;AAClD;AACA,6CAA6C,0BAA0B;AACvE;AACA;AACA;AACA;AACA;AACA,IAAI,kCAAkC;AACtC,uBAAuB,mCAAmC;AAC1D;AACA;AACA;AACA,4BAA4B,YAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,OAAO;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,0BAA0B;AAClC,QAAQ,mCAAmC;AAC3C,QAAQ,kCAAkC;AAC1C;AACA;AACA;AACA,QAAQ,8CAA8C;AACtD,QAAQ,kCAAkC;AAC1C;AACA;AACA;AACA,QAAQ,mCAAmC;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA,kCAAkC,8CAA8C;AAChF,SAAS,kCAAkC;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH,CAAC;;;;;;;;;;;;AChYD,UAAU,mBAAO,CAAC,mDAAS;;AAE3B;AACA;AACA,uDAAuD,UAAU;AACjE;AACA,uCAAuC,iBAAiB;AACxD;AACA,IAAI,2BAA2B;AAC/B;AACA;AACA;AACA,yBAAyB,UAAU;AACnC,MAAM,gBAAgB;AACtB;AACA;AACA;AACA;AACA,SAAS,QAAQ;AACjB;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,iBAAiB;AACzB;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,uBAAuB,UAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,MAAM,iBAAiB,MAAM;AAC1E;;AAEA;AACA;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,8CAA8C,EAAE;AAClE,kBAAkB,iDAAiD,EAAE;AACrE,kBAAkB,2CAA2C,EAAE;AAC/D,kBAAkB,iCAAiC,EAAE;AACrD,kBAAkB,qCAAqC,EAAE;AACzD,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACjLA,UAAU,mBAAO,CAAC,mDAAS;AAC3B,mBAAO,CAAC,2EAAqB;;AAE7B;AACA;AACA;AACA;AACA,IAAI,oBAAoB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA,yBAAyB,YAAY;AACrC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO,mCAAmC;AAC1C;AACA;AACA,OAAO,6BAA6B;;AAEpC;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;;;;;;;;;;;;AC/FD,UAAU,mBAAO,CAAC,mDAAS;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA,yBAAyB,YAAY;AACrC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC3BA,UAAU,mBAAO,CAAC,mDAAS;;AAE3B;AACA;AACA;AACA;AACA,wBAAwB,UAAU;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,CAAC;;;;;;;;;;;;AC1FD,UAAU,mBAAO,CAAC,mDAAS;;AAE3B;AACA;AACA,2CAA2C,QAAQ;AACnD;AACA;AACA;AACA,IAAI,WAAW;AACf;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,GAAG;;AAEH;AACA,qCAAqC,SAAS;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,CAAC;;;;;;;;;;;;ACnED,UAAU,mBAAO,CAAC,mDAAS;AAC3B,WAAW,mBAAO,CAAC,oCAAe;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,qBAAqB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP,oEAAoE,yBAAyB;AAC7F;AACA;AACA;AACA,qEAAqE,yBAAyB;AAC9F;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,WAAW;AACX;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;ACtLD,UAAU,mBAAO,CAAC,mDAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA,yBAAyB,YAAY;AACrC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,gBAAgB,gBAAgB;;AAEhC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA,qFAAqF;AACrF;AACA,aAAa;AACb;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;;;;;;;;;;;;AC/MD,UAAU,mBAAO,CAAC,mDAAS;AAC3B,UAAU,mBAAO,CAAC,gEAAmB;;AAErC;AACA;AACA;AACA;AACA,IAAI,2BAA2B;AAC/B;AACA;AACA;AACA;AACA,kBAAkB,YAAY;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,OAAO;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,2BAA2B;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA,4CAA4C,oBAAoB;AAChE;;AAEA,CAAC;;;;;;;;;;;;AC7FD,UAAU,mBAAO,CAAC,mDAAS;AAC3B,UAAU,mBAAO,CAAC,gEAAmB;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,qBAAqB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP,qEAAqE,yBAAyB;AAC9F;AACA;AACA,oEAAoE,yBAAyB;AAC7F;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,uCAAuC;AACvC;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;AClRD,UAAU,mBAAO,CAAC,mDAAS;AAC3B,UAAU,mBAAO,CAAC,gEAAmB;;AAErC;AACA,oDAAoD,QAAQ;AAC5D;AACA,IAAI,wBAAwB;AAC5B,IAAI,mBAAmB;AACvB;AACA;AACA;AACA,+BAA+B,kCAAkC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,MAAM;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,uBAAuB;AAClE;AACA;AACA;AACA,QAAQ,mBAAmB,KAAK,wBAAwB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,kCAAkC,mBAAmB;AACrD,MAAM,wBAAwB;AAC9B,yBAAyB,YAAY;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,4CAA4C,oBAAoB;AAChE;;AAEA,CAAC;;;;;;;;;;;;AChID,UAAU,mBAAO,CAAC,mDAAS;AAC3B,UAAU,mBAAO,CAAC,gEAAmB;;AAErC;AACA;AACA;AACA;AACA,IAAI,kCAAkC;AACtC;AACA;AACA;AACA,kBAAkB,YAAY;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,OAAO;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,kCAAkC;AAC1C;AACA;AACA;AACA,QAAQ,kCAAkC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD,GAAG;;AAEH;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;;AAEA,CAAC;;;;;;;;;;;;AClHD,UAAU,mBAAO,CAAC,kDAAQ;AAC1B,WAAW,mBAAO,CAAC,kDAAQ;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA,oCAAoC,iCAAiC;AACrE;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,yCAAyC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtWA,UAAU,mBAAO,CAAC,mDAAS;AAC3B;AACA,aAAa,mBAAO,CAAC,6DAAS;AAC9B,kBAAkB,mBAAO,CAAC,yDAAO;AACjC,kBAAkB,mBAAO,CAAC,yEAAe;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,cAAc;AACd,KAAK;AACL,cAAc;AACd,KAAK;AACL;AACA;AACA;AACA,cAAc;AACd,KAAK;AACL,cAAc;AACd,KAAK;AACL,cAAc;AACd,KAAK;AACL;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA,OAAO;AACP;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA,OAAO;AACP;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA,OAAO;AACP;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B,eAAe,KAAK,UAAU,GAAG,UAAU,GAAG,SAAS,EAAE;AACzD;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,SAAS;AACT,iBAAiB,SAAS;AAC1B,oBAAoB,WAAW;AAC/B,oBAAoB;AACpB,OAAO;AACP;AACA;AACA,0CAA0C,QAAQ;AAClD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sCAAsC;AACtC,sCAAsC;AACtC;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACrSA,UAAU,mBAAO,CAAC,mDAAS;AAC3B,iBAAiB,mBAAO,CAAC,uEAAc;AACvC,kBAAkB,mBAAO,CAAC,yDAAO;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,uDAAuD;AACvD;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,oCAAoC,0BAA0B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,oCAAoC,4BAA4B;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,oCAAoC,wBAAwB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,oCAAoC,qBAAqB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,oCAAoC,qBAAqB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,YAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,oCAAoC,wBAAwB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,sBAAsB;AACpC;AACA;AACA,mCAAmC,aAAa;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,oCAAoC,kBAAkB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,qCAAqC,mBAAmB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,oCAAoC,gCAAgC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,YAAY;AACzC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,kBAAkB,sBAAsB;AACxC;AACA;AACA,uCAAuC,aAAa;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,oCAAoC,8BAA8B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,YAAY,gBAAgB;;AAEnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;AAED;AACA;AACA;AACA;;;;;;;;;;;;ACjkBA,WAAW,mBAAO,CAAC,mDAAS;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;;;;;;;;;;;AC1CA,WAAW,mBAAO,CAAC,mDAAS;AAC5B,aAAa,mBAAO,CAAC,6DAAS;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;AAED;AACA;AACA;AACA;;;;;;;;;;;;ACtEA,WAAW,mBAAO,CAAC,mDAAS;AAC5B,cAAc,mBAAO,CAAC,qEAAa;;AAEnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACtFA,WAAW,mBAAO,CAAC,mDAAS;;AAE5B;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChDA,0BAA0B,mBAAO,CAAC,+GAAuC;AACzE,iBAAiB,mBAAO,CAAC,6EAAe;;AAExC;AACA;;AAEA;;AAEA,mBAAmB,0BAA0B;AAC7C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACpBA,WAAW,mBAAO,CAAC,mDAAS;AAC5B,gBAAgB,mBAAO,CAAC,sBAAQ;AAChC;;AAEA,WAAW,UAAU;AACrB;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB;;AAEA,eAAe,OAAO;AACtB;AACA;;AAEA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,EAAE;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACxHA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC7BA,gBAAgB,mBAAO,CAAC,sBAAQ;AAChC,iBAAiB,mBAAO,CAAC,6EAAe;;AAExC,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtCA,WAAW,mBAAO,CAAC,mDAAS;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC5FA,mBAAmB,mBAAO,CAAC,iFAAiB;;AAE5C;AACA;AACA,WAAW,EAAE;AACb,WAAW,OAAO;AAClB,WAAW,EAAE;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,6BAA6B;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACxEA,YAAY,mBAAO,CAAC,iEAAS;;AAE7B,mBAAmB,mBAAO,CAAC,iFAAiB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC/HA,WAAW,mBAAO,CAAC,mDAAS;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACrEA;AACA;AACA;AACA;AACA;AACA;;AAEA,gCAAgC,mBAAO,CAAC,6HAA8C;AACtF,8BAA8B,mBAAO,CAAC,uIAAmD;;AAEzF;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtCA,UAAU,mBAAO,CAAC,kDAAQ;AAC1B,yBAAyB,mBAAO,CAAC,gFAAuB;AACxD,wBAAwB,mBAAO,CAAC,4EAAqB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,oBAAoB,8CAA8C;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA,aAAa,mEAAmE;AAChF;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA,WAAW,yDAAyD;AACpE;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,UAAU;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oEAAoE;;AAEpE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,WAAW,4DAA4D;AACvE;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,aAAa,OAAO;AACpB;AACA;AACA,eAAe;AACf;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;AAC1B;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,mBAAO,CAAC,kBAAM;AACnC;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA,cAAc,mBAAO,CAAC,oEAAiB;AACvC;AACA;AACA;AACA,GAAG;;AAEH;AACA,cAAc,mBAAO,CAAC,oEAAiB;AACvC;AACA;AACA;AACA,GAAG;;AAEH;AACA,cAAc,mBAAO,CAAC,8EAAsB;AAC5C;AACA;AACA;AACA,GAAG;;AAEH;AACA,cAAc,mBAAO,CAAC,4EAAqB;AAC3C;AACA;AACA;AACA,GAAG;;AAEH;AACA,cAAc,mBAAO,CAAC,sEAAkB;AACxC;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;ACtmBA,UAAU,mBAAO,CAAC,kDAAQ;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,aAAa;AACrC;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAA0B,WAAW;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,uCAAuC,KAAK;AAC5C;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,uBAAuB;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA,QAAQ,qBAAqB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD,2BAA2B;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC1OA,UAAU,mBAAO,CAAC,mDAAS;AAC3B;AACA;AACA;AACA,mBAAO,CAAC,mDAAS;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,mBAAO,CAAC,oBAAO,IAAI,mBAAO,CAAC,kBAAM;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,yBAAyB;AACzB,2BAA2B;;AAE3B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,gCAAgC;AAChC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;;AAE3C;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;;AAEA;AACA;AACA,qCAAqC;;AAErC;AACA,kDAAkD,qBAAqB;AACvE;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,wBAAwB,mBAAO,CAAC,oBAAO,IAAI,mBAAO,CAAC,kBAAM;AACzD;AACA;AACA;AACA;AACA,SAAS,oBAAoB;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACrNA,WAAW,mBAAO,CAAC,mDAAS;;AAE5B,wBAAwB;;AAExB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;AC1DA,WAAW,mBAAO,CAAC,mDAAS;;AAE5B,uBAAuB;;AAEvB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;AClEA,UAAU,mBAAO,CAAC,kDAAQ;AAC1B,mBAAO,CAAC,kDAAQ;AAChB;;AAEA;AACA;AACA,IAAI,QAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,aAAa;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,QAAQ;;AAE3D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA,CAAC;;AAED;AACA;AACA;AACA;;;;;;;;;;;;ACnIA,iBAAiB,mBAAO,CAAC,oEAAc;AACvC,gBAAgB,mBAAO,CAAC,kEAAa;AACrC,YAAY,mBAAO,CAAC,0DAAS;AAC7B,gBAAgB,mBAAO,CAAC,kEAAa;AACrC,qBAAqB,mBAAO,CAAC,8EAAmB;;AAEhD,WAAW,mBAAO,CAAC,mDAAS;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACzEA,uBAAuB,mBAAO,CAAC,mDAAS;;AAExC;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACvBA,YAAY,mBAAO,CAAC,0DAAS;;AAE7B,WAAW,mBAAO,CAAC,mDAAS;AAC5B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,kBAAkB;AACjD;AACA;AACA,GAAG;;AAEH;AACA;AACA,+BAA+B,kBAAkB;AACjD;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA,mBAAmB,6BAA6B;AAChD;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;AChHA,eAAe,mBAAO,CAAC,mDAAS;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACbA,WAAW,mBAAO,CAAC,mDAAS;AAC5B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;AChCA,iBAAiB,mBAAO,CAAC,oEAAc;;AAEvC,WAAW,mBAAO,CAAC,mDAAS;;AAE5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,+CAA+C,WAAW,EAAE;AAC5D,gCAAgC;AAChC;AACA;AACA,6CAA6C,cAAc,EAAE;AAC7D;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,kDAAkD,UAAU;AAC5D;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,kDAAkD,UAAU;AAC5D;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB,2BAA2B;AAClD;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,+CAA+C,WAAW,EAAE;AAC5D;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA,+CAA+C,WAAW,EAAE;AAC5D,wCAAwC,eAAe;AACvD,0CAA0C,eAAe;AACzD;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACrZA,WAAW,mBAAO,CAAC,kDAAQ;;AAE3B,6BAA6B,cAAc;AAC3C,0BAA0B,aAAa;;AAEvC;AACA,kBAAkB,mBAAO,CAAC,sBAAQ;AAClC,cAAc,mBAAO,CAAC,sBAAQ;AAC9B,cAAc,mBAAO,CAAC,sBAAQ;AAC9B,cAAc,mBAAO,CAAC,sBAAQ;AAC9B,WAAW,mBAAO,CAAC,gBAAK;AACxB,mBAAmB,mBAAO,CAAC,gCAAa;AACxC;AACA;AACA,EAAE,mBAAO,CAAC,8HAA8C,sBAAsB,mBAAO,CAAC,4HAA6C;AACnI,iBAAiB,mBAAO,CAAC,gFAAuB;AAChD;AACA,aAAa,mBAAO,CAAC,kEAAa;AAClC,kBAAkB,mBAAO,CAAC,wFAA2B;AACrD;AACA,iBAAiB,mBAAO,CAAC,oEAAc;;AAEvC;;AAEA;AACA;AACA;AACA,uBAAuB,mBAAO,CAAC,kDAAQ;;AAEvC,mBAAO,CAAC,gEAAe;AACvB,mBAAO,CAAC,oHAAyC;AACjD,mBAAO,CAAC,4GAAqC;AAC7C,mBAAO,CAAC,gIAA+C;AACvD,mBAAO,CAAC,kHAAwC;AAChD,mBAAO,CAAC,0HAA4C;AACpD,mBAAO,CAAC,kGAAgC;AACxC,mBAAO,CAAC,wGAAmC;;AAE3C;AACA,iBAAiB,mBAAO,CAAC,wEAAmB;;AAE5C;AACA,mBAAO,CAAC,4DAAa;;AAErB,mBAAO,CAAC,oFAAyB;;AAEjC;AACA,mBAAO,CAAC,kHAAwC;AAChD,mBAAO,CAAC,sGAAkC;AAC1C,mBAAO,CAAC,gGAA+B;AACvC,mBAAO,CAAC,gHAAuC;AAC/C,mBAAO,CAAC,gHAAuC;AAC/C,mBAAO,CAAC,wHAA2C;AACnD,mBAAO,CAAC,wGAAmC;;AAE3C;AACA;AACA;AACA;AACA;AACA,eAAe,8CAA8C,EAAE;AAC/D,eAAe,iDAAiD,EAAE;AAClE,eAAe,2CAA2C,EAAE;AAC5D,eAAe,iCAAiC,EAAE;AAClD,eAAe,qCAAqC,EAAE;AACtD,eAAe,yCAAyC;AACxD;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,8CAA8C,EAAE;AACnE,mBAAmB,iDAAiD,EAAE;AACtE,mBAAmB,0CAA0C,0BAA0B,EAAE;AACzF;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,SAAS,iDAAiD;AAC1D,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;;;;;;;;;;;;AC3GA,UAAU,mBAAO,CAAC,kDAAQ;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA,oCAAoC;AACpC;AACA,wCAAwC;AACxC;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,GAAG;;AAEH;AACA;AACA,2CAA2C;;AAE3C;AACA;AACA;AACA;AACA;AACA,SAAS,sDAAsD;AAC/D,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA,yDAAyD,WAAW;AACpE,GAAG;;AAEH;AACA;;AAEA;AACA,mBAAmB,6CAA6C;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;AAC/C;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,8DAA8D;AAC9D,4BAA4B;AAC5B;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;AC7QD,UAAU,mBAAO,CAAC,mDAAS;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,wFAAwF;AACxF;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA,mDAAmD;AACnD,uCAAuC,2BAA2B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;;;;;;;;;;;;AClHD,YAAY,mBAAO,CAAC,mDAAS;AAC7B,UAAU,mBAAO,CAAC,mDAAS;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iCAAiC,eAAe;AAChD;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,EAAE;AACpC;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS,yEAAyE;AAClF;AACA,GAAG;AACH;;AAEA;AACA;AACA;;;;;;;;;;;;ACxFA,WAAW,mBAAO,CAAC,mDAAS;AAC5B,kBAAkB,mBAAO,CAAC,mEAAiB;AAC3C,iBAAiB,mBAAO,CAAC,iEAAgB;AACzC,yBAAyB,mBAAO,CAAC,iEAAW;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mDAAmD;AACnD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA,qDAAqD;AACrD;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACxEA,UAAU,mBAAO,CAAC,mDAAS;AAC3B,WAAW,mBAAO,CAAC,mDAAS;AAC5B,2BAA2B,mBAAO,CAAC,mGAAiC;AACpE,YAAY,mBAAO,CAAC,iEAAgB;AACpC,yBAAyB,mBAAO,CAAC,iEAAW;;AAE5C;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,kBAAkB;AAC9C;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,OAAO,iBAAiB;AACxB,OAAO,OAAO,oBAAoB,EAAE;AACpC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC7GA,WAAW,mBAAO,CAAC,mDAAS;AAC5B,yBAAyB,mBAAO,CAAC,iEAAW;;AAE5C;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,iCAAiC,4BAA4B;AAC7D;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,6BAA6B;AAClD;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACnJA,WAAW,mBAAO,CAAC,mDAAS;AAC5B,WAAW,mBAAO,CAAC,2DAAQ;AAC3B,WAAW,mBAAO,CAAC,2DAAQ;AAC3B,kBAAkB,mBAAO,CAAC,mEAAiB;AAC3C,iBAAiB,mBAAO,CAAC,iEAAgB;;AAEzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK,OAAO;AACZ;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,oBAAoB,wCAAwC;AAC5D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClGA,UAAU,mBAAO,CAAC,mDAAS;AAC3B,WAAW,mBAAO,CAAC,mDAAS;AAC5B,WAAW,mBAAO,CAAC,2DAAQ;;AAE3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK,OAAO;AACZ;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC3GA,UAAU,mBAAO,CAAC,mDAAS;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACjFA,WAAW,mBAAO,CAAC,mDAAS;AAC5B,YAAY,mBAAO,CAAC,oBAAO;AAC3B;;AAEA,gCAAgC;;AAEhC;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA,kDAAkD,UAAU;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;AC5HA,WAAW,mBAAO,CAAC,mDAAS;;AAE5B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACnFA,UAAU,mBAAO,CAAC,mDAAS;;AAE3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,mBAAmB;AAC7E;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA,0CAA0C;AAC1C,sCAAsC;AACtC,wCAAwC;AACxC,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,cAAc;AACd;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,CAAC;;;;;;;;;;;;ACxND;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNA,WAAW,mBAAO,CAAC,kDAAQ;AAC3B,mBAAmB,mBAAO,CAAC,qFAA2B;;AAEtD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA4B,QAAQ,YAAY,OAAO;AACvD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACvEA,UAAU,mBAAO,CAAC,kDAAQ;AAC1B,2BAA2B,mBAAO,CAAC,oEAAiB;AACpD;AACA;AACA,eAAe,mBAAO,CAAC,qDAAU;;AAEjC;AACA;AACA;AACA,uBAAuB;;AAEvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,4CAA4C,KAAK;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,wBAAwB;AAChC;AACA;AACA,eAAe,6BAA6B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,qCAAqC,MAAM;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,qCAAqC,MAAM;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,sBAAsB;AAC5B;AACA,MAAM,wBAAwB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C,6CAA6C;AAC7C;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,6BAA6B;AAC9D,2CAA2C,wBAAwB,EAAE;AACrE;AACA,iCAAiC,6BAA6B;AAC9D,oDAAoD,MAAM,EAAE;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,6BAA6B;AAClE;AACA,qCAAqC,MAAM,mBAAmB,MAAM;AACpE;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL,0EAA0E;AAC1E;AACA;AACA;AACA,OAAO;AACP,wCAAwC;AACxC;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,YAAY,EAAE;AACjD,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,uCAAuC,YAAY,EAAE;AACrD;AACA,OAAO;AACP;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,6DAA6D,aAAa;AAC1E,WAAW;AACX;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,aAAa,aAAa;AAC/D,kCAAkC;AAClC;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,aAAa;AACb;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;;;ACryBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAU,mBAAO,CAAC,kDAAQ;AAC1B;AACA,eAAe,mBAAO,CAAC,qDAAU;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA,CAAC;;;;;;;;;;;;AC3MD,UAAU,mBAAO,CAAC,kDAAQ;AAC1B;AACA,eAAe,mBAAO,CAAC,qDAAU;;AAEjC;AACA;AACA,kDAAkD,YAAY;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,qBAAqB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,YAAY,gBAAgB;;AAEjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,qBAAqB,wBAAwB;AAC7C;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA,CAAC;;;;;;;;;;;;ACxMD,UAAU,mBAAO,CAAC,mDAAS;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,YAAY;AAC9D;AACA;AACA;AACA;AACA;AACA,OAAO,+BAA+B;AACtC,6BAA6B,wCAAwC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,KAAK;AAC3E,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc,OAAO,YAAY;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,QAAQ;AACR;AACA;AACA;AACA,kBAAkB;AAClB,QAAQ;AACR;AACA;AACA,kBAAkB,2CAA2C;AAC7D,iBAAiB,6BAA6B,GAAG,6BAA6B;AAC9E,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,8CAA8C,eAAe;AAC7D;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,+CAA+C,oBAAoB;;AAEnE;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,mBAAmB,EAAE;AAC1D,qCAAqC,kBAAkB,EAAE;AACzD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,2CAA2C;AAC5E;AACA,sCAAsC,MAAM,iBAAiB,MAAM;AACnE;;AAEA;AACA;AACA;AACA;AACA,kEAAkE,YAAY;AAC9E,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,eAAe;AAChD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK,YAAY;;AAEjB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA,KAAK;AACL;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA,kBAAkB;AAClB;;AAEA;AACA;;AAEA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA,KAAK,OAAO;AACZ;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,0BAA0B,mBAAmB,oCAAoC;AACjF;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA,WAAW,UAAU,mBAAmB;AACxC;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACrtBA,UAAU,mBAAO,CAAC,kDAAQ;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,qBAAqB,YAAY;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8BAA8B;AAC9B;AACA,eAAe;AACf,OAAO,OAAO;AACd;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,MAAM,cAAc,MAAM;AACxD,8BAA8B,MAAM;AACpC,QAAQ;AACR,8BAA8B;AAC9B,8BAA8B;AAC9B;AACA;AACA,yCAAyC,MAAM;AAC/C,yCAAyC,MAAM;AAC/C;AACA;AACA,+BAA+B;AAC/B,+BAA+B;AAC/B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA,8BAA8B,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,eAAe;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,MAAM,iBAAiB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,iBAAiB;AACnD;AACA;AACA;AACA,kDAAkD,MAAM;AACxD,gDAAgD,MAAM;AACtD,8CAA8C,MAAM;AACpD,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,IAAI,GAAG;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;AC1OA,UAAU,mBAAO,CAAC,kDAAQ;AAC1B,UAAU,mBAAO,CAAC,4DAAa;AAC/B,mBAAmB,mBAAO,CAAC,oEAAiB;;AAE5C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA,yBAAyB,uBAAuB,EAAE;AAClD;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,+BAA+B;AACpE,OAAO;AACP;AACA,qCAAqC,+BAA+B;AACpE,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,6BAA6B;AAC7B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,6BAA6B;AAC7B,uBAAuB;AACvB,0BAA0B;AAC1B,yBAAyB;AACzB,eAAe;AACf,sBAAsB;AACtB;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,SAAS;AAC9B,qBAAqB,QAAQ;AAC7B,qBAAqB,QAAQ;AAC7B;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iDAAiD;;AAEjD;AACA;;AAEA;AACA;AACA,KAAK,OAAO;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;AClzBA,UAAU,mBAAO,CAAC,mDAAS;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;AC3BD,UAAU,mBAAO,CAAC,mDAAS;;AAE3B;AACA,mBAAO,CAAC,6EAAsB;;AAE9B;;AAEA;AACA;AACA;;AAEA,CAAC;;;;;;;;;;;;ACXD,UAAU,mBAAO,CAAC,mDAAS;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,wBAAwB;AAChE;AACA,0CAA0C;AAC1C,gCAAgC;AAChC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,wBAAwB;AAChE;AACA;AACA;AACA,qCAAqC,YAAY;AACjD;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA,4CAA4C,wBAAwB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA,SAAS,sCAAsC;AAC/C;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;;;;;;;;;;;ACvHD,UAAU,mBAAO,CAAC,mDAAS;;AAE3B;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,CAAC;;;;;;;;;;;;ACdD,UAAU,mBAAO,CAAC,mDAAS;AAC3B,mBAAO,CAAC,2FAA6B;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;ACzDD,UAAU,mBAAO,CAAC,mDAAS;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,CAAC;;;;;;;;;;;;AC7DD,UAAU,mBAAO,CAAC,mDAAS;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA,mCAAmC,wBAAwB;AAC3D;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;;;;;;;;;;;ACjHD,UAAU,mBAAO,CAAC,mDAAS;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,wBAAwB;AAC1D;AACA,0CAA0C;AAC1C,gCAAgC;AAChC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,wBAAwB;AAC1D;AACA;AACA;AACA,qCAAqC,YAAY;AACjD;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA,sCAAsC,wBAAwB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA;AACA;AACA,iBAAiB,sCAAsC;AACvD;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA,oDAAoD;AACpD;AACA;AACA;;AAEA,CAAC;;;;;;;;;;;;ACnGD,UAAU,mBAAO,CAAC,mDAAS;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACXD,UAAU,mBAAO,CAAC,mDAAS;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;;;;;;;;;;;ACvBD,mBAAO,CAAC,yEAAoB;;;;;;;;;;;;ACA5B,UAAU,mBAAO,CAAC,mDAAS;AAC3B,mBAAO,CAAC,+DAAe;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,EAAE;;;;;;;;;;;;AC5DF,UAAU,mBAAO,CAAC,mDAAS;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;AC/BD,UAAU,mBAAO,CAAC,mDAAS;AAC3B,oBAAoB,mBAAO,CAAC,uFAA2B;;AAEvD;AACA,mBAAO,CAAC,6EAAsB;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS,sCAAsC;AAC/C;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,oCAAoC;AAC7C;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,oCAAoC;AAC7C;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,WAAW,sCAAsC;AACjD;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA,4CAA4C;AAC5C;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+CAA+C;AAC/C;AACA;;AAEA;AACA;AACA,uEAAuE;AACvE,wBAAwB;AACxB;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA,iCAAiC;AACjC;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL,kBAAkB;AAClB;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,KAAK;AACxD,wCAAwC,EAAE;AAC1C;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,8CAA8C,2BAA2B;AACzE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA,wBAAwB;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,QAAQ;AACR;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA,sCAAsC;AACtC;AACA;AACA,uCAAuC;AACvC;;AAEA;AACA;AACA,SAAS,4GAA4G;AACrH;;AAEA,0BAA0B;AAC1B;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,gDAAgD,SAAS;AACzD;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;;AAEA,qEAAqE,EAAE;AACvE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,sEAAsE;AACtE;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA,GAAG;;AAEH;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA,UAAU;AACV;AACA,uBAAuB;AACvB,wBAAwB;AACxB;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,GAAG,8BAA8B;;AAE3E;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;AClkCD,UAAU,mBAAO,CAAC,mDAAS;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,oCAAoC,EAAE;AACtC;AACA;AACA,SAAS,qGAAqG;AAC9G;AACA;AACA,CAAC;;;;;;;;;;;;ACvED,UAAU,mBAAO,CAAC,mDAAS;;AAE3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;AClID,UAAU,mBAAO,CAAC,mDAAS;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,yBAAyB;AAClD,wDAAwD,kBAAkB;AAC1E,UAAU,gBAAgB,GAAG,WAAW,MAAM,0BAA0B;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,CAAC;;;;;;;;;;;;AC9CD,UAAU,mBAAO,CAAC,mDAAS;;AAE3B;;AAEA;AACA;AACA;AACA,8CAA8C,QAAQ;AACtD;AACA;;;;;;;;;;;;ACTA,gBAAgB,mBAAO,CAAC,yEAAc;AACtC;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACLA,UAAU,mBAAO,CAAC,mDAAS;AAC3B,SAAS,mBAAO,CAAC,cAAI;AACrB,WAAW,mBAAO,CAAC,kBAAM;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,qBAAqB;AACnF;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACzGA,UAAU,mBAAO,CAAC,mDAAS;AAC3B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG,2CAA2C;AAC9C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;;;;;;;;;;;ACtHA,UAAU,mBAAO,CAAC,mDAAS;;AAE3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAO,CAAC,sDAAM;AACd,mBAAO,CAAC,sDAAM;AACd,mBAAO,CAAC,gEAAW;AACnB,mBAAO,CAAC,sDAAM;AACd,mBAAO,CAAC,sDAAM;AACd,mBAAO,CAAC,gEAAW;;;;;;;;;;;;ACtCnB,UAAU,mBAAO,CAAC,mDAAS;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,GAAG;;AAEH;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP,sCAAsC,iCAAiC,EAAE;;AAEzE;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;;AAET;AACA;;AAEA;;AAEA;;AAEA,GAAG;;AAEH;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;;;;;;;;;;;AC9KA,UAAU,mBAAO,CAAC,mDAAS;AAC3B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,8BAA8B;AAC9B;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;AAED;AACA;AACA;AACA;;;;;;;;;;;;AC/CA,UAAU,mBAAO,CAAC,mDAAS;AAC3B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,KAAK;AACL,iCAAiC;AACjC,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;AAED;AACA;AACA;AACA;;;;;;;;;;;;AC5EA,UAAU,mBAAO,CAAC,mDAAS;AAC3B;;AAEA,mBAAO,CAAC,sDAAM;;AAEd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;;;;;;;;;;;ACxBA,UAAU,mBAAO,CAAC,mDAAS;AAC3B,oBAAoB,mBAAO,CAAC,8EAAkB;AAC9C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA,mEAAmE,EAAE;;AAErE;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,8BAA8B;AAC9B,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA,CAAC;;AAED;AACA;AACA;AACA;;;;;;;;;;;;ACtNA,UAAU,mBAAO,CAAC,mDAAS;;AAE3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACnGA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B;AAC5B,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA,qBAAqB,oBAAoB;AACzC,GAAG;AACH,mBAAmB;AACnB;;AAEA;AACA,uBAAuB;AACvB;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;AC5CA;AACA;;AAEA;AACA;AACA;AACA;AACA,kDAAkD,KAAK,KAAK;AAC5D;AACA;AACA,sBAAsB,iBAAiB;AACvC;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,0CAA0C,mBAAO,CAAC,kDAAQ;AAC1D;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,yBAAyB,EAAE;AACzE;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;AACA,WAAW,mBAAO,CAAC,cAAI;AACvB,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,oBAAoB;AACrC;AACA;;AAEA;;AAEA,iBAAiB,oBAAoB;AACrC;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP,eAAe,mBAAO,CAAC,cAAI;AAC3B,OAAO;AACP;AACA,WAAW,iBAAiB;AAC5B;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,mCAAmC,QAAQ;AAC3C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,GAAG;;AAEH;AACA,uBAAuB;AACvB,8BAA8B,oBAAoB,EAAE;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,mBAAO,CAAC,kDAAQ;AACtC,yCAAyC;AACzC;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,+BAA+B,4BAA4B;AAC3D,8CAA8C,EAAE;AAChD,KAAK;;AAEL;AACA;AACA;AACA;AACA,+BAA+B,4BAA4B;AAC3D;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,+BAA+B,4BAA4B;AAC3D;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,sCAAsC;AACtC;AACA,OAAO,iCAAiC;AACxC;AACA,OAAO,2BAA2B,EAAE,KAAK;AACzC;AACA,OAAO,2BAA2B,EAAE,MAAM;AAC1C;AACA,OAAO;AACP;AACA;AACA,WAAW,6BAA6B;AACxC;AACA;;AAEA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,gCAAgC,oBAAoB;AACpD;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,oBAAoB,mBAAmB;AACvC,gCAAgC,oBAAoB;AACpD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yCAAyC,oBAAoB,EAAE;AAC/D,wCAAwC,eAAe,EAAE;AACzD,mCAAmC,qCAAqC,EAAE;AAC1E,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA,GAAG;;AAEH;;AAEA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,kCAAkC;AAC5E,6CAA6C,iBAAiB;AAC9D;;AAEA;AACA;;AAEA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+DAA+D;AAC/D,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAO,CAAC,cAAI;AAC3B;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,2BAA2B;AAChD;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAO,CAAC,wEAAuB;AAClD;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,iDAAiD,0BAA0B,EAAE;AAC7E;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,aAAa,mBAAO,CAAC,kBAAM;AAC3B;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;AC98BA,WAAW,mBAAO,CAAC,mDAAS;AAC5B,cAAc,mBAAO,CAAC,8DAAY;AAClC,cAAc,mBAAO,CAAC,8DAAY;;AAElC,uBAAuB;;AAEvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACrGA;AACA;AACA;AACA;AACA,qCAAqC,wBAAwB,sBAAsB,sBAAsB,wBAAwB;AACjI;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA,qCAAqC,sBAAsB,sBAAsB;AACjF;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACZA,UAAU,mBAAO,CAAC,mDAAS;AAC3B;AACA;;AAEA,aAAa,mBAAO,CAAC,mDAAQ;;AAE7B;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0BAA0B;;AAE1B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA,GAAG;AACH,6BAA6B,wCAAwC;AACrE,GAAG,OAAO;AACV,sBAAsB;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA,8BAA8B,sBAAsB;AACpD;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,kCAAkC;AAClC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA,2BAA2B;AAC3B,oCAAoC,WAAW;AAC/C,KAAK,OAAO;AACZ,uCAAuC;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;AClKA,sBAAsB,mBAAO,CAAC,8EAAoB;;AAElD;AACA;AACA;AACA;AACA;AACA,8BAA8B,eAAe;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,2BAA2B;AACxF;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF,qBAAqB,EAAE;AACzG;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC5CA,oBAAoB,mBAAO,CAAC,0EAAkB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnBa;AACb,8CAA8C,cAAc;AAC5D,YAAY,mBAAO,CAAC,8EAAa;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,sBAAsB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,oBAAoB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA,SAAS,EAAE,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,sC;;;;;;;;;;;;ACpEa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,4B;;;;;;;;;;;AC1GA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,4CAA4C;AAC5C,eAAe;AACf,+BAA+B;AAC/B;AACA,mDAAmD;AACnD;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,+BAA+B;AAC/B;AACA,4CAA4C;AAC5C,eAAe;AACf;AACA;AACA,+BAA+B;AAC/B;AACA,4CAA4C;AAC5C,eAAe;AACf;AACA;AACA,+BAA+B;AAC/B;AACA,4CAA4C;AAC5C,eAAe;AACf;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,mCAAmC,yCAAyC;AAC5E,mBAAmB;AACnB,mCAAmC,2CAA2C;AAC9E;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,mCAAmC,wCAAwC;AAC3E,mBAAmB;AACnB,mCAAmC,yCAAyC;AAC5E;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,WAAW;AACX;AACA,sBAAsB;AACtB,WAAW;AACX,sBAAsB;AACtB;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,eAAe;AACf,wBAAwB;AACxB;AACA,WAAW;AACX;AACA;AACA,0BAA0B;AAC1B,eAAe;AACf,0BAA0B;AAC1B;AACA,WAAW;AACX;AACA;AACA,0BAA0B;AAC1B,eAAe;AACf,0BAA0B;AAC1B;AACA,WAAW;AACX;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,iCAAiC;AACjC;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,uBAAuB,mDAAmD;AAC1E;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,oBAAoB;AACpB;AACA,wBAAwB;AACxB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,yBAAyB;AACzB,aAAa;AACb;AACA;AACA,oBAAoB;AACpB;AACA,yCAAyC,iBAAiB;AAC1D;AACA;AACA;AACA,oBAAoB,+BAA+B,iBAAiB;AACpE;AACA,oBAAoB;AACpB;AACA;AACA;AACA,6CAA6C,iBAAiB;AAC9D,aAAa;AACb;AACA;AACA;AACA;AACA,wBAAwB;AACxB,oCAAoC,iBAAiB;AACrD,aAAa;AACb;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,aAAa;AACb;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,aAAa;AACb;AACA;AACA,oBAAoB;AACpB;AACA,4BAA4B;AAC5B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,gBAAgB;AAChB,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,uBAAuB;AACvB,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,OAAO;;AAEP;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,yBAAyB,0BAA0B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,UAAU;AAC3C;AACA;AACA,eAAe;AACf,iCAAiC,UAAU;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iBAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,mBAAmB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iBAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA,6BAA6B,qBAAqB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,qBAAqB;AAC9C;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,0BAA0B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,0BAA0B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,0BAA0B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,wCAAwC,qBAAqB,EAAE;AAC7E,cAAc,wCAAwC,2BAA2B,EAAE;AACnF,eAAe,yCAAyC,qBAAqB,EAAE;AAC/E;AACA;AACA,0BAA0B,iCAAiC;AAC3D,yBAAyB,kBAAkB,EAAE;AAC7C;AACA;AACA,0BAA0B,qBAAqB,GAAG,qBAAqB,EAAE;AACzE,gBAAgB,0CAA0C,qBAAqB,EAAE;AACjF;AACA;AACA,0BAA0B,8CAA8C,EAAE;AAC1E;AACA;AACA,0BAA0B,qBAAqB,GAAG,oBAAoB,EAAE;AACxE;AACA;AACA,0BAA0B,8CAA8C,EAAE;AAC1E;AACA;AACA,0BAA0B,qCAAqC;AAC/D,SAAS;AACT;AACA;AACA,wBAAwB,oBAAoB,GAAG,qBAAqB;AACpE,SAAS;AACT,cAAc,wCAAwC,2BAA2B,EAAE;AACnF;AACA;AACA,0BAA0B,qBAAqB,GAAG,qBAAqB,EAAE;AACzE;AACA;AACA,0BAA0B,8CAA8C,EAAE;AAC1E;AACA;AACA,wBAAwB,oBAAoB,GAAG,qBAAqB;AACpE,SAAS;AACT,eAAe,yCAAyC,kBAAkB,EAAE;AAC5E,eAAe,yCAAyC,qBAAqB,EAAE;AAC/E,iBAAiB,2CAA2C,qBAAqB,EAAE;AACnF,eAAe,yCAAyC,8CAA8C,EAAE;AACxG;AACA;AACA,wBAAwB,oBAAoB,GAAG,qBAAqB;AACpE,SAAS;AACT;AACA;AACA;AACA,iBAAiB,qBAAqB;AACtC,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA,0BAA0B,iCAAiC,EAAE;AAC7D,qBAAqB,4CAA4C,kBAAkB,EAAE;AACrF,sBAAsB,6CAA6C,kBAAkB,EAAE;AACvF,sBAAsB,6CAA6C,kBAAkB,EAAE;AACvF;AACA;AACA,0BAA0B,kCAAkC;AAC5D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA,2BAA2B,wBAAwB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,+BAA+B,qBAAqB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,qBAAqB,yBAAyB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,yBAAyB,qBAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,yBAAyB,qBAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,qBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,uBAAuB,yBAAyB;AAChD;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC,EAAE,MAA8B,GAAG,SAAkB;;;;;;;;;;;;ACloDtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,CAAC;;;;;;;;;;;;ACXD;AACA;AACA;AACA;AACA,gBAAgB;;AAEhB,YAAY,mBAAO,CAAC,0DAAY;;AAEhC,aAAa,mBAAO,CAAC,yDAAY;;AAEjC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,iBAAiB;AACjB;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,eAAe;AACf;AACA,eAAe;AACf;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;;;;;;AC9HD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;;;;;;;;;;;ACvED;AACA;AACA;AACA;AACA,4BAA4B,mBAAmB,gCAAgC,GAAG,EAAE;AACpF,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB,QAAQ,mBAAO,CAAC,gBAAK;;AAErB,WAAW,mBAAO,CAAC,sBAAQ;;AAE3B,QAAQ,mBAAO,CAAC,+CAAO;;AAEvB,eAAe,mBAAO,CAAC,6DAAc;;AAErC,iBAAiB,mBAAO,CAAC,sBAAQ;;AAEjC,aAAa,mBAAO,CAAC,yDAAY;;AAEjC;AACA;AACA;;AAEA;AACA;AACA,wCAAwC,SAAS;AACjD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,sDAAsD,GAAG;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,SAAS;AACtD;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,GAAG;AACvE;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;;;;;;;;;;;ACpWD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;;;;;;;;;;;ACjCD;AACA;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB,aAAa,mBAAO,CAAC,yDAAY;;AAEjC,YAAY,mBAAO,CAAC,uDAAW;;AAE/B,WAAW,mBAAO,CAAC,qDAAU;;AAE7B,eAAe,mBAAO,CAAC,6DAAc;;AAErC;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH;;AAEA;;AAEA;;AAEA,CAAC;;;;;;;;;;;;ACpCD;AACA;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;A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AAQ,mBAAO,CAAC,2DAAW;;AAE3B,eAAe,mBAAO,CAAC,iEAAc;;AAErC,aAAa,mBAAO,CAAC,6DAAY;;AAEjC,eAAe,mBAAO,CAAC,iEAAc;;AAErC,WAAW,mBAAO,CAAC,yDAAU;;AAE7B,YAAY,mBAAO,CAAC,2DAAW;;AAE/B,6BAA6B,mBAAO,CAAC,6FAA4B;;AAEjE,mBAAmB,mBAAO,CAAC,yEAAkB;;AAE7C,eAAe,mBAAO,CAAC,iEAAc;;AAErC,kBAAkB,mBAAO,CAAC,uEAAiB;;AAE3C,iBAAiB,mBAAO,CAAC,qEAAgB;;AAEzC,kBAAkB,mBAAO,CAAC,uEAAiB;;AAE3C,mBAAmB,mBAAO,CAAC,yEAAkB;;AAE7C,iBAAiB,mBAAO,CAAC,qEAAgB;;AAEzC,mBAAmB,mBAAO,CAAC,yEAAkB;;AAE7C,oBAAoB,mBAAO,CAAC,2EAAmB;;AAE/C;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,SAAS;AACjD;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;;;;;;ACjZD;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB,QAAQ,mBAAO,CAAC,2DAAW;;AAE3B,YAAY,mBAAO,CAAC,2DAAW;;AAE/B,iBAAiB,mBAAO,CAAC,qEAAgB;;AAEzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,SAAS;AAC/C;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;;;;;;AC9GD;AACA;AACA;AACA,gBAAgB;;AAEhB,QAAQ,mBAAO,CAAC,2DAAW;;AAE3B;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,mBAAO,CAAC,iEAAc;AAC3C,mBAAmB,mBAAO,CAAC,6DAAY;AACvC,qBAAqB,mBAAO,CAAC,iEAAc;AAC3C,yBAAyB,mBAAO,CAAC,yEAAkB;AACnD,qBAAqB,mBAAO,CAAC,iEAAc;AAC3C,iBAAiB,mBAAO,CAAC,yDAAU;AACnC,kBAAkB,mBAAO,CAAC,2DAAW;AACrC,mCAAmC,mBAAO,CAAC,6FAA4B;AACvE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,SAAS;AAC/C;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,0CAA0C,UAAU;AACpD;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,SAAS;AACjD;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wCAAwC,SAAS;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,UAAU;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;;;;;;AC/aD;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB,YAAY,mBAAO,CAAC,2DAAW;;AAE/B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;;;;;;AClCD;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB,YAAY,mBAAO,CAAC,2DAAW;;AAE/B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;;;;;;AC/BD;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB,mBAAmB,mBAAO,CAAC,yEAAkB;;AAE7C,eAAe,mBAAO,CAAC,iEAAc;;AAErC,aAAa,mBAAO,CAAC,6DAAY;;AAEjC,eAAe,mBAAO,CAAC,iEAAc;;AAErC,eAAe,mBAAO,CAAC,iEAAc;;AAErC,WAAW,mBAAO,CAAC,yDAAU;;AAE7B,YAAY,mBAAO,CAAC,2DAAW;;AAE/B,6BAA6B,mBAAO,CAAC,6FAA4B;;AAEjE,kBAAkB,mBAAO,CAAC,uEAAiB;;AAE3C,kBAAkB,mBAAO,CAAC,uEAAiB;;AAE3C,iBAAiB,mBAAO,CAAC,qEAAgB;;AAEzC,mBAAmB,mBAAO,CAAC,yEAAkB;;AAE7C,kBAAkB,mBAAO,CAAC,uEAAiB;;AAE3C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,UAAU;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,SAAS;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,sCAAsC,SAAS;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;;;;;;ACtRD;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB,mBAAmB,mBAAO,CAAC,yEAAkB;;AAE7C,eAAe,mBAAO,CAAC,iEAAc;;AAErC,aAAa,mBAAO,CAAC,6DAAY;;AAEjC,eAAe,mBAAO,CAAC,iEAAc;;AAErC,eAAe,mBAAO,CAAC,iEAAc;;AAErC,WAAW,mBAAO,CAAC,yDAAU;;AAE7B,YAAY,mBAAO,CAAC,2DAAW;;AAE/B,6BAA6B,mBAAO,CAAC,6FAA4B;;AAEjE,kBAAkB,mBAAO,CAAC,uEAAiB;;AAE3C,kBAAkB,mBAAO,CAAC,uEAAiB;;AAE3C,iBAAiB,mBAAO,CAAC,qEAAgB;;AAEzC,mBAAmB,mBAAO,CAAC,yEAAkB;;AAE7C,kBAAkB,mBAAO,CAAC,uEAAiB;;AAE3C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,SAAS;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,wCAAwC,SAAS;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,UAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;;;;;;AC7UD;AACA;AACA;AACA,4BAA4B,mBAAmB,gCAAgC,GAAG,EAAE;AACpF,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kDAAkD;AAClD,yCAAyC,sBAAsB,sBAAsB,wBAAwB;AAC7G;;AAEA;AACA;AACA,kDAAkD;AAClD,yCAAyC,sBAAsB,wBAAwB,wBAAwB,wBAAwB,wBAAwB;AAC/J;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;;;;;;AClKD;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB,YAAY,mBAAO,CAAC,2DAAW;;AAE/B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;;;;;;AC/BD;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;;;;;;ACzFD;AACA;AACA;;AAEA,QAAQ,mBAAO,CAAC,2DAAW;;AAE3B,gBAAgB,mBAAO,CAAC,mEAAe;;AAEvC,kBAAkB,mBAAO,CAAC,uEAAiB;;AAE3C,oBAAoB,mBAAO,CAAC,2EAAmB;;AAE/C,oBAAoB,mBAAO,CAAC,2EAAmB;;AAE/C;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,CAAC;;;;;;;;;;;;;;;;;;ACpDD;AAEe;AACbkB,MAAI,EAAE,CACJ1C,6CAAI,CAAC2C,KADD,EAEJ3C,6CAAI,CAAC4C,QAFD;AADO,CAAf,E;;;;;;;;;;;;;;;;;ACFA;AACe;AACbD,OAAK,EAAE;AACLE,QAAI,EAAE,cADD;AAELC,YAAQ,EAAE,EAFL;AAGL/B,WAAO,EAAE;AAAEC,kBAAY,EAAE;AAAhB,KAHJ;AAIL+B,SAAK,EAAG;;;UAGF5D,+CAAK;;;AAPN,GADM;AAYbyD,UAAQ,EAAE;AACRC,QAAI,EAAE,gBADE;AAERC,YAAQ,EAAE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","file":"handler.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./handler.js\");\n","/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeMax = Math.max,\n    nativeNow = Date.now;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\n/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\n/**\n * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  if (key === 'constructor' && typeof object[key] === 'function') {\n    return;\n  }\n\n  if (key == '__proto__') {\n    return;\n  }\n\n  return object[key];\n}\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\nvar merge = createAssigner(function(object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\n\n/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = merge;\n","'use strict';\n\nconst { Validator } = require('./Validator');\nconst { ValidationErrorType } = require('../model/ValidationError');\nconst { isObject, once, cloneDeep: lodashCloneDeep, omit } = require('../utils/objectUtils');\n\nconst getAjv = once(() => {\n  try {\n    return require('ajv');\n  } catch (err) {\n    throw new Error('Optional ajv dependency not installed. Please run `npm install ajv --save`');\n  }\n});\n\nclass AjvValidator extends Validator {\n  static init(self, conf) {\n    super.init(self, conf);\n\n    self.ajvOptions = Object.assign({ errorDataPath: 'property' }, conf.options, {\n      allErrors: true\n    });\n\n    // Create a normal Ajv instance.\n    self.ajv = new getAjv()(\n      Object.assign(\n        {\n          useDefaults: true\n        },\n        self.ajvOptions\n      )\n    );\n\n    // Create an instance that doesn't set default values. We need this one\n    // to validate `patch` objects (objects that have a subset of properties).\n    self.ajvNoDefaults = new getAjv()(\n      Object.assign({}, self.ajvOptions, {\n        useDefaults: false\n      })\n    );\n\n    // A cache for the compiled validator functions.\n    self.cache = new Map();\n\n    conf.onCreateAjv(self.ajv);\n    conf.onCreateAjv(self.ajvNoDefaults);\n  }\n\n  beforeValidate({ json, model, options, ctx }) {\n    ctx.jsonSchema = model.constructor.getJsonSchema();\n\n    // Objection model's have a `$beforeValidate` hook that is allowed to modify the schema.\n    // We need to clone the schema in case the function modifies it. We only do this in the\n    // rare case that the given model has implemented the hook.\n    if (model.$beforeValidate !== model.$objectionModelClass.prototype.$beforeValidate) {\n      ctx.jsonSchema = cloneDeep(ctx.jsonSchema);\n      const ret = model.$beforeValidate(ctx.jsonSchema, json, options);\n\n      if (ret !== undefined) {\n        ctx.jsonSchema = ret;\n      }\n    }\n  }\n\n  validate({ json, model, options, ctx }) {\n    if (!ctx.jsonSchema) {\n      return json;\n    }\n\n    const modelClass = model.constructor;\n    const validator = this.getValidator(modelClass, ctx.jsonSchema, !!options.patch);\n\n    // We need to clone the input json if we are about to set default values.\n    if (!options.mutable && !options.patch && setsDefaultValues(ctx.jsonSchema)) {\n      json = cloneDeep(json);\n    }\n\n    validator.call(model, json);\n    const error = parseValidationError(validator.errors, modelClass, options);\n\n    if (error) {\n      throw error;\n    }\n\n    return json;\n  }\n\n  getValidator(modelClass, jsonSchema, isPatchObject) {\n    // Use the AJV custom serializer if provided.\n    const createCacheKey = this.ajvOptions.serialize || JSON.stringify;\n\n    // Optimization for the common case where jsonSchema is never modified.\n    // In that case we don't need to call the costly createCacheKey function.\n    const cacheKey =\n      jsonSchema === modelClass.getJsonSchema()\n        ? modelClass.uniqueTag()\n        : createCacheKey(jsonSchema);\n\n    let validators = this.cache.get(cacheKey);\n    let validator = null;\n\n    if (!validators) {\n      validators = {\n        // Validator created for the schema object without `required` properties\n        // using the AJV instance that doesn't set default values.\n        patchValidator: null,\n\n        // Validator created for the unmodified schema.\n        normalValidator: null\n      };\n\n      this.cache.set(cacheKey, validators);\n    }\n\n    if (isPatchObject) {\n      validator = validators.patchValidator;\n\n      if (!validator) {\n        validator = this.compilePatchValidator(jsonSchema);\n        validators.patchValidator = validator;\n      }\n    } else {\n      validator = validators.normalValidator;\n\n      if (!validator) {\n        validator = this.compileNormalValidator(jsonSchema);\n        validators.normalValidator = validator;\n      }\n    }\n\n    return validator;\n  }\n\n  compilePatchValidator(jsonSchema) {\n    jsonSchema = jsonSchemaWithoutRequired(jsonSchema);\n    // We need to use the ajv instance that doesn't set the default values.\n    return this.ajvNoDefaults.compile(jsonSchema);\n  }\n\n  compileNormalValidator(jsonSchema) {\n    return this.ajv.compile(jsonSchema);\n  }\n}\n\nfunction parseValidationError(errors, modelClass, options) {\n  if (!errors) {\n    return null;\n  }\n\n  let relationNames = modelClass.getRelationNames();\n  let errorHash = {};\n  let numErrors = 0;\n\n  for (const error of errors) {\n    const dataPath = `${options.dataPath || ''}${error.dataPath}`;\n\n    // If additionalProperties = false, relations can pop up as additionalProperty\n    // errors. Skip those.\n    if (\n      error.params &&\n      error.params.additionalProperty &&\n      relationNames.includes(error.params.additionalProperty)\n    ) {\n      continue;\n    }\n\n    // Unknown properties are reported in `['propertyName']` notation,\n    // so replace those with dot-notation, see:\n    // https://github.com/epoberezkin/ajv/issues/671\n    const key = dataPath.replace(/\\['([^' ]*)'\\]/g, '.$1').substring(1);\n\n    // More than one error can occur for the same key in Ajv, merge them in the array:\n    const array = errorHash[key] || (errorHash[key] = []);\n\n    // Use unshift instead of push so that the last error ends up at [0],\n    // preserving previous behavior where only the last error was stored.\n    array.unshift({\n      message: error.message,\n      keyword: error.keyword,\n      params: error.params\n    });\n\n    ++numErrors;\n  }\n\n  if (numErrors === 0) {\n    return null;\n  }\n\n  return modelClass.createValidationError({\n    type: ValidationErrorType.ModelValidation,\n    data: errorHash\n  });\n}\n\nfunction cloneDeep(obj) {\n  if (isObject(obj) && obj.$isObjectionModel) {\n    return obj.$clone();\n  } else {\n    return lodashCloneDeep(obj);\n  }\n}\n\nfunction setsDefaultValues(jsonSchema) {\n  return jsonSchema && jsonSchema.properties && hasDefaults(jsonSchema.properties);\n}\n\nfunction hasDefaults(obj) {\n  if (Array.isArray(obj)) {\n    return arrayHasDefaults(obj);\n  } else {\n    return objectHasDefaults(obj);\n  }\n}\n\nfunction arrayHasDefaults(arr) {\n  for (let i = 0, l = arr.length; i < l; ++i) {\n    const val = arr[i];\n\n    if (isObject(val) && hasDefaults(val)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction objectHasDefaults(obj) {\n  const keys = Object.keys(obj);\n\n  for (let i = 0, l = keys.length; i < l; ++i) {\n    const key = keys[i];\n\n    if (key === 'default') {\n      return true;\n    } else {\n      const val = obj[key];\n\n      if (isObject(val) && hasDefaults(val)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction jsonSchemaWithoutRequired(jsonSchema) {\n  const subSchemaProps = ['anyOf', 'oneOf', 'allOf', 'not', 'then', 'else'];\n\n  return Object.assign(\n    omit(jsonSchema, ['required', ...subSchemaProps]),\n    ...subSchemaProps.map(prop => subSchemaWithoutRequired(jsonSchema, prop))\n  );\n}\n\nfunction subSchemaWithoutRequired(jsonSchema, prop) {\n  if (jsonSchema[prop]) {\n    if (Array.isArray(jsonSchema[prop])) {\n      const schemaArray = jsonSchemaArrayWithoutRequired(jsonSchema[prop]);\n\n      if (schemaArray.length !== 0) {\n        return {\n          [prop]: schemaArray\n        };\n      } else {\n        return {};\n      }\n    } else {\n      return {\n        [prop]: jsonSchemaWithoutRequired(jsonSchema[prop])\n      };\n    }\n  } else {\n    return {};\n  }\n}\n\nfunction jsonSchemaArrayWithoutRequired(jsonSchemaArray) {\n  return jsonSchemaArray.map(jsonSchemaWithoutRequired).filter(isNotEmptyObject);\n}\n\nfunction isNotEmptyObject(obj) {\n  return Object.keys(obj).length !== 0;\n}\n\nmodule.exports = {\n  AjvValidator\n};\n","'use strict';\n\nconst { clone } = require('./modelClone');\nconst { bindKnex } = require('./modelBindKnex');\nconst { validate } = require('./modelValidate');\nconst { isMsSql } = require('../utils/knexUtils');\nconst { omit, pick } = require('./modelFilter');\nconst { visitModels } = require('./modelVisitor');\nconst { hasId, getSetId } = require('./modelId');\nconst { map: promiseMap } = require('../utils/promiseUtils');\nconst { toJson, toDatabaseJson } = require('./modelToJson');\nconst { values, propKey, hasProps } = require('./modelValues');\nconst { defineNonEnumerableProperty } = require('./modelUtils');\nconst { parseRelationsIntoModelInstances } = require('./modelParseRelations');\nconst { fetchTableMetadata, tableMetadata } = require('./modelTableMetadata');\nconst { asArray, isFunction, isString, asSingle } = require('../utils/objectUtils');\nconst { setJson, setFast, setRelated, appendRelated, setDatabaseJson } = require('./modelSet');\nconst {\n  getJsonAttributes,\n  parseJsonAttributes,\n  formatJsonAttributes\n} = require('./modelJsonAttributes');\nconst { columnNameToPropertyName, propertyNameToColumnName } = require('./modelColPropMap');\n\nconst { raw } = require('../queryBuilder/RawBuilder');\nconst { ref } = require('../queryBuilder/ReferenceBuilder');\n\nconst { AjvValidator } = require('./AjvValidator');\nconst { QueryBuilder } = require('../queryBuilder/QueryBuilder');\nconst { NotFoundError } = require('./NotFoundError');\nconst { ValidationError } = require('./ValidationError');\nconst { ModifierNotFoundError } = require('./ModifierNotFoundError');\nconst { RelationProperty } = require('../relations/RelationProperty');\n\nconst { HasOneRelation } = require('../relations/hasOne/HasOneRelation');\nconst { HasManyRelation } = require('../relations/hasMany/HasManyRelation');\nconst { ManyToManyRelation } = require('../relations/manyToMany/ManyToManyRelation');\nconst { BelongsToOneRelation } = require('../relations/belongsToOne/BelongsToOneRelation');\nconst { HasOneThroughRelation } = require('../relations/hasOneThrough/HasOneThroughRelation');\n\nconst { InstanceFindOperation } = require('../queryBuilder/operations/InstanceFindOperation');\nconst { InstanceInsertOperation } = require('../queryBuilder/operations/InstanceInsertOperation');\nconst { InstanceUpdateOperation } = require('../queryBuilder/operations/InstanceUpdateOperation');\nconst { InstanceDeleteOperation } = require('../queryBuilder/operations/InstanceDeleteOperation');\n\nclass Model {\n  $id(maybeId) {\n    return getSetId(this, maybeId);\n  }\n\n  $hasId() {\n    return hasId(this);\n  }\n\n  $hasProps(props) {\n    return hasProps(this, props);\n  }\n\n  $query(trx) {\n    const modelClass = this.constructor;\n\n    return modelClass\n      .query(trx)\n      .findOperationFactory(() => {\n        return new InstanceFindOperation('find', { instance: this });\n      })\n      .insertOperationFactory(() => {\n        return new InstanceInsertOperation('insert', { instance: this });\n      })\n      .updateOperationFactory(() => {\n        return new InstanceUpdateOperation('update', { instance: this });\n      })\n      .patchOperationFactory(() => {\n        return new InstanceUpdateOperation('patch', {\n          instance: this,\n          modelOptions: { patch: true }\n        });\n      })\n      .deleteOperationFactory(() => {\n        return new InstanceDeleteOperation('delete', { instance: this });\n      })\n      .relateOperationFactory(() => {\n        throw new Error('`relate` makes no sense in this context');\n      })\n      .unrelateOperationFactory(() => {\n        throw new Error('`unrelate` makes no sense in this context');\n      });\n  }\n\n  $relatedQuery(relationName, trx) {\n    const modelClass = this.constructor;\n    const relation = modelClass.getRelation(relationName);\n    const RelatedModelClass = relation.relatedModelClass;\n\n    return RelatedModelClass.query(trx)\n      .findOperationFactory(builder => {\n        const operation = relation.find(builder, [this]);\n        operation.assignResultToOwner = this.constructor.relatedFindQueryMutates;\n        return operation;\n      })\n      .insertOperationFactory(builder => {\n        const operation = relation.insert(builder, this);\n        operation.assignResultToOwner = this.constructor.relatedInsertQueryMutates;\n        return operation;\n      })\n      .updateOperationFactory(builder => {\n        return relation.update(builder, this);\n      })\n      .patchOperationFactory(builder => {\n        return relation.patch(builder, this);\n      })\n      .deleteOperationFactory(builder => {\n        return relation.delete(builder, this);\n      })\n      .relateOperationFactory(builder => {\n        return relation.relate(builder, this);\n      })\n      .unrelateOperationFactory(builder => {\n        return relation.unrelate(builder, this);\n      });\n  }\n\n  $loadRelated(relationExpression, modifiers, trx) {\n    return this.constructor.loadRelated(this, relationExpression, modifiers, trx);\n  }\n\n  $beforeValidate(jsonSchema, json, options) {\n    /* istanbul ignore next */\n    return jsonSchema;\n  }\n\n  $validate(json, options) {\n    return validate(this, json, options);\n  }\n\n  $afterValidate(json, options) {\n    // Do nothing by default.\n  }\n\n  $parseDatabaseJson(json) {\n    const columnNameMappers = this.constructor.getColumnNameMappers();\n\n    if (columnNameMappers) {\n      json = columnNameMappers.parse(json);\n    }\n\n    return parseJsonAttributes(json, this.constructor);\n  }\n\n  $formatDatabaseJson(json) {\n    const columnNameMappers = this.constructor.getColumnNameMappers();\n\n    json = formatJsonAttributes(json, this.constructor);\n\n    if (columnNameMappers) {\n      json = columnNameMappers.format(json);\n    }\n\n    return json;\n  }\n\n  $parseJson(json, options) {\n    return json;\n  }\n\n  $formatJson(json) {\n    return json;\n  }\n\n  $setJson(json, options) {\n    return setJson(this, json, options);\n  }\n\n  $setDatabaseJson(json) {\n    return setDatabaseJson(this, json);\n  }\n\n  $set(obj) {\n    return setFast(this, obj);\n  }\n\n  $setRelated(relation, models) {\n    return setRelated(this, relation, models);\n  }\n\n  $appendRelated(relation, models) {\n    return appendRelated(this, relation, models);\n  }\n\n  $toJson(opt) {\n    return toJson(this, opt);\n  }\n\n  toJSON(opt) {\n    return this.$toJson(opt);\n  }\n\n  $toDatabaseJson(builder) {\n    return toDatabaseJson(this, builder);\n  }\n\n  $beforeInsert(queryContext) {\n    // Do nothing by default.\n  }\n\n  $afterInsert(queryContext) {\n    // Do nothing by default.\n  }\n\n  $beforeUpdate(opt, queryContext) {\n    // Do nothing by default.\n  }\n\n  $afterUpdate(opt, queryContext) {\n    // Do nothing by default.\n  }\n\n  // TODO: Deprecate & remove in 3.0\n  $afterGet(queryContext) {\n    // Do nothing by default.\n  }\n\n  $afterFind(queryContext) {\n    // Do nothing by default.\n  }\n\n  $beforeDelete(queryContext) {\n    // Do nothing by default.\n  }\n\n  $afterDelete(queryContext) {\n    // Do nothing by default.\n  }\n\n  $omit(...args) {\n    return omit(this, args);\n  }\n\n  $pick(...args) {\n    return pick(this, args);\n  }\n\n  $values(props) {\n    return values(this, props);\n  }\n\n  $propKey(props) {\n    return propKey(this, props);\n  }\n\n  $idKey() {\n    return this.$propKey(this.constructor.getIdPropertyArray());\n  }\n\n  $clone(opt) {\n    return clone(this, !!(opt && opt.shallow), false);\n  }\n\n  $traverse(filterConstructor, callback) {\n    if (callback === undefined) {\n      callback = filterConstructor;\n      filterConstructor = null;\n    }\n\n    this.constructor.traverse(filterConstructor, this, callback);\n    return this;\n  }\n\n  $traverseAsync(filterConstructor, callback) {\n    if (callback === undefined) {\n      callback = filterConstructor;\n      filterConstructor = null;\n    }\n\n    return this.constructor.traverseAsync(filterConstructor, this, callback);\n  }\n\n  $omitFromJson(props) {\n    if (arguments.length === 0) {\n      return this.$$omitFromJson;\n    } else {\n      if (!this.hasOwnProperty('$$omitFromJson')) {\n        defineNonEnumerableProperty(this, '$$omitFromJson', props);\n      } else {\n        this.$$omitFromJson = this.$$omitFromJson.concat(props);\n      }\n    }\n  }\n\n  $omitFromDatabaseJson(props) {\n    if (arguments.length === 0) {\n      return this.$$omitFromDatabaseJson;\n    } else {\n      if (!this.hasOwnProperty('$$omitFromDatabaseJson')) {\n        defineNonEnumerableProperty(this, '$$omitFromDatabaseJson', props);\n      } else {\n        this.$$omitFromDatabaseJson = this.$$omitFromDatabaseJson.concat(props);\n      }\n    }\n  }\n\n  $knex() {\n    return this.constructor.knex();\n  }\n\n  $transaction() {\n    return this.constructor.transaction();\n  }\n\n  get $ref() {\n    return this.constructor.ref;\n  }\n\n  static get objectionModelClass() {\n    return Model;\n  }\n\n  static fromJson(json, options) {\n    const model = new this();\n    model.$setJson(json || {}, options);\n    return model;\n  }\n\n  static fromDatabaseJson(json) {\n    const model = new this();\n    model.$setDatabaseJson(json || {});\n    return model;\n  }\n\n  static onCreateQuery(builder) {\n    // Do nothing by default.\n  }\n\n  static beforeFind(args) {\n    // Do nothing by default.\n  }\n\n  static afterFind(args) {\n    // Do nothing by default.\n  }\n\n  static beforeInsert(args) {\n    // Do nothing by default.\n  }\n\n  static afterInsert(args) {\n    // Do nothing by default.\n  }\n\n  static beforeUpdate(args) {\n    // Do nothing by default.\n  }\n\n  static afterUpdate(args) {\n    // Do nothing by default.\n  }\n\n  static beforeDelete(args) {\n    // Do nothing by default.\n  }\n\n  static afterDelete(args) {\n    // Do nothing by default.\n  }\n\n  static omitImpl(obj, prop) {\n    delete obj[prop];\n  }\n\n  static joinTableAlias(relationPath) {\n    return `${relationPath}_join`;\n  }\n\n  static createValidator() {\n    return new AjvValidator({\n      onCreateAjv: ajv => {\n        /* Do Nothing by default */\n      },\n      options: {\n        allErrors: true,\n        validateSchema: false,\n        ownProperties: true,\n        v5: true\n      }\n    });\n  }\n\n  static modifierNotFound(builder, modifier) {\n    throw new this.ModifierNotFoundError(modifier);\n  }\n\n  static createNotFoundError(ctx, props) {\n    return new this.NotFoundError(props);\n  }\n\n  static createValidationError(props) {\n    return new this.ValidationError(props);\n  }\n\n  static getTableName() {\n    let tableName = this.tableName;\n\n    if (isFunction(tableName)) {\n      tableName = this.tableName();\n    }\n\n    if (!isString(tableName)) {\n      throw new Error(`Model ${this.name} must have a static property tableName`);\n    }\n\n    return tableName;\n  }\n\n  static getIdColumn() {\n    let idColumn = this.idColumn;\n\n    if (isFunction(idColumn)) {\n      idColumn = this.idColumn();\n    }\n\n    return idColumn;\n  }\n\n  static getValidator() {\n    return cachedGet(this, '$$validator', getValidator);\n  }\n\n  static getJsonSchema() {\n    return cachedGet(this, '$$jsonSchema', getJsonSchema);\n  }\n\n  static getJsonAttributes() {\n    return cachedGet(this, '$$jsonAttributes', getJsonAttributes);\n  }\n\n  static getColumnNameMappers() {\n    return cachedGet(this, '$$columnNameMappers', getColumnNameMappers);\n  }\n\n  static getConcurrency(knex) {\n    const DEFAULT_CONCURRENCY = 4;\n\n    if (this.concurrency === null) {\n      if (!knex) {\n        return DEFAULT_CONCURRENCY;\n      }\n\n      // The mssql driver is shit, and we cannot have concurrent queries.\n      if (isMsSql(knex)) {\n        return 1;\n      } else {\n        return DEFAULT_CONCURRENCY;\n      }\n    } else {\n      if (isFunction(this.concurrency)) {\n        return this.concurrency();\n      } else {\n        return this.concurrency;\n      }\n    }\n  }\n\n  static getModifiers() {\n    return this.modifiers || this.namedFilters || {};\n  }\n\n  static columnNameToPropertyName(columnName) {\n    let colToProp = cachedGet(this, '$$colToProp', () => new Map());\n    let propertyName = colToProp.get(columnName);\n\n    if (!propertyName) {\n      propertyName = columnNameToPropertyName(this, columnName);\n      colToProp.set(columnName, propertyName);\n    }\n\n    return propertyName;\n  }\n\n  static propertyNameToColumnName(propertyName) {\n    let propToCol = cachedGet(this, '$$propToCol', () => new Map());\n    let columnName = propToCol.get(propertyName);\n\n    if (!columnName) {\n      columnName = propertyNameToColumnName(this, propertyName);\n      propToCol.set(propertyName, columnName);\n    }\n\n    return columnName;\n  }\n\n  static getReadOnlyAttributes() {\n    return cachedGet(this, '$$readOnlyAttributes', getReadOnlyAttributes);\n  }\n\n  static getIdRelationProperty() {\n    return cachedGet(this, '$$idRelationProperty', getIdRelationProperty);\n  }\n\n  static getIdColumnArray() {\n    return this.getIdRelationProperty().cols;\n  }\n\n  static getIdPropertyArray() {\n    return this.getIdRelationProperty().props;\n  }\n\n  static getIdProperty() {\n    const idProps = this.getIdPropertyArray();\n\n    if (idProps.length === 1) {\n      return idProps[0];\n    } else {\n      return idProps;\n    }\n  }\n\n  static getRelationMappings() {\n    return cachedGet(this, '$$relationMappings', getRelationMappings);\n  }\n\n  static getRelations() {\n    const relations = Object.create(null);\n\n    for (const relationName of this.getRelationNames()) {\n      relations[relationName] = this.getRelation(relationName);\n    }\n\n    return relations;\n  }\n\n  static getRelationNames() {\n    return cachedGet(this, '$$relationNames', getRelationNames);\n  }\n\n  static getVirtualAttributes() {\n    return cachedGet(this, '$$virtualAttributes', getVirtualAttributes);\n  }\n\n  static query(trx) {\n    const query = this.QueryBuilder.forClass(this).transacting(trx);\n    this.onCreateQuery(query);\n    return query;\n  }\n\n  static relatedQuery(relationName) {\n    const relation = this.getRelation(relationName);\n    const modelClass = relation.relatedModelClass;\n\n    return modelClass\n      .query()\n      .alias(relation.name)\n      .findOperationFactory(builder => relation.subQuery(builder));\n  }\n\n  static fetchTableMetadata(opt) {\n    return fetchTableMetadata(this, opt);\n  }\n\n  static tableMetadata(opt) {\n    return tableMetadata(this, opt);\n  }\n\n  static knex(...args) {\n    if (args.length) {\n      defineNonEnumerableProperty(this, '$$knex', args[0]);\n    } else {\n      return this.$$knex;\n    }\n  }\n\n  static transaction() {\n    return this.knex();\n  }\n\n  static raw(...args) {\n    return raw(...args).toKnexRaw(this.query());\n  }\n\n  static get ref() {\n    return (...args) => {\n      return ref(...args).model(this);\n    };\n  }\n\n  /**\n   * NB. for v2.0, this can simply return `this.knex().fn`.\n   * However, in order to maintain backwards comparability of a bug that didn't\n   * have this method as a getter, the returned value needs to be callable and\n   * return the \"same\" `knex#FunctionHelper` instance.\n   * The effect is that `Model.fn.now()` and `Model.fn().now()` produce the same result.\n   */\n  static get fn() {\n    const fnHelper = this.knex().fn;\n    const wrapper = () => fnHelper;\n    Object.assign(wrapper, fnHelper);\n    Object.setPrototypeOf(wrapper, Object.getPrototypeOf(fnHelper));\n    return wrapper;\n  }\n\n  static knexQuery() {\n    return this.knex().table(this.getTableName());\n  }\n\n  static uniqueTag() {\n    if (this.name) {\n      return `${this.getTableName()}_${this.name}`;\n    } else {\n      return this.getTableName();\n    }\n  }\n\n  static bindKnex(knex) {\n    return bindKnex(this, knex);\n  }\n\n  static bindTransaction(trx) {\n    return bindKnex(this, trx);\n  }\n\n  static ensureModel(model, options) {\n    const modelClass = this;\n\n    if (!model) {\n      return null;\n    }\n\n    if (model instanceof modelClass) {\n      return parseRelationsIntoModelInstances(model, model, options);\n    } else {\n      return modelClass.fromJson(model, options);\n    }\n  }\n\n  static ensureModelArray(input, options) {\n    if (!input) {\n      return [];\n    }\n\n    if (Array.isArray(input)) {\n      const models = new Array(input.length);\n\n      for (let i = 0, l = input.length; i < l; ++i) {\n        models[i] = this.ensureModel(input[i], options);\n      }\n\n      return models;\n    } else {\n      return [this.ensureModel(input, options)];\n    }\n  }\n\n  static getRelationUnsafe(name) {\n    const mapping = this.getRelationMappings()[name];\n\n    if (!mapping) {\n      return null;\n    }\n\n    if (!this.hasOwnProperty('$$relations')) {\n      defineNonEnumerableProperty(this, '$$relations', Object.create(null));\n    }\n\n    if (!this.$$relations[name]) {\n      this.$$relations[name] = new mapping.relation(name, this);\n      this.$$relations[name].setMapping(mapping);\n    }\n\n    return this.$$relations[name];\n  }\n\n  static getRelation(name) {\n    const relation = this.getRelationUnsafe(name);\n\n    if (!relation) {\n      throw new Error(`A model class ${this.name} doesn't have relation ${name}`);\n    }\n\n    return relation;\n  }\n\n  static loadRelated($models, expression, modifiers, trx) {\n    return this.query(trx)\n      .resolve(this.ensureModelArray($models))\n      .findOptions({ dontCallFindHooks: true })\n      .eager(expression, modifiers)\n      .runAfter(models => (Array.isArray($models) ? models : models[0]));\n  }\n\n  static traverse(...args) {\n    const { traverser, models, filterConstructor } = getTraverseArgs(...args);\n\n    if (!asSingle(models)) {\n      return;\n    }\n\n    const modelClass = asSingle(models).constructor;\n\n    visitModels(models, modelClass, (model, _, parent, relation) => {\n      if (!filterConstructor || model instanceof filterConstructor) {\n        traverser(model, parent, relation && relation.name);\n      }\n    });\n\n    return this;\n  }\n\n  static traverseAsync(...args) {\n    const { traverser, models, filterConstructor } = getTraverseArgs(...args);\n\n    if (!asSingle(models)) {\n      return Promise.resolve();\n    }\n\n    const modelClass = asSingle(models).constructor;\n    const promises = [];\n\n    visitModels(models, modelClass, (model, _, parent, relation) => {\n      if (!filterConstructor || model instanceof filterConstructor) {\n        const maybePromise = traverser(model, parent, relation && relation.name);\n        promises.push(maybePromise);\n      }\n    });\n\n    return promiseMap(promises, it => it, { concurrency: this.getConcurrency(this.knex()) });\n  }\n}\n\nObject.defineProperties(Model.prototype, {\n  $isObjectionModel: {\n    enumerable: false,\n    writable: false,\n    value: true\n  },\n\n  $objectionModelClass: {\n    enumerable: false,\n    writable: false,\n    value: Model\n  }\n});\n\nModel.QueryBuilder = QueryBuilder;\n\nModel.HasOneRelation = HasOneRelation;\nModel.HasManyRelation = HasManyRelation;\nModel.ManyToManyRelation = ManyToManyRelation;\nModel.BelongsToOneRelation = BelongsToOneRelation;\nModel.HasOneThroughRelation = HasOneThroughRelation;\n\nModel.JoinEagerAlgorithm = 'JoinEagerAlgorithm';\nModel.NaiveEagerAlgorithm = 'NaiveEagerAlgorithm';\nModel.WhereInEagerAlgorithm = 'WhereInEagerAlgorithm';\n\nModel.ValidationError = ValidationError;\nModel.NotFoundError = NotFoundError;\nModel.ModifierNotFoundError = ModifierNotFoundError;\n\nModel.tableName = null;\nModel.jsonSchema = null;\nModel.idColumn = 'id';\nModel.uidProp = '#id';\nModel.uidRefProp = '#ref';\nModel.dbRefProp = '#dbRef';\nModel.propRefRegex = /#ref{([^\\.]+)\\.([^}]+)}/g;\nModel.jsonAttributes = null;\nModel.cloneObjectAttributes = true;\nModel.virtualAttributes = null;\nModel.relationMappings = null;\nModel.modelPaths = [];\nModel.pickJsonSchemaProperties = false;\nModel.defaultEagerAlgorithm = Model.WhereInEagerAlgorithm;\nModel.defaultEagerOptions = Object.freeze({ minimize: false, separator: ':', aliases: {} });\nModel.defaultFindOptions = Object.freeze({});\nModel.modifiers = null;\nModel.namedFilters = null;\nModel.useLimitInFirst = false;\nModel.columnNameMappers = null;\nModel.relatedFindQueryMutates = true;\nModel.relatedInsertQueryMutates = true;\nModel.concurrency = null;\n\nfunction cachedGet(target, hiddenPropertyName, creator) {\n  if (!target.hasOwnProperty(hiddenPropertyName)) {\n    defineNonEnumerableProperty(target, hiddenPropertyName, creator(target));\n  }\n\n  return target[hiddenPropertyName];\n}\n\nfunction getValidator(modelClass) {\n  return modelClass.createValidator();\n}\n\nfunction getJsonSchema(modelClass) {\n  return modelClass.jsonSchema;\n}\n\nfunction getColumnNameMappers(modelClass) {\n  return modelClass.columnNameMappers;\n}\n\nfunction getIdRelationProperty(modelClass) {\n  const idColumn = asArray(modelClass.getIdColumn());\n\n  return new RelationProperty(\n    idColumn.map(idCol => `${modelClass.getTableName()}.${idCol}`),\n    () => modelClass\n  );\n}\n\nfunction getReadOnlyAttributes(modelClass) {\n  const propertyNames = Object.getOwnPropertyNames(modelClass.prototype);\n\n  return propertyNames.filter(propName => {\n    const desc = Object.getOwnPropertyDescriptor(modelClass.prototype, propName);\n    return (desc.get && !desc.set) || desc.writable === false || isFunction(desc.value);\n  });\n}\n\nfunction getRelationMappings(modelClass) {\n  let relationMappings = modelClass.relationMappings;\n\n  if (isFunction(relationMappings)) {\n    relationMappings = relationMappings.call(modelClass);\n  }\n\n  return relationMappings || {};\n}\n\nfunction getRelationNames(modelClass) {\n  return Object.keys(modelClass.getRelationMappings());\n}\n\nfunction getVirtualAttributes(modelClass) {\n  return modelClass.virtualAttributes || [];\n}\n\nfunction getTraverseArgs(filterConstructor, models, traverser) {\n  filterConstructor = filterConstructor || null;\n\n  if (traverser === undefined) {\n    traverser = models;\n    models = filterConstructor;\n    filterConstructor = null;\n  }\n\n  if (!isFunction(traverser)) {\n    throw new Error('traverser must be a function');\n  }\n\n  return {\n    traverser,\n    models,\n    filterConstructor\n  };\n}\n\nmodule.exports = {\n  Model\n};\n","'use strict';\n\nclass ModifierNotFoundError extends Error {\n  constructor(modifierName) {\n    super(`Unable to determine modify function from provided value: \"${modifierName}\".`);\n    this.modifierName = modifierName;\n  }\n}\n\nmodule.exports = {\n  ModifierNotFoundError\n};\n","'use strict';\n\nclass NotFoundError extends Error {\n  constructor(data = {}) {\n    super(data.message || 'NotFoundError');\n\n    this.name = this.constructor.name;\n    this.data = data;\n    this.statusCode = 404;\n  }\n}\n\nmodule.exports = {\n  NotFoundError\n};\n","'use strict';\n\nclass RelationDoesNotExistError extends Error {\n  constructor(relationName) {\n    super(`unknown relation \"${relationName}\" in a relation expression`);\n\n    this.name = this.constructor.name;\n    this.relationName = relationName;\n  }\n}\n\nmodule.exports = {\n  RelationDoesNotExistError\n};\n","'use strict';\n\nconst { asArray, isString } = require('../utils/objectUtils');\n\nconst ValidationErrorType = {\n  ModelValidation: 'ModelValidation',\n  RelationExpression: 'RelationExpression',\n  UnallowedRelation: 'UnallowedRelation',\n  InvalidGraph: 'InvalidGraph'\n};\n\nclass ValidationError extends Error {\n  static get Type() {\n    return ValidationErrorType;\n  }\n\n  constructor({ type, message, data = {}, statusCode = 400 }) {\n    super(message || errorsToMessage(data));\n\n    this.name = this.constructor.name;\n    this.type = type;\n    this.data = data;\n    this.statusCode = statusCode;\n  }\n}\n\nfunction errorsToMessage(data) {\n  return Object.keys(data)\n    .reduce((messages, key) => {\n      messages.push(\n        `${key}: ${asArray(data[key])\n          .map(message)\n          .join(', ')}`\n      );\n      return messages;\n    }, [])\n    .join(', ');\n}\n\nfunction message(it) {\n  if (isString(it)) {\n    return it;\n  } else {\n    return it.message;\n  }\n}\n\nmodule.exports = {\n  ValidationError,\n  ValidationErrorType\n};\n","'use strict';\n\nclass Validator {\n  constructor(...args) {\n    this.constructor.init(this, ...args);\n  }\n\n  static init() {}\n\n  beforeValidate({ model, json, options }) {\n    model.$beforeValidate(null, json, options);\n  }\n\n  validate() {\n    /* istanbul ignore next */\n    throw new Error('not implemented');\n  }\n\n  afterValidate({ model, json, options }) {\n    model.$afterValidate(json, options);\n  }\n}\n\nmodule.exports = {\n  Validator\n};\n","'use strict';\n\nconst { ModelGraphBuilder } = require('./ModelGraphBuilder');\nconst NOT_CALCULATED = {};\n\nclass ModelGraph {\n  constructor(nodes, edges) {\n    this.nodes = nodes;\n    this.edges = edges;\n\n    // These are calculated lazily.\n    this._nodesByObjects = NOT_CALCULATED;\n    this._nodesByIdPathKeys = NOT_CALCULATED;\n  }\n\n  static create(rootModelClass, roots) {\n    const builder = ModelGraphBuilder.buildGraph(rootModelClass, roots);\n    return new ModelGraph(builder.nodes, builder.edges);\n  }\n\n  static createEmpty() {\n    return new ModelGraph([], []);\n  }\n\n  get rootObjects() {\n    return this.nodes.filter(node => !node.parentEdge).map(node => node.obj);\n  }\n\n  nodeForObject(obj) {\n    if (!obj) {\n      return null;\n    }\n\n    if (this._nodesByObjects === NOT_CALCULATED) {\n      this._nodesByObjects = createNodesByObjectsMap(this.nodes);\n    }\n\n    return this._nodesByObjects.get(obj) || null;\n  }\n\n  nodeForNode(node) {\n    if (!node) {\n      return null;\n    }\n\n    if (this._nodesByIdPathKeys === NOT_CALCULATED) {\n      this._nodesByIdPathKeys = createNodesByIdPathKeysMap(this.nodes);\n    }\n\n    return this._nodesByIdPathKeys.get(node.idPathKey) || null;\n  }\n}\n\nfunction createNodesByObjectsMap(nodes) {\n  const nodesByObjects = new Map();\n\n  for (const node of nodes) {\n    nodesByObjects.set(node.obj, node);\n  }\n\n  return nodesByObjects;\n}\n\nfunction createNodesByIdPathKeysMap(nodes) {\n  const nodesByIdPathKeys = new Map();\n\n  for (const node of nodes) {\n    const idPathKey = node.idPathKey;\n\n    if (idPathKey !== null) {\n      nodesByIdPathKeys.set(idPathKey, node);\n    }\n  }\n\n  return nodesByIdPathKeys;\n}\n\nmodule.exports = {\n  ModelGraph\n};\n","'use strict';\n\nconst { isObject, isString, asArray, asSingle } = require('../../utils/objectUtils');\nconst { ValidationErrorType } = require('../../model/ValidationError');\nconst { ModelGraphNode } = require('./ModelGraphNode');\nconst { ModelGraphEdge } = require('./ModelGraphEdge');\n\nclass ModelGraphBuilder {\n  constructor() {\n    this.nodes = [];\n    this.edges = [];\n  }\n\n  static buildGraph(rootModelClass, roots) {\n    const builder = new this();\n    builder._buildGraph(rootModelClass, roots);\n\n    return builder;\n  }\n\n  _buildGraph(rootModelClass, roots) {\n    if (roots) {\n      if (Array.isArray(roots)) {\n        this._buildNodes(rootModelClass, roots);\n      } else if (isObject(roots)) {\n        this._buildNode(rootModelClass, roots);\n      } else {\n        throw createNotModelError(rootModelClass, roots);\n      }\n    }\n\n    this._buildReferences();\n  }\n\n  _buildNodes(modelClass, objs, parentNode = null, relation = null) {\n    objs = asArray(objs);\n\n    objs.forEach((obj, index) => {\n      this._buildNode(modelClass, obj, parentNode, relation, index);\n    });\n  }\n\n  _buildNode(modelClass, obj, parentNode = null, relation = null, index = null) {\n    obj = asSingle(obj);\n\n    if (!isObject(obj) || !obj.$isObjectionModel) {\n      throw createNotModelError(modelClass, obj);\n    }\n\n    const node = new ModelGraphNode(modelClass, obj);\n    this.nodes.push(node);\n\n    if (parentNode) {\n      const edge = new ModelGraphEdge(\n        ModelGraphEdge.Type.Relation,\n        parentNode,\n        node,\n        relation,\n        index\n      );\n\n      node.parentEdge = edge;\n      this._addEdge(parentNode, node, edge);\n    }\n\n    this._buildRelationNodes(node);\n  }\n\n  _buildRelationNodes(node) {\n    for (const relationName of node.modelClass.getRelationNames()) {\n      const relatedObjects = node.obj[relationName];\n\n      if (!relatedObjects) {\n        continue;\n      }\n\n      const relation = node.modelClass.getRelation(relationName);\n\n      if (relation.isOneToOne()) {\n        this._buildNode(relation.relatedModelClass, relatedObjects, node, relation);\n      } else {\n        this._buildNodes(relation.relatedModelClass, relatedObjects, node, relation);\n      }\n    }\n  }\n\n  _buildReferences() {\n    const nodesByUid = this._nodesByUid();\n\n    this._buildObjectReferences(nodesByUid);\n    this._buildPropertyReferences(nodesByUid);\n  }\n\n  _nodesByUid() {\n    const nodesByUid = new Map();\n\n    for (const node of this.nodes) {\n      const uid = node.uid;\n\n      if (uid === undefined) {\n        continue;\n      }\n\n      nodesByUid.set(uid, node);\n    }\n\n    return nodesByUid;\n  }\n\n  _buildObjectReferences(nodesByUid) {\n    for (const node of this.nodes) {\n      const ref = node.reference;\n\n      if (ref === undefined) {\n        continue;\n      }\n\n      const refNode = nodesByUid.get(ref);\n\n      if (!refNode) {\n        throw createReferenceFoundError(node, ref);\n      }\n\n      const edge = new ModelGraphEdge(ModelGraphEdge.Type.Reference, node, refNode);\n      edge.refType = ModelGraphEdge.ReferenceType.Object;\n\n      this._addEdge(node, refNode, edge);\n    }\n  }\n\n  _buildPropertyReferences(nodesByUid) {\n    for (const node of this.nodes) {\n      const relationNames = node.modelClass.getRelationNames();\n\n      for (const prop of Object.keys(node.obj)) {\n        if (relationNames.includes(prop)) {\n          continue;\n        }\n\n        this._buildPropertyReference(nodesByUid, node, prop);\n      }\n    }\n  }\n\n  _buildPropertyReference(nodesByUid, node, prop) {\n    visitStrings(node.obj[prop], [prop], (str, path) => {\n      forEachMatch(node.modelClass.propRefRegex, str, match => {\n        const [_, ref, refPath] = match;\n        const refNode = nodesByUid.get(ref);\n\n        if (!refNode) {\n          throw createReferenceFoundError(node, ref);\n        }\n\n        const edge = new ModelGraphEdge(ModelGraphEdge.Type.Reference, node, refNode);\n\n        edge.refType = ModelGraphEdge.ReferenceType.Property;\n        edge.refMatch = match[0];\n        edge.refOwnerDataPath = path.slice();\n        edge.refRelatedDataPath = refPath.split('.');\n\n        this._addEdge(node, refNode, edge);\n      });\n    });\n  }\n\n  _addEdge(ownerNode, relatedNode, edge) {\n    this.edges.push(edge);\n\n    ownerNode.edges.push(edge);\n    relatedNode.edges.push(edge);\n\n    if (edge.type === ModelGraphEdge.Type.Reference) {\n      ownerNode.refEdges.push(edge);\n      relatedNode.refEdges.push(edge);\n    }\n  }\n}\n\nfunction visitStrings(value, path, visit) {\n  if (Array.isArray(value)) {\n    visitStringsInArray(value, path, visit);\n  } else if (isObject(value)) {\n    visitStringsInObject(value, path, visit);\n  } else if (isString(value)) {\n    visit(value, path);\n  }\n}\n\nfunction visitStringsInArray(value, path, visit) {\n  for (let i = 0; i < value.length; ++i) {\n    path.push(i);\n    visitStrings(value[i], path, visit);\n    path.pop();\n  }\n}\n\nfunction visitStringsInObject(value, path, visit) {\n  for (const prop of Object.keys(value)) {\n    path.push(prop);\n    visitStrings(value[prop], path, visit);\n    path.pop();\n  }\n}\n\nfunction forEachMatch(regex, str, cb) {\n  let matchResult = regex.exec(str);\n\n  while (matchResult) {\n    cb(matchResult);\n    matchResult = regex.exec(str);\n  }\n}\n\nfunction createReferenceFoundError(node, ref) {\n  return new Error('no reference found');\n}\n\nfunction createNotModelError(modelClass, value) {\n  throw modelClass.createValidationError({\n    type: ValidationErrorType.InvalidGraph,\n    message: `expected value \"${value}\" to be an instance of ${modelClass.name}`\n  });\n}\n\nmodule.exports = {\n  ModelGraphBuilder,\n  createNotModelError\n};\n","'use strict';\n\nconst Type = {\n  Relation: 'Relation',\n  Reference: 'Reference'\n};\n\nconst ReferenceType = {\n  Object: 'Object',\n  Property: 'Property'\n};\n\nclass ModelGraphEdge {\n  constructor(type, ownerNode, relatedNode, relation = null, relationIndex = null) {\n    this.type = type;\n\n    this.ownerNode = ownerNode;\n    this.relatedNode = relatedNode;\n    this.relation = relation;\n    this.relationIndex = relationIndex;\n\n    this.refType = null;\n    this.refMatch = null;\n\n    this.refOwnerDataPath = null;\n    this.refRelatedDataPath = null;\n  }\n\n  static get Type() {\n    return Type;\n  }\n\n  static get ReferenceType() {\n    return ReferenceType;\n  }\n\n  getOtherNode(node) {\n    return this.isOwnerNode(node) ? this.relatedNode : this.ownerNode;\n  }\n\n  isOwnerNode(node) {\n    return node === this.ownerNode;\n  }\n\n  isRelatedNode(node) {\n    return node === this.relatedNode;\n  }\n}\n\nmodule.exports = {\n  ModelGraphEdge\n};\n","'use strict';\n\nconst { ModelGraphEdge } = require('./ModelGraphEdge');\nconst { isNumber } = require('../../utils/objectUtils');\nconst NOT_CALCULATED = {};\n\nclass ModelGraphNode {\n  constructor(modelClass, obj) {\n    this.modelClass = modelClass;\n    this.obj = obj;\n    this.edges = [];\n    this.userData = {};\n    this.hadIdOriginally = obj.$hasId();\n\n    // These are also included in `edges`. These are simply\n    // shortcuts for commonly used edges.\n    this.refEdges = [];\n    this.parentEdge = null;\n\n    // These are calculated lazily.\n    this._relationPath = NOT_CALCULATED;\n    this._relationPathKey = NOT_CALCULATED;\n\n    this._dataPath = NOT_CALCULATED;\n    this._dataPathKey = NOT_CALCULATED;\n\n    this._idPath = NOT_CALCULATED;\n    this._idPathKey = NOT_CALCULATED;\n  }\n\n  get isReference() {\n    return this.reference !== undefined;\n  }\n\n  get isDbReference() {\n    return this.dbReference !== undefined;\n  }\n\n  get reference() {\n    return this.obj[this.modelClass.uidRefProp];\n  }\n\n  get dbReference() {\n    return this.obj[this.modelClass.dbRefProp];\n  }\n\n  get uid() {\n    return this.obj[this.modelClass.uidProp];\n  }\n\n  get parentNode() {\n    if (this.parentEdge) {\n      return this.parentEdge.ownerNode;\n    } else {\n      return null;\n    }\n  }\n\n  get indexInRelation() {\n    if (this.parentEdge) {\n      return this.parentEdge.relationIndex;\n    } else {\n      return null;\n    }\n  }\n\n  get relationName() {\n    if (this.parentEdge) {\n      return this.parentEdge.relation.name;\n    } else {\n      return null;\n    }\n  }\n\n  get relationPath() {\n    if (this._relationPath === NOT_CALCULATED) {\n      this._relationPath = this._createRelationPath();\n    }\n\n    return this._relationPath;\n  }\n\n  get relationPathKey() {\n    if (this._relationPathKey === NOT_CALCULATED) {\n      this._relationPathKey = this._createRelationPathKey();\n    }\n\n    return this._relationPathKey;\n  }\n\n  get dataPath() {\n    if (this._dataPath === NOT_CALCULATED) {\n      this._dataPath = this._createDataPath();\n    }\n\n    return this._dataPath;\n  }\n\n  get dataPathKey() {\n    if (this._dataPathKey === NOT_CALCULATED) {\n      this._dataPathKey = this._createDataPathKey();\n    }\n\n    return this._dataPathKey;\n  }\n\n  get idPath() {\n    if (this._idPath === NOT_CALCULATED) {\n      this._idPath = this._createIdPath();\n    }\n\n    return this._idPath;\n  }\n\n  get idPathKey() {\n    if (this._idPathKey === NOT_CALCULATED) {\n      this._idPathKey = this._createIdPathKey();\n    }\n\n    return this._idPathKey;\n  }\n\n  /**\n   * If this node is a reference, returns the referred node.\n   */\n  get referencedNode() {\n    for (const edge of this.refEdges) {\n      if (edge.refType === ModelGraphEdge.ReferenceType.Object && edge.isOwnerNode(this)) {\n        return edge.relatedNode;\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Returns all nodes that are references to this node.\n   */\n  get referencingNodes() {\n    const nodes = [];\n\n    for (const edge of this.refEdges) {\n      if (edge.refType === ModelGraphEdge.ReferenceType.Object && edge.isRelatedNode(this)) {\n        nodes.push(edge.ownerNode);\n      }\n    }\n\n    return nodes;\n  }\n\n  get descendantRelationNodes() {\n    return this._collectDescendantRelationNodes([]);\n  }\n\n  removeEdge(edge) {\n    // Don't allow removing parent edges for now. It would\n    // cause all kinds of cache invalidation.\n    if (edge === this.parentEdge) {\n      throw new Error('cannot remove parent edge');\n    }\n\n    this.edges = this.edges.filter(it => it !== edge);\n    this.refEdges = this.refEdges.filter(it => it !== edge);\n  }\n\n  _collectDescendantRelationNodes(nodes) {\n    for (const edge of this.edges) {\n      if (edge.type === ModelGraphEdge.Type.Relation && edge.isOwnerNode(this)) {\n        nodes.push(edge.relatedNode);\n        edge.relatedNode._collectDescendantRelationNodes(nodes);\n      }\n    }\n\n    return nodes;\n  }\n\n  _createRelationPath() {\n    if (this.parentNode === null) {\n      return [];\n    } else {\n      return [...this.parentNode.relationPath, this.relationName];\n    }\n  }\n\n  _createRelationPathKey() {\n    return this.relationPath.join('.');\n  }\n\n  _createDataPath() {\n    if (this.parentEdge === null) {\n      return [];\n    } else if (this.parentEdge.relation.isOneToOne()) {\n      return [...this.parentNode.dataPath, this.relationName];\n    } else {\n      return [...this.parentNode.dataPath, this.relationName, this.indexInRelation];\n    }\n  }\n\n  _createDataPathKey() {\n    const dataPathKey = this.dataPath.reduce((key, it) => {\n      if (isNumber(it)) {\n        return `${key}[${it}]`;\n      } else {\n        return key ? `${key}.${it}` : it;\n      }\n    }, '');\n\n    return dataPathKey ? '.' + dataPathKey : dataPathKey;\n  }\n\n  _createIdPath() {\n    if (!this.obj.$hasId()) {\n      return null;\n    }\n\n    if (this.parentEdge === null) {\n      return [this.obj.$idKey()];\n    } else {\n      const path = this.parentNode.idPath;\n\n      if (path === null) {\n        return null;\n      }\n\n      return [...path, this.relationName, this.obj.$idKey()];\n    }\n  }\n\n  _createIdPathKey() {\n    const idPath = this.idPath;\n\n    if (idPath) {\n      return this.idPath.join('.');\n    } else {\n      return null;\n    }\n  }\n}\n\nmodule.exports = {\n  ModelGraphNode\n};\n","'use strict';\n\nconst cache = new Map();\n\nfunction inheritModel(modelClass) {\n  let inherit = cache.get(modelClass.name);\n\n  if (!inherit) {\n    inherit = createClassInheritor(modelClass.name);\n    cache.set(modelClass.name, inherit);\n  }\n\n  return inherit(modelClass);\n}\n\nfunction createClassInheritor(className) {\n  return new Function(\n    'BaseClass',\n    `\n    'use strict';\n    return class ${className} extends BaseClass {}\n  `\n  );\n}\n\nmodule.exports = {\n  inheritModel\n};\n","'use strict';\n\nconst { inheritModel } = require('./inheritModel');\nconst { staticHiddenProps } = require('./modelUtils');\nconst { defineNonEnumerableProperty } = require('./modelUtils');\n\nfunction bindKnex(modelClass, knex) {\n  let BoundModelClass = getBoundModelFromCache(modelClass, knex);\n\n  if (BoundModelClass === null) {\n    BoundModelClass = inheritModel(modelClass);\n    BoundModelClass = copyHiddenProperties(modelClass, BoundModelClass);\n\n    BoundModelClass.knex(knex);\n\n    BoundModelClass = putBoundModelToCache(modelClass, BoundModelClass, knex);\n    BoundModelClass = bindRelations(modelClass, BoundModelClass, knex);\n  }\n\n  return BoundModelClass;\n}\n\nfunction getBoundModelFromCache(modelClass, knex) {\n  const cache = getCache(knex);\n  const cacheKey = modelClass.uniqueTag();\n\n  return cache.get(cacheKey) || null;\n}\n\nfunction getCache(knex) {\n  if (!knex.$$objection) {\n    createCache(knex);\n  }\n\n  return knex.$$objection.boundModels;\n}\n\nfunction createCache(knex) {\n  defineNonEnumerableProperty(knex, '$$objection', {\n    boundModels: new Map()\n  });\n}\n\nfunction copyHiddenProperties(modelClass, BoundModelClass) {\n  for (const prop of staticHiddenProps) {\n    // $$relations and $$relationArray are handled in separately.\n    if (modelClass.hasOwnProperty(prop) && prop !== '$$relations' && prop !== '$$relationArray') {\n      defineNonEnumerableProperty(BoundModelClass, prop, modelClass[prop]);\n    }\n  }\n\n  return BoundModelClass;\n}\n\nfunction putBoundModelToCache(modelClass, BoundModelClass, knex) {\n  const cache = getCache(knex);\n  const cacheKey = modelClass.uniqueTag();\n\n  cache.set(cacheKey, BoundModelClass);\n  return BoundModelClass;\n}\n\nfunction bindRelations(modelClass, BoundModelClass, knex) {\n  const boundRelations = Object.create(null);\n  const boundRelationArray = [];\n\n  for (const relationName of modelClass.getRelationNames()) {\n    const relation = modelClass.getRelation(relationName);\n    const boundRelation = relation.bindKnex(knex);\n\n    boundRelations[relation.name] = boundRelation;\n    boundRelationArray.push(boundRelation);\n  }\n\n  defineNonEnumerableProperty(BoundModelClass, '$$relations', boundRelations);\n  defineNonEnumerableProperty(BoundModelClass, '$$relationArray', boundRelationArray);\n\n  return BoundModelClass;\n}\n\nmodule.exports = {\n  bindKnex\n};\n","'use strict';\n\nconst { isObject, cloneDeep } = require('../utils/objectUtils');\nconst { hiddenProps } = require('./modelUtils');\nconst { defineNonEnumerableProperty } = require('./modelUtils');\nconst { isInternalProp } = require('../utils/internalPropUtils');\n\nfunction clone(model, shallow, stripInternal) {\n  let clone = null;\n\n  const omitFromJson = model.$omitFromJson();\n  const omitFromDatabaseJson = model.$omitFromDatabaseJson();\n\n  if (!shallow && !stripInternal) {\n    clone = cloneSimple(model);\n  } else {\n    clone = cloneWithOpt(model, shallow, stripInternal);\n  }\n\n  if (omitFromJson) {\n    clone.$omitFromJson(omitFromJson);\n  }\n\n  if (omitFromDatabaseJson) {\n    clone.$omitFromDatabaseJson(omitFromDatabaseJson);\n  }\n\n  clone = copyHiddenProps(model, clone);\n  return clone;\n}\n\nfunction cloneSimple(model) {\n  const clone = new model.constructor();\n  const keys = Object.keys(model);\n\n  for (let i = 0, l = keys.length; i < l; ++i) {\n    const key = keys[i];\n    const value = model[key];\n\n    if (isObject(value)) {\n      clone[key] = cloneObject(value);\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  return clone;\n}\n\nfunction cloneWithOpt(model, shallow, stripInternal) {\n  const clone = new model.constructor();\n  const keys = Object.keys(model);\n  const relationNames = model.constructor.getRelationNames();\n\n  for (let i = 0, l = keys.length; i < l; ++i) {\n    const key = keys[i];\n    const value = model[key];\n\n    if ((shallow && relationNames.includes(key)) || (stripInternal && isInternalProp(key))) {\n      continue;\n    }\n\n    if (isObject(value)) {\n      clone[key] = cloneObject(value);\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  return clone;\n}\n\nfunction cloneObject(value) {\n  if (Array.isArray(value)) {\n    return cloneArray(value);\n  } else if (value.$isObjectionModel) {\n    return clone(value, false, false);\n  } else if (Buffer.isBuffer(value)) {\n    return new Buffer(value);\n  } else {\n    return cloneDeep(value);\n  }\n}\n\nfunction cloneArray(value) {\n  const ret = new Array(value.length);\n\n  for (let i = 0, l = ret.length; i < l; ++i) {\n    const item = value[i];\n\n    if (isObject(item)) {\n      ret[i] = cloneObject(item);\n    } else {\n      ret[i] = item;\n    }\n  }\n\n  return ret;\n}\n\nfunction copyHiddenProps(model, clone) {\n  for (let i = 0, l = hiddenProps.length; i < l; ++i) {\n    const prop = hiddenProps[i];\n\n    if (model.hasOwnProperty(prop)) {\n      defineNonEnumerableProperty(clone, prop, model[prop]);\n    }\n  }\n\n  return clone;\n}\n\nmodule.exports = {\n  clone\n};\n","'use strict';\n\nconst { difference } = require('../utils/objectUtils');\n\nfunction columnNameToPropertyName(modelClass, columnName) {\n  const model = new modelClass();\n  const addedProps = Object.keys(model.$parseDatabaseJson({}));\n\n  const row = {};\n  row[columnName] = null;\n\n  const props = Object.keys(model.$parseDatabaseJson(row));\n  const propertyName = difference(props, addedProps)[0];\n\n  return propertyName || columnName;\n}\n\nfunction propertyNameToColumnName(modelClass, propertyName) {\n  const model = new modelClass();\n  const addedCols = Object.keys(model.$formatDatabaseJson({}));\n\n  const obj = {};\n  obj[propertyName] = null;\n\n  const cols = Object.keys(model.$formatDatabaseJson(obj));\n  const columnName = difference(cols, addedCols)[0];\n\n  return columnName || propertyName;\n}\n\nmodule.exports = {\n  columnNameToPropertyName,\n  propertyNameToColumnName\n};\n","'use strict';\n\nconst { isObject } = require('../utils/objectUtils');\nconst { isInternalProp } = require('../utils/internalPropUtils');\n\nfunction omit(model, args) {\n  if (args.length === 1 && isObject(args[0])) {\n    const keys = args[0];\n\n    if (Array.isArray(keys)) {\n      omitArray(model, keys);\n    } else {\n      omitObject(model, keys);\n    }\n  } else {\n    omitArray(model, args);\n  }\n\n  return model;\n}\n\nfunction pick(model, args) {\n  if (args.length === 1 && isObject(args[0])) {\n    const keys = args[0];\n\n    if (Array.isArray(keys)) {\n      pickArray(model, keys);\n    } else {\n      pickObject(model, keys);\n    }\n  } else {\n    pickArray(model, args);\n  }\n\n  return model;\n}\n\nfunction omitObject(model, keyObj) {\n  const modelClass = model.constructor;\n  const keys = Object.keys(keyObj);\n\n  for (let i = 0, l = keys.length; i < l; ++i) {\n    const key = keys[i];\n    const value = keyObj[key];\n\n    if (value && !isInternalProp(key) && model.hasOwnProperty(key)) {\n      modelClass.omitImpl(model, key);\n    }\n  }\n}\n\nfunction omitArray(model, keys) {\n  const modelClass = model.constructor;\n\n  for (let i = 0, l = keys.length; i < l; ++i) {\n    const key = keys[i];\n\n    if (!isInternalProp(key) && model.hasOwnProperty(key)) {\n      modelClass.omitImpl(model, key);\n    }\n  }\n}\n\nfunction pickObject(model, keyObj) {\n  const modelClass = model.constructor;\n  const keys = Object.keys(model);\n\n  for (let i = 0, l = keys.length; i < l; ++i) {\n    const key = keys[i];\n\n    if (!isInternalProp(key) && !keyObj[key]) {\n      modelClass.omitImpl(model, key);\n    }\n  }\n}\n\nfunction pickArray(model, pick) {\n  const modelClass = model.constructor;\n  const keys = Object.keys(model);\n\n  for (let i = 0, l = keys.length; i < l; ++i) {\n    const key = keys[i];\n\n    if (!isInternalProp(key) && !contains(pick, key)) {\n      modelClass.omitImpl(model, key);\n    }\n  }\n}\n\nfunction contains(arr, value) {\n  for (let i = 0, l = arr.length; i < l; ++i) {\n    if (arr[i] === value) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = {\n  omit,\n  pick\n};\n","'use strict';\n\nfunction getSetId(model, maybeId) {\n  if (maybeId !== undefined) {\n    return setId(model, maybeId);\n  } else {\n    return getId(model);\n  }\n}\n\nfunction hasId(model) {\n  return model.$hasProps(model.constructor.getIdPropertyArray());\n}\n\nfunction setId(model, id) {\n  const idProp = model.constructor.getIdProperty();\n  const isCompositeId = Array.isArray(idProp);\n\n  if (Array.isArray(id)) {\n    if (isCompositeId) {\n      if (id.length !== idProp.length) {\n        throw new Error('trying to set an invalid identifier for a model');\n      }\n\n      for (let i = 0; i < id.length; ++i) {\n        model[idProp[i]] = id[i];\n      }\n    } else {\n      if (id.length !== 1) {\n        throw new Error('trying to set an invalid identifier for a model');\n      }\n\n      model[idProp] = id[0];\n    }\n  } else {\n    if (isCompositeId) {\n      if (idProp.length > 1) {\n        throw new Error('trying to set an invalid identifier for a model');\n      }\n\n      model[idProp[0]] = id;\n    } else {\n      model[idProp] = id;\n    }\n  }\n}\n\nfunction getId(model) {\n  const idProp = model.constructor.getIdProperty();\n  const isCompositeId = Array.isArray(idProp);\n\n  if (isCompositeId) {\n    return model.$values(idProp);\n  } else {\n    return model[idProp];\n  }\n}\n\nmodule.exports = {\n  getSetId,\n  hasId\n};\n","'use strict';\n\nconst { asArray, isObject, flatten, isString } = require('../utils/objectUtils');\n\nfunction parseJsonAttributes(json, modelClass) {\n  const jsonAttr = modelClass.getJsonAttributes();\n\n  if (jsonAttr.length) {\n    // JSON attributes may be returned as strings depending on the database and\n    // the database client. Convert them to objects here.\n    for (let i = 0, l = jsonAttr.length; i < l; ++i) {\n      const attr = jsonAttr[i];\n      const value = json[attr];\n\n      if (isString(value)) {\n        const parsed = tryParseJson(value);\n\n        // tryParseJson returns undefined if parsing failed.\n        if (parsed !== undefined) {\n          json[attr] = parsed;\n        }\n      }\n    }\n  }\n\n  return json;\n}\n\nfunction formatJsonAttributes(json, modelClass) {\n  const jsonAttr = modelClass.getJsonAttributes();\n\n  if (jsonAttr.length) {\n    // All database clients want JSON columns as strings. Do the conversion here.\n    for (let i = 0, l = jsonAttr.length; i < l; ++i) {\n      const attr = jsonAttr[i];\n      const value = json[attr];\n\n      if (isObject(value)) {\n        json[attr] = JSON.stringify(value);\n      }\n    }\n  }\n\n  return json;\n}\n\nfunction getJsonAttributes(modelClass) {\n  let jsonAttributes = modelClass.jsonAttributes;\n\n  if (Array.isArray(jsonAttributes)) {\n    return jsonAttributes;\n  }\n\n  jsonAttributes = [];\n\n  if (modelClass.getJsonSchema()) {\n    const props = modelClass.getJsonSchema().properties || {};\n\n    for (const propName of Object.keys(props)) {\n      const prop = props[propName];\n      let types = asArray(prop.type).filter(it => !!it);\n\n      if (types.length === 0 && Array.isArray(prop.anyOf)) {\n        types = flatten(prop.anyOf.map(it => it.type));\n      }\n\n      if (types.length === 0 && Array.isArray(prop.oneOf)) {\n        types = flatten(prop.oneOf.map(it => it.type));\n      }\n\n      if (types.indexOf('object') !== -1 || types.indexOf('array') !== -1) {\n        jsonAttributes.push(propName);\n      }\n    }\n  }\n\n  return jsonAttributes;\n}\n\nfunction tryParseJson(maybeJsonStr) {\n  try {\n    return JSON.parse(maybeJsonStr);\n  } catch (err) {\n    return undefined;\n  }\n}\n\nmodule.exports = {\n  parseJsonAttributes,\n  formatJsonAttributes,\n  getJsonAttributes\n};\n","'use strict';\n\nconst { isObject } = require('../utils/objectUtils');\n\nfunction parseRelationsIntoModelInstances(model, json, options = {}) {\n  if (!options.cache) {\n    options = Object.assign({}, options, {\n      cache: new Map()\n    });\n  }\n\n  options.cache.set(json, model);\n\n  for (const relationName of model.constructor.getRelationNames()) {\n    const relationJson = json[relationName];\n\n    if (relationJson !== undefined) {\n      const relation = model.constructor.getRelation(relationName);\n      const relationModel = parseRelation(relationJson, relation, options);\n\n      if (relationModel !== relationJson) {\n        model[relation.name] = relationModel;\n      }\n    }\n  }\n\n  return model;\n}\n\nfunction parseRelation(json, relation, options) {\n  if (Array.isArray(json)) {\n    return parseRelationArray(json, relation, options);\n  } else if (json) {\n    return parseRelationObject(json, relation, options);\n  } else {\n    return null;\n  }\n}\n\nfunction parseRelationArray(json, relation, options) {\n  const models = new Array(json.length);\n  let didChange = false;\n\n  for (let i = 0, l = json.length; i < l; ++i) {\n    const model = parseRelationObject(json[i], relation, options);\n\n    if (model !== json[i]) {\n      didChange = true;\n    }\n\n    models[i] = model;\n  }\n\n  if (didChange) {\n    return models;\n  } else {\n    return json;\n  }\n}\n\nfunction parseRelationObject(json, relation, options) {\n  if (isObject(json)) {\n    const modelClass = relation.relatedModelClass;\n    let model = options.cache.get(json);\n\n    if (model === undefined) {\n      if (json instanceof modelClass) {\n        model = parseRelationsIntoModelInstances(json, json, options);\n      } else {\n        model = modelClass.fromJson(json, options);\n      }\n    }\n\n    return model;\n  } else {\n    return json;\n  }\n}\n\nmodule.exports = {\n  parseRelationsIntoModelInstances\n};\n","'use strict';\n\nconst { isObject, isFunction } = require('../utils/objectUtils');\nconst { defineNonEnumerableProperty } = require('./modelUtils');\nconst { isKnexRaw, isKnexQueryBuilder } = require('../utils/knexUtils');\n\nconst QUERY_PROPS_PROPERTY = '$$queryProps';\n\n// Removes query properties from `json` and stores them into a hidden property\n// inside `model` so that they can be later merged back to `json`.\nfunction splitQueryProps(model, json) {\n  const keys = Object.keys(json);\n\n  if (hasQueryProps(json, keys)) {\n    const queryProps = {};\n    const modelProps = {};\n\n    for (let i = 0, l = keys.length; i < l; ++i) {\n      const key = keys[i];\n      const value = json[key];\n\n      if (isQueryProp(value)) {\n        queryProps[key] = value;\n      } else {\n        modelProps[key] = value;\n      }\n    }\n\n    defineNonEnumerableProperty(model, QUERY_PROPS_PROPERTY, queryProps);\n\n    return modelProps;\n  } else {\n    return json;\n  }\n}\n\nfunction hasQueryProps(json, keys) {\n  for (let i = 0, l = keys.length; i < l; ++i) {\n    if (isQueryProp(json[keys[i]])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction isQueryProp(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n\n  return (\n    isKnexQueryBuilder(value) ||\n    isKnexRaw(value) ||\n    isKnexRawConvertable(value) ||\n    value.isObjectionQueryBuilderBase\n  );\n}\n\n// Merges and converts `model`'s query properties into `json`.\nfunction mergeQueryProps(model, json, omitProps, builder) {\n  json = convertExistingQueryProps(json, builder);\n  json = convertAndMergeHiddenQueryProps(model, json, omitProps, builder);\n\n  return json;\n}\n\n// Converts the query properties in `json` to knex raw instances.\n// `json` may have query properties even though we removed them.\n// For example they may have been added in lifecycle hooks.\nfunction convertExistingQueryProps(json, builder) {\n  const keys = Object.keys(json);\n\n  for (let i = 0, l = keys.length; i < l; ++i) {\n    const key = keys[i];\n    const value = json[key];\n\n    if (isQueryProp(value)) {\n      json[key] = queryPropToKnexRaw(value, builder);\n    }\n  }\n\n  return json;\n}\n\n// Converts and merges the query props that were split from the model\n// and stored into QUERY_PROPS_PROPERTY.\nfunction convertAndMergeHiddenQueryProps(model, json, omitProps, builder) {\n  const queryProps = model[QUERY_PROPS_PROPERTY];\n\n  if (!queryProps) {\n    // The model has no query properties.\n    return json;\n  }\n\n  const modelClass = model.constructor;\n  const keys = Object.keys(queryProps);\n\n  for (let i = 0, l = keys.length; i < l; ++i) {\n    const key = keys[i];\n\n    if (!omitProps || !omitProps.includes(key)) {\n      const queryProp = queryPropToKnexRaw(queryProps[key], builder);\n      json[modelClass.propertyNameToColumnName(key)] = queryProp;\n    }\n  }\n\n  return json;\n}\n\n// Converts a query property into a knex `raw` instance.\nfunction queryPropToKnexRaw(queryProp, builder) {\n  if (!queryProp) {\n    return queryProp;\n  }\n\n  if (queryProp.isObjectionQueryBuilderBase) {\n    return buildObjectionQueryBuilder(queryProp, builder);\n  } else if (isKnexRawConvertable(queryProp)) {\n    return buildKnexRawConvertable(queryProp, builder);\n  } else {\n    return queryProp;\n  }\n}\n\nfunction buildObjectionQueryBuilder(builder, parentBuilder) {\n  return builder.subqueryOf(parentBuilder).toKnexQuery();\n}\n\nfunction buildKnexRawConvertable(convertable, builder) {\n  if (!builder) {\n    throw new Error(\n      'toDatabaseJson called without a query builder instance for a model with query properties'\n    );\n  }\n\n  return convertable.toKnexRaw(builder);\n}\n\nfunction isKnexRawConvertable(queryProp) {\n  return isFunction(queryProp.toKnexRaw);\n}\n\nmodule.exports = {\n  splitQueryProps,\n  mergeQueryProps\n};\n","'use strict';\n\nconst { isInternalProp } = require('../utils/internalPropUtils');\nconst { splitQueryProps } = require('./modelQueryProps');\nconst { isFunction, isString } = require('../utils/objectUtils');\nconst { parseRelationsIntoModelInstances } = require('./modelParseRelations');\n\nfunction setJson(model, json, options) {\n  json = json || {};\n  options = options || {};\n\n  if (Object.prototype.toString.call(json) !== '[object Object]') {\n    throw new Error(\n      'You should only pass objects to $setJson method. ' +\n        '$setJson method was given an invalid value ' +\n        json\n    );\n  }\n\n  if (!json.$isObjectionModel) {\n    // json can contain \"query properties\" like `raw` instances, query builders etc.\n    // We take them out of `json` and store them to a hidden property $$queryProps\n    // in the model instance for later use.\n    json = splitQueryProps(model, json);\n  }\n\n  json = model.$parseJson(json, options);\n  json = model.$validate(json, options);\n\n  model.$set(json);\n\n  if (!options.skipParseRelations) {\n    parseRelationsIntoModelInstances(model, json, options);\n  }\n\n  return model;\n}\n\nfunction setDatabaseJson(model, json) {\n  json = model.$parseDatabaseJson(json);\n\n  if (json) {\n    const keys = Object.keys(json);\n\n    for (let i = 0, l = keys.length; i < l; ++i) {\n      const key = keys[i];\n      model[key] = json[key];\n    }\n  }\n\n  return model;\n}\n\nfunction setFast(model, obj) {\n  if (obj) {\n    // Don't try to set read-only properties. They can easily get here\n    // through `fromJson` when parsing an object that was previously\n    // serialized from a model instance.\n    const readOnlyAttr = model.constructor.getReadOnlyAttributes();\n    const keys = Object.keys(obj);\n\n    for (let i = 0, l = keys.length; i < l; ++i) {\n      const key = keys[i];\n      const value = obj[key];\n\n      if (!isInternalProp(key) && !isFunction(value) && !readOnlyAttr.includes(key)) {\n        model[key] = value;\n      }\n    }\n  }\n\n  return model;\n}\n\nfunction setRelated(model, relation, models) {\n  relation = ensureRelation(model, relation);\n\n  if (relation.isOneToOne()) {\n    if (Array.isArray(models)) {\n      if (models.length === 0) {\n        model[relation.name] = null;\n      } else {\n        model[relation.name] = models[0] || null;\n      }\n    } else {\n      model[relation.name] = models || null;\n    }\n  } else {\n    if (!models) {\n      model[relation.name] = [];\n    } else if (Array.isArray(models)) {\n      model[relation.name] = models;\n    } else {\n      model[relation.name] = [models];\n    }\n  }\n\n  return this;\n}\n\nfunction appendRelated(model, relation, models) {\n  relation = ensureRelation(model, relation);\n\n  if (!model[relation.name] || relation.isOneToOne()) {\n    return model.$setRelated(relation, models);\n  } else {\n    if (Array.isArray(models)) {\n      models.forEach(it => model[relation.name].push(it));\n    } else if (models) {\n      model[relation.name].push(models);\n    }\n  }\n\n  return this;\n}\n\nfunction ensureRelation(model, relation) {\n  if (isString(relation)) {\n    return model.constructor.getRelation(relation);\n  } else {\n    return relation;\n  }\n}\n\nmodule.exports = {\n  setFast,\n  setJson,\n  setDatabaseJson,\n  setRelated,\n  appendRelated\n};\n","'use strict';\n\nconst { defineNonEnumerableProperty } = require('./modelUtils');\nconst { isPromise } = require('../utils/promiseUtils');\n\nconst TABLE_METADATA = '$$tableMetadata';\n\nfunction fetchTableMetadata(\n  modelClass,\n  { parentBuilder = null, knex = null, force = false, table = null } = {}\n) {\n  // The table isn't necessarily same as `modelClass.getTableName()` for example if\n  // a view is queried instead.\n  if (!table) {\n    if (parentBuilder) {\n      table = parentBuilder.tableNameFor(modelClass.getTableName());\n    } else {\n      table = modelClass.getTableName();\n    }\n  }\n\n  // Call tableMetadata first instead of accessing the cache directly beause\n  // tableMetadata may have been overriden.\n  let metadata = modelClass.tableMetadata({ table });\n\n  if (!force && metadata) {\n    return Promise.resolve(metadata);\n  }\n\n  // Memoize metadata but only for modelClass. The hasOwnProperty check\n  // will fail for subclasses and the value gets recreated.\n  if (!modelClass.hasOwnProperty(TABLE_METADATA)) {\n    defineNonEnumerableProperty(modelClass, TABLE_METADATA, new Map());\n  }\n\n  // The cache needs to be checked in addition to calling tableMetadata\n  // because the cache may contain a temporary promise in which case\n  // tableMetadata returns null.\n  metadata = modelClass[TABLE_METADATA].get(table);\n\n  if (!force && metadata) {\n    return Promise.resolve(metadata);\n  } else {\n    const promise = modelClass\n      .query(knex)\n      .childQueryOf(parentBuilder)\n      .columnInfo({ table })\n      .then(columnInfo => {\n        const metadata = {\n          columns: Object.keys(columnInfo)\n        };\n\n        modelClass[TABLE_METADATA].set(table, metadata);\n        return metadata;\n      });\n\n    modelClass[TABLE_METADATA].set(table, promise);\n    return promise;\n  }\n}\n\nfunction tableMetadata(modelClass, { table } = {}) {\n  if (modelClass.hasOwnProperty(TABLE_METADATA)) {\n    const metadata = modelClass[TABLE_METADATA].get(table || modelClass.getTableName());\n\n    if (isPromise(metadata)) {\n      return null;\n    } else {\n      return metadata;\n    }\n  } else {\n    return null;\n  }\n}\n\nmodule.exports = {\n  fetchTableMetadata,\n  tableMetadata\n};\n","'use strict';\n\nconst { isInternalProp } = require('../utils/internalPropUtils');\nconst { mergeQueryProps } = require('./modelQueryProps');\nconst { isObject, cloneDeep, isFunction } = require('../utils/objectUtils');\nconst EMPTY_ARRAY = [];\n\nfunction toJson(model, optIn) {\n  const modelClass = model.constructor;\n\n  const opt = {\n    virtuals: getVirtuals(optIn),\n    shallow: isShallow(optIn),\n    omit: getOmit(optIn, modelClass),\n    pick: null,\n    omitFromJson: model.$omitFromJson() || null,\n    cloneObjects: modelClass.cloneObjectAttributes\n  };\n\n  let json = toExternalJsonImpl(model, opt);\n  json = model.$formatJson(json);\n\n  return json;\n}\n\nfunction toDatabaseJson(model, builder) {\n  const modelClass = model.constructor;\n\n  const opt = {\n    virtuals: false,\n    shallow: true,\n    omit: modelClass.getRelationNames(),\n    pick: getPick(modelClass),\n    omitFromJson: model.$omitFromDatabaseJson() || null,\n    cloneObjects: modelClass.cloneObjectAttributes\n  };\n\n  let json = toDatabaseJsonImpl(model, opt);\n  json = model.$formatDatabaseJson(json);\n\n  return mergeQueryProps(model, json, opt.omitFromJson, builder);\n}\n\nfunction getVirtuals(opt) {\n  if (!opt) {\n    return true;\n  } else if (Array.isArray(opt.virtuals)) {\n    return opt.virtuals;\n  } else {\n    return opt.virtuals !== false;\n  }\n}\n\nfunction isShallow(opt) {\n  return !!opt && !!opt.shallow;\n}\n\nfunction getOmit(opt, modelClass) {\n  return isShallow(opt) ? modelClass.getRelationNames() : null;\n}\n\nfunction getPick(modelClass) {\n  const jsonSchema = modelClass.getJsonSchema();\n  return (jsonSchema && modelClass.pickJsonSchemaProperties && jsonSchema.properties) || null;\n}\n\nfunction toExternalJsonImpl(model, opt) {\n  const json = {};\n  const keys = Object.keys(model);\n  const vAttr = getVirtualAttributes(model, opt);\n\n  for (let i = 0, l = keys.length; i < l; ++i) {\n    const key = keys[i];\n    const value = model[key];\n\n    assignJsonValue(json, key, value, opt);\n  }\n\n  if (vAttr.length !== 0) {\n    assignVirtualAttributes(json, model, vAttr, opt);\n  }\n\n  return json;\n}\n\nfunction getVirtualAttributes(model, opt) {\n  if (Array.isArray(opt.virtuals)) {\n    return opt.virtuals;\n  } else if (opt.virtuals === true) {\n    return model.constructor.getVirtualAttributes();\n  } else {\n    return EMPTY_ARRAY;\n  }\n}\n\nfunction toDatabaseJsonImpl(model, opt) {\n  const json = {};\n  const keys = Object.keys(model);\n\n  for (let i = 0, l = keys.length; i < l; ++i) {\n    const key = keys[i];\n    const value = model[key];\n\n    assignJsonValue(json, key, value, opt);\n  }\n\n  return json;\n}\n\nfunction assignJsonValue(json, key, value, opt) {\n  const type = typeof value;\n\n  if (\n    type !== 'function' &&\n    type !== 'undefined' &&\n    !isInternalProp(key) &&\n    !shouldOmit(opt, key) &&\n    shouldPick(opt, key)\n  ) {\n    if (isObject(value)) {\n      json[key] = toJsonObject(value, opt);\n    } else {\n      json[key] = value;\n    }\n  }\n}\n\nfunction shouldOmit(opt, key) {\n  return (\n    (opt.omit !== null && opt.omit.includes(key)) ||\n    (opt.omitFromJson !== null && opt.omitFromJson.includes(key))\n  );\n}\n\nfunction shouldPick(opt, key) {\n  return opt.pick === null || key in opt.pick;\n}\n\nfunction assignVirtualAttributes(json, model, vAttr, opt) {\n  for (let i = 0, l = vAttr.length; i < l; ++i) {\n    const key = vAttr[i];\n    let value = model[key];\n\n    if (isFunction(value)) {\n      value = value.call(model);\n    }\n\n    assignJsonValue(json, key, value, opt);\n  }\n}\n\nfunction toJsonObject(value, opt) {\n  if (Array.isArray(value)) {\n    return toJsonArray(value, opt);\n  } else if (value.$isObjectionModel) {\n    // No branch for $toDatabaseJson here since there is never a need\n    // to have nested models in database rows.\n    return value.$toJson(opt);\n  } else if (Buffer.isBuffer(value)) {\n    return value;\n  } else if (opt.cloneObjects) {\n    return cloneDeep(value);\n  } else {\n    return value;\n  }\n}\n\nfunction toJsonArray(value, opt) {\n  const ret = new Array(value.length);\n\n  for (let i = 0, l = ret.length; i < l; ++i) {\n    const item = value[i];\n\n    if (isObject(item)) {\n      ret[i] = toJsonObject(item, opt);\n    } else {\n      ret[i] = item;\n    }\n  }\n\n  return ret;\n}\n\nmodule.exports = {\n  toJson,\n  toDatabaseJson\n};\n","'use strict';\n\nconst hiddenProps = ['$$queryProps'];\n\nconst staticHiddenProps = [\n  '$$knex',\n  '$$validator',\n  '$$jsonSchema',\n  '$$colToProp',\n  '$$propToCol',\n  '$$relationMappings',\n  '$$relations',\n  '$$relationNames',\n  '$$jsonAttributes',\n  '$$columnNameMappers',\n  '$$tableMetadata',\n  '$$readOnlyAttributes',\n  '$$idRelationProperty',\n  '$$virtualAttributes'\n];\n\nfunction defineNonEnumerableProperty(obj, prop, value) {\n  Object.defineProperty(obj, prop, {\n    enumerable: false,\n    writable: true,\n    configurable: true,\n    value\n  });\n}\n\nfunction keyByProps(models, props) {\n  const map = new Map();\n\n  for (let i = 0, l = models.length; i < l; ++i) {\n    const model = models[i];\n    map.set(model.$propKey(props), model);\n  }\n\n  return map;\n}\n\nmodule.exports = {\n  hiddenProps,\n  staticHiddenProps,\n  defineNonEnumerableProperty,\n  keyByProps\n};\n","'use strict';\n\nconst { clone } = require('./modelClone');\n\nfunction validate(model, json, options = {}) {\n  json = json || model;\n\n  const inputJson = json;\n  const validatingModelInstance = inputJson && inputJson.$isObjectionModel;\n\n  if (options.skipValidation) {\n    return json;\n  }\n\n  if (validatingModelInstance) {\n    // Strip away relations and other internal stuff.\n    // TODO 1: This should use `json.$toJson()` since we always validate the input representation!\n    // TODO 2: This should also keep the relations in the object because some validators may\n    //         depend on the relations.\n    json = clone(json, true, true);\n    // We can mutate `json` now that we took a copy of it.\n    options = Object.assign({}, options, { mutable: true });\n  }\n\n  const modelClass = model.constructor;\n  const validator = modelClass.getValidator();\n  const args = {\n    options,\n    model,\n    json,\n    ctx: Object.create(null)\n  };\n\n  validator.beforeValidate(args);\n  json = validator.validate(args);\n  validator.afterValidate(args);\n\n  if (validatingModelInstance) {\n    // If we cloned `json`, we need to copy the possible default values.\n    return inputJson.$set(json);\n  } else {\n    return json;\n  }\n}\n\nmodule.exports = {\n  validate\n};\n","'use strict';\n\nconst { isObject } = require('../utils/objectUtils');\n\n// Property keys needs to be prefixed with a non-numeric character so that\n// they are not considered indexes when used as object keys.\nconst PROP_KEY_PREFIX = 'k_';\n\nfunction values(model, args) {\n  switch (args.length) {\n    case 1:\n      return values1(model, args);\n    case 2:\n      return values2(model, args);\n    case 3:\n      return values3(model, args);\n    default:\n      return valuesN(model, args);\n  }\n}\n\nfunction propKey(model, props) {\n  switch (props.length) {\n    case 1:\n      return propKey1(model, props);\n    case 2:\n      return propKey2(model, props);\n    case 3:\n      return propKey3(model, props);\n    default:\n      return propKeyN(model, props);\n  }\n}\n\nfunction hasProps(model, props) {\n  for (let i = 0; i < props.length; ++i) {\n    const value = model[props[i]];\n\n    if (isNullOrUndefined(value)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction values1(model, args) {\n  return [model[args[0]]];\n}\n\nfunction values2(model, args) {\n  return [model[args[0]], model[args[1]]];\n}\n\nfunction values3(model, args) {\n  return [model[args[0]], model[args[1]], model[args[2]]];\n}\n\nfunction valuesN(model, args) {\n  const ret = new Array(args.length);\n\n  for (let i = 0, l = args.length; i < l; ++i) {\n    ret[i] = model[args[i]];\n  }\n\n  return ret;\n}\n\nfunction propKey1(model, props) {\n  return PROP_KEY_PREFIX + propToStr(model[props[0]]);\n}\n\nfunction propKey2(model, props) {\n  return PROP_KEY_PREFIX + propToStr(model[props[0]]) + ',' + propToStr(model[props[1]]);\n}\n\nfunction propKey3(model, props) {\n  return (\n    PROP_KEY_PREFIX +\n    propToStr(model[props[0]]) +\n    ',' +\n    propToStr(model[props[1]]) +\n    ',' +\n    propToStr(model[props[2]])\n  );\n}\n\nfunction propKeyN(model, props) {\n  let key = PROP_KEY_PREFIX;\n\n  for (let i = 0, l = props.length; i < l; ++i) {\n    key += propToStr(model[props[i]]);\n\n    if (i < l - 1) {\n      key += ',';\n    }\n  }\n\n  return key;\n}\n\nfunction propToStr(value) {\n  if (value === null) {\n    return 'null';\n  } else if (value === undefined) {\n    return 'undefined';\n  } else if (isObject(value)) {\n    return JSON.stringify(value);\n  } else {\n    return `${value}`;\n  }\n}\n\nfunction isNullOrUndefined(val) {\n  return val === null || val === undefined;\n}\n\nmodule.exports = {\n  PROP_KEY_PREFIX,\n  propToStr,\n  values,\n  hasProps,\n  propKey\n};\n","'use strict';\n\nfunction visitModels(models, modelClass, visitor) {\n  doVisit(models, modelClass, null, null, visitor);\n}\n\nfunction doVisit(models, modelClass, parent, rel, visitor) {\n  if (Array.isArray(models)) {\n    visitMany(models, modelClass, parent, rel, visitor);\n  } else if (models) {\n    visitOne(models, modelClass, parent, rel, visitor);\n  }\n}\n\nfunction visitMany(models, modelClass, parent, rel, visitor) {\n  for (let i = 0, l = models.length; i < l; ++i) {\n    visitOne(models[i], modelClass, parent, rel, visitor);\n  }\n}\n\nfunction visitOne(model, modelClass, parent, rel, visitor) {\n  if (model) {\n    visitor(model, modelClass, parent, rel);\n  }\n\n  const relationNames = modelClass.getRelationNames();\n\n  for (let i = 0, l = relationNames.length; i < l; ++i) {\n    const relationName = relationNames[i];\n    const relatedObj = model[relationName];\n\n    if (relatedObj) {\n      const relation = modelClass.getRelation(relationName);\n      doVisit(relatedObj, relation.relatedModelClass, model, relation, visitor);\n    }\n  }\n}\n\nmodule.exports = {\n  visitModels\n};\n","'use strict';\n\nconst { Model: NativeModel } = require('./model/Model');\nconst { QueryBuilder: NativeQueryBuilder } = require('./queryBuilder/QueryBuilder');\nconst { QueryBuilderBase } = require('./queryBuilder/QueryBuilderBase');\nconst { QueryBuilderOperation } = require('./queryBuilder/operations/QueryBuilderOperation');\nconst { RelationExpression } = require('./queryBuilder/RelationExpression');\nconst { ValidationError } = require('./model/ValidationError');\nconst { NotFoundError } = require('./model/NotFoundError');\nconst { AjvValidator: NativeAjvValidator } = require('./model/AjvValidator');\nconst { Validator: NativeValidator } = require('./model/Validator');\nconst { Relation } = require('./relations/Relation');\nconst { HasOneRelation } = require('./relations/hasOne/HasOneRelation');\nconst { HasManyRelation } = require('./relations/hasMany/HasManyRelation');\nconst { BelongsToOneRelation } = require('./relations/belongsToOne/BelongsToOneRelation');\nconst { HasOneThroughRelation } = require('./relations/hasOneThrough/HasOneThroughRelation');\nconst { ManyToManyRelation } = require('./relations/manyToMany/ManyToManyRelation');\nconst { transaction } = require('./transaction');\n\nconst {\n  snakeCaseMappers,\n  knexSnakeCaseMappers,\n  knexIdentifierMapping\n} = require('./utils/identifierMapping');\nconst { compose, mixin } = require('./utils/mixin');\nconst { ref } = require('./queryBuilder/ReferenceBuilder');\nconst { lit } = require('./queryBuilder/LiteralBuilder');\nconst { raw } = require('./queryBuilder/RawBuilder');\n\nconst { inherit } = require('../lib/utils/classUtils');\nconst { deprecate } = require('../lib/utils/deprecate');\n\n// We need to wrap the classes, that people can inherit, with ES5 classes\n// so that babel is able to use ES5 inheritance. sigh... Maybe people\n// should stop transpiling node apps to ES5 in the year 2019? Node 6\n// with full class support was released three years ago.\n\nfunction Model() {\n  // Nothing to do here.\n}\n\nfunction QueryBuilder(...args) {\n  NativeQueryBuilder.init(this, ...args);\n}\n\nfunction Validator(...args) {\n  NativeValidator.init(this, ...args);\n}\n\nfunction AjvValidator(...args) {\n  NativeAjvValidator.init(this, ...args);\n}\n\ninherit(Model, NativeModel);\ninherit(QueryBuilder, NativeQueryBuilder);\ninherit(Validator, NativeValidator);\ninherit(AjvValidator, NativeAjvValidator);\n\nModel.QueryBuilder = QueryBuilder;\n\nmodule.exports = {\n  Model,\n  QueryBuilder,\n  QueryBuilderBase,\n  QueryBuilderOperation,\n  RelationExpression,\n  ValidationError,\n  NotFoundError,\n  AjvValidator,\n  Validator,\n  Relation,\n  HasOneRelation,\n  HasManyRelation,\n  BelongsToOneRelation,\n  HasOneThroughRelation,\n  ManyToManyRelation,\n\n  transaction,\n  compose,\n  mixin,\n  ref,\n  lit,\n  raw,\n\n  snakeCaseMappers,\n  knexSnakeCaseMappers,\n  knexIdentifierMapping\n};\n\nObject.defineProperties(module.exports, {\n  Promise: {\n    enumerable: true,\n\n    get: () => {\n      deprecate(\n        'objection.Promise is deprecated and will be removed in 2.0.0. Bluebird dependency will be removed in 2.0.0.'\n      );\n      return require('bluebird');\n    }\n  },\n\n  lodash: {\n    enumerable: true,\n\n    get: () => {\n      deprecate(\n        'objection.lodash is deprecated and will be removed in 2.0.0. lodash dependency will be removed in 2.0.0.'\n      );\n      return require('lodash');\n    }\n  }\n});\n","'use strict';\n\nclass InternalOptions {\n  constructor() {\n    this.skipUndefined = false;\n    this.keepImplicitJoinProps = false;\n    this.isInternalQuery = false;\n    this.debug = false;\n  }\n\n  clone() {\n    const copy = new this.constructor();\n\n    copy.skipUndefined = this.skipUndefined;\n    copy.keepImplicitJoinProps = this.keepImplicitJoinProps;\n    copy.isInternalQuery = this.isInternalQuery;\n    copy.debug = this.debug;\n\n    return copy;\n  }\n}\n\nmodule.exports = {\n  InternalOptions\n};\n","'use strict';\n\nconst { QueryBuilderOperationSupport } = require('./QueryBuilderOperationSupport');\nconst { KnexOperation } = require('./operations/KnexOperation');\n\nclass JoinBuilder extends QueryBuilderOperationSupport {\n  using(...args) {\n    return this.addOperation(new KnexOperation('using'), args);\n  }\n\n  on(...args) {\n    return this.addOperation(new KnexOperation('on'), args);\n  }\n\n  orOn(...args) {\n    return this.addOperation(new KnexOperation('orOn'), args);\n  }\n\n  onBetween(...args) {\n    return this.addOperation(new KnexOperation('onBetween'), args);\n  }\n\n  onNotBetween(...args) {\n    return this.addOperation(new KnexOperation('onNotBetween'), args);\n  }\n\n  orOnBetween(...args) {\n    return this.addOperation(new KnexOperation('orOnBetween'), args);\n  }\n\n  orOnNotBetween(...args) {\n    return this.addOperation(new KnexOperation('orOnNotBetween'), args);\n  }\n\n  onIn(...args) {\n    return this.addOperation(new KnexOperation('onIn'), args);\n  }\n\n  onNotIn(...args) {\n    return this.addOperation(new KnexOperation('onNotIn'), args);\n  }\n\n  orOnIn(...args) {\n    return this.addOperation(new KnexOperation('orOnIn'), args);\n  }\n\n  orOnNotIn(...args) {\n    return this.addOperation(new KnexOperation('orOnNotIn'), args);\n  }\n\n  onNull(...args) {\n    return this.addOperation(new KnexOperation('onNull'), args);\n  }\n\n  orOnNull(...args) {\n    return this.addOperation(new KnexOperation('orOnNull'), args);\n  }\n\n  onNotNull(...args) {\n    return this.addOperation(new KnexOperation('onNotNull'), args);\n  }\n\n  orOnNotNull(...args) {\n    return this.addOperation(new KnexOperation('orOnNotNull'), args);\n  }\n\n  onExists(...args) {\n    return this.addOperation(new KnexOperation('onExists'), args);\n  }\n\n  orOnExists(...args) {\n    return this.addOperation(new KnexOperation('orOnExists'), args);\n  }\n\n  onNotExists(...args) {\n    return this.addOperation(new KnexOperation('onNotExists'), args);\n  }\n\n  orOnNotExists(...args) {\n    return this.addOperation(new KnexOperation('orOnNotExists'), args);\n  }\n\n  type(...args) {\n    return this.addOperation(new KnexOperation('type'), args);\n  }\n\n  andOn(...args) {\n    return this.addOperation(new KnexOperation('andOn'), args);\n  }\n\n  andOnIn(...args) {\n    return this.addOperation(new KnexOperation('andOnIn'), args);\n  }\n\n  andOnNotIn(...args) {\n    return this.addOperation(new KnexOperation('andOnNotIn'), args);\n  }\n\n  andOnNull(...args) {\n    return this.addOperation(new KnexOperation('andOnNull'), args);\n  }\n\n  andOnNotNull(...args) {\n    return this.addOperation(new KnexOperation('andOnNotNull'), args);\n  }\n\n  andOnExists(...args) {\n    return this.addOperation(new KnexOperation('andOnExists'), args);\n  }\n\n  andOnNotExists(...args) {\n    return this.addOperation(new KnexOperation('andOnNotExists'), args);\n  }\n\n  andOnBetween(...args) {\n    return this.addOperation(new KnexOperation('andOnBetween'), args);\n  }\n\n  andOnNotBetween(...args) {\n    return this.addOperation(new KnexOperation('andOnNotBetween'), args);\n  }\n\n  onVal(...args) {\n    return this.addOperation(new KnexOperation('onVal'), args);\n  }\n\n  andOnVal(...args) {\n    return this.addOperation(new KnexOperation('andOnVal'), args);\n  }\n\n  orOnVal(...args) {\n    return this.addOperation(new KnexOperation('orOnVal'), args);\n  }\n}\n\nmodule.exports = {\n  JoinBuilder\n};\n","'use strict';\n\nconst { asArray, isObject } = require('../utils/objectUtils');\nconst { buildArg } = require('../utils/buildUtils');\nconst { deprecate } = require('../utils/deprecate');\n\nclass LiteralBuilder {\n  constructor(value) {\n    this._value = value;\n    this._cast = null;\n    // Cast objects and arrays to json by default.\n    this._toJson = isObject(value);\n    this._toArray = false;\n  }\n\n  get cast() {\n    return this._cast;\n  }\n\n  castText() {\n    return this.castTo('text');\n  }\n\n  castInt() {\n    return this.castTo('integer');\n  }\n\n  castBigInt() {\n    return this.castTo('bigint');\n  }\n\n  castFloat() {\n    return this.castTo('float');\n  }\n\n  castDecimal() {\n    return this.castTo('decimal');\n  }\n\n  castReal() {\n    return this.castTo('real');\n  }\n\n  castBool() {\n    return this.castTo('boolean');\n  }\n\n  castJson() {\n    this._toArray = false;\n    this._toJson = true;\n    this._cast = 'jsonb';\n    return this;\n  }\n\n  castArray() {\n    deprecate(\n      'castArray() is deprecated. Use asArray() instead. castArray() will be removed in 2.0'\n    );\n    return this.asArray();\n  }\n\n  castType(sqlType) {\n    deprecate(\n      'castType(type) is deprecated. Use castTo(type) instead. castType(type) will be removed in 2.0'\n    );\n    return this.castTo(sqlType);\n  }\n\n  castTo(sqlType) {\n    this._cast = sqlType;\n    return this;\n  }\n\n  asArray() {\n    this._toJson = false;\n    this._toArray = true;\n    return this;\n  }\n\n  toKnexRaw(builder) {\n    let sql = null;\n    let bindings = null;\n\n    if (this._toJson) {\n      bindings = JSON.stringify(this._value);\n      sql = '?';\n    } else if (this._toArray) {\n      bindings = asArray(this._value).map(it => buildArg(it, builder));\n      sql = `ARRAY[${bindings.map(() => '?').join(', ')}]`;\n    } else {\n      bindings = this._value;\n      sql = '?';\n    }\n\n    if (this._cast) {\n      sql = `CAST(${sql} AS ${this._cast})`;\n    }\n\n    return builder.knex().raw(sql, bindings);\n  }\n}\n\nfunction lit(val) {\n  return new LiteralBuilder(val);\n}\n\nmodule.exports = {\n  LiteralBuilder,\n  lit\n};\n","'use strict';\n\nconst Bluebird = require('bluebird');\n\nconst { raw } = require('./RawBuilder');\nconst { deprecate } = require('../utils/deprecate');\nconst { createModifier } = require('../utils/createModifier');\nconst { ValidationErrorType } = require('../model/ValidationError');\nconst { isObject, isString, isFunction, last } = require('../utils/objectUtils');\nconst { RelationExpression, DuplicateRelationError } = require('./RelationExpression');\nconst { Selection } = require('./operations/select/Selection');\n\nconst { QueryBuilderContext } = require('./QueryBuilderContext');\nconst { QueryBuilderBase } = require('./QueryBuilderBase');\n\nconst { FindOperation } = require('./operations/FindOperation');\nconst { DeleteOperation } = require('./operations/DeleteOperation');\nconst { UpdateOperation } = require('./operations/UpdateOperation');\nconst { InsertOperation } = require('./operations/InsertOperation');\nconst { RelateOperation } = require('./operations/RelateOperation');\nconst { UnrelateOperation } = require('./operations/UnrelateOperation');\n\nconst { JoinEagerOperation } = require('./operations/eager/JoinEagerOperation');\nconst { NaiveEagerOperation } = require('./operations/eager/NaiveEagerOperation');\nconst { WhereInEagerOperation } = require('./operations/eager/WhereInEagerOperation');\n\nconst { InsertGraphAndFetchOperation } = require('./operations/InsertGraphAndFetchOperation');\nconst { UpsertGraphAndFetchOperation } = require('./operations/UpsertGraphAndFetchOperation');\nconst { InsertAndFetchOperation } = require('./operations/InsertAndFetchOperation');\nconst { UpdateAndFetchOperation } = require('./operations/UpdateAndFetchOperation');\nconst { JoinRelationOperation } = require('./operations/JoinRelationOperation');\nconst { OnBuildKnexOperation } = require('./operations/OnBuildKnexOperation');\nconst { InsertGraphOperation } = require('./operations/InsertGraphOperation');\nconst { UpsertGraphOperation } = require('./operations/UpsertGraphOperation');\nconst { RunBeforeOperation } = require('./operations/RunBeforeOperation');\nconst { RunAfterOperation } = require('./operations/RunAfterOperation');\nconst { FindByIdOperation } = require('./operations/FindByIdOperation');\nconst { FindByIdsOperation } = require('./operations/FindByIdsOperation');\nconst { OnBuildOperation } = require('./operations/OnBuildOperation');\nconst { OnErrorOperation } = require('./operations/OnErrorOperation');\nconst { SelectOperation } = require('./operations/select/SelectOperation');\nconst { EagerOperation } = require('./operations/eager/EagerOperation');\nconst { RangeOperation } = require('./operations/RangeOperation');\nconst { FirstOperation } = require('./operations/FirstOperation');\nconst { FromOperation } = require('./operations/FromOperation');\nconst { KnexOperation } = require('./operations/KnexOperation');\n\nclass QueryBuilder extends QueryBuilderBase {\n  static init(self, modelClass) {\n    super.init(self, modelClass);\n\n    self._resultModelClass = null;\n    self._explicitRejectValue = null;\n    self._explicitResolveValue = null;\n\n    self._allowedUpsertExpression = null;\n    self._findOperationOptions = modelClass.defaultFindOptions;\n\n    self._findOperationFactory = findOperationFactory;\n    self._insertOperationFactory = insertOperationFactory;\n    self._updateOperationFactory = updateOperationFactory;\n    self._patchOperationFactory = patchOperationFactory;\n    self._relateOperationFactory = relateOperationFactory;\n    self._unrelateOperationFactory = unrelateOperationFactory;\n    self._deleteOperationFactory = deleteOperationFactory;\n  }\n\n  static get QueryBuilderContext() {\n    return QueryBuilderContext;\n  }\n\n  static parseRelationExpression(expr) {\n    return RelationExpression.create(expr).toPojo();\n  }\n\n  tableNameFor(modelClassOrTableName, newTableName) {\n    return super.tableNameFor(getTableName(modelClassOrTableName), newTableName);\n  }\n\n  tableName(newTableName) {\n    return this.tableNameFor(this.modelClass().getTableName(), newTableName);\n  }\n\n  tableRef() {\n    return this.tableRefFor(this.modelClass().getTableName());\n  }\n\n  aliasFor(modelClassOrTableName, alias) {\n    return super.aliasFor(getTableName(modelClassOrTableName), alias);\n  }\n\n  alias(alias) {\n    return this.aliasFor(this.modelClass().getTableName(), alias);\n  }\n\n  fullIdColumnFor(modelClass) {\n    const tableName = this.tableRefFor(modelClass.getTableName());\n    const idColumn = modelClass.getIdColumn();\n\n    if (Array.isArray(idColumn)) {\n      return idColumn.map(col => `${tableName}.${col}`);\n    } else {\n      return `${tableName}.${idColumn}`;\n    }\n  }\n\n  fullIdColumn() {\n    return this.fullIdColumnFor(this.modelClass());\n  }\n\n  applyModifier(...args) {\n    for (const arg of args) {\n      const modifier = createModifier({\n        modifier: arg,\n        modelClass: this.modelClass()\n      });\n\n      modifier(this);\n    }\n\n    return this;\n  }\n\n  applyFilter(...args) {\n    return this.applyModifier(...args);\n  }\n\n  modify(...args) {\n    const arg = args[0];\n    if (isFunction(arg)) {\n      super.modify(...args);\n    } else if (arg) {\n      this.applyModifier(...args);\n    }\n    return this;\n  }\n\n  reject(error) {\n    this._explicitRejectValue = error;\n    return this;\n  }\n\n  resolve(value) {\n    this._explicitResolveValue = value;\n    return this;\n  }\n\n  isExplicitlyResolvedOrRejected() {\n    return !!(this._explicitRejectValue || this._explicitResolveValue);\n  }\n\n  isExecutable() {\n    return !this.isExplicitlyResolvedOrRejected() && !findQueryExecutorOperation(this);\n  }\n\n  findOperationFactory(factory) {\n    this._findOperationFactory = factory;\n    return this;\n  }\n\n  insertOperationFactory(factory) {\n    this._insertOperationFactory = factory;\n    return this;\n  }\n\n  updateOperationFactory(factory) {\n    this._updateOperationFactory = factory;\n    return this;\n  }\n\n  patchOperationFactory(factory) {\n    this._patchOperationFactory = factory;\n    return this;\n  }\n\n  deleteOperationFactory(factory) {\n    this._deleteOperationFactory = factory;\n    return this;\n  }\n\n  relateOperationFactory(factory) {\n    this._relateOperationFactory = factory;\n    return this;\n  }\n\n  unrelateOperationFactory(factory) {\n    this._unrelateOperationFactory = factory;\n    return this;\n  }\n\n  eagerAlgorithm(algorithm, eagerOptions) {\n    ensureEagerOperation(this, algorithm);\n\n    if (eagerOptions) {\n      this.eagerOptions(eagerOptions);\n    }\n\n    return this;\n  }\n\n  eager(exp, modifiers) {\n    const eagerOp = ensureEagerOperation(this);\n\n    eagerOp.expression = parseRelationExpression(this.modelClass(), exp);\n    eagerOp.modifiers = modifiers;\n\n    checkEager(this);\n    return this;\n  }\n\n  joinEager(exp, modifiers) {\n    return this.eagerAlgorithm(getJoinEagerAlgorithm(this)).eager(exp, modifiers);\n  }\n\n  naiveEager(exp, modifiers) {\n    return this.eagerAlgorithm(getNaiveEagerAlgorithm(this)).eager(exp, modifiers);\n  }\n\n  mergeEager(exp, modifiers) {\n    const eagerOp = ensureEagerOperation(this);\n\n    eagerOp.expression = eagerOp.expression.merge(parseRelationExpression(this.modelClass(), exp));\n\n    eagerOp.modifiers = Object.assign({}, eagerOp.modifiers, modifiers);\n\n    checkEager(this);\n    return this;\n  }\n\n  mergeJoinEager(exp, modifiers) {\n    return this.eagerAlgorithm(this.modelClass().JoinEagerAlgorithm).mergeEager(exp, modifiers);\n  }\n\n  mergeNaiveEager(exp, modifiers) {\n    return this.eagerAlgorithm(this.modelClass().NaiveEagerAlgorithm).mergeEager(exp, modifiers);\n  }\n\n  allowEager(exp) {\n    const eagerOp = ensureEagerOperation(this);\n    eagerOp.allowedExpression = parseRelationExpression(this.modelClass(), exp);\n\n    checkEager(this);\n    return this;\n  }\n\n  mergeAllowEager(exp) {\n    const eagerOp = ensureEagerOperation(this);\n\n    if (eagerOp.allowedExpression) {\n      eagerOp.allowedExpression = eagerOp.allowedExpression.merge(\n        parseRelationExpression(this.modelClass(), exp)\n      );\n    } else {\n      eagerOp.allowedExpression = parseRelationExpression(this.modelClass(), exp);\n    }\n\n    checkEager(this);\n    return this;\n  }\n\n  eagerObject() {\n    const eagerOp = this.findOperation(EagerOperation);\n\n    if (eagerOp && !eagerOp.expression.isEmpty) {\n      return eagerOp.expression.toPojo();\n    } else {\n      return null;\n    }\n  }\n\n  eagerModifiers() {\n    const eagerOp = this.findOperation(EagerOperation);\n\n    if (eagerOp && !eagerOp.expression.isEmpty) {\n      return Object.assign({}, eagerOp.modifiers);\n    } else {\n      return {};\n    }\n  }\n\n  eagerModifiersAtPath() {\n    const eagerOp = this.findOperation(EagerOperation);\n\n    if (eagerOp && !eagerOp.expression.isEmpty) {\n      return eagerOp.modifiersAtPath.map(it => Object.assign({}, it));\n    } else {\n      return [];\n    }\n  }\n\n  modifyEager(path, modifier) {\n    const eagerOp = ensureEagerOperation(this);\n    eagerOp.modifiersAtPath.push({ path, modifier });\n    return this;\n  }\n\n  filterEager(...args) {\n    return this.modifyEager(...args);\n  }\n\n  allowUpsert(exp) {\n    this._allowedUpsertExpression = exp || null;\n\n    if (isString(this._allowedUpsertExpression)) {\n      this._allowedUpsertExpression = parseRelationExpression(\n        this.modelClass(),\n        this._allowedUpsertExpression\n      );\n    }\n\n    return this;\n  }\n\n  allowedUpsertExpression() {\n    return this._allowedUpsertExpression;\n  }\n\n  allowInsert(exp) {\n    return this.allowUpsert(exp);\n  }\n\n  eagerOptions(opt) {\n    const eagerOp = ensureEagerOperation(this);\n    eagerOp.eagerOptions = Object.assign({}, eagerOp.eagerOptions, opt);\n    return this;\n  }\n\n  findOptions(opt) {\n    if (arguments.length !== 0) {\n      this._findOperationOptions = Object.assign({}, this._findOperationOptions, opt);\n      return this;\n    } else {\n      return this._findOperationOptions;\n    }\n  }\n\n  resultModelClass() {\n    return this._resultModelClass || this.modelClass();\n  }\n\n  isFind() {\n    return !(\n      this.isInsert() ||\n      this.isUpdate() ||\n      this.isDelete() ||\n      this.isRelate() ||\n      this.isUnrelate()\n    );\n  }\n\n  isInsert() {\n    return this.has(InsertOperation);\n  }\n\n  isUpdate() {\n    return this.has(UpdateOperation);\n  }\n\n  isDelete() {\n    return this.has(DeleteOperation);\n  }\n\n  isRelate() {\n    return this.has(RelateOperation);\n  }\n\n  isUnrelate() {\n    return this.has(UnrelateOperation);\n  }\n\n  hasWheres() {\n    return this.has(QueryBuilderBase.WhereSelector);\n  }\n\n  hasSelects() {\n    return this.has(QueryBuilderBase.SelectSelector);\n  }\n\n  hasEager() {\n    const eagerOp = this.findOperation(EagerOperation);\n    return !!eagerOp && !eagerOp.expression.isEmpty;\n  }\n\n  isSelectAll() {\n    if (this._operations.length === 0) {\n      return true;\n    }\n\n    const tableRef = this.tableRef();\n    const tableName = this.tableNameFor(this.modelClass().getTableName());\n\n    return this.everyOperation(op => {\n      if (op.constructor === SelectOperation) {\n        // SelectOperations with zero selections are the ones that only have\n        // raw items or other non-trivial selections.\n        return (\n          op.selections.length > 0 &&\n          op.selections.every(select => {\n            return (!select.table || select.table === tableRef) && select.column === '*';\n          })\n        );\n      } else if (op.constructor === FromOperation) {\n        return op.table === tableName;\n      } else if (op.name === 'as' || op.is(FindOperation)) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n  }\n\n  isFindQuery() {\n    deprecate(\n      `isFindQuery is deprecated. Use isFind instead. This method will be removed in version 2.0`\n    );\n    return this.isFind();\n  }\n\n  isEagerQuery() {\n    deprecate(\n      `isEagerQuery is deprecated. Use hasEager instead. This method will be removed in version 2.0`\n    );\n    return this.hasEager();\n  }\n\n  toString() {\n    try {\n      return this.toKnexQuery().toString();\n    } catch (err) {\n      return `This query cannot be built synchronously. Consider using debug() method instead.`;\n    }\n  }\n\n  toSql() {\n    return this.toString();\n  }\n\n  toFindQuery() {\n    return this.clone().clear(\n      op => op.is(InsertOperation) || op.is(UpdateOperation) || op.is(DeleteOperation)\n    );\n  }\n\n  clone() {\n    const builder = new this.constructor(this.modelClass());\n\n    // Call the super class's clone implementation.\n    this.baseCloneInto(builder);\n\n    builder._resultModelClass = this._resultModelClass;\n\n    builder._explicitRejectValue = this._explicitRejectValue;\n    builder._explicitResolveValue = this._explicitResolveValue;\n\n    builder._allowedUpsertExpression = this._allowedUpsertExpression;\n    builder._findOperationOptions = this._findOperationOptions;\n\n    builder._findOperationFactory = this._findOperationFactory;\n    builder._insertOperationFactory = this._insertOperationFactory;\n    builder._updateOperationFactory = this._updateOperationFactory;\n    builder._patchOperationFactory = this._patchOperationFactory;\n    builder._relateOperationFactory = this._relateOperationFactory;\n    builder._unrelateOperationFactory = this._unrelateOperationFactory;\n    builder._deleteOperationFactory = this._deleteOperationFactory;\n\n    return builder;\n  }\n\n  clearEager() {\n    this.clear(EagerOperation);\n    return this;\n  }\n\n  clearReject() {\n    this._explicitRejectValue = null;\n    return this;\n  }\n\n  clearResolve() {\n    this._explicitResolveValue = null;\n    return this;\n  }\n\n  castTo(modelClass) {\n    this._resultModelClass = modelClass;\n    return this;\n  }\n\n  then(...args) {\n    const promise = this.execute();\n    return promise.then(...args);\n  }\n\n  map(...args) {\n    const promise = this.execute();\n    return promise.map(...args);\n  }\n\n  reduce(...args) {\n    const promise = this.execute();\n    return promise.reduce(...args);\n  }\n\n  catch(...args) {\n    const promise = this.execute();\n    return promise.catch(...args);\n  }\n\n  return(...args) {\n    const promise = this.execute();\n    return promise.return(...args);\n  }\n\n  reflect() {\n    const promise = this.execute();\n    return promise.reflect();\n  }\n\n  bind(...args) {\n    const promise = this.execute();\n    return promise.bind(...args);\n  }\n\n  asCallback(...args) {\n    const promise = this.execute();\n    return promise.asCallback(...args);\n  }\n\n  nodeify(...args) {\n    const promise = this.execute();\n    return promise.nodeify(...args);\n  }\n\n  resultSize() {\n    const knex = this.knex();\n    const builder = this.clone().clear(/orderBy|offset|limit/);\n\n    const countQuery = knex.count('* as count').from(knexBuilder => {\n      builder.toKnexQuery(knexBuilder).as('temp');\n    });\n\n    if (this.internalOptions().debug) {\n      countQuery.debug();\n    }\n\n    return countQuery.then(\n      result => (result[0] && result[0].count ? parseInt(result[0].count, 10) : 0)\n    );\n  }\n\n  toKnexQuery(knexBuilder = this.knex().queryBuilder()) {\n    // Take a clone so that we don't modify this instance during build.\n    let builder = this.clone();\n\n    builder = addImplicitOperations(builder);\n    builder = callOnBuildHooks(builder);\n\n    const queryExecutorOperation = findQueryExecutorOperation(builder);\n\n    if (queryExecutorOperation) {\n      // If the query executor is set, we build the builder that it returns.\n      return queryExecutorOperation.queryExecutor(builder).toKnexQuery();\n    } else {\n      return buildKnexQuery(builder, knexBuilder);\n    }\n  }\n\n  execute() {\n    // Take a clone so that we don't modify this instance during execution.\n    const builder = this.clone();\n\n    return Bluebird.try(() => beforeExecute(builder))\n      .then(() => doExecute(builder))\n      .then(result => afterExecute(builder, result))\n      .catch(error => handleExecuteError(builder, error));\n  }\n\n  pluck(propertyName) {\n    return this.runAfter(result => {\n      if (Array.isArray(result)) {\n        return result.map(it => it && it[propertyName]);\n      } else if (isObject(result)) {\n        return result[propertyName];\n      } else {\n        return result;\n      }\n    });\n  }\n\n  throwIfNotFound() {\n    return this.runAfter(result => {\n      if (\n        (Array.isArray(result) && result.length === 0) ||\n        result === null ||\n        result === undefined ||\n        result === 0\n      ) {\n        throw this.modelClass().createNotFoundError(this.context());\n      } else {\n        return result;\n      }\n    });\n  }\n\n  findSelection(selection, explicit = false) {\n    let noSelectStatements = true;\n    let selectionInstance = null;\n\n    this.forEachOperation(true, op => {\n      if (op.constructor === SelectOperation) {\n        selectionInstance = op.findSelection(this, selection);\n        noSelectStatements = false;\n\n        if (selectionInstance) {\n          return false;\n        }\n      }\n    });\n\n    if (selectionInstance) {\n      return selectionInstance;\n    }\n\n    if (noSelectStatements && !explicit) {\n      const selectAll = new Selection(this.tableRef(), '*');\n\n      if (Selection.doesSelect(this, selectAll, selection)) {\n        return selectAll;\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  findAllSelections() {\n    let allSelections = [];\n\n    this.forEachOperation(true, op => {\n      if (op.constructor === SelectOperation) {\n        allSelections = allSelections.concat(op.selections);\n      }\n    });\n\n    return allSelections;\n  }\n\n  hasSelection(selection, explicit) {\n    return this.findSelection(selection, explicit) !== null;\n  }\n\n  hasSelectionAs(selection, alias, explicit) {\n    selection = Selection.create(selection);\n    const foundSelection = this.findSelection(selection, explicit);\n\n    if (foundSelection === null) {\n      return false;\n    } else {\n      if (foundSelection.column === '*') {\n        // * selects the columns with their column names as aliases.\n        return selection.column === alias;\n      } else {\n        return foundSelection.name === alias;\n      }\n    }\n  }\n\n  traverse(modelClass, traverser) {\n    if (typeof traverser === 'undefined') {\n      traverser = modelClass;\n      modelClass = null;\n    }\n\n    return this.runAfter(result => {\n      this.resultModelClass().traverse(modelClass, result, traverser);\n      return result;\n    });\n  }\n\n  pick(modelClass, properties) {\n    if (typeof properties === 'undefined') {\n      properties = modelClass;\n      modelClass = null;\n    }\n\n    // Turn the properties into a hash for performance.\n    properties = properties.reduce((obj, prop) => {\n      obj[prop] = true;\n      return obj;\n    }, {});\n\n    return this.traverse(modelClass, model => {\n      model.$pick(properties);\n    });\n  }\n\n  omit(modelClass, properties) {\n    if (typeof properties === 'undefined') {\n      properties = modelClass;\n      modelClass = null;\n    }\n\n    // Turn the properties into a hash for performance.\n    properties = properties.reduce((obj, prop) => {\n      obj[prop] = true;\n      return obj;\n    }, {});\n\n    return this.traverse(modelClass, model => {\n      model.$omit(properties);\n    });\n  }\n\n  page(page, pageSize) {\n    return this.range(+page * +pageSize, (+page + 1) * +pageSize - 1);\n  }\n\n  columnInfo({ table = null } = {}) {\n    table = table || this.tableNameFor(this.modelClass().getTableName());\n\n    const knex = this.knex();\n    const tableParts = table.split('.');\n    const columnInfoQuery = knex(last(tableParts)).columnInfo();\n\n    if (tableParts.length > 1) {\n      columnInfoQuery.withSchema(tableParts[0]);\n    }\n\n    if (this.internalOptions().debug) {\n      columnInfoQuery.debug();\n    }\n\n    return columnInfoQuery;\n  }\n\n  withSchema(schema) {\n    this.internalContext().onBuild.push(builder => {\n      if (!builder.has(/withSchema/)) {\n        // Need to push this operation to the front because knex doesn't use the\n        // schema for operations called before `withSchema`.\n        builder.addOperationToFront(new KnexOperation('withSchema'), [schema]);\n      }\n    });\n\n    return this;\n  }\n\n  debug /* istanbul ignore next */() {\n    this.internalOptions().debug = true;\n    this.internalContext().onBuild.push(builder => {\n      builder.addOperation(new KnexOperation('debug'), []);\n    });\n\n    return this;\n  }\n\n  insert(modelsOrObjects) {\n    return writeOperation(this, () => {\n      const insertOperation = this._insertOperationFactory(this);\n\n      this.addOperation(insertOperation, [modelsOrObjects]);\n    });\n  }\n\n  insertAndFetch(modelsOrObjects) {\n    return writeOperation(this, () => {\n      const insertOperation = this._insertOperationFactory(this);\n\n      const insertAndFetchOperation = new InsertAndFetchOperation('insertAndFetch', {\n        delegate: insertOperation\n      });\n\n      this.addOperation(insertAndFetchOperation, [modelsOrObjects]);\n    });\n  }\n\n  insertGraph(modelsOrObjects, opt) {\n    return writeOperation(this, () => {\n      const insertOperation = this._insertOperationFactory(this);\n\n      const insertGraphOperation = new InsertGraphOperation('insertGraph', {\n        delegate: insertOperation,\n        opt\n      });\n\n      this.addOperation(insertGraphOperation, [modelsOrObjects]);\n    });\n  }\n\n  insertWithRelated(...args) {\n    deprecate(\n      `insertWithRelated is deprecated. Use insertGraph instead. This method will be removed in version 2.0`\n    );\n    return this.insertGraph(...args);\n  }\n\n  insertGraphAndFetch(modelsOrObjects, opt) {\n    return writeOperation(this, () => {\n      const insertOperation = this._insertOperationFactory(this);\n\n      const insertGraphOperation = new InsertGraphOperation('insertGraph', {\n        delegate: insertOperation,\n        opt\n      });\n\n      const insertGraphAndFetchOperation = new InsertGraphAndFetchOperation('insertGraphAndFetch', {\n        delegate: insertGraphOperation\n      });\n\n      return this.addOperation(insertGraphAndFetchOperation, [modelsOrObjects]);\n    });\n  }\n\n  insertWithRelatedAndFetch(...args) {\n    deprecate(\n      `insertWithRelatedAndFetch is deprecated. Use insertGraphAndFetch instead. This method will be removed in version 2.0`\n    );\n    return this.insertGraphAndFetch(...args);\n  }\n\n  update(modelOrObject) {\n    return writeOperation(this, () => {\n      const updateOperation = this._updateOperationFactory(this);\n\n      this.addOperation(updateOperation, [modelOrObject]);\n    });\n  }\n\n  updateAndFetch(modelOrObject) {\n    return writeOperation(this, () => {\n      const updateOperation = this._updateOperationFactory(this);\n\n      if (!(updateOperation.instance instanceof this.modelClass())) {\n        throw new Error('updateAndFetch can only be called for instance operations');\n      }\n\n      const updateAndFetch = new UpdateAndFetchOperation('updateAndFetch', {\n        delegate: updateOperation\n      });\n\n      // patchOperation is an instance update operation that already adds the\n      // required \"where id = $\" clause.\n      updateAndFetch.skipIdWhere = true;\n\n      this.addOperation(updateAndFetch, [updateOperation.instance.$id(), modelOrObject]);\n    });\n  }\n\n  updateAndFetchById(id, modelOrObject) {\n    return writeOperation(this, () => {\n      const updateOperation = this._updateOperationFactory(this);\n\n      const updateAndFetch = new UpdateAndFetchOperation('updateAndFetch', {\n        delegate: updateOperation\n      });\n\n      this.addOperation(updateAndFetch, [id, modelOrObject]);\n    });\n  }\n\n  upsertGraph(modelsOrObjects, upsertOptions) {\n    return writeOperation(this, () => {\n      const upsertGraphOperation = new UpsertGraphOperation('upsertGraph', {\n        upsertOptions\n      });\n\n      this.addOperation(upsertGraphOperation, [modelsOrObjects]);\n    });\n  }\n\n  upsertGraphAndFetch(modelsOrObjects, upsertOptions) {\n    return writeOperation(this, () => {\n      const upsertGraphOperation = new UpsertGraphOperation('upsertGraph', {\n        upsertOptions\n      });\n\n      const upsertGraphAndFetchOperation = new UpsertGraphAndFetchOperation('upsertGraphAndFetch', {\n        delegate: upsertGraphOperation\n      });\n\n      return this.addOperation(upsertGraphAndFetchOperation, [modelsOrObjects]);\n    });\n  }\n\n  patch(modelOrObject) {\n    return writeOperation(this, () => {\n      const patchOperation = this._patchOperationFactory(this);\n\n      this.addOperation(patchOperation, [modelOrObject]);\n    });\n  }\n\n  patchAndFetch(modelOrObject) {\n    return writeOperation(this, () => {\n      const patchOperation = this._patchOperationFactory(this);\n\n      if (!(patchOperation.instance instanceof this.modelClass())) {\n        throw new Error('patchAndFetch can only be called for instance operations');\n      }\n\n      const patchAndFetch = new UpdateAndFetchOperation('patchAndFetch', {\n        delegate: patchOperation\n      });\n\n      // patchOperation is an instance update operation that already adds the\n      // required \"where id = $\" clause.\n      patchAndFetch.skipIdWhere = true;\n\n      this.addOperation(patchAndFetch, [patchOperation.instance.$id(), modelOrObject]);\n    });\n  }\n\n  patchAndFetchById(id, modelOrObject) {\n    return writeOperation(this, () => {\n      const patchOperation = this._patchOperationFactory(this);\n\n      const patchAndFetch = new UpdateAndFetchOperation('patchAndFetch', {\n        delegate: patchOperation\n      });\n\n      this.addOperation(patchAndFetch, [id, modelOrObject]);\n    });\n  }\n\n  delete(...args) {\n    return writeOperation(this, () => {\n      if (args.length) {\n        throw new Error(\n          `Don't pass arguments to delete(). You should use it like this: delete().where('foo', 'bar').andWhere(...)`\n        );\n      }\n\n      const deleteOperation = this._deleteOperationFactory(this);\n      this.addOperation(deleteOperation, args);\n    });\n  }\n\n  del(...args) {\n    return this.delete(...args);\n  }\n\n  relate(...args) {\n    return writeOperation(this, () => {\n      const relateOperation = this._relateOperationFactory(this);\n\n      this.addOperation(relateOperation, args);\n    });\n  }\n\n  unrelate(...args) {\n    return writeOperation(this, () => {\n      if (args.length) {\n        throw new Error(\n          `Don't pass arguments to unrelate(). You should use it like this: unrelate().where('foo', 'bar').andWhere(...)`\n        );\n      }\n\n      const unrelateOperation = this._unrelateOperationFactory(this);\n      this.addOperation(unrelateOperation, args);\n    });\n  }\n\n  increment(propertyName, howMuch) {\n    const columnName = this.modelClass().propertyNameToColumnName(propertyName);\n\n    return this.patch({\n      [columnName]: raw('?? + ?', [columnName, howMuch])\n    });\n  }\n\n  decrement(propertyName, howMuch) {\n    const columnName = this.modelClass().propertyNameToColumnName(propertyName);\n\n    return this.patch({\n      [columnName]: raw('?? - ?', [columnName, howMuch])\n    });\n  }\n\n  findOne(...args) {\n    return this.where.apply(this, args).first();\n  }\n\n  range(...args) {\n    return this.addOperation(new RangeOperation('range'), args);\n  }\n\n  first(...args) {\n    return this.addOperation(new FirstOperation('first'), args);\n  }\n\n  joinRelation(expression, options) {\n    ensureJoinRelationOperation(this, 'innerJoin').addCall({\n      expression,\n      options\n    });\n\n    return this;\n  }\n\n  innerJoinRelation(expression, options) {\n    ensureJoinRelationOperation(this, 'innerJoin').addCall({\n      expression,\n      options\n    });\n\n    return this;\n  }\n\n  outerJoinRelation(expression, options) {\n    ensureJoinRelationOperation(this, 'outerJoin').addCall({\n      expression,\n      options\n    });\n\n    return this;\n  }\n\n  fullOuterJoinRelation(expression, options) {\n    ensureJoinRelationOperation(this, 'fullOuterJoin').addCall({\n      expression,\n      options\n    });\n\n    return this;\n  }\n\n  leftJoinRelation(expression, options) {\n    ensureJoinRelationOperation(this, 'leftJoin').addCall({\n      expression,\n      options\n    });\n\n    return this;\n  }\n\n  leftOuterJoinRelation(expression, options) {\n    ensureJoinRelationOperation(this, 'leftOuterJoin').addCall({\n      expression,\n      options\n    });\n\n    return this;\n  }\n\n  rightJoinRelation(expression, options) {\n    ensureJoinRelationOperation(this, 'rightJoin').addCall({\n      expression,\n      options\n    });\n\n    return this;\n  }\n\n  rightOuterJoinRelation(expression, options) {\n    ensureJoinRelationOperation(this, 'rightOuterJoin').addCall({\n      expression,\n      options\n    });\n\n    return this;\n  }\n\n  deleteById(...args) {\n    return this.findById(...args).delete();\n  }\n\n  findById(...args) {\n    return this.addOperation(new FindByIdOperation('findById'), args).first();\n  }\n\n  findByIds(...args) {\n    return this.addOperation(new FindByIdsOperation('findByIds'), args);\n  }\n\n  runBefore(...args) {\n    return this.addOperation(new RunBeforeOperation('runBefore'), args);\n  }\n\n  onBuild(...args) {\n    return this.addOperation(new OnBuildOperation('onBuild'), args);\n  }\n\n  onBuildKnex(...args) {\n    return this.addOperation(new OnBuildKnexOperation('onBuildKnex'), args);\n  }\n\n  runAfter(...args) {\n    return this.addOperation(new RunAfterOperation('runAfter'), args);\n  }\n\n  onError(...args) {\n    return this.addOperation(new OnErrorOperation('onError'), args);\n  }\n\n  from(...args) {\n    return this.addOperation(new FromOperation('from'), args);\n  }\n\n  table(...args) {\n    return this.addOperation(new FromOperation('table'), args);\n  }\n}\n\nObject.defineProperties(QueryBuilder.prototype, {\n  isObjectionQueryBuilder: {\n    enumerable: false,\n    writable: false,\n    value: true\n  }\n});\n\nfunction getTableName(modelClassOrTableName) {\n  if (isString(modelClassOrTableName)) {\n    return modelClassOrTableName;\n  } else {\n    return modelClassOrTableName.getTableName();\n  }\n}\n\nfunction ensureEagerOperation(builder, algorithm = null) {\n  const defaultEagerOptions = builder.modelClass().defaultEagerOptions;\n  const eagerOp = builder.findOperation(EagerOperation);\n\n  if (algorithm) {\n    const EagerOperationClass = getOperationClassForEagerAlgorithm(builder, algorithm);\n\n    if (eagerOp instanceof EagerOperationClass) {\n      return eagerOp;\n    } else {\n      const newEagerOp = new EagerOperationClass('eager', {\n        defaultEagerOptions\n      });\n\n      if (eagerOp) {\n        newEagerOp.cloneFrom(eagerOp);\n      }\n\n      builder.clear(EagerOperation);\n      builder.addOperation(newEagerOp);\n\n      return newEagerOp;\n    }\n  } else {\n    if (eagerOp) {\n      return eagerOp;\n    } else {\n      const EagerOperationClass = getOperationClassForEagerAlgorithm(\n        builder,\n        getDefaultEagerAlgorithm(builder)\n      );\n\n      const newEagerOp = new EagerOperationClass('eager', {\n        defaultEagerOptions\n      });\n\n      builder.addOperation(newEagerOp);\n\n      return newEagerOp;\n    }\n  }\n}\n\nfunction getDefaultEagerAlgorithm(builder) {\n  return builder.modelClass().defaultEagerAlgorithm;\n}\n\nfunction getJoinEagerAlgorithm(builder) {\n  return builder.modelClass().JoinEagerAlgorithm;\n}\n\nfunction getNaiveEagerAlgorithm(builder) {\n  return builder.modelClass().NaiveEagerAlgorithm;\n}\n\nfunction getOperationClassForEagerAlgorithm(builder, algorithm) {\n  if (algorithm === getJoinEagerAlgorithm(builder)) {\n    return JoinEagerOperation;\n  } else if (algorithm === getNaiveEagerAlgorithm(builder)) {\n    return NaiveEagerOperation;\n  } else {\n    return WhereInEagerOperation;\n  }\n}\n\nfunction parseRelationExpression(modelClass, exp) {\n  try {\n    return RelationExpression.create(exp);\n  } catch (err) {\n    if (err instanceof DuplicateRelationError) {\n      throw modelClass.createValidationError({\n        type: ValidationErrorType.RelationExpression,\n        message: `Duplicate relation name \"${\n          err.relationName\n        }\" in relation expression \"${exp}\". Use \"a.[b, c]\" instead of \"[a.b, a.c]\".`\n      });\n    } else {\n      throw modelClass.createValidationError({\n        type: ValidationErrorType.RelationExpression,\n        message: `Invalid relation expression \"${exp}\"`\n      });\n    }\n  }\n}\n\nfunction checkEager(builder) {\n  const eagerOp = builder.findOperation(EagerOperation);\n\n  if (!eagerOp) {\n    return;\n  }\n\n  const expr = eagerOp.expression;\n  const allowedExpr = eagerOp.allowedExpression;\n\n  if (expr.numChildren > 0 && allowedExpr && !allowedExpr.isSubExpression(expr)) {\n    const modelClass = builder.modelClass();\n\n    builder.reject(\n      modelClass.createValidationError({\n        type: ValidationErrorType.UnallowedRelation,\n        message: 'eager expression not allowed'\n      })\n    );\n  }\n}\n\nfunction findQueryExecutorOperation(builder) {\n  return builder.findOperation(op => op.hasQueryExecutor());\n}\n\nfunction beforeExecute(builder) {\n  let promise = Promise.resolve();\n\n  builder = addImplicitOperations(builder);\n\n  // Resolve all before hooks before building and executing the query\n  // and the rest of the hooks.\n  promise = chainOperationHooks(promise, builder, 'onBefore1');\n\n  promise = chainHooks(promise, builder, builder.context().runBefore);\n  promise = chainHooks(promise, builder, builder.internalContext().runBefore);\n\n  promise = chainOperationHooks(promise, builder, 'onBefore2');\n  promise = chainOperationHooks(promise, builder, 'onBefore3');\n\n  return promise;\n}\n\nfunction doExecute(builder) {\n  let promise = Promise.resolve();\n\n  builder = callOnBuildHooks(builder);\n  const queryExecutorOperation = findQueryExecutorOperation(builder);\n\n  const explicitRejectValue = builder._explicitRejectValue;\n  const explicitResolveValue = builder._explicitResolveValue;\n\n  if (explicitRejectValue !== null) {\n    promise = Promise.reject(explicitRejectValue);\n  } else if (explicitResolveValue !== null) {\n    promise = Promise.resolve(explicitResolveValue);\n  } else if (queryExecutorOperation !== null) {\n    promise = Promise.resolve(queryExecutorOperation.queryExecutor(builder));\n  } else {\n    promise = Promise.resolve(buildKnexQuery(builder));\n\n    promise = chainOperationHooks(promise, builder, 'onRawResult');\n    promise = promise.then(result => createModels(result, builder));\n  }\n\n  return promise;\n}\n\nfunction afterExecute(builder, result) {\n  let promise = Promise.resolve(result);\n\n  promise = chainOperationHooks(promise, builder, 'onAfter1');\n  promise = chainOperationHooks(promise, builder, 'onAfter2');\n\n  promise = chainHooks(promise, builder, builder.context().runAfter);\n  promise = chainHooks(promise, builder, builder.internalContext().runAfter);\n\n  promise = chainOperationHooks(promise, builder, 'onAfter3');\n\n  return promise;\n}\n\nfunction handleExecuteError(builder, err) {\n  let promise = Promise.reject(err);\n\n  builder.forEachOperation(true, op => {\n    if (op.hasOnError()) {\n      promise = promise.catch(err =>\n        builder.callAsyncOperationMethod(op, 'onError', [builder, err])\n      );\n    }\n  });\n\n  return promise;\n}\n\nfunction chainOperationHooks(promise, builder, hookName) {\n  return promise.then(result => {\n    let promise = Promise.resolve(result);\n\n    builder.forEachOperation(true, op => {\n      if (op.hasHook(hookName)) {\n        promise = promise.then(result =>\n          builder.callAsyncOperationMethod(op, hookName, [builder, result])\n        );\n      }\n    });\n\n    return promise;\n  });\n}\n\nfunction ensureJoinRelationOperation(builder, joinOperation) {\n  const opName = joinOperation + 'Relation';\n  let op = builder.findOperation(opName);\n\n  if (!op) {\n    op = new JoinRelationOperation(opName, { joinOperation });\n    builder.addOperation(op);\n  }\n\n  return op;\n}\n\nfunction addImplicitOperations(builder) {\n  if (builder.isFind()) {\n    // If no write operations have been called at this point this query is a\n    // find query and we need to call the custom find implementation.\n    addFindOperation(builder);\n  }\n\n  if (builder.hasEager()) {\n    moveEagerOperationToEnd(builder);\n  }\n\n  return builder;\n}\n\nfunction addFindOperation(builder) {\n  if (!builder.has(FindOperation)) {\n    const operation = builder._findOperationFactory(builder);\n    builder.addOperationToFront(operation, []);\n  }\n}\n\nfunction moveEagerOperationToEnd(builder) {\n  const eagerOp = builder.findOperation(EagerOperation);\n\n  builder.clear(EagerOperation);\n  builder.addOperation(eagerOp);\n}\n\nfunction callOnBuildHooks(builder) {\n  callOnBuildFuncs(builder, builder.context().onBuild);\n  callOnBuildFuncs(builder, builder.internalContext().onBuild);\n\n  builder.executeOnBuild();\n  return builder;\n}\n\nfunction callOnBuildFuncs(builder, func) {\n  if (isFunction(func)) {\n    func.call(builder, builder);\n  } else if (Array.isArray(func)) {\n    func.forEach(func => callOnBuildFuncs(builder, func));\n  }\n}\n\nfunction buildKnexQuery(builder, knexBuilder = builder.knex().queryBuilder()) {\n  builder.executeOnBuildKnex(knexBuilder);\n\n  const fromOperation = builder.findLastOperation(QueryBuilderBase.FromSelector);\n  const hasSelects = builder.has(QueryBuilderBase.SelectSelector);\n\n  // Set the table only if it hasn't been explicitly set yet.\n  if (!builder.isPartial() && !fromOperation) {\n    setDefaultTable(builder, knexBuilder);\n  }\n\n  // Only add `table.*` select if there are no explicit selects\n  // and `from` is a table name and not a subquery.\n  if (!builder.isPartial() && !hasSelects && (!fromOperation || fromOperation.table)) {\n    setDefaultSelect(builder, knexBuilder);\n  }\n\n  return knexBuilder;\n}\n\nfunction setDefaultTable(builder, knexBuilder) {\n  const table = builder.tableNameFor(builder.modelClass().getTableName());\n  const tableRef = builder.tableRef();\n\n  if (table === tableRef) {\n    knexBuilder.table(table);\n  } else {\n    knexBuilder.table(`${table} as ${tableRef}`);\n  }\n}\n\nfunction setDefaultSelect(builder, knexBuilder) {\n  const tableRef = builder.tableRef();\n\n  knexBuilder.select(`${tableRef}.*`);\n}\n\nfunction chainHooks(promise, builder, func) {\n  return promise.then(result => {\n    let promise = Promise.resolve(result);\n\n    if (isFunction(func)) {\n      promise = promise.then(result => func.call(builder, result, builder));\n    } else if (Array.isArray(func)) {\n      func.forEach(func => {\n        promise = chainHooks(promise, builder, func);\n      });\n    }\n\n    return promise;\n  });\n}\n\nfunction createModels(result, builder) {\n  const modelClass = builder.resultModelClass();\n\n  if (result === null || result === undefined) {\n    return null;\n  }\n\n  if (Array.isArray(result)) {\n    if (result.length && shouldBeConvertedToModel(result[0], modelClass)) {\n      for (let i = 0, l = result.length; i < l; ++i) {\n        result[i] = modelClass.fromDatabaseJson(result[i]);\n      }\n    }\n  } else if (shouldBeConvertedToModel(result, modelClass)) {\n    result = modelClass.fromDatabaseJson(result);\n  }\n\n  return result;\n}\n\nfunction shouldBeConvertedToModel(obj, modelClass) {\n  return isObject(obj) && !(obj instanceof modelClass);\n}\n\nfunction writeOperation(builder, cb) {\n  if (!builder.isFind()) {\n    return builder.reject(\n      new Error(\n        'Double call to a write method. ' +\n          'You can only call one of the write methods ' +\n          '(insert, update, patch, delete, relate, unrelate, increment, decrement) ' +\n          'and only once per query builder.'\n      )\n    );\n  }\n\n  try {\n    cb();\n    return builder;\n  } catch (err) {\n    return builder.reject(err);\n  }\n}\n\nfunction findOperationFactory() {\n  return new FindOperation('find');\n}\n\nfunction insertOperationFactory() {\n  return new InsertOperation('insert');\n}\n\nfunction updateOperationFactory() {\n  return new UpdateOperation('update');\n}\n\nfunction patchOperationFactory() {\n  return new UpdateOperation('patch', {\n    modelOptions: { patch: true }\n  });\n}\n\nfunction relateOperationFactory() {\n  return new RelateOperation('relate', {});\n}\n\nfunction unrelateOperationFactory() {\n  return new UnrelateOperation('unrelate', {});\n}\n\nfunction deleteOperationFactory() {\n  return new DeleteOperation('delete');\n}\n\nmodule.exports = {\n  QueryBuilder\n};\n","'use strict';\n\nconst { QueryBuilderOperationSupport } = require('./QueryBuilderOperationSupport');\nconst { isSqlite, isMsSql } = require('../utils/knexUtils');\n\nconst { KnexOperation } = require('./operations/KnexOperation');\nconst { SelectOperation } = require('./operations/select/SelectOperation');\nconst { ReturningOperation } = require('./operations/ReturningOperation');\nconst { WhereCompositeOperation } = require('./operations/WhereCompositeOperation');\nconst { WhereJsonPostgresOperation } = require('./operations/jsonApi/WhereJsonPostgresOperation');\n\nconst {\n  WhereInCompositeOperation\n} = require('./operations/whereInComposite/WhereInCompositeOperation');\nconst {\n  WhereInCompositeSqliteOperation\n} = require('./operations/whereInComposite/WhereInCompositeSqliteOperation');\nconst {\n  WhereInCompositeMsSqlOperation\n} = require('./operations/whereInComposite/WhereInCompositeMsSqlOperation');\nconst {\n  WhereJsonHasPostgresOperation\n} = require('./operations/jsonApi/WhereJsonHasPostgresOperation');\nconst {\n  WhereJsonNotObjectPostgresOperation\n} = require('./operations/jsonApi/WhereJsonNotObjectPostgresOperation');\n\nclass QueryBuilderBase extends QueryBuilderOperationSupport {\n  modify(...args) {\n    const func = args[0];\n\n    if (!func) {\n      return this;\n    }\n\n    if (args.length === 1) {\n      func.call(this, this);\n    } else {\n      args[0] = this;\n      func(...args);\n    }\n\n    return this;\n  }\n\n  transacting(trx) {\n    this._context.knex = trx || null;\n    return this;\n  }\n\n  select(...args) {\n    return this.addOperation(new SelectOperation('select'), args);\n  }\n\n  insert(...args) {\n    return this.addOperation(new KnexOperation('insert'), args);\n  }\n\n  update(...args) {\n    return this.addOperation(new KnexOperation('update'), args);\n  }\n\n  delete(...args) {\n    return this.addOperation(new KnexOperation('delete'), args);\n  }\n\n  del(...args) {\n    return this.delete(...args);\n  }\n\n  forUpdate(...args) {\n    return this.addOperation(new KnexOperation('forUpdate'), args);\n  }\n\n  forShare(...args) {\n    return this.addOperation(new KnexOperation('forShare'), args);\n  }\n\n  as(...args) {\n    return this.addOperation(new KnexOperation('as'), args);\n  }\n\n  columns(...args) {\n    return this.addOperation(new SelectOperation('columns'), args);\n  }\n\n  column(...args) {\n    return this.addOperation(new SelectOperation('column'), args);\n  }\n\n  from(...args) {\n    return this.addOperation(new KnexOperation('from'), args);\n  }\n\n  fromJS(...args) {\n    return this.addOperation(new KnexOperation('fromJS'), args);\n  }\n\n  into(...args) {\n    return this.addOperation(new KnexOperation('into'), args);\n  }\n\n  withSchema(...args) {\n    return this.addOperation(new KnexOperation('withSchema'), args);\n  }\n\n  table(...args) {\n    return this.addOperation(new KnexOperation('table'), args);\n  }\n\n  distinct(...args) {\n    return this.addOperation(new SelectOperation('distinct'), args);\n  }\n\n  join(...args) {\n    return this.addOperation(new KnexOperation('join'), args);\n  }\n\n  joinRaw(...args) {\n    return this.addOperation(new KnexOperation('joinRaw'), args);\n  }\n\n  innerJoin(...args) {\n    return this.addOperation(new KnexOperation('innerJoin'), args);\n  }\n\n  leftJoin(...args) {\n    return this.addOperation(new KnexOperation('leftJoin'), args);\n  }\n\n  leftOuterJoin(...args) {\n    return this.addOperation(new KnexOperation('leftOuterJoin'), args);\n  }\n\n  rightJoin(...args) {\n    return this.addOperation(new KnexOperation('rightJoin'), args);\n  }\n\n  rightOuterJoin(...args) {\n    return this.addOperation(new KnexOperation('rightOuterJoin'), args);\n  }\n\n  outerJoin(...args) {\n    return this.addOperation(new KnexOperation('outerJoin'), args);\n  }\n\n  fullOuterJoin(...args) {\n    return this.addOperation(new KnexOperation('fullOuterJoin'), args);\n  }\n\n  crossJoin(...args) {\n    return this.addOperation(new KnexOperation('crossJoin'), args);\n  }\n\n  where(...args) {\n    return this.addOperation(new KnexOperation('where'), args);\n  }\n\n  andWhere(...args) {\n    return this.addOperation(new KnexOperation('andWhere'), args);\n  }\n\n  orWhere(...args) {\n    return this.addOperation(new KnexOperation('orWhere'), args);\n  }\n\n  whereNot(...args) {\n    return this.addOperation(new KnexOperation('whereNot'), args);\n  }\n\n  orWhereNot(...args) {\n    return this.addOperation(new KnexOperation('orWhereNot'), args);\n  }\n\n  whereRaw(...args) {\n    return this.addOperation(new KnexOperation('whereRaw'), args);\n  }\n\n  andWhereRaw(...args) {\n    return this.addOperation(new KnexOperation('andWhereRaw'), args);\n  }\n\n  orWhereRaw(...args) {\n    return this.addOperation(new KnexOperation('orWhereRaw'), args);\n  }\n\n  whereWrapped(...args) {\n    return this.addOperation(new KnexOperation('whereWrapped'), args);\n  }\n\n  havingWrapped(...args) {\n    return this.addOperation(new KnexOperation('havingWrapped'), args);\n  }\n\n  whereExists(...args) {\n    return this.addOperation(new KnexOperation('whereExists'), args);\n  }\n\n  orWhereExists(...args) {\n    return this.addOperation(new KnexOperation('orWhereExists'), args);\n  }\n\n  whereNotExists(...args) {\n    return this.addOperation(new KnexOperation('whereNotExists'), args);\n  }\n\n  orWhereNotExists(...args) {\n    return this.addOperation(new KnexOperation('orWhereNotExists'), args);\n  }\n\n  whereIn(...args) {\n    return this.addOperation(new KnexOperation('whereIn'), args);\n  }\n\n  orWhereIn(...args) {\n    return this.addOperation(new KnexOperation('orWhereIn'), args);\n  }\n\n  whereNotIn(...args) {\n    return this.addOperation(new KnexOperation('whereNotIn'), args);\n  }\n\n  orWhereNotIn(...args) {\n    return this.addOperation(new KnexOperation('orWhereNotIn'), args);\n  }\n\n  whereNull(...args) {\n    return this.addOperation(new KnexOperation('whereNull'), args);\n  }\n\n  orWhereNull(...args) {\n    return this.addOperation(new KnexOperation('orWhereNull'), args);\n  }\n\n  whereNotNull(...args) {\n    return this.addOperation(new KnexOperation('whereNotNull'), args);\n  }\n\n  orWhereNotNull(...args) {\n    return this.addOperation(new KnexOperation('orWhereNotNull'), args);\n  }\n\n  whereBetween(...args) {\n    return this.addOperation(new KnexOperation('whereBetween'), args);\n  }\n\n  andWhereBetween(...args) {\n    return this.addOperation(new KnexOperation('andWhereBetween'), args);\n  }\n\n  whereNotBetween(...args) {\n    return this.addOperation(new KnexOperation('whereNotBetween'), args);\n  }\n\n  andWhereNotBetween(...args) {\n    return this.addOperation(new KnexOperation('andWhereNotBetween'), args);\n  }\n\n  orWhereBetween(...args) {\n    return this.addOperation(new KnexOperation('orWhereBetween'), args);\n  }\n\n  orWhereNotBetween(...args) {\n    return this.addOperation(new KnexOperation('orWhereNotBetween'), args);\n  }\n\n  groupBy(...args) {\n    return this.addOperation(new KnexOperation('groupBy'), args);\n  }\n\n  groupByRaw(...args) {\n    return this.addOperation(new KnexOperation('groupByRaw'), args);\n  }\n\n  orderBy(...args) {\n    return this.addOperation(new KnexOperation('orderBy'), args);\n  }\n\n  orderByRaw(...args) {\n    return this.addOperation(new KnexOperation('orderByRaw'), args);\n  }\n\n  union(...args) {\n    return this.addOperation(new KnexOperation('union'), args);\n  }\n\n  unionAll(...args) {\n    return this.addOperation(new KnexOperation('unionAll'), args);\n  }\n\n  intersect(...args) {\n    return this.addOperation(new KnexOperation('intersect'), args);\n  }\n\n  having(...args) {\n    return this.addOperation(new KnexOperation('having'), args);\n  }\n\n  orHaving(...args) {\n    return this.addOperation(new KnexOperation('orHaving'), args);\n  }\n\n  havingIn(...args) {\n    return this.addOperation(new KnexOperation('havingIn'), args);\n  }\n\n  orHavingIn(...args) {\n    return this.addOperation(new KnexOperation('havingIn'), args);\n  }\n\n  havingNotIn(...args) {\n    return this.addOperation(new KnexOperation('havingNotIn'), args);\n  }\n\n  orHavingNotIn(...args) {\n    return this.addOperation(new KnexOperation('orHavingNotIn'), args);\n  }\n\n  havingNull(...args) {\n    return this.addOperation(new KnexOperation('havingNull'), args);\n  }\n\n  orHavingNull(...args) {\n    return this.addOperation(new KnexOperation('orHavingNull'), args);\n  }\n\n  havingNotNull(...args) {\n    return this.addOperation(new KnexOperation('havingNotNull'), args);\n  }\n\n  orHavingNotNull(...args) {\n    return this.addOperation(new KnexOperation('orHavingNotNull'), args);\n  }\n\n  havingExists(...args) {\n    return this.addOperation(new KnexOperation('havingExists'), args);\n  }\n\n  orHavingExists(...args) {\n    return this.addOperation(new KnexOperation('orHavingExists'), args);\n  }\n\n  havingNotExists(...args) {\n    return this.addOperation(new KnexOperation('havingNotExists'), args);\n  }\n\n  orHavingNotExists(...args) {\n    return this.addOperation(new KnexOperation('orHavingNotExists'), args);\n  }\n\n  havingBetween(...args) {\n    return this.addOperation(new KnexOperation('havingBetween'), args);\n  }\n\n  orHavingBetween(...args) {\n    return this.addOperation(new KnexOperation('havingBetween'), args);\n  }\n\n  havingNotBetween(...args) {\n    return this.addOperation(new KnexOperation('havingNotBetween'), args);\n  }\n\n  orHavingNotBetween(...args) {\n    return this.addOperation(new KnexOperation('havingNotBetween'), args);\n  }\n\n  havingRaw(...args) {\n    return this.addOperation(new KnexOperation('havingRaw'), args);\n  }\n\n  orHavingRaw(...args) {\n    return this.addOperation(new KnexOperation('orHavingRaw'), args);\n  }\n\n  offset(...args) {\n    return this.addOperation(new KnexOperation('offset'), args);\n  }\n\n  limit(...args) {\n    return this.addOperation(new KnexOperation('limit'), args);\n  }\n\n  count(...args) {\n    return this.addOperation(new SelectOperation('count'), args);\n  }\n\n  countDistinct(...args) {\n    return this.addOperation(new SelectOperation('countDistinct'), args);\n  }\n\n  min(...args) {\n    return this.addOperation(new SelectOperation('min'), args);\n  }\n\n  max(...args) {\n    return this.addOperation(new SelectOperation('max'), args);\n  }\n\n  sum(...args) {\n    return this.addOperation(new SelectOperation('sum'), args);\n  }\n\n  sumDistinct(...args) {\n    return this.addOperation(new SelectOperation('sumDistinct'), args);\n  }\n\n  avg(...args) {\n    return this.addOperation(new SelectOperation('avg'), args);\n  }\n\n  avgDistinct(...args) {\n    return this.addOperation(new SelectOperation('avgDistinct'), args);\n  }\n\n  debug(...args) {\n    return this.addOperation(new KnexOperation('debug'), args);\n  }\n\n  returning(...args) {\n    return this.addOperation(new ReturningOperation('returning'), args);\n  }\n\n  truncate(...args) {\n    return this.addOperation(new KnexOperation('truncate'), args);\n  }\n\n  connection(...args) {\n    return this.addOperation(new KnexOperation('connection'), args);\n  }\n\n  options(...args) {\n    return this.addOperation(new KnexOperation('options'), args);\n  }\n\n  columnInfo(...args) {\n    return this.addOperation(new KnexOperation('columnInfo'), args);\n  }\n\n  off(...args) {\n    return this.addOperation(new KnexOperation('off'), args);\n  }\n\n  timeout(...args) {\n    return this.addOperation(new KnexOperation('timeout'), args);\n  }\n\n  with(...args) {\n    return this.addOperation(new KnexOperation('with'), args);\n  }\n\n  withRaw(...args) {\n    return this.addOperation(new KnexOperation('withRaw'), args);\n  }\n\n  withWrapped(...args) {\n    return this.addOperation(new KnexOperation('withWrapped'), args);\n  }\n\n  withRecursive(...args) {\n    return this.addOperation(new KnexOperation('withRecursive'), args);\n  }\n\n  whereComposite(...args) {\n    return this.addOperation(new WhereCompositeOperation('whereComposite'), args);\n  }\n\n  whereInComposite(...args) {\n    let operation = null;\n\n    if (isSqlite(this.knex())) {\n      operation = new WhereInCompositeSqliteOperation('whereInComposite');\n    } else if (isMsSql(this.knex())) {\n      operation = new WhereInCompositeMsSqlOperation('whereInComposite');\n    } else {\n      operation = new WhereInCompositeOperation('whereInComposite');\n    }\n\n    return this.addOperation(operation, args);\n  }\n\n  whereNotInComposite(...args) {\n    let operation = null;\n\n    if (isSqlite(this.knex())) {\n      operation = new WhereInCompositeSqliteOperation('whereNotInComposite', { prefix: 'not' });\n    } else if (isMsSql(this.knex())) {\n      operation = new WhereInCompositeMsSqlOperation('whereNotInComposite', { prefix: 'not' });\n    } else {\n      operation = new WhereInCompositeOperation('whereNotInComposite', { prefix: 'not' });\n    }\n\n    return this.addOperation(operation, args);\n  }\n\n  whereJsonSupersetOf(...args) {\n    return this.addOperation(\n      new WhereJsonPostgresOperation('whereJsonSupersetOf', { operator: '@>', bool: 'and' }),\n      args\n    );\n  }\n\n  orWhereJsonSupersetOf(...args) {\n    return this.addOperation(\n      new WhereJsonPostgresOperation('orWhereJsonSupersetOf', { operator: '@>', bool: 'or' }),\n      args\n    );\n  }\n\n  whereJsonNotSupersetOf(...args) {\n    return this.addOperation(\n      new WhereJsonPostgresOperation('whereJsonNotSupersetOf', {\n        operator: '@>',\n        bool: 'and',\n        prefix: 'not'\n      }),\n      args\n    );\n  }\n\n  orWhereJsonNotSupersetOf(...args) {\n    return this.addOperation(\n      new WhereJsonPostgresOperation('orWhereJsonNotSupersetOf', {\n        operator: '@>',\n        bool: 'or',\n        prefix: 'not'\n      }),\n      args\n    );\n  }\n\n  whereJsonSubsetOf(...args) {\n    return this.addOperation(\n      new WhereJsonPostgresOperation('whereJsonSubsetOf', { operator: '<@', bool: 'and' }),\n      args\n    );\n  }\n\n  orWhereJsonSubsetOf(...args) {\n    return this.addOperation(\n      new WhereJsonPostgresOperation('orWhereJsonSubsetOf', { operator: '<@', bool: 'or' }),\n      args\n    );\n  }\n\n  whereJsonNotSubsetOf(...args) {\n    return this.addOperation(\n      new WhereJsonPostgresOperation('whereJsonNotSubsetOf', {\n        operator: '<@',\n        bool: 'and',\n        prefix: 'not'\n      }),\n      args\n    );\n  }\n\n  orWhereJsonNotSubsetOf(...args) {\n    return this.addOperation(\n      new WhereJsonPostgresOperation('orWhereJsonNotSubsetOf', {\n        operator: '<@',\n        bool: 'or',\n        prefix: 'not'\n      }),\n      args\n    );\n  }\n\n  whereJsonNotArray(...args) {\n    return this.addOperation(\n      new WhereJsonNotObjectPostgresOperation('whereJsonNotArray', {\n        bool: 'and',\n        compareValue: []\n      }),\n      args\n    );\n  }\n\n  orWhereJsonNotArray(...args) {\n    return this.addOperation(\n      new WhereJsonNotObjectPostgresOperation('orWhereJsonNotArray', {\n        bool: 'or',\n        compareValue: []\n      }),\n      args\n    );\n  }\n\n  whereJsonNotObject(...args) {\n    return this.addOperation(\n      new WhereJsonNotObjectPostgresOperation('whereJsonNotObject', {\n        bool: 'and',\n        compareValue: {}\n      }),\n      args\n    );\n  }\n\n  orWhereJsonNotObject(...args) {\n    return this.addOperation(\n      new WhereJsonNotObjectPostgresOperation('orWhereJsonNotObject', {\n        bool: 'or',\n        compareValue: {}\n      }),\n      args\n    );\n  }\n\n  whereJsonHasAny(...args) {\n    return this.addOperation(\n      new WhereJsonHasPostgresOperation('whereJsonHasAny', { bool: 'and', operator: '?|' }),\n      args\n    );\n  }\n\n  orWhereJsonHasAny(...args) {\n    return this.addOperation(\n      new WhereJsonHasPostgresOperation('orWhereJsonHasAny', { bool: 'or', operator: '?|' }),\n      args\n    );\n  }\n\n  whereJsonHasAll(...args) {\n    return this.addOperation(\n      new WhereJsonHasPostgresOperation('whereJsonHasAll', { bool: 'and', operator: '?&' }),\n      args\n    );\n  }\n\n  orWhereJsonHasAll(...args) {\n    return this.addOperation(\n      new WhereJsonHasPostgresOperation('orWhereJsonHasAll', { bool: 'or', operator: '?&' }),\n      args\n    );\n  }\n\n  whereJsonIsArray(fieldExpression) {\n    return this.whereJsonSupersetOf(fieldExpression, []);\n  }\n\n  orWhereJsonIsArray(fieldExpression) {\n    return this.orWhereJsonSupersetOf(fieldExpression, []);\n  }\n\n  whereJsonIsObject(fieldExpression) {\n    return this.whereJsonSupersetOf(fieldExpression, {});\n  }\n\n  orWhereJsonIsObject(fieldExpression) {\n    return this.orWhereJsonSupersetOf(fieldExpression, {});\n  }\n\n  whereColumn(...args) {\n    return this.addOperation(new KnexOperation('whereColumn'), args);\n  }\n\n  andWhereColumn(...args) {\n    return this.addOperation(new KnexOperation('andWhereColumn'), args);\n  }\n\n  orWhereColumn(...args) {\n    return this.addOperation(new KnexOperation('orWhereColumn'), args);\n  }\n\n  whereNotColumn(...args) {\n    return this.addOperation(new KnexOperation('whereNotColumn'), args);\n  }\n\n  andWhereNotColumn(...args) {\n    return this.addOperation(new KnexOperation('andWhereNotColumn'), args);\n  }\n\n  orWhereNotColumn(...args) {\n    return this.addOperation(new KnexOperation('orWhereNotColumn'), args);\n  }\n}\n\nObject.defineProperties(QueryBuilderBase.prototype, {\n  isObjectionQueryBuilderBase: {\n    enumerable: false,\n    writable: false,\n    value: true\n  }\n});\n\nmodule.exports = {\n  QueryBuilderBase\n};\n","'use strict';\n\nconst { QueryBuilderContextBase } = require('./QueryBuilderContextBase');\n\nclass QueryBuilderContext extends QueryBuilderContextBase {\n  constructor(userContext) {\n    super(userContext);\n\n    this.runBefore = [];\n    this.runAfter = [];\n    this.onBuild = [];\n  }\n\n  clone() {\n    const ctx = super.clone();\n\n    ctx.runBefore = this.runBefore.slice();\n    ctx.runAfter = this.runAfter.slice();\n    ctx.onBuild = this.onBuild.slice();\n\n    return ctx;\n  }\n}\n\nmodule.exports = {\n  QueryBuilderContext\n};\n","'use strict';\n\nconst { InternalOptions } = require('./InternalOptions');\n\nclass QueryBuilderContextBase {\n  constructor(builder) {\n    this.userContext = builder ? new builder.constructor.QueryBuilderUserContext(builder) : null;\n    this.options = builder ? new this.constructor.InternalOptions() : null;\n    this.knex = null;\n\n    this.aliasMap = null;\n    this.tableMap = null;\n  }\n\n  static get InternalOptions() {\n    return InternalOptions;\n  }\n\n  clone() {\n    const ctx = new this.constructor();\n\n    ctx.userContext = this.userContext;\n    ctx.options = this.options.clone();\n    ctx.knex = this.knex;\n\n    ctx.aliasMap = this.aliasMap;\n    ctx.tableMap = this.tableMap;\n\n    return ctx;\n  }\n}\n\nmodule.exports = {\n  QueryBuilderContextBase\n};\n","'use strict';\n\nconst promiseUtils = require('../utils/promiseUtils');\n\nconst { isSubclassOf } = require('../utils/classUtils');\nconst { isString, isFunction, isRegExp, last } = require('../utils/objectUtils');\nconst { QueryBuilderOperation } = require('./operations/QueryBuilderOperation');\nconst { QueryBuilderContextBase } = require('./QueryBuilderContextBase');\nconst { QueryBuilderUserContext } = require('./QueryBuilderUserContext');\n\nconst AllSelector = () => true;\nconst SelectSelector = /^(select|columns|column|distinct|count|countDistinct|min|max|sum|sumDistinct|avg|avgDistinct)$/;\nconst WhereSelector = /^(where|orWhere|andWhere|find)/;\nconst OnSelector = /^(on|orOn|andOn)/;\nconst OrderBySelector = /orderBy/;\nconst JoinSelector = /(join|joinRaw|joinRelation)$/i;\nconst FromSelector = /^(from|into|table)$/;\n\nclass QueryBuilderOperationSupport {\n  constructor(...args) {\n    this.constructor.init(this, ...args);\n  }\n\n  static init(self, modelClass) {\n    self._modelClass = modelClass;\n    self._operations = [];\n    self._context = new this.QueryBuilderContext(self);\n    self._parentQuery = null;\n    self._isPartialQuery = false;\n    self._activeOperations = [];\n  }\n\n  static forClass(modelClass) {\n    return new this(modelClass);\n  }\n\n  static get AllSelector() {\n    return AllSelector;\n  }\n\n  static get QueryBuilderContext() {\n    return QueryBuilderContextBase;\n  }\n\n  static get QueryBuilderUserContext() {\n    return QueryBuilderUserContext;\n  }\n\n  static get SelectSelector() {\n    return SelectSelector;\n  }\n\n  static get WhereSelector() {\n    return WhereSelector;\n  }\n\n  static get OnSelector() {\n    return OnSelector;\n  }\n\n  static get JoinSelector() {\n    return JoinSelector;\n  }\n\n  static get FromSelector() {\n    return FromSelector;\n  }\n\n  static get OrderBySelector() {\n    return OrderBySelector;\n  }\n\n  modelClass() {\n    return this._modelClass;\n  }\n\n  context(obj) {\n    const ctx = this._context;\n\n    if (arguments.length === 0) {\n      return ctx.userContext;\n    } else {\n      ctx.userContext = ctx.userContext.newFromObject(this, obj);\n      return this;\n    }\n  }\n\n  mergeContext(obj) {\n    const ctx = this._context;\n    ctx.userContext = ctx.userContext.newMerge(this, obj);\n    return this;\n  }\n\n  internalContext(ctx) {\n    if (arguments.length === 0) {\n      return this._context;\n    } else {\n      this._context = ctx;\n      return this;\n    }\n  }\n\n  internalOptions(opt) {\n    if (arguments.length === 0) {\n      return this._context.options;\n    } else {\n      const oldOpt = this._context.options;\n      this._context.options = Object.assign(oldOpt, opt);\n      return this;\n    }\n  }\n\n  isPartial(isPartial) {\n    if (arguments.length === 0) {\n      return this._isPartialQuery;\n    } else {\n      this._isPartialQuery = isPartial;\n      return this;\n    }\n  }\n\n  isInternal() {\n    return this.internalOptions().isInternalQuery;\n  }\n\n  tableNameFor(tableName, newTableName) {\n    const ctx = this.internalContext();\n    const tableMap = ctx.tableMap;\n\n    if (isString(newTableName)) {\n      ctx.tableMap = tableMap || new Map();\n      ctx.tableMap.set(tableName, newTableName);\n      return this;\n    } else {\n      return (tableMap && tableMap.get(tableName)) || tableName;\n    }\n  }\n\n  aliasFor(tableName, alias) {\n    const ctx = this.internalContext();\n    const aliasMap = ctx.aliasMap;\n\n    if (isString(alias)) {\n      ctx.aliasMap = aliasMap || new Map();\n      ctx.aliasMap.set(tableName, alias);\n      return this;\n    } else {\n      return (aliasMap && aliasMap.get(tableName)) || null;\n    }\n  }\n\n  tableRefFor(tableName) {\n    return this.aliasFor(tableName) || this.tableNameFor(tableName);\n  }\n\n  childQueryOf(query, { fork, isInternalQuery } = {}) {\n    if (query) {\n      let ctx = query.internalContext();\n\n      if (fork) {\n        ctx = ctx.clone();\n      }\n\n      if (isInternalQuery) {\n        ctx.options.isInternalQuery = true;\n      }\n\n      this._parentQuery = query;\n      this.internalContext(ctx);\n\n      // Use the parent's knex if there was no knex in `ctx`.\n      if (this.unsafeKnex() === null) {\n        this.knex(query.unsafeKnex());\n      }\n    }\n\n    return this;\n  }\n\n  subqueryOf(query) {\n    if (query) {\n      this._parentQuery = query;\n\n      if (this.unsafeKnex() === null) {\n        this.knex(query.unsafeKnex());\n      }\n    }\n\n    return this;\n  }\n\n  parentQuery() {\n    return this._parentQuery;\n  }\n\n  knex(...args) {\n    if (args.length === 0) {\n      const knex = this.unsafeKnex();\n\n      if (!knex) {\n        throw new Error(\n          `no database connection available for a query. You need to bind the model class or the query to a knex instance.`\n        );\n      }\n\n      return knex;\n    } else {\n      this._context.knex = args[0];\n      return this;\n    }\n  }\n\n  unsafeKnex() {\n    return this._context.knex || this._modelClass.knex() || null;\n  }\n\n  clear(operationSelector) {\n    const operationsToRemove = new Set();\n\n    this.forEachOperation(operationSelector, op => {\n      // If an ancestor operation has already been removed,\n      // there's no need to remove the children anymore.\n      if (!op.isAncestorInSet(operationsToRemove)) {\n        operationsToRemove.add(op);\n      }\n    });\n\n    for (const op of operationsToRemove) {\n      this.removeOperation(op);\n    }\n\n    return this;\n  }\n\n  clearSelect() {\n    return this.clear(SelectSelector);\n  }\n\n  clearWhere() {\n    return this.clear(WhereSelector);\n  }\n\n  clearOrder() {\n    return this.clear(OrderBySelector);\n  }\n\n  copyFrom(queryBuilder, operationSelector) {\n    const operationsToAdd = new Set();\n\n    queryBuilder.forEachOperation(operationSelector, op => {\n      // If an ancestor operation has already been added,\n      // there is no need to add\n      if (!op.isAncestorInSet(operationsToAdd)) {\n        operationsToAdd.add(op);\n      }\n    });\n\n    for (const op of operationsToAdd) {\n      const opClone = op.clone();\n\n      // We may be moving nested operations to the root. Clear\n      // any links to the parent operations.\n      opClone.parentOperation = null;\n      opClone.adderHookName = null;\n\n      // We don't use `addOperation` here because we don't what to\n      // call `onAdd` or add these operations as child operations.\n      this._operations.push(opClone);\n    }\n\n    return this;\n  }\n\n  has(operationSelector) {\n    return !!this.findOperation(operationSelector);\n  }\n\n  forEachOperation(operationSelector, callback, match = true) {\n    const selector = buildFunctionForOperationSelector(operationSelector);\n\n    for (const op of this._operations) {\n      if (selector(op) === match && callback(op) === false) {\n        break;\n      }\n\n      const childRes = op.forEachDescendantOperation(op => {\n        if (selector(op) === match && callback(op) === false) {\n          return false;\n        }\n      });\n\n      if (childRes === false) {\n        break;\n      }\n    }\n\n    return this;\n  }\n\n  findOperation(operationSelector) {\n    let op = null;\n\n    this.forEachOperation(operationSelector, it => {\n      op = it;\n      return false;\n    });\n\n    return op;\n  }\n\n  findLastOperation(operationSelector) {\n    let op = null;\n\n    this.forEachOperation(operationSelector, it => {\n      op = it;\n    });\n\n    return op;\n  }\n\n  everyOperation(operationSelector) {\n    let every = true;\n\n    this.forEachOperation(\n      operationSelector,\n      () => {\n        every = false;\n        return false;\n      },\n      false\n    );\n\n    return every;\n  }\n\n  callOperationMethod(operation, hookName, args) {\n    try {\n      operation.removeChildOperationsByHookName(hookName);\n\n      this._activeOperations.push({\n        operation,\n        hookName\n      });\n\n      return operation[hookName](...args);\n    } finally {\n      this._activeOperations.pop();\n    }\n  }\n\n  callAsyncOperationMethod(operation, hookName, args) {\n    operation.removeChildOperationsByHookName(hookName);\n\n    this._activeOperations.push({\n      operation,\n      hookName\n    });\n\n    return promiseUtils\n      .try(() => operation[hookName](...args))\n      .then(result => {\n        this._activeOperations.pop();\n        return result;\n      })\n      .catch(err => {\n        this._activeOperations.pop();\n        return Promise.reject(err);\n      });\n  }\n\n  addOperation(operation, args) {\n    const ret = this.addOperationUsingMethod('push', operation, args);\n    return ret;\n  }\n\n  addOperationToFront(operation, args) {\n    return this.addOperationUsingMethod('unshift', operation, args);\n  }\n\n  addOperationUsingMethod(arrayMethod, operation, args) {\n    const shouldAdd = this.callOperationMethod(operation, 'onAdd', [this, args]);\n\n    if (shouldAdd) {\n      if (this._activeOperations.length) {\n        const { operation: parentOperation, hookName } = last(this._activeOperations);\n        parentOperation.addChildOperation(hookName, operation);\n      } else {\n        this._operations[arrayMethod](operation);\n      }\n    }\n\n    return this;\n  }\n\n  removeOperation(operation) {\n    if (operation.parentOperation) {\n      operation.parentOperation.removeChildOperation(operation);\n    } else {\n      const index = this._operations.indexOf(operation);\n\n      if (index !== -1) {\n        this._operations.splice(index, 1);\n      }\n    }\n\n    return this;\n  }\n\n  clone() {\n    return this.baseCloneInto(new this.constructor(this.unsafeKnex()));\n  }\n\n  baseCloneInto(builder) {\n    builder._modelClass = this._modelClass;\n    builder._operations = this._operations.map(it => it.clone());\n    builder._context = this._context.clone();\n    builder._parentQuery = this._parentQuery;\n    builder._isPartialQuery = this._isPartialQuery;\n\n    // Don't copy the active operation stack. We never continue (nor can we)\n    // a query from the exact mid-hook-call state.\n    builder._activeOperations = [];\n\n    return builder;\n  }\n\n  toKnexQuery(knexBuilder = this.knex().queryBuilder()) {\n    this.executeOnBuild();\n    this.executeOnBuildKnex(knexBuilder);\n\n    return knexBuilder;\n  }\n\n  executeOnBuild() {\n    this.forEachOperation(true, op => {\n      if (op.hasOnBuild()) {\n        this.callOperationMethod(op, 'onBuild', [this]);\n      }\n    });\n  }\n\n  executeOnBuildKnex(knexBuilder) {\n    this.forEachOperation(true, op => {\n      if (op.hasOnBuildKnex()) {\n        this.callOperationMethod(op, 'onBuildKnex', [knexBuilder, this]);\n      }\n    });\n  }\n\n  toString() {\n    return this.toKnexQuery().toString();\n  }\n\n  toSql() {\n    return this.toString();\n  }\n\n  skipUndefined() {\n    this.internalOptions().skipUndefined = true;\n    return this;\n  }\n}\n\nfunction buildFunctionForOperationSelector(operationSelector) {\n  if (operationSelector === true) {\n    return AllSelector;\n  } else if (isRegExp(operationSelector)) {\n    return op => operationSelector.test(op.name);\n  } else if (isString(operationSelector)) {\n    return op => op.name === operationSelector;\n  } else if (isSubclassOf(operationSelector, QueryBuilderOperation)) {\n    return op => op.is(operationSelector);\n  } else if (isFunction(operationSelector)) {\n    return operationSelector;\n  } else {\n    return () => false;\n  }\n}\n\nmodule.exports = {\n  QueryBuilderOperationSupport\n};\n","'use strict';\n\nconst SYMBOL_BUILDER = Symbol();\n\nclass QueryBuilderUserContext {\n  constructor(builder) {\n    // This should never ever be accessed outside this class. We only\n    // store it so that we can access builder.knex() lazily.\n    this[SYMBOL_BUILDER] = builder;\n  }\n\n  get transaction() {\n    return this[SYMBOL_BUILDER].knex();\n  }\n\n  newFromObject(builder, obj) {\n    const ctx = new this.constructor(builder);\n    Object.assign(ctx, obj);\n    return ctx;\n  }\n\n  newMerge(builder, obj) {\n    const ctx = new this.constructor(builder);\n    Object.assign(ctx, this, obj);\n    return ctx;\n  }\n}\n\nmodule.exports = {\n  QueryBuilderUserContext\n};\n","'use strict';\n\nconst { isPlainObject } = require('../utils/objectUtils');\nconst { buildArg } = require('../utils/buildUtils');\n\nclass RawBuilder {\n  constructor(sql, args) {\n    this._sql = `${sql}`;\n    this._args = args;\n    this._as = null;\n  }\n\n  get alias() {\n    return this._as;\n  }\n\n  as(as) {\n    this._as = as;\n    return this;\n  }\n\n  toKnexRaw(builder) {\n    let args = null;\n    let sql = this._sql;\n\n    if (this._args.length === 1 && isPlainObject(this._args[0])) {\n      args = buildObject(this._args[0], builder);\n\n      if (this._as) {\n        args.__alias__ = this._as;\n        sql += ' as :__alias__:';\n      }\n    } else {\n      args = buildArray(this._args, builder);\n\n      if (this._as) {\n        args.push(this._as);\n        sql += ' as ??';\n      }\n    }\n\n    return builder.knex().raw(sql, args);\n  }\n}\n\nObject.defineProperties(RawBuilder.prototype, {\n  isObjectionRawBuilder: {\n    enumerable: false,\n    writable: false,\n    value: true\n  }\n});\n\nfunction buildArray(arr, builder) {\n  return arr.map(it => buildArg(it, builder));\n}\n\nfunction buildObject(obj, builder) {\n  return Object.keys(obj).reduce((args, key) => {\n    args[key] = buildArg(obj[key], builder);\n    return args;\n  }, {});\n}\n\nfunction raw() {\n  let sql = arguments[0];\n  let args = null;\n\n  if (arguments.length === 2 && Array.isArray(arguments[1])) {\n    args = new Array(arguments[1].length);\n\n    for (let i = 0, l = args.length; i < l; ++i) {\n      args[i] = arguments[1][i];\n    }\n  } else {\n    args = new Array(arguments.length - 1);\n\n    for (let i = 1, l = arguments.length; i < l; ++i) {\n      args[i - 1] = arguments[i];\n    }\n  }\n\n  return new RawBuilder(sql, args);\n}\n\nmodule.exports = {\n  RawBuilder,\n  raw\n};\n","'use strict';\n\nconst { parseFieldExpression } = require('../utils/parseFieldExpression');\nconst { isObject } = require('../utils/objectUtils');\nconst { deprecate } = require('../utils/deprecate');\n\nclass ReferenceBuilder {\n  constructor(expr) {\n    this._expr = expr;\n    this._parsedExpr = null;\n    this._column = null;\n    this._table = null;\n    this._cast = null;\n    this._toJson = false;\n    this._table = null;\n    this._alias = null;\n    this._modelClass = null;\n\n    // This `if` makes it possible for `clone` to skip\n    // parsing the expression again.\n    if (expr !== null) {\n      this._parseExpression(expr);\n    }\n  }\n\n  get parsedExpr() {\n    return this._parsedExpr;\n  }\n\n  get column() {\n    return this._column;\n  }\n\n  set column(column) {\n    this._column = column;\n  }\n\n  get alias() {\n    return this._alias;\n  }\n\n  set alias(alias) {\n    this._alias = alias;\n  }\n\n  get tableName() {\n    return this._table;\n  }\n\n  set tableName(table) {\n    this._table = table;\n  }\n\n  get modelClass() {\n    return this._modelClass;\n  }\n\n  set modelClass(modelClass) {\n    this._modelClass = modelClass;\n  }\n\n  get isPlainColumnRef() {\n    return (\n      (!this._parsedExpr || this._parsedExpr.access.length === 0) && !this._cast && !this._toJson\n    );\n  }\n\n  get expression() {\n    return this._expr;\n  }\n\n  get cast() {\n    return this._cast;\n  }\n\n  fullColumn(builder) {\n    const table = this.tableName\n      ? this.tableName\n      : this.modelClass\n        ? builder.tableRefFor(this.modelClass.getTableName())\n        : null;\n\n    if (table) {\n      return `${table}.${this.column}`;\n    } else {\n      return this.column;\n    }\n  }\n\n  castText() {\n    return this.castTo('text');\n  }\n\n  castInt() {\n    return this.castTo('integer');\n  }\n\n  castBigInt() {\n    return this.castTo('bigint');\n  }\n\n  castFloat() {\n    return this.castTo('float');\n  }\n\n  castDecimal() {\n    return this.castTo('decimal');\n  }\n\n  castReal() {\n    return this.castTo('real');\n  }\n\n  castBool() {\n    return this.castTo('boolean');\n  }\n\n  castJson() {\n    this._toJson = true;\n    return this;\n  }\n\n  castType(sqlType) {\n    deprecate(\n      'castType(type) is deprecated. Use castTo(type) instead. castType(type) will be removed in 2.0'\n    );\n    return this.castTo(sqlType);\n  }\n\n  castTo(sqlType) {\n    this._cast = sqlType;\n    return this;\n  }\n\n  from(table) {\n    this._table = table;\n    return this;\n  }\n\n  table(table) {\n    this._table = table;\n    return this;\n  }\n\n  model(modelClass) {\n    this._modelClass = modelClass;\n    return this;\n  }\n\n  as(alias) {\n    this._alias = alias;\n    return this;\n  }\n\n  clone() {\n    const clone = new this.constructor(null);\n\n    clone._expr = this._expr;\n    clone._parsedExpr = this._parsedExpr;\n    clone._column = this._column;\n    clone._table = this._table;\n    clone._cast = this._cast;\n    clone._toJson = this._toJson;\n    clone._table = this._table;\n    clone._alias = this._alias;\n    clone._modelClass = this._modelClass;\n\n    return clone;\n  }\n\n  toKnexRaw(builder) {\n    return builder.knex().raw(...this._createRawArgs(builder));\n  }\n\n  _parseExpression(expr) {\n    this._parsedExpr = parseFieldExpression(expr);\n    this._column = this._parsedExpr.column;\n    this._table = this._parsedExpr.table;\n  }\n\n  _createRawArgs(builder) {\n    let bindings = [];\n    let sql = this._createReferenceSql(builder, bindings);\n\n    sql = this._maybeCast(sql, bindings);\n    sql = this._maybeToJsonb(sql, bindings);\n    sql = this._maybeAlias(sql, bindings);\n\n    return [sql, bindings];\n  }\n\n  _createReferenceSql(builder, bindings) {\n    bindings.push(this.fullColumn(builder));\n\n    if (this._parsedExpr.access.length > 0) {\n      const extractor = this._cast ? '#>>' : '#>';\n      const jsonFieldRef = this._parsedExpr.access.map(field => field.ref).join(',');\n      return `??${extractor}'{${jsonFieldRef}}'`;\n    } else {\n      return '??';\n    }\n  }\n\n  _maybeCast(sql) {\n    if (this._cast) {\n      return `CAST(${sql} AS ${this._cast})`;\n    } else {\n      return sql;\n    }\n  }\n\n  _maybeToJsonb(sql) {\n    if (this._toJson) {\n      return `to_jsonb(${sql})`;\n    } else {\n      return sql;\n    }\n  }\n\n  _maybeAlias(sql, bindings) {\n    if (this._shouldAlias()) {\n      bindings.push(this._alias);\n      return `${sql} as ??`;\n    } else {\n      return sql;\n    }\n  }\n\n  _shouldAlias() {\n    if (!this._alias) {\n      return false;\n    } else if (!this.isPlainColumnRef) {\n      return true;\n    } else {\n      // No need to alias if we are dealing with a simple column reference\n      // and the alias is the same as the column name.\n      return this._alias !== this._column;\n    }\n  }\n}\n\nObject.defineProperties(ReferenceBuilder.prototype, {\n  isObjectionReferenceBuilder: {\n    enumerable: false,\n    writable: false,\n    value: true\n  }\n});\n\nconst ref = reference => {\n  if (isObject(reference) && reference.isObjectionReferenceBuilder) {\n    return reference;\n  } else {\n    return new ReferenceBuilder(reference);\n  }\n};\n\nmodule.exports = {\n  ReferenceBuilder,\n  ref\n};\n","'use strict';\n\nconst parser = require('./parsers/relationExpressionParser');\nconst { isObject, isNumber, isString, union } = require('../utils/objectUtils');\nconst { RelationDoesNotExistError } = require('../model/RelationDoesNotExistError');\n\nclass RelationExpressionParseError extends Error {}\nclass DuplicateRelationError extends RelationExpressionParseError {\n  constructor(relationName) {\n    super();\n    this.relationName = relationName;\n  }\n}\n\nclass RelationExpression {\n  constructor(node = newNode(), recursionDepth = 0) {\n    this.node = node;\n    this.recursionDepth = recursionDepth;\n  }\n\n  // Create a relation expression from a string, a pojo or another\n  // RelationExpression instance.\n  static create(expr) {\n    if (isObject(expr)) {\n      if (expr.isObjectionRelationExpression) {\n        return expr;\n      } else {\n        return new RelationExpression(normalizeNode(expr));\n      }\n    } else if (isString(expr)) {\n      if (expr.trim().length === 0) {\n        return new RelationExpression();\n      } else {\n        try {\n          return new RelationExpression(parse(expr));\n        } catch (err) {\n          if (err.duplicateRelationName) {\n            throw new DuplicateRelationError(err.duplicateRelationName);\n          } else {\n            throw new RelationExpressionParseError(err.message);\n          }\n        }\n      }\n    } else {\n      return new RelationExpression();\n    }\n  }\n\n  // Create a relation expression from a model graph.\n  static fromModelGraph(graph) {\n    if (!graph) {\n      return new RelationExpression();\n    } else {\n      return new RelationExpression(modelGraphToNode(graph, newNode()));\n    }\n  }\n\n  get maxRecursionDepth() {\n    if (isNumber(this.node.$recursive)) {\n      return this.node.$recursive;\n    } else {\n      return this.node.$recursive ? Number.MAX_SAFE_INTEGER : 0;\n    }\n  }\n\n  get numChildren() {\n    return this.node.$childNames.length;\n  }\n\n  get isEmpty() {\n    return this.numChildren === 0;\n  }\n\n  // Merges this relation expression with another. `expr` can be a string,\n  // a pojo, or a RelationExpression instance.\n  merge(expr) {\n    const node = RelationExpression.create(expr).node;\n    return new RelationExpression(mergeNodes(this.node, node));\n  }\n\n  // Returns true if `expr` is contained by this expression. For example\n  // `a.b` is contained by `a.[b, c]`.\n  isSubExpression(expr) {\n    expr = RelationExpression.create(expr);\n\n    if (this.node.$allRecursive) {\n      return true;\n    }\n\n    if (expr.node.$allRecursive) {\n      return this.node.$allRecursive;\n    }\n\n    if (this.node.$relation !== expr.node.$relation) {\n      return false;\n    }\n\n    const maxRecursionDepth = expr.maxRecursionDepth;\n\n    if (maxRecursionDepth > 0) {\n      return this.node.$allRecursive || this.maxRecursionDepth >= maxRecursionDepth;\n    }\n\n    for (const childName of expr.node.$childNames) {\n      const ownSubExpression = this.childExpression(childName);\n      const subExpression = expr.childExpression(childName);\n\n      if (!ownSubExpression || !ownSubExpression.isSubExpression(subExpression)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  // Returns a RelationExpression for a child node or null if there\n  // is no child with the given name `childName`.\n  childExpression(childName) {\n    if (\n      this.node.$allRecursive ||\n      (childName === this.node.$name && this.recursionDepth < this.maxRecursionDepth - 1)\n    ) {\n      return new RelationExpression(this.node, this.recursionDepth + 1);\n    }\n\n    const child = this.node[childName];\n\n    if (child) {\n      return new RelationExpression(child);\n    } else {\n      return null;\n    }\n  }\n\n  // Loops throught all first level children.\n  forEachChildExpression(modelClass, cb) {\n    const maxRecursionDepth = this.maxRecursionDepth;\n\n    if (this.node.$allRecursive) {\n      for (const relationName of modelClass.getRelationNames()) {\n        const node = newNode(relationName, true);\n        const relation = modelClass.getRelationUnsafe(relationName);\n        const childExpr = new RelationExpression(node);\n\n        cb(childExpr, relation);\n      }\n    } else if (this.recursionDepth < maxRecursionDepth - 1) {\n      const relation = modelClass.getRelationUnsafe(this.node.$relation) || null;\n      const childExpr = new RelationExpression(this.node, this.recursionDepth + 1);\n\n      cb(childExpr, relation);\n    } else if (maxRecursionDepth === 0) {\n      for (const childName of this.node.$childNames) {\n        const node = this.node[childName];\n        const relation = modelClass.getRelationUnsafe(node.$relation);\n\n        if (!relation) {\n          throw new RelationDoesNotExistError(node.$relation);\n        }\n\n        const childExpr = new RelationExpression(node);\n\n        cb(childExpr, relation);\n      }\n    }\n  }\n\n  expressionsAtPath(path) {\n    return findExpressionsAtPath(this, RelationExpression.create(path), []);\n  }\n\n  clone() {\n    return new RelationExpression(cloneNode(this.node), this.recursionDepth);\n  }\n\n  toString() {\n    return toString(this.node);\n  }\n\n  toPojo() {\n    return cloneNode(this.node);\n  }\n\n  toJSON() {\n    return this.toPojo();\n  }\n}\n\nconst parseCache = new Map();\nfunction parse(str) {\n  const cachedNode = parseCache.get(str);\n\n  if (cachedNode) {\n    return cloneNode(cachedNode);\n  } else {\n    const node = parser.parse(str);\n    parseCache.set(str, cloneNode(node));\n    return node;\n  }\n}\n\n// All enumerable properties of a node that don't start with `$`\n// are child nodes.\nfunction getChildNames(node) {\n  if (!node) {\n    return [];\n  }\n\n  const childNames = [];\n\n  for (const key of Object.keys(node)) {\n    if (key[0] !== '$') {\n      childNames.push(key);\n    }\n  }\n\n  return childNames;\n}\n\nfunction toString(node) {\n  const childNames = node.$childNames;\n\n  let childExpr = childNames.map(childName => node[childName]).map(toString);\n  let str = node.$relation;\n\n  if (node.$recursive) {\n    if (isNumber(node.$recursive)) {\n      str += '.^' + node.$recursive;\n    } else {\n      str += '.^';\n    }\n  } else if (node.$allRecursive) {\n    str += '.*';\n  }\n\n  if (childExpr.length > 1) {\n    childExpr = `[${childExpr.join(', ')}]`;\n  } else {\n    childExpr = childExpr[0];\n  }\n\n  if (node.$modify.length) {\n    str += `(${node.$modify.join(', ')})`;\n  }\n\n  if (node.$name !== node.$relation) {\n    str += ` as ${node.$name}`;\n  }\n\n  if (childExpr) {\n    if (str) {\n      return `${str}.${childExpr}`;\n    } else {\n      return childExpr;\n    }\n  } else {\n    return str;\n  }\n}\n\nfunction cloneNode(node) {\n  return normalizeNode(node);\n}\n\nfunction modelGraphToNode(models, node) {\n  if (!models) {\n    return;\n  }\n\n  if (Array.isArray(models)) {\n    for (let i = 0, l = models.length; i < l; ++i) {\n      modelToNode(models[i], node);\n    }\n  } else {\n    modelToNode(models, node);\n  }\n\n  return node;\n}\n\nfunction modelToNode(model, node) {\n  const modelClass = model.constructor;\n  const relationNames = modelClass.getRelationNames();\n\n  for (let r = 0, lr = relationNames.length; r < lr; ++r) {\n    const relName = relationNames[r];\n\n    if (model.hasOwnProperty(relName)) {\n      let childNode = node[relName];\n\n      if (!childNode) {\n        childNode = newNode(relName);\n        node[relName] = childNode;\n        node.$childNames.push(relName);\n      }\n\n      modelGraphToNode(model[relName], childNode);\n    }\n  }\n}\n\nfunction newNode(name = null, allRecusive = false) {\n  return normalizeNode(null, name, allRecusive);\n}\n\nfunction normalizeNode(node = null, name = null, allRecusive = false) {\n  const normalized = {\n    $name: (node && node.$name) || name || null,\n    $relation: (node && node.$relation) || name || null,\n    $modify: (node && node.$modify && node.$modify.slice()) || [],\n    $recursive: (node && node.$recursive) || false,\n    $allRecursive: (node && node.$allRecursive) || allRecusive || false,\n    $childNames: (node && node.$childNames && node.$childNames.slice()) || getChildNames(node)\n  };\n\n  for (const childName of normalized.$childNames) {\n    const childNode = node[childName];\n\n    if (isObject(childNode) || childNode === true) {\n      normalized[childName] = normalizeNode(childNode, childName);\n    }\n  }\n\n  return normalized;\n}\n\nfunction findExpressionsAtPath(target, path, results) {\n  if (path.node.$childNames.length == 0) {\n    // Path leaf reached, add target node to result set.\n    results.push(target);\n  } else {\n    for (const childName of path.node.$childNames) {\n      const pathChild = path.childExpression(childName);\n      const targetChild = target.childExpression(childName);\n\n      if (targetChild) {\n        findExpressionsAtPath(targetChild, pathChild, results);\n      }\n    }\n  }\n\n  return results;\n}\n\nfunction mergeNodes(node1, node2) {\n  const node = {\n    $name: node1.$name,\n    $relation: node1.$relation,\n    $modify: union(node1.$modify, node2.$modify),\n    $recursive: mergeRecursion(node1.$recursive, node2.$recursive),\n    $allRecursive: node1.$allRecursive || node2.$allRecursive,\n    $childNames: null\n  };\n\n  if (!node.$recursive && !node.$allRecursive) {\n    node.$childNames = union(node1.$childNames, node2.$childNames);\n\n    for (const childName of node.$childNames) {\n      const child1 = node1[childName];\n      const child2 = node2[childName];\n\n      if (child1 && child2) {\n        node[childName] = mergeNodes(child1, child2);\n      } else {\n        node[childName] = child1 || child2;\n      }\n    }\n  } else {\n    node.$childNames = [];\n  }\n\n  return node;\n}\n\nfunction mergeRecursion(rec1, rec2) {\n  if (rec1 === true || rec2 === true) {\n    return true;\n  } else if (isNumber(rec1) && isNumber(rec2)) {\n    return Math.max(rec1, rec2);\n  } else {\n    return rec1 || rec2;\n  }\n}\n\nObject.defineProperties(RelationExpression.prototype, {\n  isObjectionRelationExpression: {\n    enumerable: false,\n    writable: false,\n    value: true\n  }\n});\n\nmodule.exports = {\n  RelationExpression,\n  RelationExpressionParseError,\n  DuplicateRelationError\n};\n","'use strict';\n\nconst { asArray } = require('../utils/objectUtils');\n\nconst BUILDER_SYMBOL = Symbol();\n\nclass StaticHookArguments {\n  constructor({ builder, result = null }) {\n    // The builder should never be accessed through the arguments.\n    // Hide it as well as possible to discourage people from\n    // digging it out.\n    Object.defineProperty(this, BUILDER_SYMBOL, {\n      value: builder\n    });\n\n    Object.defineProperty(this, 'result', {\n      value: asArray(result)\n    });\n  }\n\n  static create(args) {\n    return new StaticHookArguments(args);\n  }\n\n  get findQuery() {\n    return this[BUILDER_SYMBOL].toFindQuery().runAfter(asArray);\n  }\n\n  get context() {\n    return this[BUILDER_SYMBOL].context();\n  }\n\n  get transaction() {\n    return this[BUILDER_SYMBOL].unsafeKnex();\n  }\n\n  get relation() {\n    const op = this[BUILDER_SYMBOL].findOperation(hasRelation);\n\n    if (op) {\n      return getRelation(op);\n    } else {\n      return null;\n    }\n  }\n\n  get modelOptions() {\n    const op = this[BUILDER_SYMBOL].findOperation(hasModelOptions);\n\n    if (op) {\n      return getModelOptions(op);\n    } else {\n      return null;\n    }\n  }\n\n  get modelInstances() {\n    const op = this[BUILDER_SYMBOL].findOperation(hasModelInstance);\n\n    if (op) {\n      return asArray(getModelInstance(op));\n    } else {\n      return [];\n    }\n  }\n\n  get inputModelInstances() {\n    const op = this[BUILDER_SYMBOL].findOperation(hasInputModelInstance);\n\n    if (op) {\n      return asArray(getInputModelInstance(op));\n    } else {\n      return [];\n    }\n  }\n\n  get cancelQuery() {\n    const args = this;\n\n    return cancelValue => {\n      const builder = this[BUILDER_SYMBOL];\n\n      if (cancelValue === undefined) {\n        if (builder.isInsert()) {\n          cancelValue = args.inputModelInstances;\n        } else if (builder.isFind()) {\n          cancelValue = [];\n        } else {\n          cancelValue = 0;\n        }\n      }\n\n      builder.resolve(cancelValue);\n    };\n  }\n}\n\nfunction getRelation(op) {\n  return op.relation;\n}\n\nfunction hasRelation(op) {\n  return !!getRelation(op);\n}\n\nfunction getModelOptions(op) {\n  return op.modelOptions;\n}\n\nfunction hasModelOptions(op) {\n  return !!getModelOptions(op);\n}\n\nfunction getModelInstance(op) {\n  return op.instance || op.owner || op.owners;\n}\n\nfunction hasModelInstance(op) {\n  return !!getModelInstance(op);\n}\n\nfunction getInputModelInstance(op) {\n  return op.models || op.model;\n}\n\nfunction hasInputModelInstance(op) {\n  return !!getInputModelInstance(op);\n}\n\nmodule.exports = {\n  StaticHookArguments\n};\n","'use strict';\n\nconst { isPostgres } = require('../../utils/knexUtils');\n\nconst POSTGRES_MAX_INSERT_BATCH_SIZE = 100;\nconst MAX_CONCURRENCY = 100;\n\nclass GraphAction {\n  static get ReturningAllSelector() {\n    return op => {\n      // Only select `returning('*')` operation.\n      return op.name === 'returning' && op.args.includes('*');\n    };\n  }\n\n  run(builder) {\n    return null;\n  }\n\n  _getConcurrency(builder, nodes) {\n    return nodes.reduce((minConcurrency, node) => {\n      return Math.min(minConcurrency, node.modelClass.getConcurrency(builder.unsafeKnex()));\n    }, MAX_CONCURRENCY);\n  }\n\n  _getBatchSize(builder) {\n    return isPostgres(builder.unsafeKnex()) ? POSTGRES_MAX_INSERT_BATCH_SIZE : 1;\n  }\n\n  _resolveReferences(node) {\n    if (node.isReference) {\n      this._resolveReference(node);\n    }\n  }\n\n  _resolveReference(node) {\n    const refNode = node.referencedNode;\n\n    for (const prop of Object.keys(refNode.obj)) {\n      if (!node.obj.hasOwnProperty(prop)) {\n        node.obj[prop] = refNode.obj[prop];\n      }\n    }\n  }\n}\n\nmodule.exports = {\n  GraphAction\n};\n","'use strict';\n\nconst { asArray, groupBy } = require('../../utils/objectUtils');\nconst { ModelGraph } = require('../../model/graph/ModelGraph');\nconst { FetchStrategy } = require('./GraphOptions');\nconst { RelationExpression } = require('../RelationExpression');\n\nclass GraphOperation {\n  constructor({ graph, currentGraph, graphOptions }) {\n    this.graph = graph;\n    this.currentGraph = currentGraph;\n    this.graphOptions = graphOptions;\n  }\n\n  static fetchCurrentGraph({ builder, graph, graphOptions }) {\n    const rootObjects = graph.rootObjects;\n    const rootIds = getRootIds(rootObjects);\n    const modelClass = builder.modelClass();\n\n    if (rootIds.length === 0) {\n      return Promise.resolve(ModelGraph.create(modelClass, []));\n    }\n\n    const eagerExpr = RelationExpression.fromModelGraph(rootObjects);\n\n    return modelClass\n      .query()\n      .childQueryOf(builder, childQueryOptions())\n      .modify(propagateMethodCallsFromQuery(builder))\n      .modify(buildFetchQuerySelects(graph, graphOptions, eagerExpr))\n      .findByIds(rootIds)\n      .eagerAlgorithm(modelClass.WhereInEagerAlgorighm)\n      .eager(eagerExpr)\n      .internalOptions(fetchQueryInternalOptions())\n      .then(models => ModelGraph.create(modelClass, models));\n  }\n\n  createActions() {\n    return [];\n  }\n\n  shouldRelateAncestor(node) {\n    if (!node.parentNode) {\n      return false;\n    }\n\n    return (\n      this.graphOptions.shouldRelate(node.parentNode, this.currentGraph) ||\n      this.shouldRelateAncestor(node.parentNode)\n    );\n  }\n}\n\nfunction getRootIds(graph) {\n  return asArray(graph)\n    .filter(it => it.$hasId())\n    .map(root => root.$id());\n}\n\nfunction propagateMethodCallsFromQuery(builder) {\n  return fetchBuilder => {\n    // Propagate some method calls from the root query.\n    for (const method of ['forUpdate', 'forShare']) {\n      if (builder.has(method)) {\n        fetchBuilder[method]();\n      }\n    }\n  };\n}\n\nfunction buildFetchQuerySelects(graph, graphOptions, eagerExpr) {\n  return builder => {\n    const nodesByRelationPath = groupNodesByRelationPath(graph, eagerExpr);\n\n    for (const [relationPath, nodes] of nodesByRelationPath.entries()) {\n      const selectModifier = createFetchSelectModifier(nodes, graphOptions);\n\n      if (!relationPath) {\n        builder.modify(selectModifier);\n      } else {\n        builder.modifyEager(relationPath, selectModifier);\n      }\n    }\n  };\n}\n\nfunction groupNodesByRelationPath(graph, eagerExpr) {\n  const nodesByRelationPath = groupBy(graph.nodes, node => node.relationPathKey);\n\n  // Not all relation paths have nodes. Relations with nulls or empty arrays\n  // don't have nodes, but will still need to be fetched. Add these to the\n  // map as empty arrays.\n  forEachPath(eagerExpr.node, relationPath => {\n    if (!nodesByRelationPath.has(relationPath)) {\n      nodesByRelationPath.set(relationPath, []);\n    }\n  });\n\n  return nodesByRelationPath;\n}\n\nfunction createFetchSelectModifier(nodes, graphOptions) {\n  if (graphOptions.isFetchStrategy(FetchStrategy.OnlyIdentifiers)) {\n    return createIdentifierSelector();\n  } else if (graphOptions.isFetchStrategy(FetchStrategy.OnlyNeeded)) {\n    return createInputColumnSelector(nodes);\n  } else {\n    return () => {};\n  }\n}\n\n// Returns a function that only selects the id column.\nfunction createIdentifierSelector() {\n  return builder => {\n    builder.select(builder.fullIdColumn());\n  };\n}\n\n// Returns a function that only selects the columns that exist in the input.\nfunction createInputColumnSelector(nodes) {\n  return builder => {\n    const selects = new Map();\n\n    for (const node of nodes) {\n      const databaseJson = node.obj.$toDatabaseJson(builder);\n\n      for (const column of Object.keys(databaseJson)) {\n        if (!shouldSelectColumn(column, selects, node)) {\n          continue;\n        }\n\n        const selection =\n          createManyToManyExtraSelectionIfNeeded(builder, column, node) ||\n          createSelection(builder, column, node);\n\n        selects.set(column, selection);\n      }\n    }\n\n    const selectArr = Array.from(selects.values());\n    const idColumn = builder.fullIdColumn();\n\n    if (!selectArr.includes(idColumn)) {\n      // Always select the identifer.\n      selectArr.push(idColumn);\n    }\n\n    builder.select(selectArr);\n  };\n}\n\nfunction shouldSelectColumn(column, selects, node) {\n  const modelClass = node.modelClass;\n\n  return (\n    !selects.has(column) &&\n    column !== modelClass.propertyNameToColumnName(modelClass.dbRefProp) &&\n    column !== modelClass.propertyNameToColumnName(modelClass.uidRefProp) &&\n    column !== modelClass.propertyNameToColumnName(modelClass.uidProp)\n  );\n}\n\nfunction createManyToManyExtraSelectionIfNeeded(builder, column, node) {\n  if (node.parentEdge && node.parentEdge.relation.isObjectionManyToManyRelation) {\n    const relation = node.parentEdge.relation;\n    const extra = relation.joinTableExtras.find(extra => extra.aliasCol === column);\n\n    if (extra) {\n      return `${builder.tableRefFor(relation.joinModelClass)}.${extra.joinTableCol} as ${\n        extra.aliasCol\n      }`;\n    }\n  }\n\n  return null;\n}\n\nfunction createSelection(builder, column, node) {\n  return `${builder.tableRefFor(node.modelClass)}.${column}`;\n}\n\nfunction childQueryOptions() {\n  return {\n    fork: true,\n    isInternalQuery: true\n  };\n}\n\nfunction fetchQueryInternalOptions() {\n  return {\n    keepImplicitJoinProps: true\n  };\n}\n\nfunction forEachPath(eagerExprNode, cb, path = []) {\n  for (const relation of eagerExprNode.$childNames) {\n    path.push(relation);\n    cb(path.join('.'));\n    forEachPath(eagerExprNode[relation], cb, path);\n    path.pop();\n  }\n}\n\nmodule.exports = {\n  GraphOperation\n};\n","'use strict';\n\nconst NO_RELATE = 'noRelate';\nconst NO_UNRELATE = 'noUnrelate';\nconst NO_INSERT = 'noInsert';\nconst NO_UPDATE = 'noUpdate';\nconst NO_DELETE = 'noDelete';\n\nconst UPDATE = 'update';\nconst RELATE = 'relate';\nconst UNRELATE = 'unrelate';\nconst INSERT_MISSING = 'insertMissing';\nconst FETCH_STRATEGY = 'fetchStrategy';\n\nconst FetchStrategy = {\n  OnlyIdentifiers: 'OnlyIdentifiers',\n  Everything: 'Everything',\n  OnlyNeeded: 'OnlyNeeded'\n};\n\nclass GraphOptions {\n  constructor(options) {\n    if (options instanceof GraphOptions) {\n      this.options = options.options;\n    } else {\n      this.options = options;\n    }\n  }\n\n  isFetchStrategy(strategy) {\n    if (!FetchStrategy[strategy]) {\n      throw new Error(`unknown strategy \"${strategy}\"`);\n    }\n\n    if (!this.options[FETCH_STRATEGY]) {\n      return strategy === FetchStrategy.OnlyIdentifiers;\n    } else {\n      return this.options[FETCH_STRATEGY] === strategy;\n    }\n  }\n\n  isInsertOnly() {\n    // NO_RELATE is not in the list, since the `insert only` mode does\n    // relate things that can be related using inserts.\n    return [NO_DELETE, NO_UPDATE, NO_UNRELATE, INSERT_MISSING].every(opt => {\n      return this.options[opt] === true;\n    });\n  }\n\n  // Like `shouldRelate` but ignores settings that explicitly disable relate operations.\n  shouldRelateIgnoreDisable(node, currentGraph) {\n    if (node.isReference || node.isDbReference) {\n      return true;\n    }\n\n    return (\n      !getCurrentNode(node, currentGraph) &&\n      this._hasOption(node, RELATE) &&\n      !!node.parentEdge &&\n      !!node.parentEdge.relation &&\n      node.parentEdge.relation.hasRelateProp(node.obj)\n    );\n  }\n\n  shouldRelate(node, currentGraph) {\n    return !this._hasOption(node, NO_RELATE) && this.shouldRelateIgnoreDisable(node, currentGraph);\n  }\n\n  // Like `shouldInsert` but ignores settings that explicitly disable insert operations.\n  shouldInsertIgnoreDisable(node, currentGraph) {\n    return (\n      !getCurrentNode(node, currentGraph) &&\n      !this.shouldRelateIgnoreDisable(node, currentGraph) &&\n      (!node.hadIdOriginally || this._hasOption(node, INSERT_MISSING))\n    );\n  }\n\n  shouldInsert(node, currentGraph) {\n    return !this._hasOption(node, NO_INSERT) && this.shouldInsertIgnoreDisable(node, currentGraph);\n  }\n\n  // Like `shouldPatch() || shouldUpdate()` but ignores settings that explicitly disable\n  // update or patch operations.\n  shouldPatchOrUpdateIgnoreDisable(node, currentGraph) {\n    if (this.shouldRelate(node)) {\n      // We should update all nodes that are going to be related. Note that\n      // we don't actually update anything unless there is something to update\n      // so this is just a preliminary test.\n      return true;\n    }\n\n    return !!getCurrentNode(node, currentGraph);\n  }\n\n  shouldPatch(node, currentGraph) {\n    return (\n      this.shouldPatchOrUpdateIgnoreDisable(node, currentGraph) &&\n      !this._hasOption(node, NO_UPDATE) &&\n      !this._hasOption(node, UPDATE)\n    );\n  }\n\n  shouldUpdate(node, currentGraph) {\n    return (\n      this.shouldPatchOrUpdateIgnoreDisable(node, currentGraph) &&\n      !this._hasOption(node, NO_UPDATE) &&\n      this._hasOption(node, UPDATE)\n    );\n  }\n\n  // Like `shouldUnrelate` but ignores settings that explicitly disable unrelate operations.\n  shouldUnrelateIgnoreDisable(currentNode) {\n    return this._hasOption(currentNode, UNRELATE);\n  }\n\n  shouldUnrelate(currentNode, graph) {\n    return (\n      !getNode(currentNode, graph) &&\n      !this._hasOption(currentNode, NO_UNRELATE) &&\n      this.shouldUnrelateIgnoreDisable(currentNode)\n    );\n  }\n\n  shouldDelete(currentNode, graph) {\n    return (\n      !getNode(currentNode, graph) &&\n      !this._hasOption(currentNode, NO_DELETE) &&\n      !this.shouldUnrelateIgnoreDisable(currentNode)\n    );\n  }\n\n  shouldInsertOrRelate(node, currentGraph) {\n    return this.shouldInsert(node, currentGraph) || this.shouldRelate(node, currentGraph);\n  }\n\n  shouldDeleteOrUnrelate(currentNode, graph) {\n    return this.shouldDelete(currentNode, graph) || this.shouldUnrelate(currentNode, graph);\n  }\n\n  rebasedOptions(newRoot) {\n    const newOpt = {};\n    const newRootRelationPath = newRoot.relationPathKey;\n\n    for (const name of Object.keys(this.options)) {\n      const value = this.options[name];\n\n      if (Array.isArray(value)) {\n        newOpt[name] = value\n          .filter(it => it.startsWith(newRootRelationPath))\n          .map(it => it.slice(newRootRelationPath.length + 1))\n          .filter(it => !!it);\n      } else {\n        newOpt[name] = value;\n      }\n    }\n\n    return new GraphOptions(newOpt);\n  }\n\n  _hasOption(node, optionName) {\n    const option = this.options[optionName];\n\n    if (Array.isArray(option)) {\n      return option.indexOf(node.relationPathKey) !== -1;\n    } else {\n      return !!option;\n    }\n  }\n}\n\nfunction getCurrentNode(node, currentGraph) {\n  if (!currentGraph || !node) {\n    return null;\n  }\n\n  return currentGraph.nodeForNode(node);\n}\n\nfunction getNode(currentNode, graph) {\n  if (!graph || !currentNode) {\n    return null;\n  }\n\n  return graph.nodeForNode(currentNode);\n}\n\nmodule.exports = {\n  GraphOptions,\n  FetchStrategy\n};\n","'use strict';\n\nconst { ModelGraph } = require('../../model/graph/ModelGraph');\nconst { createNotModelError } = require('../../model/graph/ModelGraphBuilder');\nconst { GraphOperation } = require('../graph/GraphOperation');\nconst { GraphInsert } = require('../graph/insert/GraphInsert');\nconst { GraphPatch } = require('../graph/patch/GraphPatch');\nconst { GraphDelete } = require('../graph/delete/GraphDelete');\nconst { GraphRecursiveUpsert } = require('../graph/recursiveUpsert/GraphRecursiveUpsert');\nconst { GraphOptions } = require('../graph/GraphOptions');\nconst { ValidationErrorType } = require('../../model/ValidationError');\nconst { RelationExpression } = require('../RelationExpression');\nconst { uniqBy, asArray, isObject } = require('../../utils/objectUtils');\n\nclass GraphUpsert {\n  constructor({ rootModelClass, objects, upsertOptions }) {\n    checkCanBeConvertedToModels(rootModelClass, objects);\n\n    this.objects = rootModelClass.ensureModelArray(objects, GraphUpsert.modelOptions);\n    this.isArray = Array.isArray(objects);\n    this.upsertOpt = upsertOptions;\n  }\n\n  static get modelOptions() {\n    return { skipValidation: true };\n  }\n\n  run(builder) {\n    const modelClass = builder.modelClass();\n    const graphOptions = new GraphOptions(this.upsertOpt);\n\n    const graph = ModelGraph.create(modelClass, this.objects);\n    assignDbRefsAsRelateProps(graph);\n\n    return fetchCurrentGraph(builder, graphOptions, graph)\n      .then(pruneGraphs(graph, graphOptions))\n      .then(checkForErrors(graph, graphOptions, builder))\n      .then(executeOperations(graph, graphOptions, builder))\n      .then(returnResult(this.objects, this.isArray));\n  }\n}\n\nfunction checkCanBeConvertedToModels(modelClass, objects) {\n  asArray(objects).forEach(obj => {\n    if (!isObject(obj)) {\n      throw createNotModelError(modelClass, obj);\n    }\n  });\n}\n\nfunction assignDbRefsAsRelateProps(graph) {\n  for (const node of graph.nodes) {\n    if (!node.parentEdge || !node.parentEdge.relation || !node.isDbReference) {\n      continue;\n    }\n\n    node.parentEdge.relation.setRelateProp(node.obj, asArray(node.dbReference));\n  }\n}\n\nfunction fetchCurrentGraph(builder, graphOptions, graph) {\n  if (graphOptions.isInsertOnly()) {\n    return Promise.resolve(ModelGraph.createEmpty());\n  } else {\n    return GraphOperation.fetchCurrentGraph({ builder, graph, graphOptions });\n  }\n}\n\n// Remove branches from the graph that require no operations. For example\n// we never want to do anything for descendant nodes of a node that is\n// deleted or unrelated. We never delete recursively.\nfunction pruneGraphs(graph, graphOptions) {\n  return currentGraph => {\n    pruneRelatedBranches(graph, currentGraph, graphOptions);\n\n    if (!graphOptions.isInsertOnly()) {\n      pruneDeletedBranches(graph, currentGraph);\n    }\n\n    return currentGraph;\n  };\n}\n\nfunction pruneRelatedBranches(graph, currentGraph, graphOptions) {\n  const relateNodes = graph.nodes.filter(node => {\n    return (\n      !currentGraph.nodeForNode(node) && !graphOptions.shouldInsertIgnoreDisable(node, currentGraph)\n    );\n  });\n\n  removeBranchesFromGraph(findRoots(relateNodes), graph);\n}\n\nfunction pruneDeletedBranches(graph, currentGraph) {\n  const deleteNodes = currentGraph.nodes.filter(currentNode => !graph.nodeForNode(currentNode));\n\n  removeBranchesFromGraph(findRoots(deleteNodes), currentGraph);\n}\n\nfunction findRoots(nodes) {\n  const nodeSet = new Set(nodes);\n\n  return uniqBy(\n    nodes.filter(node => {\n      let parentNode = node.parentNode;\n\n      while (parentNode) {\n        if (nodeSet.has(parentNode)) {\n          return false;\n        }\n\n        parentNode = parentNode.parentNode;\n      }\n\n      return true;\n    })\n  );\n}\n\nfunction removeBranchesFromGraph(branchRoots, graph) {\n  const nodesToRemove = new Set(\n    branchRoots.reduce(\n      (nodesToRemove, node) => [...nodesToRemove, ...node.descendantRelationNodes],\n      []\n    )\n  );\n\n  const edgesToRemove = new Set();\n\n  for (const node of nodesToRemove) {\n    for (const edge of node.edges) {\n      const otherNode = edge.getOtherNode(node);\n\n      if (!nodesToRemove.has(otherNode)) {\n        otherNode.removeEdge(edge);\n        edgesToRemove.add(edge);\n      }\n    }\n  }\n\n  graph.nodes = graph.nodes.filter(node => !nodesToRemove.has(node));\n  graph.edges = graph.edges.filter(edge => !edgesToRemove.has(edge));\n\n  return graph;\n}\n\nfunction checkForErrors(graph, graphOptions, builder) {\n  return currentGraph => {\n    checkForNotFoundErrors(graph, currentGraph, graphOptions, builder);\n    checkForUnallowedRelationErrors(graph, builder);\n\n    if (graphOptions.isInsertOnly()) {\n      checkForHasManyRelateErrors(graph, currentGraph, graphOptions);\n    }\n\n    return currentGraph;\n  };\n}\n\nfunction checkForNotFoundErrors(graph, currentGraph, graphOptions, builder) {\n  for (const node of graph.nodes) {\n    if (\n      node.obj.$hasId() &&\n      !graphOptions.shouldInsertIgnoreDisable(node, currentGraph) &&\n      !graphOptions.shouldRelateIgnoreDisable(node, currentGraph) &&\n      !currentGraph.nodeForNode(node)\n    ) {\n      if (!node.parentNode) {\n        throw node.modelClass.createNotFoundError(builder.context(), {\n          message: `root model (id=${node.obj.$id()}) does not exist. If you want to insert it with an id, use the insertMissing option`,\n          dataPath: node.dataPath\n        });\n      } else {\n        throw node.modelClass.createNotFoundError(builder.context(), {\n          message: `model (id=${node.obj.$id()}) is not a child of model (id=${node.parentNode.obj.$id()}). If you want to relate it, use the relate option. If you want to insert it with an id, use the insertMissing option`,\n          dataPath: node.dataPath\n        });\n      }\n    }\n  }\n}\n\nfunction checkForUnallowedRelationErrors(graph, builder) {\n  const allowedExpression = builder.allowedUpsertExpression();\n\n  if (allowedExpression) {\n    const rootsObjs = graph.nodes.filter(node => !node.parentEdge).map(node => node.obj);\n    const expression = RelationExpression.fromModelGraph(rootsObjs);\n\n    if (!allowedExpression.isSubExpression(expression)) {\n      throw builder.modelClass().createValidationError({\n        type: ValidationErrorType.UnallowedRelation,\n        message: 'trying to upsert an unallowed relation'\n      });\n    }\n  }\n}\n\nfunction checkForHasManyRelateErrors(graph, currentGraph, graphOptions) {\n  for (const node of graph.nodes) {\n    if (\n      graphOptions.shouldRelate(node, currentGraph) &&\n      node.parentEdge.relation.isObjectionHasManyRelation\n    ) {\n      throw new Error(\n        'You cannot relate HasManyRelation or HasOneRelation using insertGraph, because those require update operations. Consider using upsertGraph instead.'\n      );\n    }\n  }\n}\n\nfunction executeOperations(graph, graphOptions, builder) {\n  const operations = graphOptions.isInsertOnly()\n    ? [GraphInsert]\n    : [GraphDelete, GraphInsert, GraphPatch, GraphRecursiveUpsert];\n\n  return currentGraph => {\n    return operations.reduce((promise, Operation) => {\n      const operation = new Operation({ graph, currentGraph, graphOptions });\n      const actions = operation.createActions();\n\n      return promise.then(() => executeActions(builder, actions));\n    }, Promise.resolve());\n  };\n}\n\nfunction executeActions(builder, actions) {\n  return actions.reduce(\n    (promise, action) => promise.then(() => action.run(builder)),\n    Promise.resolve()\n  );\n}\n\nfunction returnResult(objects, isArray) {\n  return () => (isArray ? objects : objects[0]);\n}\n\nmodule.exports = {\n  GraphUpsert\n};\n","'use strict';\n\nconst { GraphOperation } = require('../GraphOperation');\nconst { GraphDeleteAction } = require('./GraphDeleteAction');\n\nclass GraphDelete extends GraphOperation {\n  createActions() {\n    return [\n      new GraphDeleteAction({\n        nodes: this.currentGraph.nodes.filter(currentNode =>\n          this.graphOptions.shouldDeleteOrUnrelate(currentNode, this.graph)\n        ),\n\n        graph: this.graph,\n        graphOptions: this.graphOptions\n      })\n    ];\n  }\n}\n\nmodule.exports = {\n  GraphDelete\n};\n","'use strict';\n\nconst { GraphAction } = require('../GraphAction');\nconst { groupBy } = require('../../../utils/objectUtils');\nconst promiseUtils = require('../../../utils/promiseUtils');\n\nclass GraphDeleteAction extends GraphAction {\n  constructor({ nodes, graph, graphOptions }) {\n    super();\n\n    // Nodes to delete.\n    this.nodes = nodes;\n    this.graph = graph;\n    this.graphOptions = graphOptions;\n  }\n\n  run(builder) {\n    const nodesTodelete = this._filterOutBelongsToOneRelationUnrelates(this.nodes);\n    const builders = this._createDeleteBuilders(builder, nodesTodelete);\n\n    return promiseUtils.map(builders, builder => builder.execute(), {\n      concurrency: this._getConcurrency(builder, nodesTodelete)\n    });\n  }\n\n  _filterOutBelongsToOneRelationUnrelates(nodes) {\n    // `BelongsToOneRelation` unrelate is handled by `GraphPatch` because\n    // unrelating a `BelongsToOneRelation` is just a matter of updating\n    // one field of the parent node.\n    return nodes.filter(node => {\n      return !(\n        this.graphOptions.shouldUnrelate(node, this.graph) &&\n        node.parentEdge.relation.isObjectionBelongsToOneRelation\n      );\n    });\n  }\n\n  _createDeleteBuilders(parentBuilder, nodesTodelete) {\n    const nodesByRelation = groupBy(nodesTodelete, getRelation);\n    const builders = [];\n\n    nodesByRelation.forEach((nodes, relation) => {\n      const nodesByParent = groupBy(nodes, getParent);\n\n      nodesByParent.forEach((nodes, parentNode) => {\n        const shouldUnrelate = this.graphOptions.shouldUnrelate(nodes[0], this.graph);\n\n        const builder = parentNode.obj.$relatedQuery(relation.name).childQueryOf(parentBuilder);\n\n        if (!relation.isObjectionBelongsToOneRelation) {\n          // This is useless in case of BelongsToOneRelation.\n          builder.findByIds(nodes.map(node => node.obj.$id()));\n        }\n\n        for (const node of nodes) {\n          node.userData.deleted = true;\n        }\n\n        builders.push(shouldUnrelate ? builder.unrelate() : builder.delete());\n      });\n    });\n\n    return builders;\n  }\n}\n\nfunction getRelation(node) {\n  return node.parentEdge.relation;\n}\n\nfunction getParent(node) {\n  return node.parentNode;\n}\n\nmodule.exports = {\n  GraphDeleteAction\n};\n","'use strict';\n\nconst { JoinRowGraphInsertAction } = require('./JoinRowGraphInsertAction');\nconst { GraphInsertAction } = require('./GraphInsertAction');\nconst { GraphOperation } = require('../GraphOperation');\nconst { ModelGraphEdge } = require('../../../model/graph/ModelGraphEdge');\n\nclass GraphInsert extends GraphOperation {\n  constructor(...args) {\n    super(...args);\n    this.dependencies = this._createDependencyMap();\n  }\n\n  createActions() {\n    return [...this._createNormalActions(), ...this._createJoinRowActions()];\n  }\n\n  _createDependencyMap() {\n    const dependencies = new Map();\n\n    for (const edge of this.graph.edges) {\n      if (edge.type == ModelGraphEdge.Type.Relation) {\n        this._createRelationDependency(edge, dependencies);\n      } else {\n        this._createReferenceDependency(edge, dependencies);\n      }\n    }\n\n    return dependencies;\n  }\n\n  _createRelationDependency(edge, dependencies) {\n    if (edge.relation.isObjectionHasManyRelation) {\n      // In case of HasManyRelation the related node depends on the owner node\n      // because the related node has the foreign key.\n      this._addDependency(edge.relatedNode, edge, dependencies);\n    } else if (edge.relation.isObjectionBelongsToOneRelation) {\n      // In case of BelongsToOneRelation the owner node depends on the related\n      // node because the owner node has the foreign key.\n      this._addDependency(edge.ownerNode, edge, dependencies);\n    }\n  }\n\n  _createReferenceDependency(edge, dependencies) {\n    this._addDependency(edge.ownerNode, edge, dependencies);\n  }\n\n  _addDependency(node, edge, dependencies) {\n    let edges = dependencies.get(node);\n\n    if (!edges) {\n      edges = [];\n      dependencies.set(node, edges);\n    }\n\n    edges.push(edge);\n  }\n\n  _createNormalActions() {\n    const handledNodes = new Set();\n    const actions = [];\n\n    while (true) {\n      // At this point, don't care if the nodes have already been inserted before\n      // given to this class. `GraphInsertAction` will test that and only insert\n      // new ones. We need to pass all nodes to `GraphInsertActions` so that we\n      // can resolve all dependencies.\n      const nodesToInsert = this.graph.nodes.filter(node => {\n        return !this._isHandled(node, handledNodes) && !this._hasDependencies(node, handledNodes);\n      });\n\n      if (nodesToInsert.length === 0) {\n        break;\n      }\n\n      actions.push(\n        new GraphInsertAction({\n          nodes: nodesToInsert,\n          currentGraph: this.currentGraph,\n          dependencies: this.dependencies,\n          graphOptions: this.graphOptions\n        })\n      );\n\n      for (const node of nodesToInsert) {\n        this._markHandled(node, handledNodes);\n      }\n    }\n\n    if (handledNodes.size !== this.graph.nodes.length) {\n      throw new Error('the object graph contains cyclic references');\n    }\n\n    return actions;\n  }\n\n  _isHandled(node, handledNodes) {\n    return handledNodes.has(node);\n  }\n\n  _hasDependencies(node, handledNodes) {\n    if (!this.dependencies.has(node)) {\n      return false;\n    }\n\n    for (const edge of this.dependencies.get(node)) {\n      const dependencyNode = edge.getOtherNode(node);\n\n      if (!handledNodes.has(dependencyNode) && !this.currentGraph.nodeForNode(dependencyNode)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  _markHandled(node, handledNodes) {\n    handledNodes.add(node);\n\n    // The referencing nodes are all references that don't\n    // represent any real entity. They are simply intermediate nodes\n    // that depend on this node. Once this node is handled, we can\n    // also mark those nodes as handled as there is nothing to actually\n    // insert.\n    for (const refNode of node.referencingNodes) {\n      this._markHandled(refNode, handledNodes);\n    }\n  }\n\n  _createJoinRowActions() {\n    return [\n      new JoinRowGraphInsertAction({\n        nodes: this.graph.nodes.filter(node => {\n          return (\n            this.currentGraph.nodeForNode(node) === null &&\n            node.parentEdge &&\n            node.parentEdge.relation.isObjectionManyToManyRelation\n          );\n        }),\n\n        currentGraph: this.currentGraph,\n        graphOptions: this.graphOptions\n      })\n    ];\n  }\n}\n\nmodule.exports = {\n  GraphInsert\n};\n","'use strict';\n\nconst { GraphAction } = require('../GraphAction');\nconst { groupBy, chunk, get, set } = require('../../../utils/objectUtils');\nconst { ModelGraphEdge } = require('../../../model/graph/ModelGraphEdge');\nconst promiseUtils = require('../../../utils/promiseUtils');\n\n/**\n * Inserts a batch of nodes for a GraphInsert.\n *\n * One of these is created for each batch of nodes that can be inserted at once.\n * However, the nodes can have a different table and not all databases support\n * batch inserts, so this class splits the inserts into further sub batches\n * when needed.\n */\nclass GraphInsertAction extends GraphAction {\n  constructor({ nodes, currentGraph, dependencies, graphOptions }) {\n    super();\n\n    // Nodes to insert.\n    this.nodes = nodes;\n    this.currentGraph = currentGraph;\n    this.dependencies = dependencies;\n    this.graphOptions = graphOptions;\n  }\n\n  run(builder) {\n    const batches = this._createInsertBatches(builder);\n    const concurrency = this._getConcurrency(builder, this.nodes);\n\n    return promiseUtils.map(batches, batch => this._insertBatch(builder, batch), { concurrency });\n  }\n\n  _createInsertBatches(builder) {\n    const batches = [];\n    const batchSize = this._getBatchSize(builder);\n    const nodesByModelClass = groupBy(this.nodes, getModelClass);\n\n    for (const nodes of nodesByModelClass.values()) {\n      for (const nodeBatch of chunk(nodes, batchSize)) {\n        batches.push(nodeBatch);\n      }\n    }\n\n    return batches;\n  }\n\n  _insertBatch(parentBuilder, nodes) {\n    return this._beforeInsert(nodes)\n      .then(() => this._insert(parentBuilder, nodes))\n      .then(() => this._afterInsert(nodes));\n  }\n\n  _beforeInsert(nodes) {\n    this._resolveDependencies(nodes);\n    this._omitManyToManyExtraProps(nodes);\n    this._copyRelationPropsFromCurrentIfNeeded(nodes);\n\n    return Promise.resolve();\n  }\n\n  _resolveDependencies(nodes) {\n    for (const node of nodes) {\n      const edges = this.dependencies.get(node);\n\n      if (edges) {\n        for (const edge of edges) {\n          // `node` needs `dependencyNode` to have been inserted (and it has been).\n          const dependencyNode = edge.getOtherNode(node);\n\n          this._resolveDependency(dependencyNode, edge);\n        }\n      }\n    }\n  }\n\n  _resolveDependency(dependencyNode, edge) {\n    if (edge.type === ModelGraphEdge.Type.Relation && !edge.relation.joinTable) {\n      this._resolveRelationDependency(dependencyNode, edge);\n    } else if (edge.refType === ModelGraphEdge.ReferenceType.Property) {\n      this._resolvePropertyReferenceNode(dependencyNode, edge);\n    }\n  }\n\n  _resolveRelationDependency(dependencyNode, edge) {\n    const dependentNode = edge.getOtherNode(dependencyNode);\n\n    let sourceProp;\n    let targetProp;\n\n    if (edge.isOwnerNode(dependencyNode)) {\n      sourceProp = edge.relation.ownerProp;\n      targetProp = edge.relation.relatedProp;\n    } else {\n      targetProp = edge.relation.ownerProp;\n      sourceProp = edge.relation.relatedProp;\n    }\n\n    this._resolveReferences(dependencyNode);\n\n    for (let i = 0, l = targetProp.size; i < l; ++i) {\n      targetProp.setProp(dependentNode.obj, i, sourceProp.getProp(dependencyNode.obj, i));\n    }\n  }\n\n  _resolvePropertyReferenceNode(dependencyNode, edge) {\n    const dependentNode = edge.getOtherNode(dependencyNode);\n\n    let sourcePath;\n    let targetPath;\n\n    if (edge.isOwnerNode(dependencyNode)) {\n      sourcePath = edge.refOwnerDataPath;\n      targetPath = edge.refRelatedDataPath;\n    } else {\n      targetPath = edge.refOwnerDataPath;\n      sourcePath = edge.refRelatedDataPath;\n    }\n\n    const sourceValue = get(dependencyNode.obj, sourcePath);\n    const targetValue = get(dependentNode.obj, targetPath);\n\n    if (targetValue === edge.refMatch) {\n      set(dependentNode.obj, targetPath, sourceValue);\n    } else {\n      set(dependentNode.obj, targetPath, targetValue.replace(edge.refMatch, sourceValue));\n    }\n  }\n\n  _omitManyToManyExtraProps(nodes) {\n    for (const node of nodes) {\n      if (\n        node.parentEdge &&\n        node.parentEdge.type === ModelGraphEdge.Type.Relation &&\n        node.parentEdge.relation.joinTableExtras.length > 0\n      ) {\n        node.parentEdge.relation.omitExtraProps([node.obj]);\n      }\n    }\n  }\n\n  _copyRelationPropsFromCurrentIfNeeded(nodes) {\n    for (const node of nodes) {\n      const currentNode = this.currentGraph.nodeForNode(node);\n\n      if (!currentNode) {\n        continue;\n      }\n\n      for (const edge of node.edges) {\n        if (edge.type !== ModelGraphEdge.Type.Relation) {\n          continue;\n        }\n\n        const prop = edge.isOwnerNode(node) ? edge.relation.ownerProp : edge.relation.relatedProp;\n\n        for (let i = 0, l = prop.size; i < l; ++i) {\n          const value = prop.getProp(node.obj, i);\n\n          if (value !== undefined) {\n            continue;\n          }\n\n          prop.setProp(node.obj, i, prop.getProp(currentNode.obj, i));\n        }\n      }\n    }\n  }\n\n  _insert(parentBuilder, nodes) {\n    const [{ modelClass }] = nodes;\n\n    nodes = nodes.filter(node => {\n      return this.graphOptions.shouldInsert(node, this.currentGraph);\n    });\n\n    for (const node of nodes) {\n      delete node.obj[modelClass.uidProp];\n      node.obj.$validate(null, { dataPath: node.dataPathKey });\n    }\n\n    if (nodes.length === 0) {\n      return;\n    }\n\n    for (const node of nodes) {\n      node.userData.inserted = true;\n    }\n\n    return this._runRelationBeforeInsertMethods(parentBuilder, nodes).then(() => {\n      return modelClass\n        .query()\n        .insert(nodes.map(node => node.obj))\n        .childQueryOf(parentBuilder)\n        .copyFrom(parentBuilder, GraphAction.ReturningAllSelector)\n        .execute();\n    });\n  }\n\n  _runRelationBeforeInsertMethods(parentBuilder, nodes) {\n    return Promise.all(\n      nodes.map(node => {\n        if (node.parentEdge) {\n          return node.parentEdge.relation.beforeInsert(node.obj, parentBuilder.context());\n        } else {\n          return null;\n        }\n      })\n    );\n  }\n\n  _afterInsert(nodes) {\n    for (const node of nodes) {\n      for (const refNode of node.referencingNodes) {\n        this._resolveDependency(refNode, refNode.parentEdge);\n      }\n    }\n  }\n}\n\nfunction getModelClass(node) {\n  return node.modelClass;\n}\n\nmodule.exports = {\n  GraphInsertAction\n};\n","'use strict';\n\nconst { GraphAction } = require('../GraphAction');\nconst { groupBy, chunk } = require('../../../utils/objectUtils');\nconst promiseUtils = require('../../../utils/promiseUtils');\n\nclass JoinRowGraphInsertAction extends GraphAction {\n  constructor({ nodes, currentGraph, graphOptions }) {\n    super();\n\n    this.nodes = nodes;\n    this.currentGraph = currentGraph;\n    this.graphOptions = graphOptions;\n  }\n\n  run(builder) {\n    const batches = this._createInsertBatches(builder);\n    const concurrency = this._getConcurrency(builder, this.nodes);\n\n    return promiseUtils.map(batches, batch => this._insertBatch(builder, batch), { concurrency });\n  }\n\n  _createInsertBatches(builder) {\n    const batches = [];\n    const batchSize = this._getBatchSize(builder);\n    const nodesByModel = groupBy(this.nodes, node => getJoinTableModel(builder, node));\n\n    for (const [joinTableModelClass, nodes] of nodesByModel.entries()) {\n      for (const nodeBatch of chunk(nodes, batchSize)) {\n        batches.push(this._createBatch(joinTableModelClass, nodeBatch));\n      }\n    }\n\n    return batches;\n  }\n\n  _createBatch(joinTableModelClass, nodes) {\n    return nodes\n      .filter(node => {\n        return this.graphOptions.shouldRelate(node, this.currentGraph) || node.userData.inserted;\n      })\n      .map(node => ({\n        node,\n        joinTableModelClass,\n        joinTableObj: this._createJoinTableObj(joinTableModelClass, node)\n      }));\n  }\n\n  _createJoinTableObj(joinTableModelClass, node) {\n    const { parentEdge, parentNode } = node;\n    const { relation } = parentEdge;\n\n    this._resolveReferences(node);\n\n    return joinTableModelClass.fromJson(\n      relation.createJoinModel(relation.ownerProp.getProps(parentNode.obj), node.obj)\n    );\n  }\n\n  _insertBatch(parentBuilder, batch) {\n    return this._beforeInsert(parentBuilder, batch).then(() => this._insert(parentBuilder, batch));\n  }\n\n  _beforeInsert(parentBuilder, batch) {\n    return Promise.all(\n      batch.map(({ node, joinTableObj }) => {\n        if (node.parentEdge) {\n          return node.parentEdge.relation.joinTableBeforeInsert(\n            joinTableObj,\n            parentBuilder.context()\n          );\n        } else {\n          return null;\n        }\n      })\n    );\n  }\n\n  _insert(parentBuilder, batch) {\n    if (batch.length > 0) {\n      return batch[0].joinTableModelClass\n        .query()\n        .childQueryOf(parentBuilder)\n        .insert(batch.map(it => it.joinTableObj));\n    }\n  }\n}\n\nfunction getJoinTableModel(builder, node) {\n  return node.parentEdge.relation.getJoinModelClass(builder.unsafeKnex());\n}\n\nmodule.exports = {\n  JoinRowGraphInsertAction\n};\n","'use strict';\n\nconst { GraphOperation } = require('../GraphOperation');\nconst { GraphPatchAction } = require('./GraphPatchAction');\n\nclass GraphPatch extends GraphOperation {\n  createActions() {\n    return [\n      new GraphPatchAction({\n        nodes: this.graph.nodes.filter(node =>\n          this.graphOptions.shouldPatchOrUpdateIgnoreDisable(node, this.currentGraph)\n        ),\n\n        graph: this.graph,\n        currentGraph: this.currentGraph,\n        graphOptions: this.graphOptions\n      })\n    ];\n  }\n}\n\nmodule.exports = {\n  GraphPatch\n};\n","'use strict';\n\nconst { GraphAction } = require('../GraphAction');\nconst { isInternalProp } = require('../../../utils/internalPropUtils');\nconst { union, difference, isObject, jsonEquals } = require('../../../utils/objectUtils');\nconst promiseUtils = require('../../../utils/promiseUtils');\n\nclass GraphPatchAction extends GraphAction {\n  constructor({ nodes, graph, currentGraph, graphOptions }) {\n    super();\n\n    // Nodes to patch.\n    this.nodes = nodes;\n    this.graph = graph;\n    this.currentGraph = currentGraph;\n    this.graphOptions = graphOptions;\n  }\n\n  run(builder) {\n    return promiseUtils.map(this.nodes, node => this._runForNode(builder, node), {\n      concurrency: this._getConcurrency(builder, this.nodes)\n    });\n  }\n\n  _runForNode(builder, node) {\n    const shouldPatch = this.graphOptions.shouldPatch(node, this.currentGraph);\n    const shouldUpdate = this.graphOptions.shouldUpdate(node, this.currentGraph);\n\n    // BelongsToOneRelation inserts and relates change the parent object's\n    // properties. That's why we handle them here.\n    const changedPropsBecauseOfBelongsToOneInsert = this._handleBelongsToOneInserts(node);\n\n    // BelongsToOneRelation deletes and unrelates change the parent object's\n    // properties. That's why we handle them here.\n    const changePropsBecauseOfBelongsToOneDelete = this._handleBelongsToOneDeletes(node);\n\n    const { changedProps, unchangedProps } = this._findChanges(node);\n    const allProps = union(changedProps, unchangedProps);\n\n    const propsToUpdate = difference(\n      shouldPatch || shouldUpdate\n        ? changedProps\n        : [...changedPropsBecauseOfBelongsToOneInsert, ...changePropsBecauseOfBelongsToOneDelete],\n\n      // Remove id properties from the props to update. With upsertGraph\n      // it never makes sense to change the id.\n      node.modelClass.getIdPropertyArray()\n    );\n\n    if (propsToUpdate.length === 0) {\n      return null;\n    }\n\n    delete node.obj[node.modelClass.uidProp];\n    delete node.obj[node.modelClass.uidRefProp];\n    delete node.obj[node.modelClass.dbRefProp];\n\n    node.obj.$validate(null, {\n      dataPath: node.dataPathKey,\n      patch: shouldPatch || (!shouldPatch && !shouldUpdate)\n    });\n\n    // Don't update the fields that we know not to change.\n    node.obj.$omitFromDatabaseJson(difference(allProps, propsToUpdate));\n    node.userData.updated = true;\n\n    const updateBuilder = this._createBuilder(node)\n      .childQueryOf(builder)\n      .copyFrom(builder, GraphAction.ReturningAllSelector);\n\n    if (shouldPatch) {\n      updateBuilder.patch(node.obj);\n    } else {\n      updateBuilder.update(node.obj);\n    }\n\n    return updateBuilder.execute().then(result => {\n      if (isObject(result) && result.$isObjectionModel) {\n        // Handle returning('*').\n        node.obj.$set(result);\n      }\n\n      return result;\n    });\n  }\n\n  _handleBelongsToOneInserts(node) {\n    const currentNode = this.currentGraph.nodeForNode(node);\n    const updatedProps = [];\n\n    for (const edge of node.edges) {\n      if (\n        edge.isOwnerNode(node) &&\n        edge.relation &&\n        edge.relation.isObjectionBelongsToOneRelation &&\n        edge.relation.relatedProp.hasProps(edge.relatedNode.obj)\n      ) {\n        const { relation } = edge;\n\n        for (let i = 0, l = relation.ownerProp.size; i < l; ++i) {\n          const currentValue = currentNode && relation.ownerProp.getProp(currentNode.obj, i);\n          const relatedValue = relation.relatedProp.getProp(edge.relatedNode.obj, i);\n\n          if (currentValue != relatedValue) {\n            relation.ownerProp.setProp(node.obj, i, relatedValue);\n            updatedProps.push(relation.ownerProp.props[i]);\n          }\n        }\n      }\n    }\n\n    return updatedProps;\n  }\n\n  _handleBelongsToOneDeletes(node) {\n    const currentNode = this.currentGraph.nodeForNode(node);\n    const updatedProps = [];\n\n    if (!currentNode) {\n      return updatedProps;\n    }\n\n    for (const edge of currentNode.edges) {\n      if (\n        edge.isOwnerNode(currentNode) &&\n        edge.relation.isObjectionBelongsToOneRelation &&\n        node.obj[edge.relation.name] === null &&\n        this.graphOptions.shouldDeleteOrUnrelate(edge.relatedNode, this.graph)\n      ) {\n        const { relation } = edge;\n\n        for (let i = 0, l = relation.ownerProp.size; i < l; ++i) {\n          const currentValue = relation.ownerProp.getProp(currentNode.obj, i);\n\n          if (currentValue != null) {\n            relation.ownerProp.setProp(node.obj, i, null);\n            updatedProps.push(relation.ownerProp.props[i]);\n          }\n        }\n      }\n    }\n\n    return updatedProps;\n  }\n\n  _findChanges(node) {\n    const obj = node.obj;\n    const currentNode = this.currentGraph.nodeForNode(node);\n    const currentObj = (currentNode && currentNode.obj) || {};\n    const relationNames = node.modelClass.getRelationNames();\n\n    const unchangedProps = [];\n    const changedProps = [];\n\n    for (const prop of Object.keys(obj)) {\n      if (isInternalProp(prop) || relationNames.includes(prop)) {\n        continue;\n      }\n\n      const value = obj[prop];\n      const currentValue = currentObj[prop];\n\n      // If the current object doesn't have the property, we have to assume\n      // it changes (we cannot know if it will). If the object does have the\n      // property, we test non-strict equality. See issue #732.\n      if (currentValue === undefined || !nonStrictEquals(currentValue, value)) {\n        changedProps.push(prop);\n      } else {\n        unchangedProps.push(prop);\n      }\n    }\n\n    // We cannot know if the query properties cause changes to the values.\n    // We must assume that they do.\n    if (obj.$$queryProps) {\n      changedProps.push(...Object.keys(obj.$$queryProps));\n    }\n\n    return {\n      changedProps,\n      unchangedProps\n    };\n  }\n\n  _createBuilder(node) {\n    if (node.parentEdge && !node.parentEdge.relation.isObjectionHasManyRelation) {\n      return this._createRelatedBuilder(node);\n    } else {\n      return this._createRootBuilder(node);\n    }\n  }\n\n  _createRelatedBuilder(node) {\n    return node.parentNode.obj\n      .$relatedQuery(node.parentEdge.relation.name)\n      .findById(node.obj.$id());\n  }\n\n  _createRootBuilder(node) {\n    return node.obj.$query();\n  }\n}\n\nfunction nonStrictEquals(val1, val2) {\n  if (val1 == val2) {\n    return true;\n  }\n\n  return jsonEquals(val1, val2);\n}\n\nmodule.exports = {\n  GraphPatchAction\n};\n","'use strict';\n\nconst { GraphOperation } = require('../GraphOperation');\nconst { GraphRecursiveUpsertAction } = require('./GraphRecursiveUpsertAction');\n\nclass GraphRecursiveUpsert extends GraphOperation {\n  createActions() {\n    return [\n      new GraphRecursiveUpsertAction({\n        nodes: this.graph.nodes.filter(node => {\n          const shouldRelate = this.graphOptions.shouldRelate(node, this.currentGraph);\n          return shouldRelate && hasRelations(node.obj);\n        }),\n\n        currentGraph: this.currentGraph,\n        graphOptions: this.graphOptions\n      })\n    ];\n  }\n}\n\nfunction hasRelations(obj) {\n  for (const relationName of obj.constructor.getRelationNames()) {\n    if (obj.hasOwnProperty(relationName)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = {\n  GraphRecursiveUpsert\n};\n","'use strict';\n\nconst { GraphAction } = require('../GraphAction');\nconst { groupBy } = require('../../../utils/objectUtils');\nconst promiseUtils = require('../../../utils/promiseUtils');\n\nclass GraphRecursiveUpsertAction extends GraphAction {\n  constructor({ nodes, graph, graphOptions }) {\n    super();\n\n    // Nodes to upsert.\n    this.nodes = nodes;\n    this.graph = graph;\n    this.graphOptions = graphOptions;\n  }\n\n  run(builder) {\n    const builders = this._createUpsertBuilders(builder, this.nodes);\n\n    return promiseUtils.map(builders, builder => builder.execute(), {\n      concurrency: this._getConcurrency(builder, this.nodes)\n    });\n  }\n\n  _createUpsertBuilders(parentBuilder, nodesToUpsert) {\n    const nodesByRelation = groupBy(nodesToUpsert, getRelation);\n    const builders = [];\n\n    nodesByRelation.forEach(nodes => {\n      const nodesByParent = groupBy(nodes, getParent);\n\n      nodesByParent.forEach(nodes => {\n        for (const node of nodes) {\n          node.userData.upserted = true;\n        }\n\n        builders.push(\n          nodes[0].modelClass\n            .query()\n            .childQueryOf(parentBuilder)\n            .copyFrom(parentBuilder, GraphAction.ReturningAllSelector)\n            .upsertGraph(nodes.map(node => node.obj), this.graphOptions.rebasedOptions(nodes[0]))\n        );\n      });\n    });\n\n    return builders;\n  }\n}\n\nfunction getRelation(node) {\n  return node.parentEdge.relation;\n}\n\nfunction getParent(node) {\n  return node.parentNode;\n}\n\nmodule.exports = {\n  GraphRecursiveUpsertAction\n};\n","'use strict';\n\nclass JoinResultColumn {\n  constructor({ columnAlias, tableNode, name }) {\n    this.columnAlias = columnAlias;\n    this.tableNode = tableNode;\n    this.name = name;\n  }\n\n  static create({ tableTree, columnAlias }) {\n    const tableNode = tableTree.getNodeForColumnAlias(columnAlias);\n\n    return new JoinResultColumn({\n      columnAlias,\n      tableNode,\n      name: tableNode.getColumnForColumnAlias(columnAlias)\n    });\n  }\n}\n\nmodule.exports = {\n  JoinResultColumn\n};\n","'use strict';\n\nconst { JoinResultColumn } = require('./JoinResultColumn');\nconst { groupBy } = require('../../utils/objectUtils');\n\nclass JoinResultParser {\n  constructor({ tableTree, omitColumnAliases = [] }) {\n    this.tableTree = tableTree;\n    this.omitColumnAliases = new Set(omitColumnAliases);\n\n    this.columnsByTableNode = null;\n    this.parentMap = null;\n    this.rootModels = null;\n  }\n\n  static create(args) {\n    return new JoinResultParser(args);\n  }\n\n  parse(flatRows) {\n    if (!Array.isArray(flatRows) || flatRows.length === 0) {\n      return flatRows;\n    }\n\n    this.columnsByTableNode = this._createColumns(flatRows[0]);\n    this.parentMap = new Map();\n    this.rootModels = [];\n\n    for (const flatRow of flatRows) {\n      this._parseNode(this.tableTree.rootNode, flatRow);\n    }\n\n    return this.rootModels;\n  }\n\n  _parseNode(tableNode, flatRow, parentModel = null, parentKey = null) {\n    const id = tableNode.getIdFromFlatRow(flatRow);\n\n    if (id === null) {\n      return;\n    }\n\n    const key = getKey(parentKey, id, tableNode);\n    let model = this.parentMap.get(key);\n\n    if (!model) {\n      model = this._createModel(tableNode, flatRow);\n\n      this._addToParent(tableNode, model, parentModel);\n      this.parentMap.set(key, model);\n    }\n\n    for (const childNode of tableNode.childNodes) {\n      this._parseNode(childNode, flatRow, model, key);\n    }\n  }\n\n  _createModel(tableNode, flatRow) {\n    const row = {};\n    const columns = this.columnsByTableNode.get(tableNode);\n\n    if (columns) {\n      for (const column of columns) {\n        if (!this.omitColumnAliases.has(column.columnAlias)) {\n          row[column.name] = flatRow[column.columnAlias];\n        }\n      }\n    }\n\n    const model = tableNode.modelClass.fromDatabaseJson(row);\n\n    for (const childNode of tableNode.childNodes) {\n      if (childNode.relation.isOneToOne()) {\n        model[childNode.relationProperty] = null;\n      } else {\n        model[childNode.relationProperty] = [];\n      }\n    }\n\n    return model;\n  }\n\n  _addToParent(tableNode, model, parentModel) {\n    if (tableNode.parentNode) {\n      if (tableNode.relation.isOneToOne()) {\n        parentModel[tableNode.relationProperty] = model;\n      } else {\n        parentModel[tableNode.relationProperty].push(model);\n      }\n    } else {\n      // Root model. Add to root list.\n      this.rootModels.push(model);\n    }\n  }\n\n  _createColumns(row) {\n    const columns = Object.keys(row).map(columnAlias =>\n      JoinResultColumn.create({ tableTree: this.tableTree, columnAlias })\n    );\n\n    return groupBy(columns, getTableNode);\n  }\n}\n\nfunction getTableNode(column) {\n  return column.tableNode;\n}\n\nfunction getKey(parentKey, id, tableNode) {\n  if (parentKey !== null) {\n    return `${parentKey}/${tableNode.relationProperty}/${id}`;\n  } else {\n    return `/${id}`;\n  }\n}\n\nmodule.exports = {\n  JoinResultParser\n};\n","'use strict';\n\nconst { uniqBy } = require('../../utils/objectUtils');\nconst { Selection } = require('../operations/select/Selection');\nconst { createModifier } = require('../../utils/createModifier');\nconst { map: mapPromise } = require('../../utils/promiseUtils');\nconst { ValidationErrorType } = require('../../model/ValidationError');\n\nconst { TableTree } = require('./TableTree');\nconst { JoinResultParser } = require('./JoinResultParser');\nconst { ID_LENGTH_LIMIT } = require('./utils');\n\n/**\n * Given a relation expression, builds a query using joins to fetch it.\n */\nclass RelationJoiner {\n  constructor({ modelClass }) {\n    this.rootModelClass = modelClass;\n\n    // The relation expression to join.\n    this.expression = null;\n\n    // Explicit modifiers for the relation expression.\n    this.modifiers = null;\n\n    this.options = defaultOptions();\n    this.tableTree = null;\n    this.internalSelections = null;\n  }\n\n  setExpression(expression) {\n    if (!this.expression) {\n      this.expression = expression;\n    }\n\n    return this;\n  }\n\n  setModifiers(modifiers) {\n    if (!this.modifiers) {\n      this.modifiers = modifiers;\n    }\n\n    return this;\n  }\n\n  setOptions(options) {\n    this.options = Object.assign(this.options, options);\n    return this;\n  }\n\n  /**\n   * Fetches the column information needed for building the select clauses.\n   *\n   * This must be called before calling `build(builder, true)`. `build(builder, false)`\n   * can be called without this since it doesn't build selects.\n   */\n  fetchColumnInfo(builder) {\n    const tableTree = this._getTableTree(builder);\n    const allModelClasses = new Set(tableTree.nodes.map(node => node.modelClass));\n\n    return mapPromise(\n      Array.from(allModelClasses),\n      modelClass => modelClass.fetchTableMetadata({ parentBuilder: builder }),\n      {\n        concurrency: this.rootModelClass.getConcurrency(builder.unsafeKnex())\n      }\n    );\n  }\n\n  build(builder, buildSelects = true) {\n    const rootTableNode = this._getTableTree(builder).rootNode;\n    const userSelectQueries = new Map([[rootTableNode, builder]]);\n\n    for (const tableNode of rootTableNode.childNodes) {\n      this._buildJoinsForNode({ builder, tableNode, userSelectQueries });\n    }\n\n    if (buildSelects) {\n      this._buildSelects({ builder, tableNode: rootTableNode, userSelectQueries });\n    }\n  }\n\n  parseResult(builder, flatRows) {\n    const parser = JoinResultParser.create({\n      tableTree: this._getTableTree(builder),\n      omitColumnAliases: this.internalSelections.map(it => it.alias)\n    });\n\n    return parser.parse(flatRows);\n  }\n\n  _getTableTree(builder) {\n    if (!this.tableTree) {\n      // Create the table tree lazily.\n      this.tableTree = TableTree.create({\n        rootModelClass: this.rootModelClass,\n        rootTableAlias: builder.tableRef(),\n        expression: this.expression,\n        options: this.options\n      });\n    }\n\n    return this.tableTree;\n  }\n\n  _buildJoinsForNode({ builder, tableNode, userSelectQueries }) {\n    const subqueryToJoin = createSubqueryToJoin({\n      builder,\n      tableNode,\n      modifiers: this.modifiers\n    });\n\n    const userSelectQuery = subqueryToJoin.clone();\n\n    // relation.join applies the relation modifier that can\n    // also contain selects.\n    userSelectQuery.modify(tableNode.relation.modify);\n\n    // Save the query that contains the user specified selects\n    // for later use.\n    userSelectQueries.set(tableNode, userSelectQuery);\n\n    tableNode.relation.join(builder, {\n      joinOperation: this.options.joinOperation,\n\n      ownerTable: tableNode.parentNode.alias,\n      relatedTableAlias: tableNode.alias,\n      joinTableAlias: tableNode.joinTableAlias,\n\n      relatedJoinSelectQuery: ensureIdAndRelationPropsAreSelected({\n        builder: subqueryToJoin,\n        tableNode\n      })\n    });\n\n    for (const childNode of tableNode.childNodes) {\n      this._buildJoinsForNode({ builder, tableNode: childNode, userSelectQueries });\n    }\n  }\n\n  _buildSelects({ builder, tableNode, userSelectQueries }) {\n    const { selections, internalSelections } = getSelectionsForNode({\n      builder,\n      tableNode,\n      userSelectQueries\n    });\n\n    for (const selection of selections) {\n      checkAliasLength(tableNode.modelClass, selection.name);\n    }\n\n    // Save the selections that were added internally (not by the user)\n    // so that we can later remove the corresponding properties when\n    // parsing the result.\n    this.internalSelections = internalSelections;\n\n    builder.select(selectionsToStrings(selections));\n  }\n}\n\nfunction defaultOptions() {\n  return {\n    joinOperation: 'leftJoin',\n    minimize: false,\n    separator: ':',\n    aliases: {}\n  };\n}\n\nfunction createSubqueryToJoin({ builder, tableNode, modifiers }) {\n  const { relation, expression, modelClass } = tableNode;\n  const modifierQuery = modelClass.query().childQueryOf(builder);\n\n  for (const modifierName of expression.node.$modify) {\n    const modifier = createModifier({\n      modifier: modifierName,\n      modelClass,\n      modifiers\n    });\n\n    try {\n      modifier(modifierQuery);\n    } catch (err) {\n      if (err instanceof modelClass.ModifierNotFoundError) {\n        throw modelClass.createValidationError({\n          type: ValidationErrorType.RelationExpression,\n          message: `could not find modifier \"${modifierName}\" for relation \"${relation.name}\"`\n        });\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  return modifierQuery;\n}\n\nfunction ensureIdAndRelationPropsAreSelected({ builder, tableNode }) {\n  const tableRef = builder.tableRef();\n\n  const cols = [\n    ...builder.modelClass().getIdColumnArray(),\n    ...tableNode.relation.relatedProp.cols,\n    ...tableNode.childNodes.reduce(\n      (cols, childNode) => [...cols, ...childNode.relation.ownerProp.cols],\n      []\n    )\n  ];\n\n  const selectStrings = uniqBy(cols)\n    .filter(col => !builder.hasSelectionAs(col, col))\n    .map(col => `${tableRef}.${col}`);\n\n  return builder.select(selectStrings);\n}\n\nfunction getSelectionsForNode({ builder, tableNode, userSelectQueries }) {\n  const userSelectQuery = userSelectQueries.get(tableNode);\n  const userSelections = userSelectQuery.findAllSelections();\n  const userSelectedAllColumns = isSelectAllSelectionSet(userSelections);\n\n  let selections = [];\n  let internalSelections = [];\n\n  if (tableNode.parentNode) {\n    selections = mapUserSelectionsFromSubqueryToMainQuery({ userSelections, tableNode });\n\n    if (userSelectedAllColumns && tableNode.relation.isObjectionManyToManyRelation) {\n      const extraSelections = getJoinTableExtraSelectionsForNode({ tableNode });\n      selections = selections.concat(extraSelections);\n    }\n  }\n\n  if (userSelectedAllColumns) {\n    const allColumnSelections = getAllColumnSelectionsForNode({ builder, tableNode });\n    selections = allColumnSelections.concat(selections);\n  } else {\n    const idSelections = getIdSelectionsForNode({ tableNode });\n\n    for (const idSelection of idSelections) {\n      if (!userSelectQuery.hasSelectionAs(idSelection.column, idSelection.column)) {\n        selections.push(idSelection);\n        internalSelections.push(idSelection);\n      }\n    }\n  }\n\n  for (const childNode of tableNode.childNodes) {\n    const childResult = getSelectionsForNode({ builder, tableNode: childNode, userSelectQueries });\n\n    selections = selections.concat(childResult.selections);\n    internalSelections = internalSelections.concat(childResult.internalSelections);\n  }\n\n  return {\n    selections,\n    internalSelections\n  };\n}\n\nfunction mapUserSelectionsFromSubqueryToMainQuery({ userSelections, tableNode }) {\n  return userSelections.filter(isNotSelectAll).map(selection => {\n    return new Selection(\n      tableNode.alias,\n      selection.name,\n      tableNode.getColumnAliasForColumn(selection.name)\n    );\n  });\n}\n\nfunction getJoinTableExtraSelectionsForNode({ tableNode }) {\n  return tableNode.relation.joinTableExtras.map(extra => {\n    return new Selection(\n      tableNode.joinTableAlias,\n      extra.joinTableCol,\n      tableNode.getColumnAliasForColumn(extra.aliasCol)\n    );\n  });\n}\n\nfunction getAllColumnSelectionsForNode({ builder, tableNode }) {\n  const table = builder.tableNameFor(tableNode.modelClass);\n\n  return tableNode.modelClass.tableMetadata({ table }).columns.map(columnName => {\n    return new Selection(\n      tableNode.alias,\n      columnName,\n      tableNode.getColumnAliasForColumn(columnName)\n    );\n  });\n}\n\nfunction getIdSelectionsForNode({ tableNode }) {\n  return tableNode.modelClass.getIdColumnArray().map(columnName => {\n    return new Selection(\n      tableNode.alias,\n      columnName,\n      tableNode.getColumnAliasForColumn(columnName)\n    );\n  });\n}\n\nfunction selectionsToStrings(selections) {\n  return selections.map(selection => {\n    const selectStr = `${selection.table}.${selection.column}`;\n    return `${selectStr} as ${selection.alias}`;\n  });\n}\n\nfunction isSelectAll(selection) {\n  return selection.column === '*';\n}\n\nfunction isNotSelectAll(selection) {\n  return selection.column !== '*';\n}\n\nfunction isSelectAllSelectionSet(selections) {\n  return selections.length === 0 || selections.some(isSelectAll);\n}\n\nfunction checkAliasLength(modelClass, alias) {\n  if (alias.length > ID_LENGTH_LIMIT) {\n    throw modelClass.createValidationError({\n      type: ValidationErrorType.RelationExpression,\n      message: `identifier ${alias} is over ${ID_LENGTH_LIMIT} characters long and would be truncated by the database engine.`\n    });\n  }\n}\n\nmodule.exports = {\n  RelationJoiner\n};\n","'use strict';\n\nclass TableNode {\n  constructor({ tableTree, modelClass, expression, parentNode = null, relation = null }) {\n    this.tableTree = tableTree;\n    this.modelClass = modelClass;\n    this.parentNode = parentNode;\n    this.relation = relation;\n    this.expression = expression;\n    this.childNodes = [];\n\n    this.alias = this._calculateAlias();\n    this.idGetter = this._createIdGetter();\n  }\n\n  static create(args) {\n    const node = new TableNode(args);\n\n    if (node.parentNode) {\n      node.parentNode.childNodes.push(node);\n    }\n\n    return node;\n  }\n\n  get options() {\n    return this.tableTree.options;\n  }\n\n  get relationProperty() {\n    return this.expression.node.$name;\n  }\n\n  get joinTableAlias() {\n    return this.modelClass.joinTableAlias(this.alias);\n  }\n\n  getReferenceForColumn(column) {\n    return `${this.alias}.${column}`;\n  }\n\n  getColumnAliasForColumn(column) {\n    if (this.parentNode) {\n      return `${this.alias}${this.options.separator}${column}`;\n    } else {\n      return column;\n    }\n  }\n\n  getColumnForColumnAlias(columnAlias) {\n    const lastSepIndex = columnAlias.lastIndexOf(this.options.separator);\n\n    if (lastSepIndex === -1) {\n      return columnAlias;\n    } else {\n      return columnAlias.slice(lastSepIndex + this.options.separator.length);\n    }\n  }\n\n  getIdFromFlatRow(flatRow) {\n    return this.idGetter(flatRow);\n  }\n\n  _calculateAlias() {\n    if (this.parentNode) {\n      const relationName = this.expression.node.$name;\n      const alias = this.options.aliases[relationName] || relationName;\n\n      if (this.options.minimize) {\n        return `_t${this.tableTree.createNextUid()}`;\n      } else if (this.parentNode.parentNode) {\n        return `${this.parentNode.alias}${this.options.separator}${alias}`;\n      } else {\n        return alias;\n      }\n    } else {\n      return this.tableTree.rootTableAlias;\n    }\n  }\n\n  _createIdGetter() {\n    const idColumns = this.modelClass.getIdColumnArray();\n    const columnAliases = idColumns.map(column => this.getColumnAliasForColumn(column));\n\n    if (idColumns.length === 1) {\n      return createIdGetter(columnAliases);\n    } else {\n      return createCompositeIdGetter(columnAliases);\n    }\n  }\n}\n\nfunction createIdGetter(columnAliases) {\n  const columnAlias = columnAliases[0];\n\n  return flatRow => {\n    const id = flatRow[columnAlias];\n\n    if (id === null) {\n      return null;\n    }\n\n    return `${id}`;\n  };\n}\n\nfunction createCompositeIdGetter(columnAliases) {\n  if (columnAliases.length === 2) {\n    return createTwoIdGetter(columnAliases);\n  } else {\n    return createMultiIdGetter(columnAliases);\n  }\n}\n\nfunction createTwoIdGetter(columnAliases) {\n  const columnAlias1 = columnAliases[0];\n  const columnAlias2 = columnAliases[1];\n\n  return flatRow => {\n    const id1 = flatRow[columnAlias1];\n    const id2 = flatRow[columnAlias2];\n\n    if (id1 === null || id2 === null) {\n      return null;\n    }\n\n    return `${id1},${id2}`;\n  };\n}\n\nfunction createMultiIdGetter(columnAliases) {\n  return flatRow => {\n    let idStr = '';\n\n    for (let i = 0, l = columnAliases.length; i < l; ++i) {\n      const columnAlias = columnAliases[i];\n      const id = flatRow[columnAlias];\n\n      if (id === null) {\n        return null;\n      }\n\n      idStr += id;\n\n      if (i !== l - 1) {\n        idStr += ',';\n      }\n    }\n\n    return idStr;\n  };\n}\n\nmodule.exports = {\n  TableNode\n};\n","'use strict';\n\nconst { forEachChildExpression } = require('./utils');\nconst { TableNode } = require('./TableNode');\n\nclass TableTree {\n  constructor({ expression, rootModelClass, rootTableAlias, options }) {\n    this.options = options;\n    this.rootModelClass = rootModelClass;\n    this.rootTableAlias = rootTableAlias;\n    this.nodes = [];\n    this.nodesByAlias = new Map();\n    this.uidCounter = 0;\n\n    this._createNodes({ expression, modelClass: rootModelClass });\n  }\n\n  static create(args) {\n    return new TableTree(args);\n  }\n\n  get rootNode() {\n    return this.nodes[0];\n  }\n\n  getNodeForColumnAlias(columnAlias) {\n    const lastSepIndex = columnAlias.lastIndexOf(this.options.separator);\n\n    if (lastSepIndex === -1) {\n      return this.rootNode;\n    } else {\n      const tableAlias = columnAlias.slice(0, lastSepIndex);\n      return this.nodesByAlias.get(tableAlias);\n    }\n  }\n\n  createNextUid() {\n    return this.uidCounter++;\n  }\n\n  _createNodes({ expression, modelClass }) {\n    const rootNode = this._createRootNode({ expression, modelClass });\n    this._createChildNodes({ expression, modelClass, parentNode: rootNode });\n\n    for (const node of this.nodes) {\n      this.nodesByAlias.set(node.alias, node);\n    }\n  }\n\n  _createRootNode({ expression, modelClass }) {\n    const node = TableNode.create({\n      tableTree: this,\n      modelClass,\n      expression\n    });\n\n    this.nodes.push(node);\n    return node;\n  }\n\n  _createChildNodes({ expression, modelClass, parentNode }) {\n    forEachChildExpression(expression, modelClass, (childExpr, relation) => {\n      const node = TableNode.create({\n        tableTree: this,\n        modelClass: relation.relatedModelClass,\n        expression: childExpr,\n\n        parentNode,\n        relation\n      });\n\n      this.nodes.push(node);\n\n      this._createChildNodes({\n        expression: childExpr,\n        modelClass: relation.relatedModelClass,\n        parentNode: node\n      });\n    });\n  }\n}\n\nmodule.exports = {\n  TableTree\n};\n","'use strict';\n\nconst { ValidationErrorType } = require('../../model/ValidationError');\n\nconst ID_LENGTH_LIMIT = 63;\nconst RELATION_RECURSION_LIMIT = 64;\n\n// Given a relation expression, goes through all first level children.\nfunction forEachChildExpression(expr, modelClass, callback) {\n  if (expr.node.$allRecursive || expr.maxRecursionDepth > RELATION_RECURSION_LIMIT) {\n    throw modelClass.createValidationError({\n      type: ValidationErrorType.RelationExpression,\n      message: `recursion depth of eager expression ${expr.toString()} too big for JoinEagerAlgorithm`\n    });\n  }\n\n  expr.forEachChildExpression(modelClass, callback);\n}\n\nmodule.exports = {\n  ID_LENGTH_LIMIT,\n  RELATION_RECURSION_LIMIT,\n\n  forEachChildExpression\n};\n","'use strict';\n\nconst { QueryBuilderOperation } = require('./QueryBuilderOperation');\n\n// Operation that simply delegates all calls to the operation passed\n// to to the constructor in `opt.delegate`.\nclass DelegateOperation extends QueryBuilderOperation {\n  constructor(name, opt) {\n    super(name, opt);\n\n    this.delegate = opt.delegate;\n  }\n\n  is(OperationClass) {\n    return super.is(OperationClass) || this.delegate.is(OperationClass);\n  }\n\n  onAdd(builder, args) {\n    return this.delegate.onAdd(builder, args);\n  }\n\n  onBefore1(builder, result) {\n    return this.delegate.onBefore1(builder, result);\n  }\n\n  hasOnBefore1() {\n    return this.onBefore1 !== DelegateOperation.prototype.onBefore1 || this.delegate.hasOnBefore1();\n  }\n\n  onBefore2(builder, result) {\n    return this.delegate.onBefore2(builder, result);\n  }\n\n  hasOnBefore2() {\n    return this.onBefore2 !== DelegateOperation.prototype.onBefore2 || this.delegate.hasOnBefore2();\n  }\n\n  onBefore3(builder, result) {\n    return this.delegate.onBefore3(builder, result);\n  }\n\n  hasOnBefore3() {\n    return this.onBefore3 !== DelegateOperation.prototype.onBefore3 || this.delegate.hasOnBefore3();\n  }\n\n  onBuild(builder) {\n    return this.delegate.onBuild(builder);\n  }\n\n  hasOnBuild() {\n    return this.onBuild !== DelegateOperation.prototype.onBuild || this.delegate.hasOnBuild();\n  }\n\n  onBuildKnex(knexBuilder, builder) {\n    return this.delegate.onBuildKnex(knexBuilder, builder);\n  }\n\n  hasOnBuildKnex() {\n    return (\n      this.onBuildKnex !== DelegateOperation.prototype.onBuildKnex || this.delegate.hasOnBuildKnex()\n    );\n  }\n\n  onRawResult(builder, result) {\n    return this.delegate.onRawResult(builder, result);\n  }\n\n  hasOnRawResult() {\n    return (\n      this.onRawResult !== DelegateOperation.prototype.onRawResult || this.delegate.hasOnRawResult()\n    );\n  }\n\n  onAfter1(builder, result) {\n    return this.delegate.onAfter1(builder, result);\n  }\n\n  hasOnAfter1() {\n    return this.onAfter1 !== DelegateOperation.prototype.onAfter1 || this.delegate.hasOnAfter1();\n  }\n\n  onAfter2(builder, result) {\n    return this.delegate.onAfter2(builder, result);\n  }\n\n  hasOnAfter2() {\n    return this.onAfter2 !== DelegateOperation.prototype.onAfter2 || this.delegate.hasOnAfter2();\n  }\n\n  onAfter3(builder, result) {\n    return this.delegate.onAfter3(builder, result);\n  }\n\n  hasOnAfter3() {\n    return this.onAfter3 !== DelegateOperation.prototype.onAfter3 || this.delegate.hasOnAfter3();\n  }\n\n  queryExecutor(builder) {\n    return this.delegate.queryExecutor(builder);\n  }\n\n  hasQueryExecutor() {\n    return (\n      this.queryExecutor !== DelegateOperation.prototype.queryExecutor ||\n      this.delegate.hasQueryExecutor()\n    );\n  }\n\n  onError(builder, error) {\n    return this.delegate.onError(builder, error);\n  }\n\n  hasOnError() {\n    return this.onError !== DelegateOperation.prototype.onError || this.delegate.hasOnError();\n  }\n\n  clone() {\n    const clone = super.clone();\n    clone.delegate = this.delegate && this.delegate.clone();\n    return clone;\n  }\n}\n\nmodule.exports = {\n  DelegateOperation\n};\n","'use strict';\n\nconst { QueryBuilderOperation } = require('./QueryBuilderOperation');\nconst { after, afterReturn } = require('../../utils/promiseUtils');\nconst { StaticHookArguments } = require('../StaticHookArguments');\n\nclass DeleteOperation extends QueryBuilderOperation {\n  onBefore2(builder, result) {\n    const maybePromise = callBeforeDelete(builder);\n    return afterReturn(maybePromise, result);\n  }\n\n  onBuildKnex(knexBuilder) {\n    knexBuilder.delete();\n  }\n\n  onAfter2(builder, result) {\n    return callAfterDelete(builder, result);\n  }\n}\n\nfunction callBeforeDelete(builder) {\n  return callStaticBeforeDelete(builder);\n}\n\nfunction callStaticBeforeDelete(builder) {\n  const args = StaticHookArguments.create({ builder });\n  return builder.modelClass().beforeDelete(args);\n}\n\nfunction callAfterDelete(builder, result) {\n  return callStaticAfterDelete(builder, result);\n}\n\nfunction callStaticAfterDelete(builder, result) {\n  const args = StaticHookArguments.create({ builder, result });\n  const maybePromise = builder.modelClass().afterDelete(args);\n\n  return after(maybePromise, maybeResult => {\n    if (maybeResult === undefined) {\n      return result;\n    } else {\n      return maybeResult;\n    }\n  });\n}\n\nmodule.exports = {\n  DeleteOperation\n};\n","'use strict';\n\nconst { QueryBuilderOperation } = require('./QueryBuilderOperation');\n\nclass FindByIdOperation extends QueryBuilderOperation {\n  constructor(name, opt) {\n    super(name, opt);\n    this.id = null;\n  }\n\n  onAdd(builder, args) {\n    this.id = args[0];\n    return super.onAdd(builder, args);\n  }\n\n  onBuild(builder) {\n    builder.whereComposite(builder.fullIdColumn(), this.id);\n  }\n\n  clone() {\n    const clone = super.clone();\n    clone.id = this.id;\n    return clone;\n  }\n}\n\nmodule.exports = {\n  FindByIdOperation\n};\n","'use strict';\n\nconst { QueryBuilderOperation } = require('./QueryBuilderOperation');\n\nclass FindByIdsOperation extends QueryBuilderOperation {\n  constructor(name, opt) {\n    super(name, opt);\n    this.ids = null;\n  }\n\n  onAdd(builder, args) {\n    this.ids = args[0];\n    return super.onAdd(builder, args);\n  }\n\n  onBuild(builder) {\n    builder.whereInComposite(builder.fullIdColumn(), this.ids);\n  }\n\n  clone() {\n    const clone = super.clone();\n    clone.ids = this.ids;\n    return clone;\n  }\n}\n\nmodule.exports = {\n  FindByIdsOperation\n};\n","'use strict';\n\nconst { QueryBuilderOperation } = require('./QueryBuilderOperation');\nconst { StaticHookArguments } = require('../StaticHookArguments');\nconst { isPromise, after, afterReturn } = require('../../utils/promiseUtils');\nconst { isObject } = require('../../utils/objectUtils');\n\nclass FindOperation extends QueryBuilderOperation {\n  onBefore2(builder, result) {\n    return afterReturn(callStaticBeforeFind(builder), result);\n  }\n\n  onAfter3(builder, results) {\n    const opt = builder.findOptions();\n\n    if (opt.dontCallFindHooks) {\n      return results;\n    } else {\n      return callAfterFind(builder, results);\n    }\n  }\n}\n\nfunction callStaticBeforeFind(builder) {\n  const args = StaticHookArguments.create({ builder });\n  return builder.modelClass().beforeFind(args);\n}\n\nfunction callAfterFind(builder, result) {\n  const opt = builder.findOptions();\n  const maybePromise = callInstanceAfterFind(builder.context(), result, opt.callAfterFindDeeply);\n\n  return after(maybePromise, () => callStaticAfterFind(builder, result));\n}\n\nfunction callStaticAfterFind(builder, result) {\n  const args = StaticHookArguments.create({ builder, result });\n  const maybePromise = builder.modelClass().afterFind(args);\n\n  return after(maybePromise, maybeResult => {\n    if (maybeResult === undefined) {\n      return result;\n    } else {\n      return maybeResult;\n    }\n  });\n}\n\nfunction callInstanceAfterFind(ctx, results, deep) {\n  if (Array.isArray(results)) {\n    if (results.length === 1) {\n      return callAfterFindForOne(ctx, results[0], results, deep);\n    } else {\n      return callAfterFindArray(ctx, results, deep);\n    }\n  } else {\n    return callAfterFindForOne(ctx, results, results, deep);\n  }\n}\n\nfunction callAfterFindArray(ctx, results, deep) {\n  if (results.length === 0 || !isObject(results[0])) {\n    return results;\n  }\n\n  const mapped = new Array(results.length);\n  let containsPromise = false;\n\n  for (let i = 0, l = results.length; i < l; ++i) {\n    mapped[i] = callAfterFindForOne(ctx, results[i], results[i], deep);\n\n    if (isPromise(mapped[i])) {\n      containsPromise = true;\n    }\n  }\n\n  if (containsPromise) {\n    return Promise.all(mapped);\n  } else {\n    return mapped;\n  }\n}\n\nfunction callAfterFindForOne(ctx, model, result, deep) {\n  if (!isObject(model) || !model.$isObjectionModel) {\n    return result;\n  }\n\n  if (deep) {\n    const results = [];\n    const containsPromise = callAfterFindForRelations(ctx, model, results);\n\n    if (containsPromise) {\n      return Promise.all(results).then(() => {\n        return doCallAfterFind(ctx, model, result);\n      });\n    } else {\n      return doCallAfterFind(ctx, model, result);\n    }\n  } else {\n    return doCallAfterFind(ctx, model, result);\n  }\n}\n\nfunction callAfterFindForRelations(ctx, model, results) {\n  const keys = Object.keys(model);\n  let containsPromise = false;\n\n  for (let i = 0, l = keys.length; i < l; ++i) {\n    const key = keys[i];\n    const value = model[key];\n\n    if (isRelation(value)) {\n      const maybePromise = callInstanceAfterFind(ctx, value, true);\n\n      if (isPromise(maybePromise)) {\n        containsPromise = true;\n      }\n\n      results.push(maybePromise);\n    }\n  }\n\n  return containsPromise;\n}\n\nfunction isRelation(value) {\n  return (\n    (isObject(value) && value.$isObjectionModel) ||\n    (isNonEmptyObjectArray(value) && value[0].$isObjectionModel)\n  );\n}\n\nfunction isNonEmptyObjectArray(value) {\n  return Array.isArray(value) && value.length > 0 && isObject(value[0]);\n}\n\nfunction doCallAfterFind(ctx, model, result) {\n  const afterFind = getAfterFindHook(model);\n\n  if (afterFind !== null) {\n    const maybePromise = afterFind.call(model, ctx);\n\n    if (isPromise(maybePromise)) {\n      return maybePromise.then(() => result);\n    } else {\n      return result;\n    }\n  } else {\n    return result;\n  }\n}\n\nfunction getAfterFindHook(model) {\n  if (model.$afterFind !== model.$objectionModelClass.prototype.$afterFind) {\n    return model.$afterFind;\n  } else if (model.$afterGet !== model.$objectionModelClass.prototype.$afterGet) {\n    return model.$afterGet;\n  } else {\n    return null;\n  }\n}\n\nmodule.exports = {\n  FindOperation\n};\n","'use strict';\n\nconst { QueryBuilderOperation } = require('./QueryBuilderOperation');\n\nclass FirstOperation extends QueryBuilderOperation {\n  onBuildKnex(knexBuilder, builder) {\n    const modelClass = builder.modelClass();\n\n    if (builder.isFind() && modelClass.useLimitInFirst) {\n      knexBuilder.limit(1);\n    }\n  }\n\n  onAfter3(_, result) {\n    if (Array.isArray(result)) {\n      return result[0];\n    } else {\n      return result;\n    }\n  }\n}\n\nmodule.exports = {\n  FirstOperation\n};\n","'use strict';\n\nconst { ObjectionToKnexConvertingOperation } = require('./ObjectionToKnexConvertingOperation');\nconst { isPlainObject, isString } = require('../../utils/objectUtils');\n\nconst ALIAS_REGEX = /\\s+as\\s+/i;\n\n// FromOperation corresponds to a `.from(args)` call. The call is delegated to\n// knex, but we first try to parse the arguments so that we can determine which\n// tables have been mentioned in a query's from clause. We only parse string\n// references and not `raw` or `ref` etc. references at this point thouhg.\nclass FromOperation extends ObjectionToKnexConvertingOperation {\n  constructor(name, opt) {\n    super(name, opt);\n\n    this.table = null;\n    this.alias = null;\n  }\n\n  onAdd(builder, args) {\n    const ret = super.onAdd(builder, args);\n    const parsed = parseTableAndAlias(this.args[0], builder);\n\n    if (parsed.table) {\n      builder.tableName(parsed.table);\n      this.table = parsed.table;\n    }\n\n    if (parsed.alias) {\n      builder.aliasFor(builder.modelClass().getTableName(), parsed.alias);\n      this.alias = parsed.alias;\n    }\n\n    return ret;\n  }\n\n  onBuildKnex(knexBuilder, builder) {\n    // Simply call knex's from method with the converted arguments.\n    knexBuilder.from.apply(knexBuilder, this.getKnexArgs(builder));\n  }\n\n  clone() {\n    const clone = super.clone();\n\n    clone.table = this.table;\n    clone.alias = this.alias;\n\n    return clone;\n  }\n}\n\nfunction parseTableAndAlias(arg, builder) {\n  if (isString(arg)) {\n    return parseTableAndAliasFromString(arg);\n  } else if (isPlainObject(arg)) {\n    return parseTableAndAliasFromObject(arg, builder);\n  } else {\n    // Could not parse table and alias from the arguments.\n    return {\n      table: null,\n      alias: null\n    };\n  }\n}\n\nfunction parseTableAndAliasFromString(arg) {\n  if (ALIAS_REGEX.test(arg)) {\n    const parts = arg.split(ALIAS_REGEX);\n\n    return {\n      table: parts[0].trim(),\n      alias: parts[1].trim()\n    };\n  } else {\n    return {\n      table: arg.trim(),\n      alias: null\n    };\n  }\n}\n\nfunction parseTableAndAliasFromObject(arg, builder) {\n  for (const alias of Object.keys(arg)) {\n    const table = arg[alias].trim();\n\n    if (table === builder.modelClass().getTableName()) {\n      return {\n        alias,\n        table\n      };\n    }\n  }\n\n  throw new Error(\n    `one of the tables in ${JSON.stringify(arg)} must be the query's model class's table.`\n  );\n}\n\nmodule.exports = {\n  FromOperation\n};\n","'use strict';\n\nconst { InsertOperation } = require('./InsertOperation');\nconst { DelegateOperation } = require('./DelegateOperation');\nconst { keyByProps } = require('../../model/modelUtils');\nconst { asArray } = require('../../utils/objectUtils');\nconst { after } = require('../../utils/promiseUtils');\n\nclass InsertAndFetchOperation extends DelegateOperation {\n  constructor(name, opt) {\n    super(name, opt);\n\n    if (!this.delegate.is(InsertOperation)) {\n      throw new Error('Invalid delegate');\n    }\n  }\n\n  onAfter2(builder, inserted) {\n    const modelClass = builder.modelClass();\n    const maybePromise = super.onAfter2(builder, inserted);\n\n    return after(maybePromise, insertedModels => {\n      const insertedModelArray = asArray(insertedModels);\n      const idProps = modelClass.getIdPropertyArray();\n      const ids = insertedModelArray.map(model => model.$id());\n\n      return modelClass\n        .query()\n        .childQueryOf(builder)\n        .findByIds(ids)\n        .castTo(builder.resultModelClass())\n        .then(fetchedModels => {\n          const modelsById = keyByProps(fetchedModels, idProps);\n\n          // Instead of returning the freshly fetched models, update the input\n          // models with the fresh values.\n          insertedModelArray.forEach(insertedModel => {\n            insertedModel.$set(modelsById.get(insertedModel.$propKey(idProps)));\n          });\n\n          return insertedModels;\n        });\n    });\n  }\n}\n\nmodule.exports = {\n  InsertAndFetchOperation\n};\n","'use strict';\n\nconst { DelegateOperation } = require('./DelegateOperation');\nconst { InsertGraphOperation } = require('./InsertGraphOperation');\nconst { RelationExpression } = require('../RelationExpression');\n\nclass InsertGraphAndFetchOperation extends DelegateOperation {\n  constructor(name, opt) {\n    super(name, opt);\n\n    if (!this.delegate.is(InsertGraphOperation)) {\n      throw new Error('Invalid delegate');\n    }\n  }\n\n  get models() {\n    return this.delegate.models;\n  }\n\n  get isArray() {\n    return this.delegate.isArray;\n  }\n\n  onAfter2(builder) {\n    if (this.models.length === 0) {\n      return this.isArray ? [] : null;\n    }\n\n    const eager = RelationExpression.fromModelGraph(this.models);\n    const modelClass = this.models[0].constructor;\n    const ids = this.models.map(model => model.$id());\n\n    return modelClass\n      .query()\n      .childQueryOf(builder)\n      .findByIds(ids)\n      .eager(eager)\n      .then(models => {\n        return this.isArray ? models : models[0] || null;\n      });\n  }\n}\n\nmodule.exports = {\n  InsertGraphAndFetchOperation\n};\n","'use strict';\n\nconst { DelegateOperation } = require('./DelegateOperation');\nconst { InsertOperation } = require('./InsertOperation');\nconst { GraphUpsert } = require('../graph/GraphUpsert');\n\nclass InsertGraphOperation extends DelegateOperation {\n  constructor(name, opt = null) {\n    super(name, opt);\n\n    if (!this.delegate.is(InsertOperation)) {\n      throw new Error('Invalid delegate');\n    }\n\n    Object.assign(this.delegate.modelOptions, GraphUpsert.modelOptions);\n    this.upsertOptions = opt.opt || {};\n    this.upsert = null;\n  }\n\n  get models() {\n    return this.delegate.models;\n  }\n\n  get isArray() {\n    return this.delegate.isArray;\n  }\n\n  onAdd(builder, args) {\n    const retVal = super.onAdd(builder, args);\n\n    this.upsert = new GraphUpsert({\n      objects: this.models,\n      rootModelClass: builder.modelClass(),\n\n      upsertOptions: Object.assign({}, this.upsertOptions, {\n        noUpdate: true,\n        noDelete: true,\n        noUnrelate: true,\n        insertMissing: true\n      })\n    });\n\n    // We resolve this query here and will not execute it. This is because the root\n    // value may depend on other models in the graph and cannot be inserted first.\n    builder.resolve([]);\n\n    return retVal;\n  }\n\n  onBefore1() {\n    // Do nothing.\n  }\n\n  onBefore2() {\n    // Do nothing. We override this with empty implementation so that\n    // the $beforeInsert() hooks are not called twice for the root models.\n  }\n\n  onBefore3() {\n    // Do nothing.\n  }\n\n  onBuild() {\n    // Do nothing.\n  }\n\n  onBuildKnex() {\n    // Do nothing.\n  }\n\n  // We overrode all other hooks but this one and do all the work in here.\n  // This is a bit hacky.\n  onAfter1(builder, ...restArgs) {\n    return this.upsert.run(builder).then(() => super.onAfter1(builder, ...restArgs));\n  }\n\n  onAfter2() {\n    // We override this with empty implementation so that the $afterInsert() hooks\n    // are not called twice for the root models.\n    return this.isArray ? this.models : this.models[0] || null;\n  }\n\n  clone() {\n    const clone = super.clone();\n    clone.upsert = this.upsert;\n    return clone;\n  }\n}\n\nmodule.exports = {\n  InsertGraphOperation\n};\n","'use strict';\n\nconst { QueryBuilderOperation } = require('./QueryBuilderOperation');\nconst { StaticHookArguments } = require('../StaticHookArguments');\nconst { after, mapAfterAllReturn, afterReturn } = require('../../utils/promiseUtils');\nconst { isPostgres, isSqlite, isMySql } = require('../../utils/knexUtils');\nconst { isObject } = require('../../utils/objectUtils');\n\n// Base class for all insert operations.\nclass InsertOperation extends QueryBuilderOperation {\n  constructor(name, opt) {\n    super(name, opt);\n\n    this.models = null;\n    this.isArray = false;\n    this.modelOptions = Object.assign({}, this.opt.modelOptions || {});\n  }\n\n  onAdd(builder, args) {\n    const json = args[0];\n    const modelClass = builder.modelClass();\n\n    this.isArray = Array.isArray(json);\n    this.models = modelClass.ensureModelArray(json, this.modelOptions);\n\n    return true;\n  }\n\n  onBefore2(builder, result) {\n    if (this.models.length > 1 && !isPostgres(builder.knex())) {\n      throw new Error('batch insert only works with Postgresql');\n    } else {\n      const maybePromise = callBeforeInsert(builder, this.models);\n      return afterReturn(maybePromise, result);\n    }\n  }\n\n  onBuildKnex(knexBuilder, builder) {\n    if (!isSqlite(builder.knex()) && !isMySql(builder.knex()) && !builder.has(/returning/)) {\n      // If the user hasn't specified a `returning` clause, we make sure\n      // that at least the identifier is returned.\n      knexBuilder.returning(builder.modelClass().getIdColumn());\n    }\n\n    knexBuilder.insert(this.models.map(model => model.$toDatabaseJson(builder)));\n  }\n\n  onAfter1(_, ret) {\n    if (!Array.isArray(ret) || !ret.length || ret === this.models) {\n      // Early exit if there is nothing to do.\n      return this.models;\n    }\n\n    if (isObject(ret[0])) {\n      // If the user specified a `returning` clause the result may be an array of objects.\n      // Merge all values of the objects to our models.\n      for (let i = 0, l = this.models.length; i < l; ++i) {\n        this.models[i].$set(ret[i]);\n      }\n    } else {\n      // If the return value is not an array of objects, we assume it is an array of identifiers.\n      for (let i = 0, l = this.models.length; i < l; ++i) {\n        const model = this.models[i];\n\n        // Don't set the id if the model already has one. MySQL and Sqlite don't return the correct\n        // primary key value if the id is not generated in db, but given explicitly.\n        if (!model.$id()) {\n          model.$id(ret[i]);\n        }\n      }\n    }\n\n    return this.models;\n  }\n\n  onAfter2(builder, models) {\n    const result = this.isArray ? models : models[0] || null;\n    return callAfterInsert(builder, this.models, result);\n  }\n\n  clone() {\n    const clone = super.clone();\n\n    clone.models = this.models;\n    clone.isArray = this.isArray;\n\n    return clone;\n  }\n}\n\nfunction callBeforeInsert(builder, models) {\n  const maybePromise = callInstanceBeforeInsert(builder, models);\n  return after(maybePromise, () => callStaticBeforeInsert(builder));\n}\n\nfunction callInstanceBeforeInsert(builder, models) {\n  return mapAfterAllReturn(models, model => model.$beforeInsert(builder.context()), models);\n}\n\nfunction callStaticBeforeInsert(builder) {\n  const args = StaticHookArguments.create({ builder });\n  return builder.modelClass().beforeInsert(args);\n}\n\nfunction callAfterInsert(builder, models, result) {\n  const maybePromise = callInstanceAfterInsert(builder, models);\n  return after(maybePromise, () => callStaticAfterInsert(builder, result));\n}\n\nfunction callInstanceAfterInsert(builder, models) {\n  return mapAfterAllReturn(models, model => model.$afterInsert(builder.context()), models);\n}\n\nfunction callStaticAfterInsert(builder, result) {\n  const args = StaticHookArguments.create({ builder, result });\n  const maybePromise = builder.modelClass().afterInsert(args);\n\n  return after(maybePromise, maybeResult => {\n    if (maybeResult === undefined) {\n      return result;\n    } else {\n      return maybeResult;\n    }\n  });\n}\n\nmodule.exports = {\n  InsertOperation\n};\n","'use strict';\n\nconst { DeleteOperation } = require('./DeleteOperation');\nconst { assertHasId } = require('../../utils/assert');\nconst { afterReturn, after } = require('../../utils/promiseUtils');\n\nclass InstanceDeleteOperation extends DeleteOperation {\n  constructor(name, opt) {\n    super(name, opt);\n    this.instance = opt.instance;\n  }\n\n  onBefore2(builder, result) {\n    let maybePromise = this.instance.$beforeDelete(builder.context());\n    maybePromise = after(maybePromise, () => super.onBefore2(builder, result));\n    return afterReturn(maybePromise, result);\n  }\n\n  onBuild(builder) {\n    super.onBuild(builder);\n\n    assertHasId(this.instance);\n    builder.findById(this.instance.$id());\n  }\n\n  onAfter2(builder, result) {\n    // The result may be an object if `returning` was used.\n    if (Array.isArray(result)) {\n      result = result[0];\n    }\n\n    const maybePromise = this.instance.$afterDelete(builder.context());\n    return after(maybePromise, () => super.onAfter2(builder, result));\n  }\n}\n\nmodule.exports = {\n  InstanceDeleteOperation\n};\n","'use strict';\n\nconst { FindOperation } = require('./FindOperation');\nconst { assertHasId } = require('../../utils/assert');\n\nclass InstanceFindOperation extends FindOperation {\n  constructor(name, opt) {\n    super(name, opt);\n    this.instance = opt.instance;\n  }\n\n  onBuild(builder) {\n    assertHasId(this.instance);\n    builder.findById(this.instance.$id());\n  }\n}\n\nmodule.exports = {\n  InstanceFindOperation\n};\n","'use strict';\n\nconst { InsertOperation } = require('./InsertOperation');\n\nclass InstanceInsertOperation extends InsertOperation {\n  constructor(name, opt) {\n    super(name, opt);\n    this.instance = opt.instance;\n  }\n\n  onAdd(builder, args) {\n    if (!args || args.length === 0) {\n      args = [this.instance];\n    } else {\n      args[0] = this.instance;\n    }\n\n    return super.onAdd(builder, args);\n  }\n}\n\nmodule.exports = {\n  InstanceInsertOperation\n};\n","'use strict';\n\nconst { UpdateOperation } = require('./UpdateOperation');\nconst { assertHasId } = require('../../utils/assert');\nconst { isObject } = require('../../utils/objectUtils');\nconst { after } = require('../../utils/promiseUtils');\n\nclass InstanceUpdateOperation extends UpdateOperation {\n  constructor(name, opt) {\n    super(name, opt);\n\n    this.instance = opt.instance;\n    this.modelOptions.old = opt.instance;\n  }\n\n  onAdd(builder, args) {\n    const retVal = super.onAdd(builder, args);\n\n    if (!this.model) {\n      this.model = this.instance;\n    }\n\n    return retVal;\n  }\n\n  onBuild(builder) {\n    super.onBuild(builder);\n\n    assertHasId(this.instance);\n    builder.findById(this.instance.$id());\n  }\n\n  onAfter2(builder, result) {\n    // The result may be an object if `returning` was used.\n    if (Array.isArray(result)) {\n      result = result[0];\n    }\n\n    const maybePromise = super.onAfter2(builder, result);\n\n    return after(maybePromise, result => {\n      this.instance.$set(this.model);\n\n      if (isObject(result)) {\n        this.instance.$set(result);\n      }\n\n      return result;\n    });\n  }\n}\n\nmodule.exports = {\n  InstanceUpdateOperation\n};\n","'use strict';\n\nconst { QueryBuilderOperation } = require('./QueryBuilderOperation');\nconst { RelationExpression } = require('../RelationExpression');\nconst { RelationJoiner } = require('../join/RelationJoiner');\nconst { isString } = require('../../utils/objectUtils');\n\nclass JoinRelationOperation extends QueryBuilderOperation {\n  constructor(name, opt) {\n    super(name, opt);\n    this.calls = [];\n  }\n\n  get joinOperation() {\n    return this.opt.joinOperation;\n  }\n\n  addCall(call) {\n    this.calls.push(call);\n  }\n\n  onBuild(builder) {\n    const modelClass = builder.modelClass();\n    const joinOperation = this.joinOperation;\n    let mergedExpr = RelationExpression.create();\n\n    for (const call of this.calls) {\n      const expr = RelationExpression.create(call.expression).toPojo();\n      const childNames = expr.$childNames;\n      const options = call.options || {};\n\n      if (childNames.length === 1) {\n        applyAlias(expr, modelClass, builder, options);\n      }\n\n      if (options.aliases) {\n        applyAliases(expr, modelClass, options);\n      }\n\n      mergedExpr = mergedExpr.merge(expr);\n    }\n\n    const joiner = new RelationJoiner({\n      modelClass\n    });\n\n    joiner.setOptions({ joinOperation });\n    joiner.setExpression(mergedExpr);\n    joiner.build(builder, false);\n  }\n\n  clone() {\n    const clone = super.clone();\n    clone.calls = this.calls.slice();\n    return clone;\n  }\n}\n\nfunction applyAlias(expr, modelClass, builder, options) {\n  const childNames = expr.$childNames;\n  const childName = childNames[0];\n  const childExpr = expr[childName];\n  const relation = modelClass.getRelation(childExpr.$relation);\n\n  let alias = childName;\n\n  if (options.alias === false) {\n    alias = builder.tableRefFor(relation.relatedModelClass.getTableName());\n  } else if (isString(options.alias)) {\n    alias = options.alias;\n  }\n\n  if (childName !== alias) {\n    renameRelationExpressionNode(expr, childName, alias);\n  }\n}\n\nfunction applyAliases(expr, modelClass, options) {\n  for (const childName of expr.$childNames) {\n    const childExpr = expr[childName];\n    const relation = modelClass.getRelation(childExpr.$relation);\n    const alias = options.aliases[childExpr.$relation];\n\n    if (alias && alias !== childName) {\n      renameRelationExpressionNode(expr, childName, alias);\n    }\n\n    applyAliases(childExpr, relation.relatedModelClass, options);\n  }\n}\n\nfunction renameRelationExpressionNode(expr, oldName, newName) {\n  const childExpr = expr[oldName];\n  delete expr[oldName];\n  expr[newName] = childExpr;\n  childExpr.$name = newName;\n  expr.$childNames = expr.$childNames.map(it => (it === oldName ? newName : it));\n}\n\nmodule.exports = {\n  JoinRelationOperation\n};\n","'use strict';\n\nconst { ObjectionToKnexConvertingOperation } = require('./ObjectionToKnexConvertingOperation');\n\n// An operation that simply calls the equivalent knex method.\nclass KnexOperation extends ObjectionToKnexConvertingOperation {\n  onBuildKnex(knexBuilder, builder) {\n    knexBuilder[this.name].apply(knexBuilder, this.getKnexArgs(builder));\n  }\n}\n\nmodule.exports = {\n  KnexOperation\n};\n","'use strict';\n\nconst { QueryBuilderOperation } = require('./QueryBuilderOperation');\nconst { isPlainObject, isObject, isFunction, once } = require('../../utils/objectUtils');\nconst { isKnexQueryBuilder, isKnexJoinBuilder } = require('../../utils/knexUtils');\nconst getJoinBuilder = once(() => require('../JoinBuilder').JoinBuilder);\n\n// An abstract operation base class that converts all arguments from objection types\n// to knex types. For example objection query builders are converted into knex query\n// builders and objection RawBuilder instances are converted into knex Raw instances.\nclass ObjectionToKnexConvertingOperation extends QueryBuilderOperation {\n  constructor(name, opt) {\n    super(name, opt);\n    this.args = null;\n  }\n\n  getKnexArgs(builder) {\n    return convertArgs(this.name, builder, this.args);\n  }\n\n  onAdd(builder, args) {\n    this.args = Array.from(args);\n    return shouldBeAdded(this.name, builder, this.args);\n  }\n\n  clone() {\n    const clone = super.clone();\n    clone.args = this.args;\n    return clone;\n  }\n}\n\nfunction shouldBeAdded(opName, builder, args) {\n  const skipUndefined = builder.internalOptions().skipUndefined;\n\n  for (let i = 0, l = args.length; i < l; ++i) {\n    const arg = args[i];\n\n    if (isUndefined(arg)) {\n      if (skipUndefined) {\n        return false;\n      } else {\n        throw new Error(\n          `undefined passed as argument #${i} for '${opName}' operation. Call skipUndefined() method to ignore the undefined values.`\n        );\n      }\n    }\n  }\n\n  return true;\n}\n\nfunction convertArgs(opName, builder, args) {\n  const skipUndefined = builder.internalOptions().skipUndefined;\n\n  return args.map((arg, i) => {\n    if (hasToKnexRawMethod(arg)) {\n      return convertToKnexRaw(arg, builder);\n    } else if (isObjectionQueryBuilderBase(arg)) {\n      return convertQueryBuilderBase(arg, builder);\n    } else if (isArray(arg)) {\n      return convertArray(arg, builder, i, opName, skipUndefined);\n    } else if (isFunction(arg)) {\n      return convertFunction(arg, builder);\n    } else if (isModel(arg)) {\n      return convertModel(arg);\n    } else if (isPlainObject(arg)) {\n      return convertPlainObject(arg, builder, i, opName, skipUndefined);\n    } else {\n      return arg;\n    }\n  });\n}\n\nfunction isUndefined(item) {\n  return item === undefined;\n}\n\nfunction hasToKnexRawMethod(item) {\n  return isObject(item) && isFunction(item.toKnexRaw);\n}\n\nfunction convertToKnexRaw(item, builder) {\n  return item.toKnexRaw(builder);\n}\n\nfunction isObjectionQueryBuilderBase(item) {\n  return isObject(item) && item.isObjectionQueryBuilderBase === true;\n}\n\nfunction convertQueryBuilderBase(item, builder) {\n  return item.subqueryOf(builder).toKnexQuery();\n}\n\nfunction isArray(item) {\n  return Array.isArray(item);\n}\n\nfunction convertArray(arr, builder, i, opName, skipUndefined) {\n  return arr.map(item => {\n    if (item === undefined) {\n      if (!skipUndefined) {\n        throw new Error(\n          `undefined passed as an item in argument #${i} for '${opName}' operation. Call skipUndefined() method to ignore the undefined values.`\n        );\n      }\n    } else if (hasToKnexRawMethod(item)) {\n      return convertToKnexRaw(item, builder);\n    } else if (isObjectionQueryBuilderBase(item)) {\n      return convertQueryBuilderBase(item);\n    } else {\n      return item;\n    }\n  });\n}\n\nfunction convertFunction(func, builder) {\n  return function convertedKnexArgumentFunction(...args) {\n    if (isKnexQueryBuilder(this)) {\n      convertQueryBuilderFunction(this, func, builder);\n    } else if (isKnexJoinBuilder(this)) {\n      convertJoinBuilderFunction(this, func, builder);\n    } else {\n      return func.apply(this, args);\n    }\n  };\n}\n\nfunction convertQueryBuilderFunction(knexQueryBuilder, func, builder) {\n  const convertedQueryBuilder = builder.constructor.forClass(builder.modelClass());\n\n  convertedQueryBuilder.subqueryOf(builder).isPartial(true);\n  func.call(convertedQueryBuilder, convertedQueryBuilder);\n\n  convertedQueryBuilder.toKnexQuery(knexQueryBuilder);\n}\n\nfunction convertJoinBuilderFunction(knexJoinBuilder, func, builder) {\n  const JoinBuilder = getJoinBuilder();\n  const joinClauseBuilder = JoinBuilder.forClass(builder.modelClass());\n\n  joinClauseBuilder.subqueryOf(builder).isPartial(true);\n  func.call(joinClauseBuilder, joinClauseBuilder);\n\n  joinClauseBuilder.toKnexQuery(knexJoinBuilder);\n}\n\nfunction isModel(item) {\n  return isObject(item) && item.$isObjectionModel;\n}\n\nfunction convertModel(model) {\n  return model.$toDatabaseJson();\n}\n\nfunction convertPlainObject(obj, builder, i, opName, skipUndefined) {\n  return Object.keys(obj).reduce((out, key) => {\n    const item = obj[key];\n\n    if (item === undefined) {\n      if (!skipUndefined) {\n        throw new Error(\n          `undefined passed as a property in argument #${i} for '${opName}' operation. Call skipUndefined() method to ignore the undefined values.`\n        );\n      }\n    } else if (hasToKnexRawMethod(item)) {\n      out[key] = convertToKnexRaw(item, builder);\n    } else if (isObjectionQueryBuilderBase(item)) {\n      out[key] = convertQueryBuilderBase(item, builder);\n    } else {\n      out[key] = item;\n    }\n\n    return out;\n  }, {});\n}\n\nmodule.exports = {\n  ObjectionToKnexConvertingOperation\n};\n","'use strict';\n\nconst { QueryBuilderOperation } = require('./QueryBuilderOperation');\n\nclass OnBuildKnexOperation extends QueryBuilderOperation {\n  constructor(name, opt) {\n    super(name, opt);\n    this.func = null;\n  }\n\n  onAdd(_, args) {\n    this.func = args[0];\n    return true;\n  }\n\n  onBuildKnex(knexBuilder, builder) {\n    return this.func.call(knexBuilder, knexBuilder, builder);\n  }\n\n  clone() {\n    const clone = super.clone();\n    clone.func = this.func;\n    return clone;\n  }\n}\n\nmodule.exports = {\n  OnBuildKnexOperation\n};\n","'use strict';\n\nconst { QueryBuilderOperation } = require('./QueryBuilderOperation');\n\nclass OnBuildOperation extends QueryBuilderOperation {\n  constructor(name, opt) {\n    super(name, opt);\n    this.func = null;\n  }\n\n  onAdd(_, args) {\n    this.func = args[0];\n    return true;\n  }\n\n  onBuild(builder) {\n    return this.func.call(builder, builder);\n  }\n\n  clone() {\n    const clone = super.clone();\n    clone.func = this.func;\n    return clone;\n  }\n}\n\nmodule.exports = {\n  OnBuildOperation\n};\n","'use strict';\n\nconst { QueryBuilderOperation } = require('./QueryBuilderOperation');\n\nclass OnErrorOperation extends QueryBuilderOperation {\n  constructor(name, opt) {\n    super(name, opt);\n    this.func = null;\n  }\n\n  onAdd(_, args) {\n    this.func = args[0];\n    return true;\n  }\n\n  onError(builder, error) {\n    return this.func.call(builder, error, builder);\n  }\n\n  clone() {\n    const clone = super.clone();\n    clone.func = this.func;\n    return clone;\n  }\n}\n\nmodule.exports = {\n  OnErrorOperation\n};\n","'use strict';\n\nconst hookNameToHasMethodName = {\n  onAdd: 'hasOnAdd',\n  onBefore1: 'hasOnBefore1',\n  onBefore2: 'hasOnBefore2',\n  onBefore3: 'hasOnBefore3',\n  onBuild: 'hasOnBuild',\n  onBuildKnex: 'hasOnBuildKnex',\n  onRawResult: 'hasOnRawResult',\n  queryExecutor: 'hasQueryExecutor',\n  onAfter1: 'hasOnAfter1',\n  onAfter2: 'hasOnAfter2',\n  onAfter3: 'hasOnAfter3',\n  onError: 'hasOnError'\n};\n\n// An abstract base class for all query builder operations. QueryBuilderOperations almost always\n// correspond to a single query builder method call. For example SelectOperation could be added when\n// a `select` method is called.\n//\n// QueryBuilderOperation is just a bunch of query execution lifecycle hooks that subclasses\n// can (but don't have to) implement.\n//\n// Basically a query builder is nothing but an array of QueryBuilderOperations. When the query is\n// executed the hooks are called in the order explained below. The hooks are called so that a\n// certain hook is called for _all_ operations before the next hook is called. For example if\n// a builder has 5 operations, onBefore1 hook is called for each of them (and their results are awaited)\n// before onBefore2 hook is called for any of the operations.\nclass QueryBuilderOperation {\n  constructor(name = null, opt = {}) {\n    this.name = name;\n    this.opt = opt;\n\n    // From which hook was this operation added as a child\n    // operation.\n    this.adderHookName = null;\n\n    // The parent operation that added this operation.\n    this.parentOperation = null;\n\n    // Operations this operation added in any of its hooks.\n    this.childOperations = [];\n  }\n\n  is(OperationClass) {\n    return this instanceof OperationClass;\n  }\n\n  hasHook(hookName) {\n    return this[hookNameToHasMethodName[hookName]]();\n  }\n\n  // This is called immediately when a query builder method is called.\n  //\n  // This method must be synchronous.\n  // This method should never call any methods that add operations to the builder.\n  onAdd(builder, args) {\n    return true;\n  }\n  hasOnAdd() {\n    return true;\n  }\n\n  // This is called as the first thing when the query is executed but before\n  // the actual database operation (knex query) is executed.\n  //\n  // This method can be asynchronous.\n  // You may call methods that add operations to to the builder.\n  onBefore1(builder, result) {}\n  hasOnBefore1() {\n    return this.onBefore1 !== QueryBuilderOperation.prototype.onBefore1;\n  }\n\n  // This is called as the second thing when the query is executed but before\n  // the actual database operation (knex query) is executed.\n  //\n  // This method can be asynchronous.\n  // You may call methods that add operations to to the builder.\n  onBefore2(builder, result) {}\n  hasOnBefore2() {\n    return this.onBefore2 !== QueryBuilderOperation.prototype.onBefore2;\n  }\n\n  // This is called as the third thing when the query is executed but before\n  // the actual database operation (knex query) is executed.\n  //\n  // This method can be asynchronous.\n  // You may call methods that add operations to to the builder.\n  onBefore3(builder, result) {}\n  hasOnBefore3() {\n    return this.onBefore3 !== QueryBuilderOperation.prototype.onBefore3;\n  }\n\n  // This is called as the last thing when the query is executed but before\n  // the actual database operation (knex query) is executed. If your operation\n  // needs to call other query building operations (methods that add QueryBuilderOperations)\n  // this is the best and last place to do it.\n  //\n  // This method must be synchronous.\n  // You may call methods that add operations to to the builder.\n  onBuild(builder) {}\n  hasOnBuild() {\n    return this.onBuild !== QueryBuilderOperation.prototype.onBuild;\n  }\n\n  // This is called when the knex query is built. Here you should only call knex\n  // methods. You may call getters and other immutable methods of the `builder`\n  // but you should never call methods that add QueryBuilderOperations.\n  //\n  // This method must be synchronous.\n  // This method should never call any methods that add operations to the builder.\n  onBuildKnex(knexBuilder, builder) {}\n  hasOnBuildKnex() {\n    return this.onBuildKnex !== QueryBuilderOperation.prototype.onBuildKnex;\n  }\n\n  // The raw knex result is passed to this method right after the database query\n  // has finished. This method may modify it and return the modified rows. The\n  // rows are automatically converted to models (if possible) after this hook\n  // is called.\n  //\n  // This method can be asynchronous.\n  onRawResult(builder, rows) {\n    return rows;\n  }\n  hasOnRawResult() {\n    return this.onRawResult !== QueryBuilderOperation.prototype.onRawResult;\n  }\n\n  // This is called as the first thing after the query has been executed and\n  // rows have been converted to model instances.\n  //\n  // This method can be asynchronous.\n  onAfter1(builder, result) {\n    return result;\n  }\n  hasOnAfter1() {\n    return this.onAfter1 !== QueryBuilderOperation.prototype.onAfter1;\n  }\n\n  // This is called as the second thing after the query has been executed and\n  // rows have been converted to model instances.\n  //\n  // This method can be asynchronous.\n  onAfter2(builder, result) {\n    return result;\n  }\n  hasOnAfter2() {\n    return this.onAfter2 !== QueryBuilderOperation.prototype.onAfter2;\n  }\n\n  // This is called as the third thing after the query has been executed and\n  // rows have been converted to model instances.\n  //\n  // This method can be asynchronous.\n  onAfter3(builder, result) {\n    return result;\n  }\n  hasOnAfter3() {\n    return this.onAfter3 !== QueryBuilderOperation.prototype.onAfter3;\n  }\n\n  // This method can be implemented to return another operation that will replace\n  // this one. This method is called after all `onBeforeX` and `onBuildX` hooks\n  // but before the database query is executed.\n  //\n  // This method must return a QueryBuilder instance.\n  queryExecutor(builder) {}\n  hasQueryExecutor() {\n    return this.queryExecutor !== QueryBuilderOperation.prototype.queryExecutor;\n  }\n\n  // This is called if an error occurs in the query execution.\n  //\n  // This method must return a QueryBuilder instance.\n  onError(builder, error) {}\n  hasOnError() {\n    return this.onError !== QueryBuilderOperation.prototype.onError;\n  }\n\n  // Given a set of operations, returns true if any of this operation's\n  // ancestor operations are included in the set.\n  isAncestorInSet(operationSet) {\n    let ancestor = this.parentOperation;\n\n    while (ancestor) {\n      if (operationSet.has(ancestor)) {\n        return true;\n      }\n\n      ancestor = ancestor.parentOperation;\n    }\n\n    return false;\n  }\n\n  // Takes a deep clone of this operation.\n  clone() {\n    const clone = new this.constructor(this.name, this.opt);\n\n    clone.adderHookName = this.adderHookName;\n    clone.parentOperation = this.parentOperation;\n\n    clone.childOperations = this.childOperations.map(childOp => {\n      const childOpClone = childOp.clone();\n\n      childOpClone.parentOperation = clone;\n      return childOpClone;\n    });\n\n    return clone;\n  }\n\n  // Add an operation as a child operation. `hookName` must be the\n  // name of the parent operation's hook that called this method.\n  addChildOperation(hookName, operation) {\n    operation.adderHookName = hookName;\n    operation.parentOperation = this;\n\n    this.childOperations.push(operation);\n  }\n\n  // Removes a single child operation.\n  removeChildOperation(operation) {\n    const index = this.childOperations.indexOf(operation);\n\n    if (index !== -1) {\n      operation.parentOperation = null;\n      this.childOperations.splice(index, 1);\n    }\n  }\n\n  // Removes all child operations that were added from the `hookName` hook.\n  removeChildOperationsByHookName(hookName) {\n    this.childOperations = this.childOperations.filter(op => op.adderHookName !== hookName);\n  }\n\n  // Iterates through all descendant operations recursively.\n  forEachDescendantOperation(callback) {\n    for (const operation of this.childOperations) {\n      if (callback(operation) === false) {\n        return false;\n      }\n\n      if (operation.forEachDescendantOperation(callback) === false) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n}\n\nmodule.exports = {\n  QueryBuilderOperation\n};\n","'use strict';\n\nconst { QueryBuilderOperation } = require('./QueryBuilderOperation');\n\nclass RangeOperation extends QueryBuilderOperation {\n  constructor(name, opt) {\n    super(name, opt);\n    this.resultSizeBuilder = null;\n  }\n\n  onAdd(builder, args) {\n    if (args.length === 2) {\n      const start = args[0];\n      const end = args[1];\n\n      // Need to set these here instead of `onBuildKnex` so that they\n      // don't end up in the resultSize query.\n      builder.limit(end - start + 1).offset(start);\n    }\n\n    return true;\n  }\n\n  onBefore1(builder, result) {\n    this.resultSizeBuilder = builder.clone();\n    return super.onBefore1(builder, result);\n  }\n\n  onAfter3(_, results) {\n    return this.resultSizeBuilder.resultSize().then(resultSize => {\n      return {\n        results,\n        total: parseInt(resultSize, 10)\n      };\n    });\n  }\n\n  clone() {\n    const clone = super.clone();\n    clone.resultSizeBuilder = this.resultSizeBuilder;\n    return clone;\n  }\n}\n\nmodule.exports = {\n  RangeOperation\n};\n","'use strict';\n\nconst { QueryBuilderOperation } = require('./QueryBuilderOperation');\n\nclass RelateOperation extends QueryBuilderOperation {\n  constructor(name, opt) {\n    super(name, opt);\n\n    this.relation = opt.relation;\n    this.owner = opt.owner;\n    this.input = null;\n    this.ids = null;\n  }\n\n  clone() {\n    const clone = super.clone();\n\n    clone.input = this.input;\n    clone.ids = this.ids;\n\n    return clone;\n  }\n}\n\nmodule.exports = {\n  RelateOperation\n};\n","'use strict';\n\nconst { flatten } = require('../../utils/objectUtils');\nconst { ObjectionToKnexConvertingOperation } = require('./ObjectionToKnexConvertingOperation');\n\n// This class's only purpose is to normalize the arguments into an array.\n//\n// In knex, if a single column is given to `returning` it returns an array with the that column's value\n// in it. If an array is given with a one item inside, the return value is an object.\nclass ReturningOperation extends ObjectionToKnexConvertingOperation {\n  onAdd(builder, args) {\n    args = flatten(args);\n\n    // Don't add an empty returning list.\n    if (args.length === 0) {\n      return false;\n    }\n\n    return super.onAdd(builder, args);\n  }\n\n  onBuildKnex(knexBuilder, builder) {\n    // Always pass an array of columns to knex.returning.\n    knexBuilder.returning(this.getKnexArgs(builder));\n  }\n}\n\nmodule.exports = {\n  ReturningOperation\n};\n","'use strict';\n\nconst { QueryBuilderOperation } = require('./QueryBuilderOperation');\n\nclass RunAfterOperation extends QueryBuilderOperation {\n  constructor(name, opt) {\n    super(name, opt);\n    this.func = null;\n  }\n\n  onAdd(_, args) {\n    this.func = args[0];\n    return true;\n  }\n\n  onAfter3(builder, result) {\n    return this.func.call(builder, result, builder);\n  }\n\n  clone() {\n    const clone = super.clone();\n    clone.func = this.func;\n    return clone;\n  }\n}\n\nmodule.exports = {\n  RunAfterOperation\n};\n","'use strict';\n\nconst { QueryBuilderOperation } = require('./QueryBuilderOperation');\n\nclass RunBeforeOperation extends QueryBuilderOperation {\n  constructor(name, opt) {\n    super(name, opt);\n    this.func = null;\n  }\n\n  onAdd(_, args) {\n    this.func = args[0];\n    return true;\n  }\n\n  onBefore1(builder, result) {\n    return this.func.call(builder, result, builder);\n  }\n\n  clone() {\n    const clone = super.clone();\n    clone.func = this.func;\n    return clone;\n  }\n}\n\nmodule.exports = {\n  RunBeforeOperation\n};\n","'use strict';\n\nconst { QueryBuilderOperation } = require('./QueryBuilderOperation');\n\nclass UnrelateOperation extends QueryBuilderOperation {\n  constructor(name, opt) {\n    super(name, opt);\n\n    this.relation = opt.relation;\n    this.owner = opt.owner;\n    this.ids = null;\n  }\n\n  clone() {\n    const clone = super.clone();\n    clone.ids = this.ids;\n    return clone;\n  }\n}\n\nmodule.exports = {\n  UnrelateOperation\n};\n","'use strict';\n\nconst { DelegateOperation } = require('./DelegateOperation');\nconst { UpdateOperation } = require('./UpdateOperation');\nconst { afterReturn } = require('../../utils/promiseUtils');\n\nclass UpdateAndFetchOperation extends DelegateOperation {\n  constructor(name, opt) {\n    super(name, opt);\n\n    if (!this.delegate.is(UpdateOperation)) {\n      throw new Error('Invalid delegate');\n    }\n\n    this.id = null;\n    this.skipIdWhere = false;\n  }\n\n  get model() {\n    return this.delegate.model;\n  }\n\n  onAdd(builder, args) {\n    this.id = args[0];\n    return this.delegate.onAdd(builder, args.slice(1));\n  }\n\n  onBuild(builder) {\n    super.onBuild(builder);\n\n    if (!this.skipIdWhere) {\n      builder.findById(this.id);\n    }\n  }\n\n  onAfter2(builder, numUpdated) {\n    if (numUpdated == 0) {\n      // If nothing was updated, we should fetch nothing.\n      return afterReturn(super.onAfter2(builder, numUpdated), undefined);\n    }\n\n    return builder\n      .modelClass()\n      .query()\n      .childQueryOf(builder)\n      .findById(this.id)\n      .castTo(builder.resultModelClass())\n      .then(fetched => {\n        let retVal = undefined;\n\n        if (fetched) {\n          this.model.$set(fetched);\n          retVal = this.model;\n        }\n\n        return afterReturn(super.onAfter2(builder, numUpdated), retVal);\n      });\n  }\n\n  clone() {\n    const clone = super.clone();\n\n    clone.id = this.id;\n    clone.skipIdWhere = this.skipIdWhere;\n\n    return clone;\n  }\n}\n\nmodule.exports = {\n  UpdateAndFetchOperation\n};\n","'use strict';\n\nconst { ref } = require('../../queryBuilder/ReferenceBuilder');\nconst { isEmpty } = require('../../utils/objectUtils');\nconst { after, afterReturn } = require('../../utils/promiseUtils');\nconst { isKnexRaw, isKnexQueryBuilder } = require('../../utils/knexUtils');\nconst { QueryBuilderOperation } = require('./QueryBuilderOperation');\nconst { StaticHookArguments } = require('../StaticHookArguments');\n\nclass UpdateOperation extends QueryBuilderOperation {\n  constructor(name, opt) {\n    super(name, opt);\n\n    this.model = null;\n    this.modelOptions = Object.assign({}, this.opt.modelOptions || {});\n  }\n\n  onAdd(builder, args) {\n    const json = args[0];\n    const modelClass = builder.modelClass();\n\n    this.model = modelClass.ensureModel(json, this.modelOptions);\n    return true;\n  }\n\n  onBefore2(builder, result) {\n    const maybePromise = callBeforeUpdate(builder, this.model, this.modelOptions);\n    return afterReturn(maybePromise, result);\n  }\n\n  onBefore3(builder) {\n    const row = this.model.$toDatabaseJson(builder);\n\n    if (isEmpty(row)) {\n      // Resolve the query if there is nothing to update.\n      builder.resolve(0);\n    }\n  }\n\n  onBuildKnex(knexBuilder, builder) {\n    const json = this.model.$toDatabaseJson(builder);\n    const convertedJson = this.convertFieldExpressionsToRaw(builder, json);\n\n    knexBuilder.update(convertedJson);\n  }\n\n  onAfter2(builder, numUpdated) {\n    return callAfterUpdate(builder, this.model, this.modelOptions, numUpdated);\n  }\n\n  convertFieldExpressionsToRaw(builder, json) {\n    const knex = builder.knex();\n    const modelClass = builder.modelClass();\n    const convertedJson = {};\n\n    for (const key of Object.keys(json)) {\n      let val = json[key];\n\n      if (key.indexOf(':') > -1) {\n        // 'col:attr' : ref('other:lol') is transformed to\n        // \"col\" : raw(`jsonb_set(\"col\", '{attr}', to_jsonb(\"other\"#>'{lol}'), true)`)\n\n        let parsed = ref(key);\n        let jsonRefs = '{' + parsed.parsedExpr.access.map(it => it.ref).join(',') + '}';\n        let valuePlaceholder = '?';\n\n        if (isKnexQueryBuilder(val) || isKnexRaw(val)) {\n          valuePlaceholder = 'to_jsonb(?)';\n        } else {\n          val = JSON.stringify(val);\n        }\n\n        convertedJson[parsed.column] = knex.raw(\n          `jsonb_set(??, '${jsonRefs}', ${valuePlaceholder}, true)`,\n          [convertedJson[parsed.column] || parsed.column, val]\n        );\n      } else {\n        convertedJson[key] = val;\n      }\n    }\n\n    return convertedJson;\n  }\n\n  clone() {\n    const clone = super.clone();\n    clone.model = this.model;\n    return clone;\n  }\n}\n\nfunction callBeforeUpdate(builder, model, modelOptions) {\n  const maybePromise = callInstanceBeforeUpdate(builder, model, modelOptions);\n  return after(maybePromise, () => callStaticBeforeUpdate(builder));\n}\n\nfunction callInstanceBeforeUpdate(builder, model, modelOptions) {\n  return model.$beforeUpdate(modelOptions, builder.context());\n}\n\nfunction callStaticBeforeUpdate(builder) {\n  const args = StaticHookArguments.create({ builder });\n  return builder.modelClass().beforeUpdate(args);\n}\n\nfunction callAfterUpdate(builder, model, modelOptions, result) {\n  const maybePromise = callInstanceAfterUpdate(builder, model, modelOptions);\n  return after(maybePromise, () => callStaticAfterUpdate(builder, result));\n}\n\nfunction callInstanceAfterUpdate(builder, model, modelOptions) {\n  return model.$afterUpdate(modelOptions, builder.context());\n}\n\nfunction callStaticAfterUpdate(builder, result) {\n  const args = StaticHookArguments.create({ builder, result });\n  const maybePromise = builder.modelClass().afterUpdate(args);\n\n  return after(maybePromise, maybeResult => {\n    if (maybeResult === undefined) {\n      return result;\n    } else {\n      return maybeResult;\n    }\n  });\n}\n\nmodule.exports = {\n  UpdateOperation\n};\n","'use strict';\n\nconst { DelegateOperation } = require('./DelegateOperation');\nconst { UpsertGraphOperation } = require('./UpsertGraphOperation');\nconst { RelationExpression } = require('../RelationExpression');\n\nclass UpsertGraphAndFetchOperation extends DelegateOperation {\n  constructor(name, opt) {\n    super(name, opt);\n\n    if (!this.delegate.is(UpsertGraphOperation)) {\n      throw new Error('Invalid delegate');\n    }\n  }\n\n  get models() {\n    return this.delegate.models;\n  }\n\n  get isArray() {\n    return this.delegate.isArray;\n  }\n\n  onAfter3(builder) {\n    if (this.models.length === 0) {\n      return this.isArray ? [] : null;\n    }\n\n    const eager = RelationExpression.fromModelGraph(this.models);\n    const modelClass = this.models[0].constructor;\n    const ids = this.models.map(model => model.$id());\n\n    return modelClass\n      .query()\n      .childQueryOf(builder)\n      .findByIds(ids)\n      .eager(eager)\n      .then(models => {\n        return this.isArray ? models : models[0] || null;\n      });\n  }\n}\n\nmodule.exports = {\n  UpsertGraphAndFetchOperation\n};\n","'use strict';\n\nconst { QueryBuilderOperation } = require('./QueryBuilderOperation');\nconst { GraphUpsert } = require('../graph/GraphUpsert');\n\nclass UpsertGraphOperation extends QueryBuilderOperation {\n  constructor(name, opt) {\n    super(\n      name,\n      Object.assign({}, opt, {\n        upsertOptions: {}\n      })\n    );\n\n    this.upsertOptions = opt.upsertOptions || {};\n    this.upsert = null;\n  }\n\n  get models() {\n    return this.upsert.objects;\n  }\n\n  get isArray() {\n    return this.upsert.isArray;\n  }\n\n  onAdd(builder, args) {\n    const [objects] = args;\n\n    this.upsert = new GraphUpsert({\n      objects,\n      rootModelClass: builder.modelClass(),\n      upsertOptions: this.upsertOptions\n    });\n\n    // Never execute this builder.\n    builder.resolve([]);\n\n    return true;\n  }\n\n  onAfter1(builder) {\n    return this.upsert.run(builder);\n  }\n\n  clone() {\n    const clone = super.clone();\n    clone.upsert = this.upsert;\n    return clone;\n  }\n}\n\nmodule.exports = {\n  UpsertGraphOperation\n};\n","'use strict';\n\nconst { ObjectionToKnexConvertingOperation } = require('./ObjectionToKnexConvertingOperation');\nconst { asSingle } = require('../../utils/objectUtils');\n\nclass WhereCompositeOperation extends ObjectionToKnexConvertingOperation {\n  onBuildKnex(knexBuilder, builder) {\n    const args = this.getKnexArgs(builder);\n\n    if (args.length === 2) {\n      // Convert whereComposite('foo', 1) into whereComposite('foo', '=', 1)\n      args.splice(1, 0, '=');\n    } else if (args.length !== 3) {\n      throw new Error(`invalid number of arguments ${args.length}`);\n    }\n\n    knexBuilder.where(...buildWhereArgs(...args));\n  }\n}\n\nfunction buildWhereArgs(cols, op, values) {\n  if (isNormalWhere(cols, values)) {\n    return buildNormalWhereArgs(cols, op, values);\n  } else if (isCompositeWhere(cols, values)) {\n    return buildCompositeWhereArgs(cols, op, values);\n  } else {\n    throw new Error(`both cols and values must have same dimensions`);\n  }\n}\n\nfunction isNormalWhere(cols, values) {\n  return (\n    (!Array.isArray(cols) || cols.length === 1) && (!Array.isArray(values) || values.length === 1)\n  );\n}\n\nfunction buildNormalWhereArgs(cols, op, values) {\n  return [asSingle(cols), op, asSingle(values)];\n}\n\nfunction isCompositeWhere(cols, values) {\n  return Array.isArray(cols) && Array.isArray(values) && cols.length === values.length;\n}\n\nfunction buildCompositeWhereArgs(cols, op, values) {\n  return [\n    builder => {\n      for (let i = 0, l = cols.length; i < l; ++i) {\n        builder.where(cols[i], op, values[i]);\n      }\n    }\n  ];\n}\n\nmodule.exports = {\n  WhereCompositeOperation\n};\n","'use strict';\n\nconst { QueryBuilderOperation } = require('../QueryBuilderOperation');\nconst { RelationExpression } = require('../../RelationExpression');\n\nclass EagerOperation extends QueryBuilderOperation {\n  constructor(name, opt) {\n    super(name, opt);\n\n    this.expression = RelationExpression.create();\n    this.modifiers = {};\n    this.modifiersAtPath = [];\n    this.allowedExpression = null;\n    this.eagerOptions = this.opt.defaultEagerOptions;\n  }\n\n  get finalExpression() {\n    const expression = this.expression.clone();\n\n    this.modifiersAtPath.forEach((modifier, i) => {\n      const modifierName = getModifierName(i);\n\n      expression.expressionsAtPath(modifier.path).forEach(expr => {\n        expr.node.$modify.push(modifierName);\n      });\n    });\n\n    return expression;\n  }\n\n  get finalModifiers() {\n    const modifiers = Object.assign({}, this.modifiers);\n\n    this.modifiersAtPath.forEach((modifier, i) => {\n      const modifierName = getModifierName(i);\n\n      modifiers[modifierName] = modifier.modifier;\n    });\n\n    return modifiers;\n  }\n\n  cloneFrom(eagerOp) {\n    this.expression = eagerOp.expression.clone();\n    this.modifiers = Object.assign({}, eagerOp.modifiers);\n    this.modifiersAtPath = eagerOp.modifiersAtPath.slice();\n    this.allowedExpression = eagerOp.allowedExpression && eagerOp.allowedExpression.clone();\n    this.eagerOptions = Object.assign({}, eagerOp.eagerOptions);\n  }\n\n  clone() {\n    const clone = super.clone();\n    clone.cloneFrom(this);\n    return clone;\n  }\n}\n\nfunction getModifierName(index) {\n  return `_f${index}_`;\n}\n\nmodule.exports = {\n  EagerOperation\n};\n","'use strict';\n\nconst { EagerOperation } = require('./EagerOperation');\nconst { RelationJoiner } = require('../../join/RelationJoiner');\n\nclass JoinEagerOperation extends EagerOperation {\n  constructor(name, opt) {\n    super(name, opt);\n    this.joiner = null;\n  }\n\n  onAdd(builder) {\n    builder.findOptions({ callAfterFindDeeply: true });\n\n    this.joiner = new RelationJoiner({\n      modelClass: builder.modelClass()\n    });\n\n    return true;\n  }\n\n  onBefore3(builder) {\n    return this.joiner\n      .setExpression(this.finalExpression)\n      .setModifiers(this.finalModifiers)\n      .setOptions(this.eagerOptions)\n      .fetchColumnInfo(builder);\n  }\n\n  onBuild(builder) {\n    this.joiner\n      .setExpression(this.finalExpression)\n      .setModifiers(this.finalModifiers)\n      .setOptions(this.eagerOptions)\n      .build(builder);\n  }\n\n  onRawResult(builder, rows) {\n    return this.joiner.parseResult(builder, rows);\n  }\n\n  clone() {\n    const clone = super.clone();\n    clone.joiner = this.joiner;\n    return clone;\n  }\n}\n\nmodule.exports = {\n  JoinEagerOperation\n};\n","'use strict';\n\nconst { WhereInEagerOperation } = require('./WhereInEagerOperation');\n\nclass NaiveEagerOperation extends WhereInEagerOperation {\n  batchSize() {\n    return 1;\n  }\n}\n\nmodule.exports = {\n  NaiveEagerOperation\n};\n","'use strict';\n\nconst promiseUtils = require('../../../utils/promiseUtils');\n\nconst { EagerOperation } = require('./EagerOperation');\nconst { isMsSql, isOracle } = require('../../../utils/knexUtils');\nconst { asArray, flatten, chunk } = require('../../../utils/objectUtils');\nconst { ValidationErrorType } = require('../../../model/ValidationError');\nconst { createModifier } = require('../../../utils/createModifier');\nconst { RelationDoesNotExistError } = require('../../../model/RelationDoesNotExistError');\n\nclass WhereInEagerOperation extends EagerOperation {\n  constructor(name, opt) {\n    super(name, opt);\n\n    this.relationsToFetch = [];\n    this.omitProps = [];\n  }\n\n  batchSize(knex) {\n    if (isMsSql(knex)) {\n      // On MSSQL the parameter limit is actually 2100, but since I couldn't figure out\n      // if the limit is for all parameters in a query or for individual clauses, we set\n      // the limit to 2000 to leave 100 parameters for where clauses etc.\n      return 2000;\n    } else if (isOracle(knex)) {\n      return 1000;\n    } else {\n      // I'm sure there is some kind of limit for other databases too, but let's lower\n      // this if someone ever hits those limits.\n      return 10000;\n    }\n  }\n\n  onBuild(builder) {\n    const relationsToFetch = findRelationsToFetch(builder, this.finalExpression);\n    const { selectionsToAdd, selectedProps } = findRelationPropsToSelect(builder, relationsToFetch);\n\n    if (selectionsToAdd.length) {\n      builder.select(selectionsToAdd);\n    }\n\n    this.relationsToFetch = relationsToFetch;\n    this.omitProps = selectedProps;\n  }\n\n  onAfter2(builder, result) {\n    const modelClass = builder.resultModelClass();\n\n    if (!result) {\n      return result;\n    }\n\n    const models = asArray(result);\n\n    if (!models.length || !(models[0] instanceof modelClass)) {\n      return result;\n    }\n\n    const promise = promiseUtils.map(\n      this.relationsToFetch,\n      it => this.fetchRelation(builder, models, it.relation, it.childExpression),\n      { concurrency: modelClass.getConcurrency(builder.unsafeKnex()) }\n    );\n\n    return promise.then(() => {\n      const intOpt = builder.internalOptions();\n\n      if (!this.omitProps.length || intOpt.keepImplicitJoinProps) {\n        return result;\n      }\n\n      // Now that relations have been fetched for `models` we can omit the\n      // columns that were implicitly selected by this class.\n      for (let i = 0, l = result.length; i < l; ++i) {\n        const model = result[i];\n\n        for (let c = 0, lc = this.omitProps.length; c < lc; ++c) {\n          modelClass.omitImpl(model, this.omitProps[c]);\n        }\n      }\n\n      return result;\n    });\n  }\n\n  fetchRelation(builder, models, relation, expr) {\n    const modelClass = builder.resultModelClass();\n    const batchSize = this.batchSize(builder.knex());\n    const modelBatches = chunk(models, batchSize);\n\n    return promiseUtils\n      .map(modelBatches, batch => this.fetchRelationBatch(builder, batch, relation, expr), {\n        concurrency: modelClass.getConcurrency(builder.unsafeKnex())\n      })\n      .then(flatten);\n  }\n\n  fetchRelationBatch(builder, models, relation, expr) {\n    const queryBuilder = this.createRelationQuery(builder, relation, expr);\n    const findOperation = relation.find(queryBuilder, models);\n\n    findOperation.alwaysReturnArray = true;\n    findOperation.assignResultToOwner = true;\n    findOperation.relationProperty = expr.node.$name;\n\n    queryBuilder.addOperation(findOperation, []);\n\n    for (const modifierName of expr.node.$modify) {\n      const modifier = createModifier({\n        modifier: modifierName,\n        modelClass: relation.relatedModelClass,\n        modifiers: this.finalModifiers\n      });\n\n      try {\n        modifier(queryBuilder);\n      } catch (err) {\n        const modelClass = builder.modelClass();\n\n        if (err instanceof modelClass.ModifierNotFoundError) {\n          throw modelClass.createValidationError({\n            type: ValidationErrorType.RelationExpression,\n            message: `could not find modifier \"${modifierName}\" for relation \"${relation.name}\"`\n          });\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    return queryBuilder;\n  }\n\n  createRelationQuery(builder, relation, childExpression) {\n    return relation.relatedModelClass\n      .query()\n      .childQueryOf(builder)\n      .eagerOptions(this.eagerOptions)\n      .eager(childExpression, this.finalModifiers);\n  }\n\n  clone() {\n    const clone = super.clone();\n\n    clone.relationsToFetch = this.relationsToFetch.slice();\n    clone.omitProps = this.omitProps.slice();\n\n    return clone;\n  }\n}\n\nfunction findRelationsToFetch(builder, eagerExpression) {\n  const relationsToFetch = [];\n  const modelClass = builder.modelClass();\n\n  try {\n    eagerExpression.forEachChildExpression(modelClass, (childExpression, relation) => {\n      relationsToFetch.push({\n        childExpression,\n        relation\n      });\n    });\n  } catch (err) {\n    if (err instanceof RelationDoesNotExistError) {\n      throw modelClass.createValidationError({\n        type: ValidationErrorType.RelationExpression,\n        message: `unknown relation \"${err.relationName}\" in an eager expression`\n      });\n    }\n    throw err;\n  }\n\n  return relationsToFetch;\n}\n\nfunction findRelationPropsToSelect(builder, relationsToFetch) {\n  const selectionsToAdd = [];\n  const selectedProps = [];\n\n  // Collect columns that need to be selected for the eager fetch\n  // to work that are not currently selected.\n  for (const { relation } of relationsToFetch) {\n    const ownerProp = relation.ownerProp;\n\n    for (let c = 0, lc = ownerProp.size; c < lc; ++c) {\n      const fullCol = ownerProp.ref(builder, c).fullColumn(builder);\n      const prop = ownerProp.props[c];\n      const col = ownerProp.cols[c];\n\n      if (!builder.hasSelectionAs(fullCol, col) && selectionsToAdd.indexOf(fullCol) === -1) {\n        selectedProps.push(prop);\n        selectionsToAdd.push(fullCol);\n      }\n    }\n  }\n\n  return {\n    selectionsToAdd,\n    selectedProps\n  };\n}\n\nmodule.exports = {\n  WhereInEagerOperation\n};\n","'use strict';\n\nconst jsonApi = require('./postgresJsonApi');\nconst { ObjectionToKnexConvertingOperation } = require('../ObjectionToKnexConvertingOperation');\n\nclass WhereJsonHasPostgresOperation extends ObjectionToKnexConvertingOperation {\n  onBuildKnex(knexBuilder, builder) {\n    const args = this.getKnexArgs(builder);\n\n    const sql = jsonApi.whereJsonFieldRightStringArrayOnLeftQuery(\n      builder.knex(),\n      args[0],\n      this.opt.operator,\n      args[1]\n    );\n\n    if (this.opt.bool === 'or') {\n      knexBuilder.orWhereRaw(sql);\n    } else {\n      knexBuilder.whereRaw(sql);\n    }\n  }\n}\n\nmodule.exports = {\n  WhereJsonHasPostgresOperation\n};\n","'use strict';\n\nconst jsonApi = require('./postgresJsonApi');\nconst { ObjectionToKnexConvertingOperation } = require('../ObjectionToKnexConvertingOperation');\n\nclass WhereJsonNotObjectPostgresOperation extends ObjectionToKnexConvertingOperation {\n  onBuildKnex(knexBuilder, builder) {\n    this.whereJsonNotObject(knexBuilder, builder.knex(), this.getKnexArgs(builder)[0]);\n  }\n\n  whereJsonNotObject(knexBuilder, knex, fieldExpression) {\n    const innerQuery = innerQuery => {\n      const builder = jsonApi.whereJsonbRefOnLeftJsonbValOrRefOnRight(\n        innerQuery,\n        fieldExpression,\n        '@>',\n        this.opt.compareValue,\n        'not'\n      );\n\n      builder.orWhereRaw(jsonApi.whereJsonFieldQuery(knex, fieldExpression, 'IS', null));\n    };\n\n    if (this.opt.bool === 'or') {\n      knexBuilder.orWhere(innerQuery);\n    } else {\n      knexBuilder.where(innerQuery);\n    }\n  }\n}\n\nmodule.exports = {\n  WhereJsonNotObjectPostgresOperation\n};\n","'use strict';\n\nconst jsonApi = require('./postgresJsonApi');\nconst { ObjectionToKnexConvertingOperation } = require('../ObjectionToKnexConvertingOperation');\n\nclass WhereJsonPostgresOperation extends ObjectionToKnexConvertingOperation {\n  onBuildKnex(knexBuilder, builder) {\n    const args = this.getKnexArgs(builder);\n\n    const rawArgs = jsonApi.whereJsonbRefOnLeftJsonbValOrRefOnRightRawQueryParams(\n      args[0],\n      this.opt.operator,\n      args[1],\n      this.opt.prefix\n    );\n\n    if (this.opt.bool === 'or') {\n      knexBuilder.orWhereRaw.apply(knexBuilder, rawArgs);\n    } else {\n      knexBuilder.whereRaw.apply(knexBuilder, rawArgs);\n    }\n  }\n}\n\nmodule.exports = {\n  WhereJsonPostgresOperation\n};\n","'use strict';\n\nconst parser = require('../../../utils/parseFieldExpression');\nconst { asArray, isObject, isString } = require('../../../utils/objectUtils');\n\n/**\n * @typedef {String} FieldExpression\n *\n * Field expressions allow one to refer to separate JSONB fields inside columns.\n *\n * Syntax: <column reference>[:<json field reference>]\n *\n * e.g. `Person.jsonColumnName:details.names[1]` would refer to value `'Second'`\n * in column `Person.jsonColumnName` which has\n * `{ details: { names: ['First', 'Second', 'Last'] } }` object stored in it.\n *\n * First part `<column reference>` is compatible with column references used in\n * knex e.g. `MyFancyTable.tributeToThBestColumnNameEver`.\n *\n * Second part describes a path to an attribute inside the referred column.\n * It is optional and it always starts with colon which follows directly with\n * first path element. e.g. `Table.jsonObjectColumnName:jsonFieldName` or\n * `Table.jsonArrayColumn:[321]`.\n *\n * Syntax supports `[<key or index>]` and `.<key or index>` flavors of reference\n * to json keys / array indexes:\n *\n * e.g. both `Table.myColumn:[1][3]` and `Table.myColumn:1.3` would access correctly\n * both of the following objects `[null, [null,null,null, \"I was accessed\"]]` and\n * `{ \"1\": { \"3\" : \"I was accessed\" } }`\n *\n * Caveats when using special characters in keys:\n *\n * 1. `objectColumn.key` This is the most common syntax, good if you are\n *    not using dots or square brackets `[]` in your json object key name.\n * 2. Keys containing dots `objectColumn:[keywith.dots]` Column `{ \"keywith.dots\" : \"I was referred\" }`\n * 3. Keys containing square brackets `column['[]']` `{ \"[]\" : \"This is getting ridiculous...\" }`\n * 4. Keys containing square brackets and quotes\n *    `objectColumn:['Double.\"Quote\".[]']` and `objectColumn:[\"Sinlge.'Quote'.[]\"]`\n *    Column `{ \"Double.\\\"Quote\\\".[]\" : \"I was referred\",  \"Single.'Quote'.[]\" : \"Mee too!\" }`\n * 99. Keys containing dots, square brackets, single quotes and double quotes in one json key is\n *     not currently supported\n */\n\nfunction parseFieldExpression(expression, extractAsText) {\n  let parsed = parser.parseFieldExpression(expression);\n  let jsonRefs = parsed.access.map(it => it.ref).join(',');\n  let extractor = extractAsText ? '#>>' : '#>';\n  let middleQuotedColumnName = parsed.columnName.split('.').join('\".\"');\n  return `\"${middleQuotedColumnName}\"${extractor}'{${jsonRefs}}'`;\n}\n\nfunction whereJsonbRefOnLeftJsonbValOrRefOnRight(\n  builder,\n  fieldExpression,\n  operator,\n  jsonObjectOrFieldExpression,\n  queryPrefix\n) {\n  let queryParams = whereJsonbRefOnLeftJsonbValOrRefOnRightRawQueryParams(\n    fieldExpression,\n    operator,\n    jsonObjectOrFieldExpression,\n    queryPrefix\n  );\n  return builder.whereRaw.apply(builder, queryParams);\n}\n\nfunction whereJsonbRefOnLeftJsonbValOrRefOnRightRawQueryParams(\n  fieldExpression,\n  operator,\n  jsonObjectOrFieldExpression,\n  queryPrefix\n) {\n  let fieldReference = parseFieldExpression(fieldExpression);\n\n  if (isString(jsonObjectOrFieldExpression)) {\n    let rightHandReference = parseFieldExpression(jsonObjectOrFieldExpression);\n    let refRefQuery = [\n      '(',\n      fieldReference,\n      ')::jsonb',\n      operator,\n      '(',\n      rightHandReference,\n      ')::jsonb'\n    ];\n    if (queryPrefix) {\n      refRefQuery.unshift(queryPrefix);\n    }\n    return [refRefQuery.join(' ')];\n  } else if (isObject(jsonObjectOrFieldExpression)) {\n    let refValQuery = ['(', fieldReference, ')::jsonb', operator, '?::jsonb'];\n    if (queryPrefix) {\n      refValQuery.unshift(queryPrefix);\n    }\n    return [refValQuery.join(' '), JSON.stringify(jsonObjectOrFieldExpression)];\n  }\n\n  throw new Error('Invalid right hand expression.');\n}\n\nfunction whereJsonFieldRightStringArrayOnLeftQuery(knex, fieldExpression, operator, keys) {\n  let fieldReference = parseFieldExpression(fieldExpression);\n  keys = asArray(keys);\n\n  let questionMarksArray = keys.map(key => {\n    if (!isString(key)) {\n      throw new Error('All keys to find must be strings.');\n    }\n    return '?';\n  });\n\n  let rawSqlTemplateString = 'array[' + questionMarksArray.join(',') + ']';\n  let rightHandExpression = knex.raw(rawSqlTemplateString, keys);\n\n  return `${fieldReference} ${operator.replace('?', '\\\\?')} ${rightHandExpression}`;\n}\n\nfunction whereJsonFieldQuery(knex, fieldExpression, operator, value) {\n  let fieldReference = parseFieldExpression(fieldExpression, true);\n  let normalizedOperator = normalizeOperator(knex, operator);\n\n  // json type comparison takes json type in string format\n  let cast;\n  let escapedValue = knex.raw(' ?', [value]);\n  let type = typeof value;\n\n  if (type === 'number') {\n    cast = '::NUMERIC';\n  } else if (type === 'boolean') {\n    cast = '::BOOLEAN';\n  } else if (type === 'string') {\n    cast = '::TEXT';\n  } else if (value === null) {\n    cast = '::TEXT';\n    escapedValue = 'NULL';\n  } else {\n    throw new Error('Value must be string, number, boolean or null.');\n  }\n\n  return `(${fieldReference})${cast} ${normalizedOperator} ${escapedValue}`;\n}\n\nfunction normalizeOperator(knex, operator) {\n  let trimmedLowerCase = operator.trim().toLowerCase();\n\n  switch (trimmedLowerCase) {\n    case 'is':\n    case 'is not':\n      return trimmedLowerCase;\n    default:\n      return knex.client.formatter().operator(operator);\n  }\n}\n\nmodule.exports = {\n  parseFieldExpression: parseFieldExpression,\n  whereJsonbRefOnLeftJsonbValOrRefOnRight: whereJsonbRefOnLeftJsonbValOrRefOnRight,\n  whereJsonbRefOnLeftJsonbValOrRefOnRightRawQueryParams: whereJsonbRefOnLeftJsonbValOrRefOnRightRawQueryParams,\n  whereJsonFieldRightStringArrayOnLeftQuery: whereJsonFieldRightStringArrayOnLeftQuery,\n  whereJsonFieldQuery: whereJsonFieldQuery\n};\n","'use strict';\n\nconst { flatten } = require('../../../utils/objectUtils');\nconst { Selection } = require('./Selection');\nconst { ObjectionToKnexConvertingOperation } = require('../ObjectionToKnexConvertingOperation');\n\nconst COUNT_REGEX = /count/i;\n\nclass SelectOperation extends ObjectionToKnexConvertingOperation {\n  constructor(name, opt) {\n    super(name, opt);\n    this.selections = [];\n  }\n\n  onAdd(builder, args) {\n    const selections = flatten(args);\n\n    // Don't add an empty selection. Empty list is accepted for `count`, `countDistinct`\n    // etc. because knex apparently supports it.\n    if (selections.length === 0 && !COUNT_REGEX.test(this.name)) {\n      return false;\n    }\n\n    const ret = super.onAdd(builder, selections);\n\n    for (const selection of selections) {\n      const selectionInstance = Selection.create(selection);\n\n      if (selectionInstance) {\n        this.selections.push(selectionInstance);\n      }\n    }\n\n    return ret;\n  }\n\n  onBuildKnex(knexBuilder, builder) {\n    knexBuilder[this.name].apply(knexBuilder, this.getKnexArgs(builder));\n  }\n\n  findSelection(builder, selectionToFind) {\n    const selectionInstanceToFind = Selection.create(selectionToFind);\n\n    if (!selectionInstanceToFind) {\n      return null;\n    }\n\n    for (const selection of this.selections) {\n      if (Selection.doesSelect(builder, selection, selectionInstanceToFind)) {\n        return selection;\n      }\n    }\n\n    return null;\n  }\n\n  clone() {\n    const clone = super.clone();\n    clone.selections = this.selections.slice();\n    return clone;\n  }\n}\n\nmodule.exports = {\n  SelectOperation\n};\n","'use strict';\n\nconst { isString, isObject } = require('../../../utils/objectUtils');\n\nconst ALIAS_REGEX = /\\s+as\\s+/i;\n\nclass Selection {\n  constructor(table, column, alias) {\n    this.table = table;\n    this.column = column;\n    this.alias = alias;\n  }\n\n  get name() {\n    return this.alias || this.column;\n  }\n\n  static create(selection) {\n    if (isObject(selection)) {\n      if (selection.isObjectionSelection) {\n        return selection;\n      } else if (selection.isObjectionReferenceBuilder) {\n        return createSelectionFromReference(selection);\n      } else if (selection.isObjectionRawBuilder) {\n        return createSelectionFromRaw(selection);\n      } else {\n        return null;\n      }\n    } else if (isString(selection)) {\n      return createSelectionFromString(selection);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Returns true if `selectionInBuilder` causes `selectionToTest` to be selected.\n   *\n   * Examples that return true:\n   *\n   * doesSelect(Person.query(), '*', 'name')\n   * doesSelect(Person.query(), 'Person.*', 'name')\n   * doesSelect(Person.query(), 'name', 'name')\n   * doesSelect(Person.query(), 'name', 'Person.name')\n   */\n  static doesSelect(builder, selectionInBuilder, selectionToTest) {\n    selectionInBuilder = Selection.create(selectionInBuilder);\n    selectionToTest = Selection.create(selectionToTest);\n\n    if (selectionInBuilder.column === '*') {\n      if (selectionInBuilder.table) {\n        if (selectionToTest.column === '*') {\n          return selectionToTest.table === selectionInBuilder.table;\n        } else {\n          return (\n            selectionToTest.table === null || selectionToTest.table === selectionInBuilder.table\n          );\n        }\n      } else {\n        return true;\n      }\n    } else {\n      const selectionInBuilderTable = selectionInBuilder.table || builder.tableRef();\n\n      if (selectionToTest.column === '*') {\n        return false;\n      } else {\n        return (\n          selectionToTest.column === selectionInBuilder.column &&\n          (selectionToTest.table === null || selectionToTest.table === selectionInBuilderTable)\n        );\n      }\n    }\n  }\n}\n\nObject.defineProperties(Selection.prototype, {\n  isObjectionSelection: {\n    enumerable: false,\n    writable: false,\n    value: true\n  }\n});\n\nfunction createSelectionFromReference(ref) {\n  return new Selection(ref.tableName, ref.column, ref.alias);\n}\n\nfunction createSelectionFromRaw(raw) {\n  if (raw.alias) {\n    return new Selection(null, null, raw.alias);\n  } else {\n    return null;\n  }\n}\n\nfunction createSelectionFromString(selection) {\n  let table = null;\n  let column = null;\n  let alias = null;\n\n  if (ALIAS_REGEX.test(selection)) {\n    const parts = selection.split(ALIAS_REGEX);\n\n    selection = parts[0].trim();\n    alias = parts[1].trim();\n  }\n\n  const dotIdx = selection.lastIndexOf('.');\n\n  if (dotIdx !== -1) {\n    table = selection.substr(0, dotIdx);\n    column = selection.substr(dotIdx + 1);\n  } else {\n    column = selection;\n  }\n\n  return new Selection(table, column, alias);\n}\n\nmodule.exports = {\n  Selection\n};\n","'use strict';\n\nconst { ObjectionToKnexConvertingOperation } = require('../ObjectionToKnexConvertingOperation');\nconst { flatten, zipObject, isString } = require('../../../utils/objectUtils');\nconst { getTempColumn } = require('../../../utils/tmpColumnUtils');\n\nclass WhereInCompositeMsSqlOperation extends ObjectionToKnexConvertingOperation {\n  constructor(name, opt) {\n    super(name, opt);\n    this.prefix = this.opt.prefix || null;\n  }\n\n  onBuildKnex(knexBuilder, builder) {\n    const args = this.getKnexArgs(builder);\n    this.build(builder.knex(), knexBuilder, args[0], args[1]);\n  }\n\n  build(knex, knexBuilder, columns, values) {\n    let isCompositeKey = Array.isArray(columns) && columns.length > 1;\n\n    if (isCompositeKey) {\n      this.buildComposite(knex, knexBuilder, columns, values);\n    } else {\n      this.buildNonComposite(knexBuilder, columns, values);\n    }\n  }\n\n  buildComposite(knex, knexBuilder, columns, values) {\n    const helperColumns = columns.map((_, index) => getTempColumn(index));\n\n    if (Array.isArray(values)) {\n      this.buildCompositeValue(knex, knexBuilder, columns, helperColumns, values);\n    } else {\n      this.buildCompositeSubquery(\n        knex,\n        knexBuilder,\n        columns,\n        helperColumns,\n        values.as(knex.raw(`V(${helperColumns.map(_ => '??')})`, helperColumns))\n      );\n    }\n  }\n\n  buildCompositeValue(knex, knexBuilder, columns, helperColumns, values) {\n    return this.buildCompositeSubquery(\n      knex,\n      knexBuilder,\n      columns,\n      helperColumns,\n      knex.raw(\n        `(VALUES ${values\n          .map(value => `(${value.map(_ => '?').join(',')})`)\n          .join(',')}) AS V(${helperColumns.map(_ => '??').join(',')})`,\n        flatten(values).concat(helperColumns)\n      )\n    );\n  }\n\n  buildCompositeSubquery(knex, knexBuilder, columns, helperColumns, subQuery) {\n    const wrapperQuery = knex\n      .from(subQuery)\n      .where(zipObject(helperColumns, columns.map(column => knex.raw('??', column))));\n\n    if (this.prefix === 'not') {\n      return knexBuilder.whereNotExists(wrapperQuery);\n    } else {\n      return knexBuilder.whereExists(wrapperQuery);\n    }\n  }\n\n  buildNonComposite(knexBuilder, columns, values) {\n    const col = isString(columns) ? columns : columns[0];\n\n    if (Array.isArray(values)) {\n      values = pickNonNull(values, []);\n    } else {\n      values = [values];\n    }\n\n    this.whereIn(knexBuilder, col, values);\n  }\n\n  whereIn(knexBuilder, col, val) {\n    if (this.prefix === 'not') {\n      knexBuilder.whereNotIn(col, val);\n    } else {\n      knexBuilder.whereIn(col, val);\n    }\n  }\n\n  clone() {\n    const clone = super.clone();\n    clone.prefix = this.prefix;\n    return clone;\n  }\n}\n\nfunction pickNonNull(values, output) {\n  for (let i = 0, l = values.length; i < l; ++i) {\n    const val = values[i];\n\n    if (Array.isArray(val)) {\n      pickNonNull(val, output);\n    } else if (val !== null && val !== undefined) {\n      output.push(val);\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = {\n  WhereInCompositeMsSqlOperation\n};\n","'use strict';\n\nconst { ObjectionToKnexConvertingOperation } = require('../ObjectionToKnexConvertingOperation');\nconst { isObject, asSingle } = require('../../../utils/objectUtils');\nconst { isKnexQueryBuilder } = require('../../../utils/knexUtils');\n\nclass WhereInCompositeOperation extends ObjectionToKnexConvertingOperation {\n  constructor(name, opt) {\n    super(name, opt);\n    this.prefix = this.opt.prefix || null;\n  }\n\n  onBuildKnex(knexBuilder, builder) {\n    const whereInArgs = buildWhereInArgs(builder.knex(), ...this.getKnexArgs(builder));\n\n    if (this.prefix === 'not') {\n      return knexBuilder.whereNotIn(...whereInArgs);\n    } else {\n      return knexBuilder.whereIn(...whereInArgs);\n    }\n  }\n\n  clone() {\n    const clone = super.clone();\n    clone.prefix = this.prefix;\n    return clone;\n  }\n}\n\nfunction buildWhereInArgs(knex, columns, values) {\n  if (isCompositeKey(columns)) {\n    return buildCompositeArgs(knex, columns, values);\n  } else {\n    return buildNonCompositeArgs(columns, values);\n  }\n}\n\nfunction isCompositeKey(columns) {\n  return Array.isArray(columns) && columns.length > 1;\n}\n\nfunction buildCompositeArgs(knex, columns, values) {\n  if (Array.isArray(values)) {\n    return buildCompositeValueArgs(columns, values);\n  } else {\n    return buildCompositeSubqueryArgs(knex, columns, values);\n  }\n}\n\nfunction buildCompositeValueArgs(columns, values) {\n  return [columns, values];\n}\n\nfunction buildCompositeSubqueryArgs(knex, columns, subquery) {\n  const sql = `(${columns\n    .map(col => {\n      // On older versions of knex, raw doesn't work\n      // with `??`. We use `?` for those.\n      if (isObject(col)) {\n        return '?';\n      } else {\n        return '??';\n      }\n    })\n    .join(',')})`;\n\n  return [knex.raw(sql, columns), subquery];\n}\n\nfunction buildNonCompositeArgs(columns, values) {\n  if (Array.isArray(values)) {\n    values = pickNonNull(values, []);\n  } else if (!isKnexQueryBuilder(values)) {\n    values = [values];\n  }\n\n  return [asSingle(columns), values];\n}\n\nfunction pickNonNull(values, output) {\n  for (let i = 0, l = values.length; i < l; ++i) {\n    const val = values[i];\n\n    if (Array.isArray(val)) {\n      pickNonNull(val, output);\n    } else if (val !== null && val !== undefined) {\n      output.push(val);\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = {\n  WhereInCompositeOperation\n};\n","'use strict';\n\nconst { ObjectionToKnexConvertingOperation } = require('../ObjectionToKnexConvertingOperation');\nconst { isKnexQueryBuilder } = require('../../../utils/knexUtils');\nconst { asSingle } = require('../../../utils/objectUtils');\n\nclass WhereInCompositeSqliteOperation extends ObjectionToKnexConvertingOperation {\n  constructor(name, opt) {\n    super(name, opt);\n    this.prefix = this.opt.prefix || null;\n  }\n\n  onBuildKnex(knexBuilder, builder) {\n    const { method, args } = buildWhereArgs(...this.getKnexArgs(builder));\n\n    if (method === 'where') {\n      if (this.prefix === 'not') {\n        return knexBuilder.whereNot(...args);\n      } else {\n        return knexBuilder.where(...args);\n      }\n    } else {\n      if (this.prefix === 'not') {\n        return knexBuilder.whereNotIn(...args);\n      } else {\n        return knexBuilder.whereIn(...args);\n      }\n    }\n  }\n\n  clone() {\n    const clone = super.clone();\n    clone.prefix = this.prefix;\n    return clone;\n  }\n}\n\nfunction buildWhereArgs(columns, values) {\n  if (isCompositeKey(columns)) {\n    return buildCompositeArgs(columns, values);\n  } else {\n    return buildNonCompositeArgs(columns, values);\n  }\n}\n\nfunction isCompositeKey(columns) {\n  return Array.isArray(columns) && columns.length > 1;\n}\n\nfunction buildCompositeArgs(columns, values) {\n  if (!Array.isArray(values)) {\n    // If the `values` is not an array of values but a function or a subquery\n    // we have no way to implement this method.\n    throw new Error(`sqlite doesn't support multi-column where in clauses`);\n  }\n\n  // Sqlite doesn't support the `where in` syntax for multiple columns but\n  // we can emulate it using grouped `or` clauses.\n  return {\n    method: 'where',\n    args: [\n      builder => {\n        values.forEach(val => {\n          builder.orWhere(builder => {\n            columns.forEach((col, idx) => {\n              builder.andWhere(col, val[idx]);\n            });\n          });\n        });\n      }\n    ]\n  };\n}\n\nfunction buildNonCompositeArgs(columns, values) {\n  if (Array.isArray(values)) {\n    values = pickNonNull(values, []);\n  } else if (!isKnexQueryBuilder(values)) {\n    values = [values];\n  }\n\n  return {\n    method: 'whereIn',\n    args: [asSingle(columns), values]\n  };\n}\n\nfunction pickNonNull(values, output) {\n  for (let i = 0, l = values.length; i < l; ++i) {\n    const val = values[i];\n\n    if (Array.isArray(val)) {\n      pickNonNull(val, output);\n    } else if (val !== null && val !== undefined) {\n      output.push(val);\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = {\n  WhereInCompositeSqliteOperation\n};\n","'use strict';\n\n/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\nfunction peg$subclass(child, parent) {\n  function ctor() {\n    this.constructor = child;\n  }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message = message;\n  this.expected = expected;\n  this.found = found;\n  this.location = location;\n  this.name = 'SyntaxError';\n\n  if (typeof Error.captureStackTrace === 'function') {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n    literal: function(expectation) {\n      return '\"' + literalEscape(expectation.text) + '\"';\n    },\n\n    class: function(expectation) {\n      var escapedParts = '',\n        i;\n\n      for (i = 0; i < expectation.parts.length; i++) {\n        escapedParts +=\n          expectation.parts[i] instanceof Array\n            ? classEscape(expectation.parts[i][0]) + '-' + classEscape(expectation.parts[i][1])\n            : classEscape(expectation.parts[i]);\n      }\n\n      return '[' + (expectation.inverted ? '^' : '') + escapedParts + ']';\n    },\n\n    any: function(expectation) {\n      return 'any character';\n    },\n\n    end: function(expectation) {\n      return 'end of input';\n    },\n\n    other: function(expectation) {\n      return expectation.description;\n    }\n  };\n\n  function hex(ch) {\n    return ch\n      .charCodeAt(0)\n      .toString(16)\n      .toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g, '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g, function(ch) {\n        return '\\\\x0' + hex(ch);\n      })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) {\n        return '\\\\x' + hex(ch);\n      });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g, '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g, function(ch) {\n        return '\\\\x0' + hex(ch);\n      })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) {\n        return '\\\\x' + hex(ch);\n      });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n      i,\n      j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + ' or ' + descriptions[1];\n\n      default:\n        return (\n          descriptions.slice(0, -1).join(', ') + ', or ' + descriptions[descriptions.length - 1]\n        );\n    }\n  }\n\n  function describeFound(found) {\n    return found ? '\"' + literalEscape(found) + '\"' : 'end of input';\n  }\n\n  return 'Expected ' + describeExpected(expected) + ' but ' + describeFound(found) + ' found.';\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n    peg$startRuleFunctions = { start: peg$parsestart },\n    peg$startRuleFunction = peg$parsestart,\n    peg$c0 = ':',\n    peg$c1 = peg$literalExpectation(':', false),\n    peg$c2 = function(column, refs) {\n      var access = [];\n      if (refs) {\n        var firstAccess = refs[1];\n        access = refs[2];\n        access.unshift(firstAccess);\n      }\n      return { columnName: column, access: access };\n    },\n    peg$c3 = '[',\n    peg$c4 = peg$literalExpectation('[', false),\n    peg$c5 = '\"',\n    peg$c6 = peg$literalExpectation('\"', false),\n    peg$c7 = \"'\",\n    peg$c8 = peg$literalExpectation(\"'\", false),\n    peg$c9 = ']',\n    peg$c10 = peg$literalExpectation(']', false),\n    peg$c11 = function(key) {\n      return { type: 'object', ref: Array.isArray(key) ? key[1] : key };\n    },\n    peg$c12 = function(index) {\n      return { type: 'array', ref: parseInt(index, 10) };\n    },\n    peg$c13 = function(key) {\n      return { type: 'object', ref: key };\n    },\n    peg$c14 = '.',\n    peg$c15 = peg$literalExpectation('.', false),\n    peg$c16 = /^[^\\][]/,\n    peg$c17 = peg$classExpectation([']', '['], true, false),\n    peg$c18 = function(chars) {\n      return chars.join('');\n    },\n    peg$c19 = /^[^:]/,\n    peg$c20 = peg$classExpectation([':'], true, false),\n    peg$c21 = /^[^\"]/,\n    peg$c22 = peg$classExpectation(['\"'], true, false),\n    peg$c23 = /^[^']/,\n    peg$c24 = peg$classExpectation([\"'\"], true, false),\n    peg$c25 = /^[^.\\][]/,\n    peg$c26 = peg$classExpectation(['.', ']', '['], true, false),\n    peg$c27 = /^[0-9]/,\n    peg$c28 = peg$classExpectation([['0', '9']], false, false),\n    peg$c29 = function(digits) {\n      return digits.join('');\n    },\n    peg$currPos = 0,\n    peg$savedPos = 0,\n    peg$posDetailsCache = [{ line: 1, column: 1 }],\n    peg$maxFailPos = 0,\n    peg$maxFailExpected = [],\n    peg$silentFails = 0,\n    peg$result;\n\n  if ('startRule' in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error('Can\\'t start parsing from rule \"' + options.startRule + '\".');\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: 'literal', text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: 'class', parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: 'any' };\n  }\n\n  function peg$endExpectation() {\n    return { type: 'end' };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: 'other', description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos],\n      p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line: details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n      endPosDetails = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line: startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line: endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) {\n      return;\n    }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parsestart() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    s1 = peg$parsestringWithoutColon();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 58) {\n        s3 = peg$c0;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c1);\n        }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parsebracketIndexRef();\n        if (s4 === peg$FAILED) {\n          s4 = peg$parsebracketStringRef();\n          if (s4 === peg$FAILED) {\n            s4 = peg$parsecolonReference();\n          }\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = [];\n          s6 = peg$parsebracketIndexRef();\n          if (s6 === peg$FAILED) {\n            s6 = peg$parsebracketStringRef();\n            if (s6 === peg$FAILED) {\n              s6 = peg$parsedotReference();\n            }\n          }\n          while (s6 !== peg$FAILED) {\n            s5.push(s6);\n            s6 = peg$parsebracketIndexRef();\n            if (s6 === peg$FAILED) {\n              s6 = peg$parsebracketStringRef();\n              if (s6 === peg$FAILED) {\n                s6 = peg$parsedotReference();\n              }\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s3 = [s3, s4, s5];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c2(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsebracketStringRef() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c3;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c4);\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 34) {\n        s3 = peg$c5;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c6);\n        }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parsestringWithoutDoubleQuotes();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 34) {\n            s5 = peg$c5;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c6);\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s3 = [s3, s4, s5];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 === peg$FAILED) {\n        s2 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 39) {\n          s3 = peg$c7;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c8);\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsestringWithoutSingleQuotes();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 39) {\n              s5 = peg$c7;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c8);\n              }\n            }\n            if (s5 !== peg$FAILED) {\n              s3 = [s3, s4, s5];\n              s2 = s3;\n            } else {\n              peg$currPos = s2;\n              s2 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n        if (s2 === peg$FAILED) {\n          s2 = peg$parsestringWithoutSquareBrackets();\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 93) {\n          s3 = peg$c9;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c10);\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c11(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsebracketIndexRef() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c3;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c4);\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseinteger();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 93) {\n          s3 = peg$c9;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c10);\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c12(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsecolonReference() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parsestringWithoutSquareBracketsOrDots();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c13(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsedotReference() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s1 = peg$c14;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c15);\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsestringWithoutSquareBracketsOrDots();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c13(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsestringWithoutSquareBrackets() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c16.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c17);\n      }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c16.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c17);\n          }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c18(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsestringWithoutColon() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c19.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c20);\n      }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c19.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c20);\n          }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c18(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsestringWithoutDoubleQuotes() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c21.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c22);\n      }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c21.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c22);\n          }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c18(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsestringWithoutSingleQuotes() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c23.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c24);\n      }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c23.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c24);\n          }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c18(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsestringWithoutSquareBracketsOrDots() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c25.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c26);\n      }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c25.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c26);\n          }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c18(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseinteger() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c27.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c28);\n      }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c27.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c28);\n          }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c29(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse: peg$parse\n};\n","/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n'use strict';\n\nfunction peg$subclass(child, parent) {\n  function ctor() {\n    this.constructor = child;\n  }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message = message;\n  this.expected = expected;\n  this.found = found;\n  this.location = location;\n  this.name = 'SyntaxError';\n\n  if (typeof Error.captureStackTrace === 'function') {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n    literal: function(expectation) {\n      return '\"' + literalEscape(expectation.text) + '\"';\n    },\n\n    class: function(expectation) {\n      var escapedParts = '',\n        i;\n\n      for (i = 0; i < expectation.parts.length; i++) {\n        escapedParts +=\n          expectation.parts[i] instanceof Array\n            ? classEscape(expectation.parts[i][0]) + '-' + classEscape(expectation.parts[i][1])\n            : classEscape(expectation.parts[i]);\n      }\n\n      return '[' + (expectation.inverted ? '^' : '') + escapedParts + ']';\n    },\n\n    any: function(expectation) {\n      return 'any character';\n    },\n\n    end: function(expectation) {\n      return 'end of input';\n    },\n\n    other: function(expectation) {\n      return expectation.description;\n    }\n  };\n\n  function hex(ch) {\n    return ch\n      .charCodeAt(0)\n      .toString(16)\n      .toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g, '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g, function(ch) {\n        return '\\\\x0' + hex(ch);\n      })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) {\n        return '\\\\x' + hex(ch);\n      });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g, '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g, function(ch) {\n        return '\\\\x0' + hex(ch);\n      })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) {\n        return '\\\\x' + hex(ch);\n      });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n      i,\n      j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + ' or ' + descriptions[1];\n\n      default:\n        return (\n          descriptions.slice(0, -1).join(', ') + ', or ' + descriptions[descriptions.length - 1]\n        );\n    }\n  }\n\n  function describeFound(found) {\n    return found ? '\"' + literalEscape(found) + '\"' : 'end of input';\n  }\n\n  return 'Expected ' + describeExpected(expected) + ' but ' + describeFound(found) + ' found.';\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n    peg$startRuleFunctions = { start: peg$parsestart },\n    peg$startRuleFunction = peg$parsestart,\n    peg$c0 = function(expr) {\n      const node = newNode();\n\n      if (expr.$name === '*') {\n        node.$allRecursive = true;\n      } else {\n        assertDuplicateRelation(node, expr);\n        node[expr.$name] = expr;\n        node.$childNames.push(expr.$name);\n      }\n\n      return node;\n    },\n    peg$c1 = function(list) {\n      const node = newNode();\n\n      list.forEach(expr => {\n        assertDuplicateRelation(node, expr);\n        node[expr.$name] = expr;\n        node.$childNames.push(expr.$name);\n      });\n\n      return node;\n    },\n    peg$c2 = function(name, args, alias, list) {\n      const node = newNode();\n\n      node.$name = alias || name;\n      node.$relation = name;\n      node.$modify = args || [];\n\n      list.forEach(expr => {\n        assertDuplicateRelation(node, expr);\n        node[expr.$name] = expr;\n        node.$childNames.push(expr.$name);\n      });\n\n      return node;\n    },\n    peg$c3 = function(name, args, alias, expr) {\n      const node = newNode();\n\n      node.$name = alias || name;\n      node.$relation = name;\n      node.$modify = args || [];\n\n      if (expr) {\n        const match = /^\\^(\\d*)$/.exec(expr.$name);\n\n        if (match) {\n          if (match[1]) {\n            node.$recursive = parseInt(match[1], 10);\n          } else {\n            node.$recursive = true;\n          }\n        } else if (expr.$name === '*') {\n          node.$allRecursive = true;\n        } else {\n          assertDuplicateRelation(node, expr);\n          node[expr.$name] = expr;\n          node.$childNames.push(expr.$name);\n        }\n      }\n\n      return node;\n    },\n    peg$c4 = 'as',\n    peg$c5 = peg$literalExpectation('as', false),\n    peg$c6 = function(alias) {\n      return alias;\n    },\n    peg$c7 = function(name) {\n      return name.join('');\n    },\n    peg$c8 = /^[^[\\](),. \\t\\r\\n]/,\n    peg$c9 = peg$classExpectation(\n      ['[', ']', '(', ')', ',', '.', ' ', '\\t', '\\r', '\\n'],\n      true,\n      false\n    ),\n    peg$c10 = '(',\n    peg$c11 = peg$literalExpectation('(', false),\n    peg$c12 = ')',\n    peg$c13 = peg$literalExpectation(')', false),\n    peg$c14 = function(args) {\n      return args;\n    },\n    peg$c15 = ',',\n    peg$c16 = peg$literalExpectation(',', false),\n    peg$c17 = function(arg) {\n      return arg;\n    },\n    peg$c18 = /^[ \\t\\r\\n]/,\n    peg$c19 = peg$classExpectation([' ', '\\t', '\\r', '\\n'], false, false),\n    peg$c20 = '.',\n    peg$c21 = peg$literalExpectation('.', false),\n    peg$c22 = function(list) {\n      return list;\n    },\n    peg$c23 = '[',\n    peg$c24 = peg$literalExpectation('[', false),\n    peg$c25 = ']',\n    peg$c26 = peg$literalExpectation(']', false),\n    peg$c27 = function(items) {\n      return items;\n    },\n    peg$c28 = function(expr) {\n      return expr;\n    },\n    peg$c29 = function(sub) {\n      return sub;\n    },\n    peg$currPos = 0,\n    peg$savedPos = 0,\n    peg$posDetailsCache = [{ line: 1, column: 1 }],\n    peg$maxFailPos = 0,\n    peg$maxFailExpected = [],\n    peg$silentFails = 0,\n    peg$result;\n\n  if ('startRule' in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error('Can\\'t start parsing from rule \"' + options.startRule + '\".');\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: 'literal', text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: 'class', parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: 'any' };\n  }\n\n  function peg$endExpectation() {\n    return { type: 'end' };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: 'other', description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos],\n      p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line: details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n      endPosDetails = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line: startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line: endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) {\n      return;\n    }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parsestart() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parseexpression();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c0(s1);\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parselistExpression();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c1(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseexpression() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parsename();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseargs();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsealias();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsesubListExpression();\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c2(s1, s2, s3, s4);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsename();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseargs();\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsealias();\n          if (s3 === peg$FAILED) {\n            s3 = null;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsesubExpression();\n            if (s4 === peg$FAILED) {\n              s4 = null;\n            }\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c3(s1, s2, s3, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsealias() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parsews();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parsews();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.substr(peg$currPos, 2) === peg$c4) {\n        s2 = peg$c4;\n        peg$currPos += 2;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c5);\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parsews();\n        if (s4 !== peg$FAILED) {\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parsews();\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsename();\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c6(s4);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsename() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parsechar();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parsechar();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c7(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsechar() {\n    var s0;\n\n    if (peg$c8.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c9);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseargs() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parsews();\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$parsews();\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s2 = peg$c10;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c11);\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parseargListItem();\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parseargListItem();\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$parsews();\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parsews();\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s5 = peg$c12;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c13);\n              }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c14(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseargListItem() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parsews();\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$parsews();\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsename();\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parsews();\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parsews();\n        }\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s4 = peg$c15;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c16);\n            }\n          }\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c17(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsews() {\n    var s0;\n\n    if (peg$c18.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c19);\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsesubListExpression() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parsews();\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$parsews();\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s2 = peg$c20;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c21);\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parselistExpression();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c22(s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parselistExpression() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parsews();\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$parsews();\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s2 = peg$c23;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c24);\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parselistExpressionItem();\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parselistExpressionItem();\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$parsews();\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parsews();\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 93) {\n              s5 = peg$c25;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c26);\n              }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = [];\n              s7 = peg$parsews();\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parsews();\n              }\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c27(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parselistExpressionItem() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parsews();\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$parsews();\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseexpression();\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parsews();\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parsews();\n        }\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s4 = peg$c15;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c16);\n            }\n          }\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c28(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsesubExpression() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parsews();\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$parsews();\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s2 = peg$c20;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c21);\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parsews();\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parsews();\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseexpression();\n          if (s4 !== peg$FAILED) {\n            s5 = [];\n            s6 = peg$parsews();\n            while (s6 !== peg$FAILED) {\n              s5.push(s6);\n              s6 = peg$parsews();\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c29(s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function assertDuplicateRelation(node, expr) {\n    if (expr.$name in node) {\n      console.warn(\n        `Duplicate relation \"${\n          expr.$name\n        }\" in a relation expression. You should use \"a.[b, c]\" instead of \"[a.b, a.c]\". This will cause an error in objection 2.0`\n      );\n\n      // TODO: enable for v2.0.\n      // const err = new Error();\n      // err.duplicateRelationName = expr.$name;\n      // throw err;\n    }\n  }\n\n  function newNode() {\n    return {\n      $name: null,\n      $relation: null,\n      $modify: [],\n      $recursive: false,\n      $allRecursive: false,\n      $childNames: []\n    };\n  }\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse: peg$parse\n};\n","'use strict';\n\nconst { RelationProperty } = require('./RelationProperty');\nconst getModel = () => require('../model/Model').Model;\n\nconst { RelationFindOperation } = require('./RelationFindOperation');\nconst { RelationUpdateOperation } = require('./RelationUpdateOperation');\nconst { RelationDeleteOperation } = require('./RelationDeleteOperation');\nconst { RelationSubqueryOperation } = require('./RelationSubqueryOperation');\n\nconst { ref } = require('../queryBuilder/ReferenceBuilder');\nconst { isSubclassOf } = require('../utils/classUtils');\nconst { resolveModel } = require('../utils/resolveModel');\nconst { get, isFunction } = require('../utils/objectUtils');\nconst { mapAfterAllReturn } = require('../utils/promiseUtils');\nconst { createModifier } = require('../utils/createModifier');\n\nclass Relation {\n  constructor(relationName, OwnerClass) {\n    this.name = relationName;\n    this.ownerModelClass = OwnerClass;\n    this.relatedModelClass = null;\n\n    this.ownerProp = null;\n    this.relatedProp = null;\n\n    this.joinTableModelClass = null;\n    this.joinTableOwnerProp = null;\n    this.joinTableRelatedProp = null;\n    this.joinTableBeforeInsert = null;\n    this.joinTableExtras = [];\n\n    this.modify = null;\n    this.beforeInsert = null;\n  }\n\n  setMapping(mapping) {\n    let ctx = {\n      name: this.name,\n      mapping,\n      ownerModelClass: this.ownerModelClass,\n      relatedModelClass: null,\n      relatedProp: null,\n      ownerProp: null,\n      modify: null,\n      beforeInsert: null,\n      forbiddenMappingProperties: this.forbiddenMappingProperties,\n      createError: msg => this.createError(msg)\n    };\n\n    ctx = checkForbiddenProperties(ctx);\n    ctx = checkOwnerModelClass(ctx);\n    ctx = checkRelatedModelClass(ctx);\n    ctx = resolveRelatedModelClass(ctx);\n    ctx = checkRelation(ctx);\n    ctx = createJoinProperties(ctx);\n    ctx = parseModify(ctx);\n    ctx = parseBeforeInsert(ctx);\n\n    this.relatedModelClass = ctx.relatedModelClass;\n    this.ownerProp = ctx.ownerProp;\n    this.relatedProp = ctx.relatedProp;\n    this.modify = ctx.modify;\n    this.beforeInsert = ctx.beforeInsert;\n  }\n\n  get forbiddenMappingProperties() {\n    return ['join.through'];\n  }\n\n  get joinTable() {\n    return this.joinTableModelClass ? this.joinTableModelClass.getTableName() : null;\n  }\n\n  get joinModelClass() {\n    return this.getJoinModelClass(this.ownerModelClass.knex());\n  }\n\n  getJoinModelClass(knex) {\n    return this.joinTableModelClass && knex !== this.joinTableModelClass.knex()\n      ? this.joinTableModelClass.bindKnex(knex)\n      : this.joinTableModelClass;\n  }\n\n  isOneToOne() {\n    return false;\n  }\n\n  clone() {\n    const relation = new this.constructor(this.name, this.ownerModelClass);\n\n    relation.relatedModelClass = this.relatedModelClass;\n    relation.ownerProp = this.ownerProp;\n    relation.relatedProp = this.relatedProp;\n    relation.modify = this.modify;\n    relation.beforeInsert = this.beforeInsert;\n\n    relation.joinTableModelClass = this.joinTableModelClass;\n    relation.joinTableOwnerProp = this.joinTableOwnerProp;\n    relation.joinTableRelatedProp = this.joinTableRelatedProp;\n    relation.joinTableBeforeInsert = this.joinTableBeforeInsert;\n    relation.joinTableExtras = this.joinTableExtras;\n\n    return relation;\n  }\n\n  bindKnex(knex) {\n    const bound = this.clone();\n\n    bound.relatedModelClass = this.relatedModelClass.bindKnex(knex);\n    bound.ownerModelClass = this.ownerModelClass.bindKnex(knex);\n\n    if (this.joinTableModelClass) {\n      bound.joinTableModelClass = this.joinTableModelClass.bindKnex(knex);\n    }\n\n    return bound;\n  }\n\n  findQuery(builder, opt) {\n    const relatedRefs = this.relatedProp.refs(builder);\n\n    if (opt.isColumnRef) {\n      for (let i = 0, l = relatedRefs.length; i < l; ++i) {\n        builder.where(relatedRefs[i], ref(opt.ownerIds[i]));\n      }\n    } else if (containsNonNull(opt.ownerIds)) {\n      builder.whereInComposite(relatedRefs, opt.ownerIds);\n    } else {\n      builder.resolve([]);\n    }\n\n    try {\n      return builder.modify(this.modify);\n    } catch (err) {\n      if (err instanceof this.relatedModelClass.ModifierNotFoundError) {\n        throw this.createError(err.message);\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  join(\n    builder,\n    {\n      joinOperation = 'join',\n      relatedTableAlias = builder.tableRefFor(this.relatedModelClass.getTableName()),\n      relatedJoinSelectQuery = this.relatedModelClass.query().childQueryOf(builder),\n      relatedTable = builder.tableNameFor(this.relatedModelClass.getTableName()),\n      ownerTable = builder.tableRefFor(this.ownerModelClass.getTableName())\n    } = {}\n  ) {\n    let relatedSelect = relatedJoinSelectQuery.modify(this.modify).as(relatedTableAlias);\n\n    if (relatedSelect.isSelectAll()) {\n      // No need to join a subquery if the query is `select * from \"RelatedTable\"`.\n      relatedSelect = aliasedTableName(relatedTable, relatedTableAlias);\n    }\n\n    return builder[joinOperation](relatedSelect, join => {\n      const relatedProp = this.relatedProp;\n      const ownerProp = this.ownerProp;\n\n      for (let i = 0, l = relatedProp.size; i < l; ++i) {\n        const relatedRef = relatedProp.ref(builder, i).table(relatedTableAlias);\n        const ownerRef = ownerProp.ref(builder, i).table(ownerTable);\n\n        join.on(relatedRef, ownerRef);\n      }\n    });\n  }\n\n  insert(builder, owner) {\n    /* istanbul ignore next */\n    throw this.createError('not implemented');\n  }\n\n  update(builder, owner) {\n    return new RelationUpdateOperation('update', {\n      relation: this,\n      owner: owner\n    });\n  }\n\n  patch(builder, owner) {\n    return new RelationUpdateOperation('patch', {\n      relation: this,\n      owner: owner,\n      modelOptions: { patch: true }\n    });\n  }\n\n  find(builder, owners) {\n    return new RelationFindOperation('find', {\n      relation: this,\n      owners: owners\n    });\n  }\n\n  subQuery(builder) {\n    return new RelationSubqueryOperation('subQuery', {\n      relation: this\n    });\n  }\n\n  delete(builder, owner) {\n    return new RelationDeleteOperation('delete', {\n      relation: this,\n      owner: owner\n    });\n  }\n\n  relate(builder, owner) {\n    /* istanbul ignore next */\n    throw this.createError('not implemented');\n  }\n\n  unrelate(builder, owner) {\n    /* istanbul ignore next */\n    throw this.createError('not implemented');\n  }\n\n  hasRelateProp(model) {\n    return model.$hasProps(this.relatedProp.props);\n  }\n\n  setRelateProp(model, values) {\n    for (let i = 0, l = this.relatedProp.size; i < l; ++i) {\n      this.relatedProp.setProp(model, i, values[i]);\n    }\n  }\n\n  executeBeforeInsert(models, queryContext, result) {\n    return mapAfterAllReturn(models, model => this.beforeInsert(model, queryContext), result);\n  }\n\n  createError(message) {\n    if (this.ownerModelClass && this.ownerModelClass.name && this.name) {\n      return new Error(`${this.ownerModelClass.name}.relationMappings.${this.name}: ${message}`);\n    } else {\n      return new Error(`${this.constructor.name}: ${message}`);\n    }\n  }\n}\n\nObject.defineProperties(Relation.prototype, {\n  isObjectionRelation: {\n    enumerable: false,\n    writable: false,\n    value: true\n  }\n});\n\nfunction checkForbiddenProperties(ctx) {\n  ctx.forbiddenMappingProperties.forEach(prop => {\n    if (get(ctx.mapping, prop.split('.')) !== undefined) {\n      throw ctx.createError(`Property ${prop} is not supported for this relation type.`);\n    }\n  });\n\n  return ctx;\n}\n\nfunction checkOwnerModelClass(ctx) {\n  if (!isSubclassOf(ctx.ownerModelClass, getModel())) {\n    throw ctx.createError(`Relation's owner is not a subclass of Model`);\n  }\n\n  return ctx;\n}\n\nfunction checkRelatedModelClass(ctx) {\n  if (!ctx.mapping.modelClass) {\n    throw ctx.createError('modelClass is not defined');\n  }\n\n  return ctx;\n}\n\nfunction resolveRelatedModelClass(ctx) {\n  let relatedModelClass;\n\n  try {\n    relatedModelClass = resolveModel(\n      ctx.mapping.modelClass,\n      ctx.ownerModelClass.modelPaths,\n      'modelClass'\n    );\n  } catch (err) {\n    throw ctx.createError(err.message);\n  }\n\n  return Object.assign(ctx, { relatedModelClass });\n}\n\nfunction checkRelation(ctx) {\n  if (!ctx.mapping.relation) {\n    throw ctx.createError('relation is not defined');\n  }\n\n  if (!isSubclassOf(ctx.mapping.relation, Relation)) {\n    throw ctx.createError('relation is not a subclass of Relation');\n  }\n\n  return ctx;\n}\n\nfunction createJoinProperties(ctx) {\n  const mapping = ctx.mapping;\n\n  if (!mapping.join || !mapping.join.from || !mapping.join.to) {\n    throw ctx.createError(\n      'join must be an object that maps the columns of the related models together. For example: {from: \"SomeTable.id\", to: \"SomeOtherTable.someModelId\"}'\n    );\n  }\n\n  const fromProp = createRelationProperty(ctx, mapping.join.from, 'join.from');\n  const toProp = createRelationProperty(ctx, mapping.join.to, 'join.to');\n\n  let ownerProp;\n  let relatedProp;\n\n  if (fromProp.modelClass.getTableName() === ctx.ownerModelClass.getTableName()) {\n    ownerProp = fromProp;\n    relatedProp = toProp;\n  } else if (toProp.modelClass.getTableName() === ctx.ownerModelClass.getTableName()) {\n    ownerProp = toProp;\n    relatedProp = fromProp;\n  } else {\n    throw ctx.createError('join: either `from` or `to` must point to the owner model table.');\n  }\n\n  if (ownerProp.props.some(it => it === ctx.name)) {\n    throw ctx.createError(\n      `join: relation name and join property '${\n        ctx.name\n      }' cannot have the same name. If you cannot change one or the other, you can use $parseDatabaseJson and $formatDatabaseJson methods to convert the column name.`\n    );\n  }\n\n  if (relatedProp.modelClass.getTableName() !== ctx.relatedModelClass.getTableName()) {\n    throw ctx.createError('join: either `from` or `to` must point to the related model table.');\n  }\n\n  return Object.assign(ctx, { ownerProp, relatedProp });\n}\n\nfunction createRelationProperty(ctx, refString, propName) {\n  try {\n    return new RelationProperty(refString, table => {\n      return [ctx.ownerModelClass, ctx.relatedModelClass].find(it => it.getTableName() === table);\n    });\n  } catch (err) {\n    if (err instanceof RelationProperty.ModelNotFoundError) {\n      throw ctx.createError(\n        `join: either \\`from\\` or \\`to\\` must point to the owner model table and the other one to the related table. It might be that specified table '${\n          err.tableName\n        }' is not correct`\n      );\n    } else if (err instanceof RelationProperty.InvalidReferenceError) {\n      throw ctx.createError(\n        `${propName} must have format TableName.columnName. For example \"SomeTable.id\" or in case of composite key [\"SomeTable.a\", \"SomeTable.b\"].`\n      );\n    } else {\n      throw err;\n    }\n  }\n}\n\nfunction parseModify(ctx) {\n  const mapping = ctx.mapping;\n  const modifier = mapping.modify || mapping.filter;\n  const modify =\n    modifier &&\n    createModifier({\n      modifier,\n      modelClass: ctx.relatedModelClass\n    });\n\n  return Object.assign(ctx, { modify });\n}\n\nfunction parseBeforeInsert(ctx) {\n  let beforeInsert;\n\n  if (isFunction(ctx.mapping.beforeInsert)) {\n    beforeInsert = ctx.mapping.beforeInsert;\n  } else {\n    beforeInsert = model => model;\n  }\n\n  return Object.assign(ctx, { beforeInsert });\n}\n\nfunction containsNonNull(arr) {\n  for (let i = 0, l = arr.length; i < l; ++i) {\n    const val = arr[i];\n\n    if (Array.isArray(val)) {\n      if (containsNonNull(val)) {\n        return true;\n      }\n    } else if (val !== null && val !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction aliasedTableName(tableName, alias) {\n  if (tableName === alias) {\n    return tableName;\n  } else {\n    return `${tableName} as ${alias}`;\n  }\n}\n\nmodule.exports = {\n  Relation\n};\n","'use strict';\n\nconst { DeleteOperation } = require('../queryBuilder/operations/DeleteOperation');\n\nclass RelationDeleteOperation extends DeleteOperation {\n  constructor(name, opt) {\n    super(name, opt);\n\n    this.relation = opt.relation;\n    this.owner = opt.owner;\n  }\n\n  onBuild(builder) {\n    super.onBuild(builder);\n\n    this.relation.findQuery(builder, {\n      ownerIds: [this.relation.ownerProp.getProps(this.owner)]\n    });\n  }\n}\n\nmodule.exports = {\n  RelationDeleteOperation\n};\n","'use strict';\n\nconst { FindOperation } = require('../queryBuilder/operations/FindOperation');\nconst { uniqBy } = require('../utils/objectUtils');\n\nclass RelationFindOperation extends FindOperation {\n  constructor(name, opt) {\n    super(name, opt);\n\n    this.relation = opt.relation;\n    this.owners = opt.owners;\n    this.alwaysReturnArray = false;\n    this.assignResultToOwner = true;\n    this.relationProperty = opt.relationProperty || this.relation.name;\n    this.omitProps = [];\n  }\n\n  onBuild(builder) {\n    let ids = new Array(this.owners.length);\n\n    for (let i = 0, l = this.owners.length; i < l; ++i) {\n      ids[i] = this.relation.ownerProp.getProps(this.owners[i]);\n    }\n\n    this.relation.findQuery(builder, {\n      ownerIds: uniqBy(ids, join)\n    });\n\n    this.selectMissingJoinColumns(builder);\n  }\n\n  onAfter2(_, related) {\n    const isOneToOne = this.relation.isOneToOne();\n\n    if (this.assignResultToOwner) {\n      const owners = this.owners;\n      const relatedByOwnerId = new Map();\n\n      for (let i = 0, l = related.length; i < l; ++i) {\n        const rel = related[i];\n        const key = this.relation.relatedProp.propKey(rel);\n        let arr = relatedByOwnerId.get(key);\n\n        if (!arr) {\n          arr = [];\n          relatedByOwnerId.set(key, arr);\n        }\n\n        arr.push(rel);\n      }\n\n      for (let i = 0, l = owners.length; i < l; ++i) {\n        const own = owners[i];\n        const key = this.relation.ownerProp.propKey(own);\n        const related = relatedByOwnerId.get(key);\n\n        if (isOneToOne) {\n          own[this.relationProperty] = (related && related[0]) || null;\n        } else {\n          own[this.relationProperty] = related || [];\n        }\n      }\n    }\n\n    return related;\n  }\n\n  onAfter3(builder, related) {\n    const isOneToOne = this.relation.isOneToOne();\n    const intOpt = builder.internalOptions();\n\n    if (!intOpt.keepImplicitJoinProps) {\n      this.omitImplicitJoinProps(related);\n    }\n\n    if (!this.alwaysReturnArray && isOneToOne && related.length <= 1) {\n      related = related[0] || undefined;\n    }\n\n    return super.onAfter3(builder, related);\n  }\n\n  selectMissingJoinColumns(builder) {\n    const relatedProp = this.relation.relatedProp;\n    const addedSelects = [];\n\n    for (let c = 0, lc = relatedProp.size; c < lc; ++c) {\n      const fullCol = relatedProp.ref(builder, c).fullColumn(builder);\n      const prop = relatedProp.props[c];\n      const col = relatedProp.cols[c];\n\n      if (!builder.hasSelectionAs(fullCol, col) && addedSelects.indexOf(fullCol) === -1) {\n        this.omitProps.push(prop);\n        addedSelects.push(fullCol);\n      }\n    }\n\n    if (addedSelects.length) {\n      builder.select(addedSelects);\n    }\n  }\n\n  omitImplicitJoinProps(related) {\n    const relatedModelClass = this.relation.relatedModelClass;\n\n    if (!this.omitProps.length || !related) {\n      return related;\n    }\n\n    if (!Array.isArray(related)) {\n      return this.omitImplicitJoinPropsFromOne(relatedModelClass, related);\n    }\n\n    if (!related.length) {\n      return related;\n    }\n\n    for (let i = 0, l = related.length; i < l; ++i) {\n      this.omitImplicitJoinPropsFromOne(relatedModelClass, related[i]);\n    }\n\n    return related;\n  }\n\n  omitImplicitJoinPropsFromOne(relatedModelClass, model) {\n    for (let c = 0, lc = this.omitProps.length; c < lc; ++c) {\n      relatedModelClass.omitImpl(model, this.omitProps[c]);\n    }\n\n    return model;\n  }\n\n  clone() {\n    const clone = super.clone();\n\n    clone.alwaysReturnArray = this.alwaysReturnArray;\n    clone.assignResultToOwner = this.assignResultToOwner;\n    clone.relationProperty = this.relationProperty;\n    clone.omitProps = this.omitProps.slice();\n\n    return clone;\n  }\n}\n\nfunction join(arr) {\n  return arr.join();\n}\n\nmodule.exports = {\n  RelationFindOperation\n};\n","'use strict';\n\nconst { after } = require('../utils/promiseUtils');\nconst { InsertOperation } = require('../queryBuilder/operations/InsertOperation');\n\nclass RelationInsertOperation extends InsertOperation {\n  constructor(name, opt) {\n    super(name, opt);\n\n    this.relation = opt.relation;\n    this.owner = opt.owner;\n    this.assignResultToOwner = true;\n  }\n\n  onBefore2(builder, result) {\n    const queryContext = builder.context();\n    const maybePromise = this.relation.executeBeforeInsert(this.models, queryContext, result);\n\n    return after(maybePromise, result => super.onBefore2(builder, result));\n  }\n\n  clone() {\n    const clone = super.clone();\n\n    clone.relation = this.relation;\n    clone.owner = this.owner;\n    clone.assignResultToOwner = this.assignResultToOwner;\n\n    return clone;\n  }\n}\n\nmodule.exports = {\n  RelationInsertOperation\n};\n","'use strict';\n\nconst { asArray, isObject, uniqBy, get, set } = require('../utils/objectUtils');\nconst { ref: createRef } = require('../queryBuilder/ReferenceBuilder');\nconst { propToStr, PROP_KEY_PREFIX } = require('../model/modelValues');\n\nclass ModelNotFoundError extends Error {\n  constructor(tableName) {\n    super();\n    this.name = this.constructor.name;\n    this.tableName = tableName;\n  }\n}\n\nclass InvalidReferenceError extends Error {\n  constructor() {\n    super();\n    this.name = this.constructor.name;\n  }\n}\n\n// A pair of these define how two tables are related to each other.\n// Both the owner and the related table have one of these.\n//\n// A relation property can be a single column, an array of columns\n// (composite key) a json column reference, an array of json column\n// references or any combination of the above.\nclass RelationProperty {\n  // references must be a reference string like `Table.column:maybe.some.json[1].path`.\n  // or an array of such references (composite key).\n  //\n  // modelClassResolver must be a function that takes a table name\n  // and returns a model class.\n  constructor(references, modelClassResolver) {\n    const refs = createRefs(asArray(references));\n    const paths = createPaths(refs, modelClassResolver);\n    const modelClass = resolveModelClass(paths);\n\n    this._refs = refs.map(ref => ref.model(modelClass));\n    this._modelClass = modelClass;\n    this._props = paths.map(it => it.path[0]);\n    this._cols = refs.map(it => it.column);\n    this._propGetters = paths.map(it => createGetter(it.path));\n    this._propSetters = paths.map(it => createSetter(it.path));\n    this._patchers = refs.map(it => createPatcher(it));\n  }\n\n  static get ModelNotFoundError() {\n    return ModelNotFoundError;\n  }\n\n  static get InvalidReferenceError() {\n    return InvalidReferenceError;\n  }\n\n  // The number of columns.\n  get size() {\n    return this._refs.length;\n  }\n\n  // The model class that owns the property.\n  get modelClass() {\n    return this._modelClass;\n  }\n\n  // An array of property names. Contains multiple values in case of composite key.\n  // This may be different from `cols` if the model class has some kind of conversion\n  // between database and \"external\" formats, for example a snake_case to camelCase\n  // conversion.\n  get props() {\n    return this._props;\n  }\n\n  // An array of column names. Contains multiple values in case of composite key.\n  // This may be different from `props` if the model class has some kind of conversion\n  // between database and \"external\" formats, for example a snake_case to camelCase\n  // conversion.\n  get cols() {\n    return this._cols;\n  }\n\n  // Creates a concatenated string from the property values of the given object.\n  propKey(obj) {\n    const size = this.size;\n    let key = PROP_KEY_PREFIX;\n\n    for (let i = 0; i < size; ++i) {\n      key += propToStr(this.getProp(obj, i));\n\n      if (i !== size - 1) {\n        key += ',';\n      }\n    }\n\n    return key;\n  }\n\n  // Returns the property values of the given object as an array.\n  getProps(obj) {\n    const size = this.size;\n    const props = new Array(size);\n\n    for (let i = 0; i < size; ++i) {\n      props[i] = this.getProp(obj, i);\n    }\n\n    return props;\n  }\n\n  // Returns true if the given object has a non-null value in all properties.\n  hasProps(obj) {\n    const size = this.size;\n\n    for (let i = 0; i < size; ++i) {\n      const prop = this.getProp(obj, i);\n\n      if (prop === null || prop === undefined) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  // Returns the index:th property value of the given object.\n  getProp(obj, index) {\n    return this._propGetters[index](obj);\n  }\n\n  // Sets the index:th property value of the given object.\n  setProp(obj, index, value) {\n    return this._propSetters[index](obj, value);\n  }\n\n  // Returns an instance of ReferenceBuilder that points to the index:th\n  // value of a row.\n  ref(builder, index) {\n    const table = builder.tableRefFor(this.modelClass.getTableName());\n\n    return this._refs[index].clone().table(table);\n  }\n\n  // Returns an array of reference builders. `ref(builder, i)` for each i.\n  refs(builder) {\n    const refs = new Array(this.size);\n\n    for (let i = 0, l = refs.length; i < l; ++i) {\n      refs[i] = this.ref(builder, i);\n    }\n\n    return refs;\n  }\n\n  // Appends an update operation for the index:th column into `patch` object.\n  patch(patch, index, value) {\n    return this._patchers[index](patch, value);\n  }\n\n  // String representation of this property's index:th column for logging.\n  propDescription(index) {\n    return this._refs[index].expression;\n  }\n}\n\nfunction createRefs(refs) {\n  try {\n    return refs.map(it => {\n      if (!isObject(it) || !it.isObjectionReferenceBuilder) {\n        return createRef(it);\n      } else {\n        return it;\n      }\n    });\n  } catch (err) {\n    throw new InvalidReferenceError();\n  }\n}\n\nfunction createPaths(refs, modelClassResolver) {\n  return refs.map(ref => {\n    if (!ref.tableName) {\n      throw new InvalidReferenceError();\n    }\n\n    const modelClass = modelClassResolver(ref.tableName);\n\n    if (!modelClass) {\n      throw new ModelNotFoundError(ref.tableName);\n    }\n\n    const prop = modelClass.columnNameToPropertyName(ref.column);\n    const jsonPath = ref.parsedExpr.access.map(it => it.ref);\n\n    return {\n      path: [prop].concat(jsonPath),\n      modelClass\n    };\n  });\n}\n\nfunction resolveModelClass(paths) {\n  const modelClasses = paths.map(it => it.modelClass);\n  const uniqueModelClasses = uniqBy(modelClasses);\n\n  if (uniqueModelClasses.length !== 1) {\n    throw new InvalidReferenceError();\n  }\n\n  return modelClasses[0];\n}\n\nfunction createGetter(path) {\n  if (path.length === 1) {\n    const prop = path[0];\n    return obj => obj[prop];\n  } else {\n    return obj => get(obj, path);\n  }\n}\n\nfunction createSetter(path) {\n  if (path.length === 1) {\n    const prop = path[0];\n    return (obj, value) => (obj[prop] = value);\n  } else {\n    return (obj, value) => set(obj, path, value);\n  }\n}\n\nfunction createPatcher(ref) {\n  if (ref.isPlainColumnRef) {\n    return (patch, value) => (patch[ref.column] = value);\n  } else {\n    // Objection `patch`, `update` etc. methods understand field expressions.\n    return (patch, value) => (patch[ref.expression] = value);\n  }\n}\n\nmodule.exports = {\n  RelationProperty\n};\n","'use strict';\n\nconst { QueryBuilderOperation } = require('../queryBuilder/operations/QueryBuilderOperation');\n\nclass RelationSubqueryOperation extends QueryBuilderOperation {\n  constructor(name, opt) {\n    super(name, opt);\n    this.relation = opt.relation;\n  }\n\n  onBuild(builder) {\n    return this.relation.findQuery(builder, {\n      isColumnRef: true,\n      ownerIds: this.relation.ownerProp.refs(findFirstNonPartialAncestorQuery(builder))\n    });\n  }\n}\n\nfunction findFirstNonPartialAncestorQuery(builder) {\n  builder = builder.parentQuery();\n\n  while (builder.isPartial()) {\n    if (!builder.parentQuery()) {\n      break;\n    }\n\n    builder = builder.parentQuery();\n  }\n\n  return builder;\n}\n\nmodule.exports = {\n  RelationSubqueryOperation\n};\n","'use strict';\n\nconst { UpdateOperation } = require('../queryBuilder/operations/UpdateOperation');\n\nclass RelationUpdateOperation extends UpdateOperation {\n  constructor(name, opt) {\n    super(name, opt);\n\n    this.relation = opt.relation;\n    this.owner = opt.owner;\n  }\n\n  onBuild(builder) {\n    super.onBuild(builder);\n\n    this.relation.findQuery(builder, {\n      ownerIds: [this.relation.ownerProp.getProps(this.owner)]\n    });\n  }\n}\n\nmodule.exports = {\n  RelationUpdateOperation\n};\n","'use strict';\n\nconst { RelationDeleteOperation } = require('../RelationDeleteOperation');\n\nclass BelongsToOneDeleteOperation extends RelationDeleteOperation {\n  onAfter1(_, result) {\n    const ownerProp = this.relation.ownerProp;\n\n    for (let i = 0, l = ownerProp.size; i < l; ++i) {\n      ownerProp.setProp(this.owner, i, null);\n    }\n\n    return result;\n  }\n}\n\nmodule.exports = {\n  BelongsToOneDeleteOperation\n};\n","'use strict';\n\nconst { RelationInsertOperation } = require('../RelationInsertOperation');\nconst { after } = require('../../utils/promiseUtils');\n\nclass BelongsToOneInsertOperation extends RelationInsertOperation {\n  onAdd(builder, args) {\n    const retVal = super.onAdd(builder, args);\n\n    if (this.models.length > 1) {\n      throw this.relation.createError('can only insert one model to a BelongsToOneRelation');\n    }\n\n    return retVal;\n  }\n\n  onAfter1(builder, ret) {\n    const maybePromise = super.onAfter1(builder, ret);\n    const owner = this.owner;\n\n    const ownerProp = this.relation.ownerProp;\n    const relatedProp = this.relation.relatedProp;\n\n    return after(maybePromise, inserted => {\n      const patch = {};\n\n      for (let i = 0, l = ownerProp.size; i < l; ++i) {\n        const relatedValue = relatedProp.getProp(inserted[0], i);\n\n        ownerProp.setProp(this.owner, i, relatedValue);\n        ownerProp.patch(patch, i, relatedValue);\n      }\n\n      if (this.assignResultToOwner) {\n        owner.$setRelated(this.relation, inserted);\n      }\n\n      return this.owner\n        .$query()\n        .childQueryOf(builder)\n        .patch(patch)\n        .then(() => inserted);\n    });\n  }\n}\n\nmodule.exports = {\n  BelongsToOneInsertOperation\n};\n","'use strict';\n\nconst { normalizeIds } = require('../../utils/normalizeIds');\nconst { RelateOperation } = require('../../queryBuilder/operations/RelateOperation');\n\nclass BelongsToOneRelateOperation extends RelateOperation {\n  onAdd(_, args) {\n    this.input = args[0];\n    this.ids = normalizeIds(args[0], this.relation.relatedProp, { arrayOutput: true });\n\n    if (this.ids.length > 1) {\n      throw this.relation.createError('can only relate one model to a BelongsToOneRelation');\n    }\n\n    return true;\n  }\n\n  queryExecutor(builder) {\n    const patch = {};\n    const ownerProp = this.relation.ownerProp;\n\n    for (let i = 0, l = ownerProp.size; i < l; ++i) {\n      const relatedValue = this.ids[0][i];\n\n      ownerProp.setProp(this.owner, i, relatedValue);\n      ownerProp.patch(patch, i, relatedValue);\n    }\n\n    return this.relation.ownerModelClass\n      .query()\n      .childQueryOf(builder)\n      .copyFrom(builder, builder.constructor.JoinSelector)\n      .copyFrom(builder, builder.constructor.WhereSelector)\n      .patch(patch)\n      .findById(this.owner.$id());\n  }\n}\n\nmodule.exports = {\n  BelongsToOneRelateOperation\n};\n","'use strict';\n\nconst { Relation } = require('../Relation');\nconst { BelongsToOneInsertOperation } = require('./BelongsToOneInsertOperation');\nconst { BelongsToOneDeleteOperation } = require('./BelongsToOneDeleteOperation');\nconst { BelongsToOneRelateOperation } = require('./BelongsToOneRelateOperation');\nconst { BelongsToOneUnrelateOperation } = require('./BelongsToOneUnrelateOperation');\n\nclass BelongsToOneRelation extends Relation {\n  isOneToOne() {\n    return true;\n  }\n\n  insert(builder, owner) {\n    return new BelongsToOneInsertOperation('insert', {\n      relation: this,\n      owner: owner\n    });\n  }\n\n  delete(builder, owner) {\n    return new BelongsToOneDeleteOperation('delete', {\n      relation: this,\n      owner: owner\n    });\n  }\n\n  relate(builder, owner) {\n    return new BelongsToOneRelateOperation('relate', {\n      relation: this,\n      owner: owner\n    });\n  }\n\n  unrelate(builder, owner) {\n    return new BelongsToOneUnrelateOperation('unrelate', {\n      relation: this,\n      owner: owner\n    });\n  }\n}\n\nObject.defineProperties(BelongsToOneRelation.prototype, {\n  isObjectionBelongsToOneRelation: {\n    enumerable: false,\n    writable: false,\n    value: true\n  }\n});\n\nmodule.exports = {\n  BelongsToOneRelation\n};\n","'use strict';\n\nconst { UnrelateOperation } = require('../../queryBuilder/operations/UnrelateOperation');\n\nclass BelongsToOneUnrelateOperation extends UnrelateOperation {\n  onAdd() {\n    const ids = new Array(this.relation.ownerProp.size);\n\n    for (let i = 0, l = this.relation.ownerProp.size; i < l; ++i) {\n      ids[i] = null;\n    }\n\n    this.ids = [ids];\n    return true;\n  }\n\n  queryExecutor(builder) {\n    const patch = {};\n    const ownerProp = this.relation.ownerProp;\n\n    for (let i = 0, l = ownerProp.size; i < l; ++i) {\n      const relatedValue = this.ids[0][i];\n\n      ownerProp.setProp(this.owner, i, relatedValue);\n      ownerProp.patch(patch, i, relatedValue);\n    }\n\n    return this.relation.ownerModelClass\n      .query()\n      .childQueryOf(builder)\n      .copyFrom(builder, builder.constructor.JoinSelector)\n      .copyFrom(builder, builder.constructor.WhereSelector)\n      .patch(patch)\n      .findById(this.owner.$id());\n  }\n}\n\nmodule.exports = {\n  BelongsToOneUnrelateOperation\n};\n","'use strict';\n\nconst { RelationInsertOperation } = require('../RelationInsertOperation');\nconst { after } = require('../../utils/promiseUtils');\n\nclass HasManyInsertOperation extends RelationInsertOperation {\n  onAdd(builder, args) {\n    const retVal = super.onAdd(builder, args);\n    const ownerProp = this.relation.ownerProp;\n    const relatedProp = this.relation.relatedProp;\n\n    for (let i = 0, lm = this.models.length; i < lm; ++i) {\n      const model = this.models[i];\n\n      for (let j = 0, lp = relatedProp.size; j < lp; ++j) {\n        relatedProp.setProp(model, j, ownerProp.getProp(this.owner, j));\n      }\n    }\n\n    return retVal;\n  }\n\n  onAfter1(builder, ret) {\n    const maybePromise = super.onAfter1(builder, ret);\n\n    if (!this.assignResultToOwner) {\n      return maybePromise;\n    }\n\n    return after(maybePromise, inserted => {\n      this.owner.$appendRelated(this.relation, inserted);\n      return inserted;\n    });\n  }\n}\n\nmodule.exports = {\n  HasManyInsertOperation\n};\n","'use strict';\n\nconst { normalizeIds } = require('../../utils/normalizeIds');\nconst { RelateOperation } = require('../../queryBuilder/operations/RelateOperation');\n\nclass HasManyRelateOperation extends RelateOperation {\n  onAdd(_, args) {\n    this.input = args[0];\n    this.ids = normalizeIds(args[0], this.relation.relatedModelClass.getIdRelationProperty(), {\n      arrayOutput: true\n    });\n    return true;\n  }\n\n  queryExecutor(builder) {\n    const patch = {};\n    const ownerProp = this.relation.ownerProp;\n    const relatedProp = this.relation.relatedProp;\n\n    for (let i = 0, l = relatedProp.size; i < l; ++i) {\n      relatedProp.patch(patch, i, ownerProp.getProp(this.owner, i));\n    }\n\n    return this.relation.relatedModelClass\n      .query()\n      .childQueryOf(builder)\n      .patch(patch)\n      .copyFrom(builder, builder.constructor.JoinSelector)\n      .copyFrom(builder, builder.constructor.WhereSelector)\n      .findByIds(this.ids)\n      .modify(this.relation.modify);\n  }\n}\n\nmodule.exports = {\n  HasManyRelateOperation\n};\n","'use strict';\n\nconst { Relation } = require('../Relation');\nconst { HasManyInsertOperation } = require('./HasManyInsertOperation');\nconst { HasManyRelateOperation } = require('./HasManyRelateOperation');\nconst { HasManyUnrelateOperation } = require('./HasManyUnrelateOperation');\n\nclass HasManyRelation extends Relation {\n  insert(_, owner) {\n    return new HasManyInsertOperation('insert', {\n      relation: this,\n      owner: owner\n    });\n  }\n\n  relate(_, owner) {\n    return new HasManyRelateOperation('relate', {\n      relation: this,\n      owner: owner\n    });\n  }\n\n  unrelate(_, owner) {\n    return new HasManyUnrelateOperation('unrelate', {\n      relation: this,\n      owner: owner\n    });\n  }\n\n  hasRelateProp(model) {\n    return model.$hasId();\n  }\n\n  setRelateProp(model, values) {\n    model.$id(values);\n  }\n}\n\nObject.defineProperties(HasManyRelation.prototype, {\n  isObjectionHasManyRelation: {\n    enumerable: false,\n    writable: false,\n    value: true\n  }\n});\n\nmodule.exports = {\n  HasManyRelation\n};\n","'use strict';\n\nconst { UnrelateOperation } = require('../../queryBuilder/operations/UnrelateOperation');\n\nclass HasManyUnrelateOperation extends UnrelateOperation {\n  queryExecutor(builder) {\n    const patch = {};\n    const ownerProp = this.relation.ownerProp;\n    const relatedProp = this.relation.relatedProp;\n    const ownerValues = ownerProp.getProps(this.owner);\n    const relatedRefs = relatedProp.refs(builder);\n\n    for (let i = 0, l = relatedProp.size; i < l; ++i) {\n      relatedProp.patch(patch, i, null);\n    }\n\n    return this.relation.relatedModelClass\n      .query()\n      .childQueryOf(builder)\n      .patch(patch)\n      .copyFrom(builder, builder.constructor.JoinSelector)\n      .copyFrom(builder, builder.constructor.WhereSelector)\n      .whereComposite(relatedRefs, ownerValues)\n      .modify(this.relation.modify);\n  }\n}\n\nmodule.exports = {\n  HasManyUnrelateOperation\n};\n","'use strict';\n\nconst { HasManyRelation } = require('../hasMany/HasManyRelation');\n\nclass HasOneRelation extends HasManyRelation {\n  isOneToOne() {\n    return true;\n  }\n}\n\nmodule.exports = {\n  HasOneRelation\n};\n","'use strict';\n\nconst { ManyToManyRelation } = require('../manyToMany/ManyToManyRelation');\n\nclass HasOneThroughRelation extends ManyToManyRelation {\n  isOneToOne() {\n    return true;\n  }\n}\n\nmodule.exports = {\n  HasOneThroughRelation\n};\n","'use strict';\n\n// This mixin contains the shared code for all modify operations (update, delete, relate, unrelate)\n// for ManyToManyRelation operations.\n//\n// The most important thing this mixin does is that it moves the filters from the main query\n// into a subquery and then adds a single where clause that uses the subquery. This is done so\n// that we are able to `innerJoin` the join table to the query. Most SQL engines don't allow\n// joins in updates or deletes. Join table is joined so that queries can reference the join\n// table columns.\nconst ManyToManyModifyMixin = Operation => {\n  return class extends Operation {\n    constructor(...args) {\n      super(...args);\n      this.modifyFilterSubquery = null;\n    }\n\n    get modifyMainQuery() {\n      return true;\n    }\n\n    // At this point `builder` should only have the user's own wheres and joins. There can\n    // be other operations (like orderBy) too, but those are meaningless with modify operations.\n    onBuild(builder) {\n      this.modifyFilterSubquery = this.createModifyFilterSubquery(builder);\n\n      if (this.modifyMainQuery) {\n        // We can now remove the where and join statements from the main query.\n        this.removeFiltersFromMainQuery(builder);\n\n        // Add a single where clause that uses the created subquery.\n        this.applyModifyFilterForRelatedTable(builder);\n      }\n\n      return super.onBuild(builder);\n    }\n\n    createModifyFilterSubquery(builder) {\n      const relatedModelClass = this.relation.relatedModelClass;\n      const builderClass = builder.constructor;\n      const ownerProp = this.relation.ownerProp;\n      const ownerIds = [ownerProp.getProps(this.owner)];\n\n      // Create an empty subquery.\n      const modifyFilterSubquery = relatedModelClass.query().childQueryOf(builder);\n\n      // Add the necessary joins and wheres so that only rows related to\n      // `this.owner` are selected.\n      this.relation.findQuery(modifyFilterSubquery, { ownerIds });\n\n      // Copy all where and join statements from the main query to the subquery.\n      modifyFilterSubquery\n        .copyFrom(builder, builderClass.WhereSelector)\n        .copyFrom(builder, builderClass.JoinSelector);\n\n      return modifyFilterSubquery.clearSelect();\n    }\n\n    removeFiltersFromMainQuery(builder) {\n      const builderClass = builder.constructor;\n\n      builder.clear(builderClass.WhereSelector);\n      builder.clear(builderClass.JoinSelector);\n    }\n\n    applyModifyFilterForRelatedTable(builder) {\n      const idRefs = this.relation.relatedModelClass.getIdRelationProperty().refs(builder);\n      const subquery = this.modifyFilterSubquery.clone().select(idRefs);\n\n      return builder.whereInComposite(idRefs, subquery);\n    }\n\n    applyModifyFilterForJoinTable(builder) {\n      const joinTableOwnerRefs = this.relation.joinTableOwnerProp.refs(builder);\n      const joinTableRelatedRefs = this.relation.joinTableRelatedProp.refs(builder);\n\n      const relatedRefs = this.relation.relatedProp.refs(builder);\n      const ownerIds = this.relation.ownerProp.getProps(this.owner);\n\n      const subquery = this.modifyFilterSubquery.clone().select(relatedRefs);\n\n      return builder\n        .whereInComposite(joinTableRelatedRefs, subquery)\n        .whereComposite(joinTableOwnerRefs, ownerIds);\n    }\n\n    clone() {\n      const clone = super.clone();\n      clone.modifyFilterSubquery = this.modifyFilterSubquery;\n      return clone;\n    }\n  };\n};\n\nmodule.exports = {\n  ManyToManyModifyMixin\n};\n","'use strict';\n\nconst { ManyToManyModifyMixin } = require('./ManyToManyModifyMixin');\n\n// We need to override this mixin for mysql because mysql doesn't\n// allow referencing the updated/deleted table directly in a subquery.\n// We need to wrap the subquery into yet another subquery (sigh).\nconst ManyToManyMySqlModifyMixin = Operation => {\n  return class extends ManyToManyModifyMixin(Operation) {\n    createModifyFilterSubquery(builder) {\n      const modifyFilterSubquery = super.createModifyFilterSubquery(builder);\n      return this.wrapIntoYetAnotherSubquery(builder, modifyFilterSubquery);\n    }\n\n    wrapIntoYetAnotherSubquery(builder, modifyFilterSubquery) {\n      const relatedModelClass = this.relation.relatedModelClass;\n      const tableRef = builder.tableRefFor(relatedModelClass.getTableName());\n\n      return relatedModelClass\n        .query()\n        .childQueryOf(builder)\n        .from(modifyFilterSubquery.as(tableRef));\n    }\n  };\n};\n\nmodule.exports = {\n  ManyToManyMySqlModifyMixin\n};\n","'use strict';\n\nconst getModel = () => require('../../model/Model').Model;\nconst { Relation } = require('../Relation');\nconst { RelationProperty } = require('../RelationProperty');\n\nconst { ref } = require('../../queryBuilder/ReferenceBuilder');\nconst { isSqlite, isMySql } = require('../../utils/knexUtils');\nconst { inheritModel } = require('../../model/inheritModel');\nconst { resolveModel } = require('../../utils/resolveModel');\nconst { mapAfterAllReturn } = require('../../utils/promiseUtils');\nconst { isFunction, isObject } = require('../../utils/objectUtils');\n\nconst { ManyToManyFindOperation } = require('./find/ManyToManyFindOperation');\nconst { ManyToManyInsertOperation } = require('./insert/ManyToManyInsertOperation');\nconst { ManyToManyRelateOperation } = require('./relate/ManyToManyRelateOperation');\n\nconst { ManyToManyUnrelateOperation } = require('./unrelate/ManyToManyUnrelateOperation');\nconst { ManyToManyUnrelateMySqlOperation } = require('./unrelate/ManyToManyUnrelateMySqlOperation');\nconst {\n  ManyToManyUnrelateSqliteOperation\n} = require('./unrelate/ManyToManyUnrelateSqliteOperation');\n\nconst { ManyToManyUpdateOperation } = require('./update/ManyToManyUpdateOperation');\nconst { ManyToManyUpdateMySqlOperation } = require('./update/ManyToManyUpdateMySqlOperation');\nconst { ManyToManyUpdateSqliteOperation } = require('./update/ManyToManyUpdateSqliteOperation');\n\nconst { ManyToManyDeleteOperation } = require('./delete/ManyToManyDeleteOperation');\nconst { ManyToManyDeleteMySqlOperation } = require('./delete/ManyToManyDeleteMySqlOperation');\nconst { ManyToManyDeleteSqliteOperation } = require('./delete/ManyToManyDeleteSqliteOperation');\n\nclass ManyToManyRelation extends Relation {\n  setMapping(mapping) {\n    const retVal = super.setMapping(mapping);\n\n    let ctx = {\n      mapping,\n      ownerModelClass: this.ownerModelClass,\n      relatedModelClass: this.relatedModelClass,\n      ownerProp: this.ownerProp,\n      relatedProp: this.relatedProp,\n\n      joinTableModelClass: null,\n      joinTableOwnerProp: null,\n      joinTableRelatedProp: null,\n      joinTableBeforeInsert: null,\n      joinTableExtras: [],\n\n      createError: msg => this.createError(msg)\n    };\n\n    ctx = checkThroughObject(ctx);\n    ctx = resolveJoinModelClassIfDefined(ctx);\n    ctx = createJoinProperties(ctx);\n    ctx = parseExtras(ctx);\n    ctx = parseBeforeInsert(ctx);\n    ctx = finalizeJoinModelClass(ctx);\n\n    this.joinTableExtras = ctx.joinTableExtras;\n    this.joinTableModelClass = ctx.joinTableModelClass;\n    this.joinTableOwnerProp = ctx.joinTableOwnerProp;\n    this.joinTableRelatedProp = ctx.joinTableRelatedProp;\n    this.joinTableBeforeInsert = ctx.joinTableBeforeInsert;\n\n    return retVal;\n  }\n\n  get forbiddenMappingProperties() {\n    return [];\n  }\n\n  findQuery(builder, opt) {\n    const joinTableOwnerRefs = this.joinTableOwnerProp.refs(builder);\n    const joinTable = builder.tableNameFor(this.joinTable);\n    const joinTableAlias = builder.tableRefFor(this.joinTable);\n\n    builder.join(aliasedTableName(joinTable, joinTableAlias), join => {\n      for (let i = 0, l = this.relatedProp.size; i < l; ++i) {\n        const relatedRef = this.relatedProp.ref(builder, i);\n        const joinTableRelatedRef = this.joinTableRelatedProp.ref(builder, i);\n\n        join.on(relatedRef, joinTableRelatedRef);\n      }\n    });\n\n    if (opt.isColumnRef) {\n      for (let i = 0, l = joinTableOwnerRefs.length; i < l; ++i) {\n        builder.where(joinTableOwnerRefs[i], ref(opt.ownerIds[i]));\n      }\n    } else if (containsNonNull(opt.ownerIds)) {\n      builder.whereInComposite(joinTableOwnerRefs, opt.ownerIds);\n    } else {\n      builder.resolve([]);\n    }\n\n    return builder.modify(this.modify);\n  }\n\n  join(\n    builder,\n    {\n      joinOperation = defaultJoinOperation(this, builder),\n      relatedTableAlias = defaultRelatedTablealias(this, builder),\n      relatedJoinSelectQuery = defaultRelatedJoinSelectQuery(this, builder),\n      relatedTable = defaultRelatedTable(this, builder),\n      ownerTable = defaultOwnerTable(this, builder),\n      joinTableAlias = defaultJoinTableAlias(this, relatedTableAlias, builder)\n    } = {}\n  ) {\n    let relatedJoinSelect = relatedJoinSelectQuery.modify(this.modify).as(relatedTableAlias);\n\n    if (relatedJoinSelect.isSelectAll()) {\n      // No need to join a subquery if the query is `select * from \"RelatedTable\"`.\n      relatedJoinSelect = aliasedTableName(relatedTable, relatedTableAlias);\n    }\n\n    return builder[joinOperation](aliasedTableName(this.joinTable, joinTableAlias), join => {\n      const ownerProp = this.ownerProp;\n      const joinTableOwnerProp = this.joinTableOwnerProp;\n\n      for (let i = 0, l = ownerProp.size; i < l; ++i) {\n        const joinTableOwnerRef = joinTableOwnerProp.ref(builder, i).table(joinTableAlias);\n        const ownerRef = ownerProp.ref(builder, i).table(ownerTable);\n\n        join.on(joinTableOwnerRef, ownerRef);\n      }\n    })[joinOperation](relatedJoinSelect, join => {\n      const relatedProp = this.relatedProp;\n      const joinTableRelatedProp = this.joinTableRelatedProp;\n\n      for (let i = 0, l = relatedProp.size; i < l; ++i) {\n        const joinTableRelatedRef = joinTableRelatedProp.ref(builder, i).table(joinTableAlias);\n        const relatedRef = relatedProp.ref(builder, i).table(relatedTableAlias);\n\n        join.on(joinTableRelatedRef, relatedRef);\n      }\n    });\n  }\n\n  find(builder, owners) {\n    return new ManyToManyFindOperation('find', {\n      relation: this,\n      owners: owners\n    });\n  }\n\n  insert(builder, owner) {\n    return new ManyToManyInsertOperation('insert', {\n      relation: this,\n      owner: owner\n    });\n  }\n\n  update(builder, owner) {\n    if (isSqlite(builder.knex())) {\n      return new ManyToManyUpdateSqliteOperation('update', {\n        relation: this,\n        owner: owner\n      });\n    } else if (isMySql(builder.knex())) {\n      return new ManyToManyUpdateMySqlOperation('update', {\n        relation: this,\n        owner: owner\n      });\n    } else {\n      return new ManyToManyUpdateOperation('update', {\n        relation: this,\n        owner: owner\n      });\n    }\n  }\n\n  patch(builder, owner) {\n    if (isSqlite(builder.knex())) {\n      return new ManyToManyUpdateSqliteOperation('patch', {\n        modelOptions: { patch: true },\n        relation: this,\n        owner: owner\n      });\n    } else if (isMySql(builder.knex())) {\n      return new ManyToManyUpdateMySqlOperation('patch', {\n        modelOptions: { patch: true },\n        relation: this,\n        owner: owner\n      });\n    } else {\n      return new ManyToManyUpdateOperation('patch', {\n        modelOptions: { patch: true },\n        relation: this,\n        owner: owner\n      });\n    }\n  }\n\n  delete(builder, owner) {\n    if (isSqlite(builder.knex())) {\n      return new ManyToManyDeleteSqliteOperation('delete', {\n        relation: this,\n        owner: owner\n      });\n    } else if (isMySql(builder.knex())) {\n      return new ManyToManyDeleteMySqlOperation('delete', {\n        relation: this,\n        owner: owner\n      });\n    } else {\n      return new ManyToManyDeleteOperation('delete', {\n        relation: this,\n        owner: owner\n      });\n    }\n  }\n\n  relate(builder, owner) {\n    return new ManyToManyRelateOperation('relate', {\n      relation: this,\n      owner: owner\n    });\n  }\n\n  unrelate(builder, owner) {\n    if (isSqlite(builder.knex())) {\n      return new ManyToManyUnrelateSqliteOperation('unrelate', {\n        relation: this,\n        owner: owner\n      });\n    } else if (isMySql(builder.knex())) {\n      return new ManyToManyUnrelateMySqlOperation('unrelate', {\n        relation: this,\n        owner: owner\n      });\n    } else {\n      return new ManyToManyUnrelateOperation('unrelate', {\n        relation: this,\n        owner: owner\n      });\n    }\n  }\n\n  createJoinModels(ownerId, related) {\n    const joinModels = new Array(related.length);\n\n    for (let i = 0, lr = related.length; i < lr; ++i) {\n      joinModels[i] = this.createJoinModel(ownerId, related[i]);\n    }\n\n    return joinModels;\n  }\n\n  createJoinModel(ownerId, rel) {\n    let joinModel = {};\n\n    for (let j = 0, lp = this.joinTableOwnerProp.size; j < lp; ++j) {\n      this.joinTableOwnerProp.setProp(joinModel, j, ownerId[j]);\n    }\n\n    for (let j = 0, lp = this.joinTableRelatedProp.size; j < lp; ++j) {\n      const value = this.relatedProp.getProp(rel, j);\n\n      if (value !== undefined) {\n        this.joinTableRelatedProp.setProp(joinModel, j, value);\n      }\n    }\n\n    for (const extra of this.joinTableExtras) {\n      let extraValue = rel[extra.aliasProp];\n\n      if (extraValue === undefined && rel.$$queryProps) {\n        extraValue = rel.$$queryProps[extra.aliasProp];\n      }\n\n      if (extraValue !== undefined) {\n        joinModel[extra.joinTableProp] = extraValue;\n      }\n    }\n\n    return joinModel;\n  }\n\n  omitExtraProps(models) {\n    if (this.joinTableExtras && this.joinTableExtras.length) {\n      const props = this.joinTableExtras.map(extra => extra.aliasProp);\n\n      for (const model of models) {\n        // Omit extra properties instead of deleting them from the models so that they can\n        // be used in the `$before` and `$after` hooks.\n        model.$omitFromDatabaseJson(props);\n      }\n    }\n  }\n\n  executeJoinTableBeforeInsert(models, queryContext, result) {\n    return mapAfterAllReturn(\n      models,\n      model => this.joinTableBeforeInsert(model, queryContext),\n      result\n    );\n  }\n}\n\nObject.defineProperties(ManyToManyRelation.prototype, {\n  isObjectionManyToManyRelation: {\n    enumerable: false,\n    writable: false,\n    value: true\n  }\n});\n\nfunction defaultJoinOperation() {\n  return 'join';\n}\n\nfunction defaultRelatedTablealias(relation, builder) {\n  return builder.tableRefFor(relation.relatedModelClass.getTableName());\n}\n\nfunction defaultRelatedJoinSelectQuery(relation, builder) {\n  return relation.relatedModelClass.query().childQueryOf(builder);\n}\n\nfunction defaultRelatedTable(relation, builder) {\n  return builder.tableNameFor(relation.relatedModelClass.getTableName());\n}\n\nfunction defaultOwnerTable(relation, builder) {\n  return builder.tableRefFor(relation.ownerModelClass.getTableName());\n}\n\nfunction defaultJoinTableAlias(relation, relatedTableAlias, builder) {\n  const alias = builder.tableRefFor(relation.joinTable);\n\n  if (alias === relation.joinTable) {\n    return relation.ownerModelClass.joinTableAlias(relatedTableAlias);\n  } else {\n    return alias;\n  }\n}\n\nfunction aliasedTableName(tableName, alias) {\n  if (tableName === alias) {\n    return tableName;\n  } else {\n    return `${tableName} as ${alias}`;\n  }\n}\n\nfunction checkThroughObject(ctx) {\n  const mapping = ctx.mapping;\n\n  if (!isObject(mapping.join.through)) {\n    throw ctx.createError('join must have a `through` object that describes the join table.');\n  }\n\n  if (!mapping.join.through.from || !mapping.join.through.to) {\n    throw ctx.createError(\n      'join.through must be an object that describes the join table. For example: {from: \"JoinTable.someId\", to: \"JoinTable.someOtherId\"}'\n    );\n  }\n\n  return ctx;\n}\n\nfunction resolveJoinModelClassIfDefined(ctx) {\n  let joinTableModelClass = null;\n\n  if (ctx.mapping.join.through.modelClass) {\n    try {\n      joinTableModelClass = resolveModel(\n        ctx.mapping.join.through.modelClass,\n        ctx.ownerModelClass.modelPaths,\n        'join.through.modelClass'\n      );\n    } catch (err) {\n      throw ctx.createError(err.message);\n    }\n  }\n\n  return Object.assign(ctx, { joinTableModelClass });\n}\n\nfunction createJoinProperties(ctx) {\n  let ret;\n\n  let fromProp;\n  let toProp;\n\n  let relatedProp;\n  let ownerProp;\n\n  ret = createRelationProperty(ctx, ctx.mapping.join.through.from, 'join.through.from');\n  fromProp = ret.prop;\n  ctx = ret.ctx;\n\n  ret = createRelationProperty(ctx, ctx.mapping.join.through.to, 'join.through.to');\n  toProp = ret.prop;\n  ctx = ret.ctx;\n\n  if (fromProp.modelClass.getTableName() !== toProp.modelClass.getTableName()) {\n    throw ctx.createError('join.through `from` and `to` must point to the same join table.');\n  }\n\n  if (ctx.relatedProp.modelClass.getTableName() === fromProp.modelClass.getTableName()) {\n    relatedProp = fromProp;\n    ownerProp = toProp;\n  } else {\n    relatedProp = toProp;\n    ownerProp = fromProp;\n  }\n\n  return Object.assign(ctx, {\n    joinTableOwnerProp: ownerProp,\n    joinTableRelatedProp: relatedProp\n  });\n}\n\nfunction createRelationProperty(ctx, refString, messagePrefix) {\n  let prop = null;\n  let joinTableModelClass = ctx.joinTableModelClass;\n\n  const resolveModelClass = table => {\n    if (joinTableModelClass === null) {\n      joinTableModelClass = inheritModel(getModel());\n      joinTableModelClass.tableName = table;\n      joinTableModelClass.idColumn = null;\n      joinTableModelClass.concurrency = ctx.ownerModelClass.concurrency;\n    }\n\n    if (joinTableModelClass.getTableName() === table) {\n      return joinTableModelClass;\n    } else {\n      return null;\n    }\n  };\n\n  try {\n    prop = new RelationProperty(refString, resolveModelClass);\n  } catch (err) {\n    if (err instanceof RelationProperty.ModelNotFoundError) {\n      throw ctx.createError('join.through `from` and `to` must point to the same join table.');\n    } else {\n      throw ctx.createError(\n        `${messagePrefix} must have format JoinTable.columnName. For example \"JoinTable.someId\" or in case of composite key [\"JoinTable.a\", \"JoinTable.b\"].`\n      );\n    }\n  }\n\n  return {\n    ctx: Object.assign(ctx, { joinTableModelClass }),\n    prop\n  };\n}\n\nfunction parseExtras(ctx) {\n  let extraDef = ctx.mapping.join.through.extra;\n\n  if (!extraDef) {\n    return ctx;\n  }\n\n  if (Array.isArray(extraDef)) {\n    extraDef = extraDef.reduce((extraDef, col) => {\n      extraDef[col] = col;\n      return extraDef;\n    }, {});\n  }\n\n  const joinTableExtras = Object.keys(extraDef).map(key => {\n    const val = extraDef[key];\n\n    return {\n      joinTableCol: val,\n      joinTableProp: ctx.joinTableModelClass.columnNameToPropertyName(val),\n      aliasCol: key,\n      aliasProp: ctx.joinTableModelClass.columnNameToPropertyName(key)\n    };\n  });\n\n  return Object.assign(ctx, { joinTableExtras });\n}\n\nfunction parseBeforeInsert(ctx) {\n  let joinTableBeforeInsert;\n\n  if (isFunction(ctx.mapping.join.through.beforeInsert)) {\n    joinTableBeforeInsert = ctx.mapping.join.through.beforeInsert;\n  } else {\n    joinTableBeforeInsert = model => model;\n  }\n\n  return Object.assign(ctx, { joinTableBeforeInsert });\n}\n\nfunction finalizeJoinModelClass(ctx) {\n  if (ctx.joinTableModelClass.getIdColumn() === null) {\n    // We cannot know if the join table has a primary key. Therefore we set some\n    // known column as the idColumn so that inserts will work.\n    ctx.joinTableModelClass.idColumn = ctx.joinTableRelatedProp.cols;\n  }\n\n  return ctx;\n}\n\nfunction containsNonNull(arr) {\n  for (let i = 0, l = arr.length; i < l; ++i) {\n    const val = arr[i];\n\n    if (Array.isArray(val) && containsNonNull(val)) {\n      return true;\n    } else if (val !== null && val !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = {\n  ManyToManyRelation\n};\n","'use strict';\n\nconst { ManyToManyModifyMixin } = require('./ManyToManyModifyMixin');\nconst SQLITE_BUILTIN_ROW_ID = '_rowid_';\n\n// We need to override this mixin for sqlite because sqlite doesn't support\n// multi-column where in statements with subqueries. We need to use the\n// internal _rowid_ column instead.\nconst ManyToManySqliteModifyMixin = Operation => {\n  return class extends ManyToManyModifyMixin(Operation) {\n    applyModifyFilterForRelatedTable(builder) {\n      const tableRef = builder.tableRefFor(this.relation.relatedModelClass.getTableName());\n      const rowIdRef = `${tableRef}.${SQLITE_BUILTIN_ROW_ID}`;\n      const subquery = this.modifyFilterSubquery.clone().select(rowIdRef);\n\n      return builder.whereInComposite(rowIdRef, subquery);\n    }\n\n    applyModifyFilterForJoinTable(builder) {\n      const joinTableOwnerRefs = this.relation.joinTableOwnerProp.refs(builder);\n      const tableRef = builder.tableRefFor(this.relation.getJoinModelClass(builder).getTableName());\n      const rowIdRef = `${tableRef}.${SQLITE_BUILTIN_ROW_ID}`;\n\n      const ownerIds = this.relation.ownerProp.getProps(this.owner);\n      const subquery = this.modifyFilterSubquery.clone().select(rowIdRef);\n\n      return builder\n        .whereInComposite(rowIdRef, subquery)\n        .whereComposite(joinTableOwnerRefs, ownerIds);\n    }\n  };\n};\n\nmodule.exports = {\n  ManyToManySqliteModifyMixin\n};\n","'use strict';\n\nconst { ManyToManyDeleteOperationBase } = require('./ManyToManyDeleteOperationBase');\nconst { ManyToManyMySqlModifyMixin } = require('../ManyToManyMySqlModifyMixin');\n\nclass ManyToManyDeleteMySqlOperation extends ManyToManyMySqlModifyMixin(\n  ManyToManyDeleteOperationBase\n) {}\n\nmodule.exports = {\n  ManyToManyDeleteMySqlOperation\n};\n","'use strict';\n\nconst { ManyToManyDeleteOperationBase } = require('./ManyToManyDeleteOperationBase');\nconst { ManyToManyModifyMixin } = require('../ManyToManyModifyMixin');\n\nclass ManyToManyDeleteOperation extends ManyToManyModifyMixin(ManyToManyDeleteOperationBase) {}\n\nmodule.exports = {\n  ManyToManyDeleteOperation\n};\n","'use strict';\n\nconst { DeleteOperation } = require('../../../queryBuilder/operations/DeleteOperation');\n\nclass ManyToManyDeleteOperationBase extends DeleteOperation {\n  constructor(name, opt) {\n    super(name, opt);\n\n    this.relation = opt.relation;\n    this.owner = opt.owner;\n  }\n\n  /* istanbul ignore next */\n  applyModifyFilterForRelatedTable(builder) {\n    throw new Error('not implemented');\n  }\n\n  /* istanbul ignore next */\n  applyModifyFilterForJoinTable(builder) {\n    throw new Error('not implemented');\n  }\n}\n\nmodule.exports = {\n  ManyToManyDeleteOperationBase\n};\n","'use strict';\n\nconst { ManyToManyDeleteOperationBase } = require('./ManyToManyDeleteOperationBase');\nconst { ManyToManySqliteModifyMixin } = require('../ManyToManySqliteModifyMixin');\n\nclass ManyToManyDeleteSqliteOperation extends ManyToManySqliteModifyMixin(\n  ManyToManyDeleteOperationBase\n) {}\n\nmodule.exports = {\n  ManyToManyDeleteSqliteOperation\n};\n","'use strict';\n\nconst { RelationFindOperation } = require('../../RelationFindOperation');\nconst { getTempColumn } = require('../../../utils/tmpColumnUtils');\nconst { uniqBy } = require('../../../utils/objectUtils');\n\nclass ManyToManyFindOperation extends RelationFindOperation {\n  constructor(name, opt) {\n    super(name, opt);\n\n    this.ownerJoinColumnAlias = new Array(this.relation.joinTableOwnerProp.size);\n\n    for (let i = 0, l = this.ownerJoinColumnAlias.length; i < l; ++i) {\n      this.ownerJoinColumnAlias[i] = getTempColumn(i);\n    }\n  }\n\n  onBuild(builder) {\n    const relatedModelClass = this.relation.relatedModelClass;\n    const joinTableOwnerProp = this.relation.joinTableOwnerProp;\n    const ownerProp = this.relation.ownerProp;\n    const ids = this.owners.map(owner => ownerProp.getProps(owner));\n\n    this.relation.findQuery(builder, {\n      ownerIds: uniqBy(ids, join)\n    });\n\n    if (!builder.has(builder.constructor.SelectSelector)) {\n      const table = builder.tableRefFor(relatedModelClass.getTableName());\n\n      // If the user hasn't specified a select clause, select the related model's columns.\n      // If we don't do this we also get the join table's columns.\n      builder.select(`${table}.*`);\n\n      // Also select all extra columns.\n      for (const extra of this.relation.joinTableExtras) {\n        const joinTable = builder.tableRefFor(this.relation.joinTable);\n        builder.select(`${joinTable}.${extra.joinTableCol} as ${extra.aliasCol}`);\n      }\n    }\n\n    // We must select the owner join columns so that we know for which owner model the related\n    // models belong to after the requests.\n    for (let i = 0, l = joinTableOwnerProp.size; i < l; ++i) {\n      const joinTableOwnerRef = joinTableOwnerProp.ref(builder, i);\n      const propName = relatedModelClass.columnNameToPropertyName(this.ownerJoinColumnAlias[i]);\n\n      builder.select(joinTableOwnerRef.as(this.ownerJoinColumnAlias[i]));\n      // Mark them to be omitted later.\n      this.omitProps.push(propName);\n    }\n\n    this.selectMissingJoinColumns(builder);\n  }\n\n  onAfter2(_, related) {\n    const isOneToOne = this.relation.isOneToOne();\n\n    if (this.assignResultToOwner) {\n      const ownerProp = this.relation.ownerProp;\n      const relatedByOwnerId = new Map();\n\n      for (let i = 0, l = related.length; i < l; ++i) {\n        const rel = related[i];\n        const key = rel.$propKey(this.ownerJoinColumnAlias);\n        let arr = relatedByOwnerId.get(key);\n\n        if (!arr) {\n          arr = [];\n          relatedByOwnerId.set(key, arr);\n        }\n\n        arr.push(rel);\n      }\n\n      for (let i = 0, l = this.owners.length; i < l; ++i) {\n        const own = this.owners[i];\n        const key = ownerProp.propKey(own);\n        const related = relatedByOwnerId.get(key);\n\n        if (isOneToOne) {\n          own[this.relationProperty] = (related && related[0]) || null;\n        } else {\n          own[this.relationProperty] = related || [];\n        }\n      }\n    }\n\n    return related;\n  }\n\n  clone() {\n    const clone = super.clone();\n    clone.ownerJoinColumnAlias = this.ownerJoinColumnAlias.slice();\n    return clone;\n  }\n}\n\nfunction join(arr) {\n  return arr.join();\n}\n\nmodule.exports = {\n  ManyToManyFindOperation\n};\n","'use strict';\n\nconst { RelationInsertOperation } = require('../../RelationInsertOperation');\nconst { after } = require('../../../utils/promiseUtils');\n\nclass ManyToManyInsertOperation extends RelationInsertOperation {\n  onAdd(builder, args) {\n    const retVal = super.onAdd(builder, args);\n    this.relation.omitExtraProps(this.models);\n    return retVal;\n  }\n\n  onAfter1(builder, ret) {\n    const maybePromise = super.onAfter1(builder, ret);\n    const owner = this.owner;\n\n    return after(maybePromise, inserted => {\n      const ownerId = this.relation.ownerProp.getProps(owner);\n      const joinModelClass = this.relation.getJoinModelClass(builder.knex());\n\n      const joinModels = this.relation.createJoinModels(\n        ownerId,\n        inserted.filter(it => this.relation.relatedProp.hasProps(it))\n      );\n\n      for (let i = 0, l = joinModels.length; i < l; ++i) {\n        joinModels[i] = joinModelClass.fromJson(joinModels[i]);\n      }\n\n      if (this.assignResultToOwner) {\n        owner.$appendRelated(this.relation, inserted);\n      }\n\n      if (joinModels.length === 0) {\n        return inserted;\n      }\n\n      // Insert the join rows to the join table.\n      return joinModelClass\n        .query()\n        .childQueryOf(builder)\n        .runBefore((_, builder) =>\n          this.relation.executeJoinTableBeforeInsert(joinModels, builder.context(), null)\n        )\n        .insert(joinModels)\n        .then(() => inserted);\n    });\n  }\n}\n\nmodule.exports = {\n  ManyToManyInsertOperation\n};\n","'use strict';\n\nconst { normalizeIds } = require('../../../utils/normalizeIds');\nconst { RelateOperation } = require('../../../queryBuilder/operations/RelateOperation');\n\nclass ManyToManyRelateOperation extends RelateOperation {\n  onAdd(_, args) {\n    this.input = args[0];\n    this.ids = normalizeIds(args[0], this.relation.relatedProp);\n    return true;\n  }\n\n  queryExecutor(builder) {\n    const ownerId = this.relation.ownerProp.getProps(this.owner);\n    const joinModelClass = this.relation.getJoinModelClass(builder.knex());\n\n    const joinModels = this.relation\n      .createJoinModels(ownerId, this.ids)\n      .map(it => joinModelClass.fromJson(it));\n\n    return joinModelClass\n      .query()\n      .childQueryOf(builder)\n      .runBefore((_, builder) =>\n        this.relation.executeJoinTableBeforeInsert(joinModels, builder.context(), null)\n      )\n      .insert(joinModels)\n      .copyFrom(builder, /returning/)\n      .runAfter(models => {\n        if (Array.isArray(this.input)) {\n          return models;\n        } else {\n          return models[0];\n        }\n      });\n  }\n}\n\nmodule.exports = {\n  ManyToManyRelateOperation\n};\n","'use strict';\n\nconst { ManyToManyUnrelateOperationBase } = require('./ManyToManyUnrelateOperationBase');\nconst { ManyToManyMySqlModifyMixin } = require('../ManyToManyMySqlModifyMixin');\n\nclass ManyToManyUnrelateMySqlOperation extends ManyToManyMySqlModifyMixin(\n  ManyToManyUnrelateOperationBase\n) {\n  get modifyMainQuery() {\n    return false;\n  }\n}\n\nmodule.exports = {\n  ManyToManyUnrelateMySqlOperation\n};\n","'use strict';\n\nconst { ManyToManyUnrelateOperationBase } = require('./ManyToManyUnrelateOperationBase');\nconst { ManyToManyModifyMixin } = require('../ManyToManyModifyMixin');\n\nclass ManyToManyUnrelateOperation extends ManyToManyModifyMixin(ManyToManyUnrelateOperationBase) {\n  get modifyMainQuery() {\n    return false;\n  }\n}\n\nmodule.exports = {\n  ManyToManyUnrelateOperation\n};\n","'use strict';\n\nconst { UnrelateOperation } = require('../../../queryBuilder/operations/UnrelateOperation');\n\nclass ManyToManyUnrelateOperationBase extends UnrelateOperation {\n  queryExecutor(builder) {\n    const unrelateQuery = this.relation\n      .getJoinModelClass(builder.knex())\n      .query()\n      .childQueryOf(builder)\n      .delete();\n\n    return this.applyModifyFilterForJoinTable(unrelateQuery);\n  }\n\n  /* istanbul ignore next */\n  applyModifyFilterForRelatedTable(builder) {\n    throw new Error('not implemented');\n  }\n\n  /* istanbul ignore next */\n  applyModifyFilterForJoinTable(builder) {\n    throw new Error('not implemented');\n  }\n}\n\nmodule.exports = {\n  ManyToManyUnrelateOperationBase\n};\n","'use strict';\n\nconst { ManyToManyUnrelateOperationBase } = require('./ManyToManyUnrelateOperationBase');\nconst { ManyToManySqliteModifyMixin } = require('../ManyToManySqliteModifyMixin');\n\nclass ManyToManyUnrelateSqliteOperation extends ManyToManySqliteModifyMixin(\n  ManyToManyUnrelateOperationBase\n) {\n  get modifyMainQuery() {\n    return false;\n  }\n}\n\nmodule.exports = {\n  ManyToManyUnrelateSqliteOperation\n};\n","'use strict';\n\nconst { ManyToManyUpdateOperationBase } = require('./ManyToManyUpdateOperationBase');\nconst { ManyToManyMySqlModifyMixin } = require('../ManyToManyMySqlModifyMixin');\n\nclass ManyToManyUpdateMySqlOperation extends ManyToManyMySqlModifyMixin(\n  ManyToManyUpdateOperationBase\n) {}\n\nmodule.exports = {\n  ManyToManyUpdateMySqlOperation\n};\n","'use strict';\n\nconst { ManyToManyUpdateOperationBase } = require('./ManyToManyUpdateOperationBase');\nconst { ManyToManyModifyMixin } = require('../ManyToManyModifyMixin');\n\nclass ManyToManyUpdateOperation extends ManyToManyModifyMixin(ManyToManyUpdateOperationBase) {}\n\nmodule.exports = {\n  ManyToManyUpdateOperation\n};\n","'use strict';\n\nconst { UpdateOperation } = require('../../../queryBuilder/operations/UpdateOperation');\n\nclass ManyToManyUpdateOperationBase extends UpdateOperation {\n  constructor(name, opt) {\n    super(name, opt);\n\n    this.relation = opt.relation;\n    this.owner = opt.owner;\n\n    this.hasExtraProps = false;\n    this.joinTablePatch = {};\n    this.joinTablePatchFilterQuery = null;\n  }\n\n  onAdd(builder, args) {\n    const obj = args[0];\n\n    // Copy all extra properties to the `joinTablePatch` object.\n    for (const extra of this.relation.joinTableExtras) {\n      if (extra.aliasProp in obj) {\n        this.hasExtraProps = true;\n        this.joinTablePatch[extra.joinTableProp] = obj[extra.aliasProp];\n      }\n    }\n\n    const res = super.onAdd(builder, args);\n\n    if (this.hasExtraProps) {\n      // Make sure we don't try to insert the extra properties\n      // to the target table.\n      this.relation.omitExtraProps([this.model]);\n    }\n\n    return res;\n  }\n\n  onAfter1(builder, result) {\n    if (this.hasExtraProps) {\n      const joinTableUpdateQuery = this.relation\n        .getJoinModelClass(builder.knex())\n        .query()\n        .childQueryOf(builder)\n        .patch(this.joinTablePatch);\n\n      return this.applyModifyFilterForJoinTable(joinTableUpdateQuery).return(result);\n    } else {\n      return result;\n    }\n  }\n\n  /* istanbul ignore next */\n  applyModifyFilterForRelatedTable(builder) {\n    throw new Error('not implemented');\n  }\n\n  /* istanbul ignore next */\n  applyModifyFilterForJoinTable(builder) {\n    throw new Error('not implemented');\n  }\n\n  clone() {\n    const clone = super.clone();\n\n    clone.hasExtraProps = this.hasExtraProps;\n    clone.joinTablePatch = this.joinTablePatch;\n    clone.joinTablePatchFilterQuery = this.joinTablePatchFilterQuery;\n\n    return clone;\n  }\n}\n\nmodule.exports = {\n  ManyToManyUpdateOperationBase\n};\n","'use strict';\n\nconst { ManyToManyUpdateOperationBase } = require('./ManyToManyUpdateOperationBase');\nconst { ManyToManySqliteModifyMixin } = require('../ManyToManySqliteModifyMixin');\n\nclass ManyToManyUpdateSqliteOperation extends ManyToManySqliteModifyMixin(\n  ManyToManyUpdateOperationBase\n) {}\n\nmodule.exports = {\n  ManyToManyUpdateSqliteOperation\n};\n","'use strict';\n\nconst Bluebird = require('bluebird');\nconst { Model } = require('./model/Model');\nconst promiseUtils = require('./utils/promiseUtils');\nconst { isSubclassOf } = require('./utils/classUtils');\nconst { isFunction } = require('./utils/objectUtils');\n\nfunction transaction() {\n  // There must be at least one model class and the callback.\n  if (arguments.length < 2) {\n    return Bluebird.reject(\n      new Error(\n        'objection.transaction: provide at least one Model class to bind to the transaction or a knex instance'\n      )\n    );\n  }\n\n  let args = Array.from(arguments);\n\n  if (!isSubclassOf(args[0], Model) && isFunction(args[0].transaction)) {\n    let knex = args[0];\n    args = args.slice(1);\n\n    // If the function is a generator, wrap it using Bluebird.coroutine.\n    if (isGenerator(args[0])) {\n      args[0] = Bluebird.coroutine(args[0]);\n    }\n\n    return knex.transaction.apply(knex, args);\n  } else {\n    // The last argument should be the callback and all other Model subclasses.\n    let callback = args[args.length - 1];\n    let modelClasses = args.slice(0, args.length - 1);\n    let i;\n\n    for (i = 0; i < modelClasses.length; ++i) {\n      if (!isSubclassOf(modelClasses[i], Model)) {\n        return Bluebird.reject(\n          new Error('objection.transaction: all but the last argument should be Model subclasses')\n        );\n      }\n    }\n\n    let knex = modelClasses[0].knex();\n    for (i = 0; i < modelClasses.length; ++i) {\n      if (modelClasses[i].knex() !== knex) {\n        return Bluebird.reject(\n          new Error(\n            'objection.transaction: all Model subclasses must be bound to the same database'\n          )\n        );\n      }\n    }\n\n    // If the function is a generator, wrap it using Promise.coroutine.\n    if (isGenerator(callback)) {\n      callback = Bluebird.coroutine(callback);\n    }\n\n    return knex.transaction(trx => {\n      let args = new Array(modelClasses.length + 1);\n\n      for (let i = 0; i < modelClasses.length; ++i) {\n        args[i] = modelClasses[i].bindTransaction(trx);\n      }\n\n      args[args.length - 1] = trx;\n\n      return promiseUtils.try(() => {\n        return callback.apply(trx, args);\n      });\n    });\n  }\n}\n\ntransaction.start = function(modelClassOrKnex) {\n  let knex = modelClassOrKnex;\n\n  if (isSubclassOf(modelClassOrKnex, Model)) {\n    knex = modelClassOrKnex.knex();\n  }\n\n  if (!knex || !isFunction(knex.transaction)) {\n    return Bluebird.reject(\n      new Error(\n        'objection.transaction.start: first argument must be a model class or a knex instance'\n      )\n    );\n  }\n\n  return new Bluebird((resolve, reject) => {\n    knex\n      .transaction(trx => {\n        resolve(trx);\n      })\n      .catch(err => {\n        reject(err);\n      });\n  });\n};\n\nfunction isGenerator(fn) {\n  return fn && fn.constructor && fn.constructor.name === 'GeneratorFunction';\n}\n\nmodule.exports = {\n  transaction\n};\n","var map = {\n\t\"./assert\": \"../node_modules/objection/lib/utils/assert.js\",\n\t\"./assert.js\": \"../node_modules/objection/lib/utils/assert.js\",\n\t\"./buildUtils\": \"../node_modules/objection/lib/utils/buildUtils.js\",\n\t\"./buildUtils.js\": \"../node_modules/objection/lib/utils/buildUtils.js\",\n\t\"./classUtils\": \"../node_modules/objection/lib/utils/classUtils.js\",\n\t\"./classUtils.js\": \"../node_modules/objection/lib/utils/classUtils.js\",\n\t\"./clone\": \"../node_modules/objection/lib/utils/clone.js\",\n\t\"./clone.js\": \"../node_modules/objection/lib/utils/clone.js\",\n\t\"./createModifier\": \"../node_modules/objection/lib/utils/createModifier.js\",\n\t\"./createModifier.js\": \"../node_modules/objection/lib/utils/createModifier.js\",\n\t\"./deprecate\": \"../node_modules/objection/lib/utils/deprecate.js\",\n\t\"./deprecate.js\": \"../node_modules/objection/lib/utils/deprecate.js\",\n\t\"./identifierMapping\": \"../node_modules/objection/lib/utils/identifierMapping.js\",\n\t\"./identifierMapping.js\": \"../node_modules/objection/lib/utils/identifierMapping.js\",\n\t\"./internalPropUtils\": \"../node_modules/objection/lib/utils/internalPropUtils.js\",\n\t\"./internalPropUtils.js\": \"../node_modules/objection/lib/utils/internalPropUtils.js\",\n\t\"./knexUtils\": \"../node_modules/objection/lib/utils/knexUtils.js\",\n\t\"./knexUtils.js\": \"../node_modules/objection/lib/utils/knexUtils.js\",\n\t\"./mixin\": \"../node_modules/objection/lib/utils/mixin.js\",\n\t\"./mixin.js\": \"../node_modules/objection/lib/utils/mixin.js\",\n\t\"./normalizeIds\": \"../node_modules/objection/lib/utils/normalizeIds.js\",\n\t\"./normalizeIds.js\": \"../node_modules/objection/lib/utils/normalizeIds.js\",\n\t\"./objectUtils\": \"../node_modules/objection/lib/utils/objectUtils.js\",\n\t\"./objectUtils.js\": \"../node_modules/objection/lib/utils/objectUtils.js\",\n\t\"./parseFieldExpression\": \"../node_modules/objection/lib/utils/parseFieldExpression.js\",\n\t\"./parseFieldExpression.js\": \"../node_modules/objection/lib/utils/parseFieldExpression.js\",\n\t\"./promiseUtils\": \"../node_modules/objection/lib/utils/promiseUtils/index.js\",\n\t\"./promiseUtils/\": \"../node_modules/objection/lib/utils/promiseUtils/index.js\",\n\t\"./promiseUtils/after\": \"../node_modules/objection/lib/utils/promiseUtils/after.js\",\n\t\"./promiseUtils/after.js\": \"../node_modules/objection/lib/utils/promiseUtils/after.js\",\n\t\"./promiseUtils/afterReturn\": \"../node_modules/objection/lib/utils/promiseUtils/afterReturn.js\",\n\t\"./promiseUtils/afterReturn.js\": \"../node_modules/objection/lib/utils/promiseUtils/afterReturn.js\",\n\t\"./promiseUtils/index\": \"../node_modules/objection/lib/utils/promiseUtils/index.js\",\n\t\"./promiseUtils/index.js\": \"../node_modules/objection/lib/utils/promiseUtils/index.js\",\n\t\"./promiseUtils/isPromise\": \"../node_modules/objection/lib/utils/promiseUtils/isPromise.js\",\n\t\"./promiseUtils/isPromise.js\": \"../node_modules/objection/lib/utils/promiseUtils/isPromise.js\",\n\t\"./promiseUtils/map\": \"../node_modules/objection/lib/utils/promiseUtils/map.js\",\n\t\"./promiseUtils/map.js\": \"../node_modules/objection/lib/utils/promiseUtils/map.js\",\n\t\"./promiseUtils/mapAfterAllReturn\": \"../node_modules/objection/lib/utils/promiseUtils/mapAfterAllReturn.js\",\n\t\"./promiseUtils/mapAfterAllReturn.js\": \"../node_modules/objection/lib/utils/promiseUtils/mapAfterAllReturn.js\",\n\t\"./promiseUtils/try\": \"../node_modules/objection/lib/utils/promiseUtils/try.js\",\n\t\"./promiseUtils/try.js\": \"../node_modules/objection/lib/utils/promiseUtils/try.js\",\n\t\"./resolveModel\": \"../node_modules/objection/lib/utils/resolveModel.js\",\n\t\"./resolveModel.js\": \"../node_modules/objection/lib/utils/resolveModel.js\",\n\t\"./tmpColumnUtils\": \"../node_modules/objection/lib/utils/tmpColumnUtils.js\",\n\t\"./tmpColumnUtils.js\": \"../node_modules/objection/lib/utils/tmpColumnUtils.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"../node_modules/objection/lib/utils sync recursive ^.*$\";","'use strict';\n\nfunction assertHasId(model) {\n  if (!model.$hasId()) {\n    const modelClass = model.constructor;\n    const ids = modelClass.getIdColumnArray().join(', ');\n\n    throw new Error(\n      `one of the identifier columns [${ids}] is null or undefined. Have you specified the correct identifier column for the model '${\n        modelClass.name\n      }' using the 'idColumn' property?`\n    );\n  }\n}\n\nmodule.exports = {\n  assertHasId\n};\n","'use strict';\n\nconst { isObject, isFunction } = require('./objectUtils');\n\nfunction buildArg(arg, builder) {\n  if (!isObject(arg)) {\n    return arg;\n  }\n\n  if (isFunction(arg.toKnexRaw)) {\n    return arg.toKnexRaw(builder);\n  } else if (arg.isObjectionQueryBuilderBase === true) {\n    return arg.subqueryOf(builder).toKnexQuery();\n  } else {\n    return arg;\n  }\n}\n\nmodule.exports = {\n  buildArg\n};\n","'use strict';\n\nconst { isFunction } = require('./objectUtils');\n\nfunction isSubclassOf(Constructor, SuperConstructor) {\n  if (!isFunction(SuperConstructor)) {\n    return false;\n  }\n\n  while (isFunction(Constructor)) {\n    if (Constructor === SuperConstructor) {\n      return true;\n    }\n\n    Constructor = Object.getPrototypeOf(Constructor);\n  }\n\n  return false;\n}\n\nfunction inherit(Constructor, BaseConstructor) {\n  Constructor.prototype = Object.create(BaseConstructor.prototype);\n  Constructor.prototype.constructor = BaseConstructor;\n  Object.setPrototypeOf(Constructor, BaseConstructor);\n\n  return Constructor;\n}\n\nmodule.exports = {\n  isSubclassOf,\n  inherit\n};\n","'use strict';\n\n/**\n * @license\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash include=\"cloneDeep,clone\" exports=\"node\" --development`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n(function() {\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.5';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used as references for various `Number` constants. */\n  var MAX_SAFE_INTEGER = 9007199254740991;\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[\n    int8Tag\n  ] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[\n    uint8Tag\n  ] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[\n    uint32Tag\n  ] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[\n    arrayBufferTag\n  ] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[\n    dateTag\n  ] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[\n    numberTag\n  ] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[\n    setTag\n  ] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[\n    dataViewTag\n  ] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[\n    float64Tag\n  ] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[\n    mapTag\n  ] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[\n    regexpTag\n  ] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[\n    uint8Tag\n  ] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  })();\n\n  /* Node.js helper references. */\n  var nodeIsMap = nodeUtil && nodeUtil.isMap,\n    nodeIsSet = nodeUtil && nodeUtil.isSet,\n    nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n      length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n      length = values.length,\n      offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n      result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /** Used for built-in method references. */\n  var arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n  /** Used to detect overreaching core-js shims. */\n  var coreJsData = root['__core-js_shared__'];\n\n  /** Used to resolve the decompiled source of functions. */\n  var funcToString = funcProto.toString;\n\n  /** Used to check objects for own properties. */\n  var hasOwnProperty = objectProto.hasOwnProperty;\n\n  /** Used to detect methods masquerading as native. */\n  var maskSrcKey = (function() {\n    var uid = /[^.]+$/.exec((coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO) || '');\n    return uid ? 'Symbol(src)_1.' + uid : '';\n  })();\n\n  /**\n   * Used to resolve the\n   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n   * of values.\n   */\n  var nativeObjectToString = objectProto.toString;\n\n  /** Used to detect if a method is native. */\n  var reIsNative = RegExp(\n    '^' +\n      funcToString\n        .call(hasOwnProperty)\n        .replace(reRegExpChar, '\\\\$&')\n        .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') +\n      '$'\n  );\n\n  /** Built-in value references. */\n  var Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n  var defineProperty = (function() {\n    try {\n      var func = getNative(Object, 'defineProperty');\n      func({}, '', {});\n      return func;\n    } catch (e) {}\n  })();\n\n  /* Built-in method references for those with the same name as other `lodash` methods. */\n  var nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n  /* Built-in method references that are verified to be native. */\n  var DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n  /** Used to lookup unminified function names. */\n  var realNames = {};\n\n  /** Used to detect maps, sets, and weakmaps. */\n  var dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n  /** Used to convert symbols to primitives and strings. */\n  var symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a `lodash` object which wraps `value` to enable implicit method\n   * chain sequences. Methods that operate on and return arrays, collections,\n   * and functions can be chained together. Methods that retrieve a single value\n   * or may return a primitive value will automatically end the chain sequence\n   * and return the unwrapped value. Otherwise, the value must be unwrapped\n   * with `_#value`.\n   *\n   * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n   * enabled using `_.chain`.\n   *\n   * The execution of chained methods is lazy, that is, it's deferred until\n   * `_#value` is implicitly or explicitly called.\n   *\n   * Lazy evaluation allows several methods to support shortcut fusion.\n   * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n   * the creation of intermediate arrays and can greatly reduce the number of\n   * iteratee executions. Sections of a chain sequence qualify for shortcut\n   * fusion if the section is applied to an array and iteratees accept only\n   * one argument. The heuristic for whether a section qualifies for shortcut\n   * fusion is subject to change.\n   *\n   * Chaining is supported in custom builds as long as the `_#value` method is\n   * directly or indirectly included in the build.\n   *\n   * In addition to lodash methods, wrappers have `Array` and `String` methods.\n   *\n   * The wrapper `Array` methods are:\n   * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n   *\n   * The wrapper `String` methods are:\n   * `replace` and `split`\n   *\n   * The wrapper methods that support shortcut fusion are:\n   * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n   * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n   * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n   *\n   * The chainable wrapper methods are:\n   * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n   * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n   * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n   * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n   * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n   * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n   * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n   * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n   * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n   * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n   * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n   * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n   * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n   * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n   * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n   * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n   * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n   * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n   * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n   * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n   * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n   * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n   * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n   * `zipObject`, `zipObjectDeep`, and `zipWith`\n   *\n   * The wrapper methods that are **not** chainable by default are:\n   * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n   * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n   * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n   * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n   * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n   * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n   * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n   * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n   * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n   * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n   * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n   * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n   * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n   * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n   * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n   * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n   * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n   * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n   * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n   * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n   * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n   * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n   * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n   * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n   * `upperFirst`, `value`, and `words`\n   *\n   * @name _\n   * @constructor\n   * @category Seq\n   * @param {*} value The value to wrap in a `lodash` instance.\n   * @returns {Object} Returns the new `lodash` wrapper instance.\n   * @example\n   *\n   * function square(n) {\n   *   return n * n;\n   * }\n   *\n   * var wrapped = _([1, 2, 3]);\n   *\n   * // Returns an unwrapped value.\n   * wrapped.reduce(_.add);\n   * // => 6\n   *\n   * // Returns a wrapped value.\n   * var squares = wrapped.map(square);\n   *\n   * _.isArray(squares);\n   * // => false\n   *\n   * _.isArray(squares.value());\n   * // => true\n   */\n  function lodash() {\n    // No operation performed.\n  }\n\n  /**\n   * The base implementation of `_.create` without support for assigning\n   * properties to the created object.\n   *\n   * @private\n   * @param {Object} proto The object to inherit from.\n   * @returns {Object} Returns the new object.\n   */\n  var baseCreate = (function() {\n    function object() {}\n    return function(proto) {\n      if (!isObject(proto)) {\n        return {};\n      }\n      if (objectCreate) {\n        return objectCreate(proto);\n      }\n      object.prototype = proto;\n      var result = new object();\n      object.prototype = undefined;\n      return result;\n    };\n  })();\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a hash object.\n   *\n   * @private\n   * @constructor\n   * @param {Array} [entries] The key-value pairs to cache.\n   */\n  function Hash(entries) {\n    var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n    this.clear();\n    while (++index < length) {\n      var entry = entries[index];\n      this.set(entry[0], entry[1]);\n    }\n  }\n\n  /**\n   * Removes all key-value entries from the hash.\n   *\n   * @private\n   * @name clear\n   * @memberOf Hash\n   */\n  function hashClear() {\n    this.__data__ = nativeCreate ? nativeCreate(null) : {};\n    this.size = 0;\n  }\n\n  /**\n   * Removes `key` and its value from the hash.\n   *\n   * @private\n   * @name delete\n   * @memberOf Hash\n   * @param {Object} hash The hash to modify.\n   * @param {string} key The key of the value to remove.\n   * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n   */\n  function hashDelete(key) {\n    var result = this.has(key) && delete this.__data__[key];\n    this.size -= result ? 1 : 0;\n    return result;\n  }\n\n  /**\n   * Gets the hash value for `key`.\n   *\n   * @private\n   * @name get\n   * @memberOf Hash\n   * @param {string} key The key of the value to get.\n   * @returns {*} Returns the entry value.\n   */\n  function hashGet(key) {\n    var data = this.__data__;\n    if (nativeCreate) {\n      var result = data[key];\n      return result === HASH_UNDEFINED ? undefined : result;\n    }\n    return hasOwnProperty.call(data, key) ? data[key] : undefined;\n  }\n\n  /**\n   * Checks if a hash value for `key` exists.\n   *\n   * @private\n   * @name has\n   * @memberOf Hash\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function hashHas(key) {\n    var data = this.__data__;\n    return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n  }\n\n  /**\n   * Sets the hash `key` to `value`.\n   *\n   * @private\n   * @name set\n   * @memberOf Hash\n   * @param {string} key The key of the value to set.\n   * @param {*} value The value to set.\n   * @returns {Object} Returns the hash instance.\n   */\n  function hashSet(key, value) {\n    var data = this.__data__;\n    this.size += this.has(key) ? 0 : 1;\n    data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n    return this;\n  }\n\n  // Add methods to `Hash`.\n  Hash.prototype.clear = hashClear;\n  Hash.prototype['delete'] = hashDelete;\n  Hash.prototype.get = hashGet;\n  Hash.prototype.has = hashHas;\n  Hash.prototype.set = hashSet;\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates an list cache object.\n   *\n   * @private\n   * @constructor\n   * @param {Array} [entries] The key-value pairs to cache.\n   */\n  function ListCache(entries) {\n    var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n    this.clear();\n    while (++index < length) {\n      var entry = entries[index];\n      this.set(entry[0], entry[1]);\n    }\n  }\n\n  /**\n   * Removes all key-value entries from the list cache.\n   *\n   * @private\n   * @name clear\n   * @memberOf ListCache\n   */\n  function listCacheClear() {\n    this.__data__ = [];\n    this.size = 0;\n  }\n\n  /**\n   * Removes `key` and its value from the list cache.\n   *\n   * @private\n   * @name delete\n   * @memberOf ListCache\n   * @param {string} key The key of the value to remove.\n   * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n   */\n  function listCacheDelete(key) {\n    var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n    if (index < 0) {\n      return false;\n    }\n    var lastIndex = data.length - 1;\n    if (index == lastIndex) {\n      data.pop();\n    } else {\n      splice.call(data, index, 1);\n    }\n    --this.size;\n    return true;\n  }\n\n  /**\n   * Gets the list cache value for `key`.\n   *\n   * @private\n   * @name get\n   * @memberOf ListCache\n   * @param {string} key The key of the value to get.\n   * @returns {*} Returns the entry value.\n   */\n  function listCacheGet(key) {\n    var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n    return index < 0 ? undefined : data[index][1];\n  }\n\n  /**\n   * Checks if a list cache value for `key` exists.\n   *\n   * @private\n   * @name has\n   * @memberOf ListCache\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function listCacheHas(key) {\n    return assocIndexOf(this.__data__, key) > -1;\n  }\n\n  /**\n   * Sets the list cache `key` to `value`.\n   *\n   * @private\n   * @name set\n   * @memberOf ListCache\n   * @param {string} key The key of the value to set.\n   * @param {*} value The value to set.\n   * @returns {Object} Returns the list cache instance.\n   */\n  function listCacheSet(key, value) {\n    var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n    if (index < 0) {\n      ++this.size;\n      data.push([key, value]);\n    } else {\n      data[index][1] = value;\n    }\n    return this;\n  }\n\n  // Add methods to `ListCache`.\n  ListCache.prototype.clear = listCacheClear;\n  ListCache.prototype['delete'] = listCacheDelete;\n  ListCache.prototype.get = listCacheGet;\n  ListCache.prototype.has = listCacheHas;\n  ListCache.prototype.set = listCacheSet;\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a map cache object to store key-value pairs.\n   *\n   * @private\n   * @constructor\n   * @param {Array} [entries] The key-value pairs to cache.\n   */\n  function MapCache(entries) {\n    var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n    this.clear();\n    while (++index < length) {\n      var entry = entries[index];\n      this.set(entry[0], entry[1]);\n    }\n  }\n\n  /**\n   * Removes all key-value entries from the map.\n   *\n   * @private\n   * @name clear\n   * @memberOf MapCache\n   */\n  function mapCacheClear() {\n    this.size = 0;\n    this.__data__ = {\n      hash: new Hash(),\n      map: new (Map || ListCache)(),\n      string: new Hash()\n    };\n  }\n\n  /**\n   * Removes `key` and its value from the map.\n   *\n   * @private\n   * @name delete\n   * @memberOf MapCache\n   * @param {string} key The key of the value to remove.\n   * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n   */\n  function mapCacheDelete(key) {\n    var result = getMapData(this, key)['delete'](key);\n    this.size -= result ? 1 : 0;\n    return result;\n  }\n\n  /**\n   * Gets the map value for `key`.\n   *\n   * @private\n   * @name get\n   * @memberOf MapCache\n   * @param {string} key The key of the value to get.\n   * @returns {*} Returns the entry value.\n   */\n  function mapCacheGet(key) {\n    return getMapData(this, key).get(key);\n  }\n\n  /**\n   * Checks if a map value for `key` exists.\n   *\n   * @private\n   * @name has\n   * @memberOf MapCache\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function mapCacheHas(key) {\n    return getMapData(this, key).has(key);\n  }\n\n  /**\n   * Sets the map `key` to `value`.\n   *\n   * @private\n   * @name set\n   * @memberOf MapCache\n   * @param {string} key The key of the value to set.\n   * @param {*} value The value to set.\n   * @returns {Object} Returns the map cache instance.\n   */\n  function mapCacheSet(key, value) {\n    var data = getMapData(this, key),\n      size = data.size;\n\n    data.set(key, value);\n    this.size += data.size == size ? 0 : 1;\n    return this;\n  }\n\n  // Add methods to `MapCache`.\n  MapCache.prototype.clear = mapCacheClear;\n  MapCache.prototype['delete'] = mapCacheDelete;\n  MapCache.prototype.get = mapCacheGet;\n  MapCache.prototype.has = mapCacheHas;\n  MapCache.prototype.set = mapCacheSet;\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a stack cache object to store key-value pairs.\n   *\n   * @private\n   * @constructor\n   * @param {Array} [entries] The key-value pairs to cache.\n   */\n  function Stack(entries) {\n    var data = (this.__data__ = new ListCache(entries));\n    this.size = data.size;\n  }\n\n  /**\n   * Removes all key-value entries from the stack.\n   *\n   * @private\n   * @name clear\n   * @memberOf Stack\n   */\n  function stackClear() {\n    this.__data__ = new ListCache();\n    this.size = 0;\n  }\n\n  /**\n   * Removes `key` and its value from the stack.\n   *\n   * @private\n   * @name delete\n   * @memberOf Stack\n   * @param {string} key The key of the value to remove.\n   * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n   */\n  function stackDelete(key) {\n    var data = this.__data__,\n      result = data['delete'](key);\n\n    this.size = data.size;\n    return result;\n  }\n\n  /**\n   * Gets the stack value for `key`.\n   *\n   * @private\n   * @name get\n   * @memberOf Stack\n   * @param {string} key The key of the value to get.\n   * @returns {*} Returns the entry value.\n   */\n  function stackGet(key) {\n    return this.__data__.get(key);\n  }\n\n  /**\n   * Checks if a stack value for `key` exists.\n   *\n   * @private\n   * @name has\n   * @memberOf Stack\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function stackHas(key) {\n    return this.__data__.has(key);\n  }\n\n  /**\n   * Sets the stack `key` to `value`.\n   *\n   * @private\n   * @name set\n   * @memberOf Stack\n   * @param {string} key The key of the value to set.\n   * @param {*} value The value to set.\n   * @returns {Object} Returns the stack cache instance.\n   */\n  function stackSet(key, value) {\n    var data = this.__data__;\n    if (data instanceof ListCache) {\n      var pairs = data.__data__;\n      if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n        pairs.push([key, value]);\n        this.size = ++data.size;\n        return this;\n      }\n      data = this.__data__ = new MapCache(pairs);\n    }\n    data.set(key, value);\n    this.size = data.size;\n    return this;\n  }\n\n  // Add methods to `Stack`.\n  Stack.prototype.clear = stackClear;\n  Stack.prototype['delete'] = stackDelete;\n  Stack.prototype.get = stackGet;\n  Stack.prototype.has = stackHas;\n  Stack.prototype.set = stackSet;\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates an array of the enumerable property names of the array-like `value`.\n   *\n   * @private\n   * @param {*} value The value to query.\n   * @param {boolean} inherited Specify returning inherited property names.\n   * @returns {Array} Returns the array of property names.\n   */\n  function arrayLikeKeys(value, inherited) {\n    var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n    for (var key in value) {\n      if (\n        (inherited || hasOwnProperty.call(value, key)) &&\n        !(\n          skipIndexes &&\n          // Safari 9 has enumerable `arguments.length` in strict mode.\n          (key == 'length' ||\n            // Node.js 0.10 has enumerable non-index properties on buffers.\n            (isBuff && (key == 'offset' || key == 'parent')) ||\n            // PhantomJS 2 has enumerable non-index properties on typed arrays.\n            (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n            // Skip index properties.\n            isIndex(key, length))\n        )\n      ) {\n        result.push(key);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Assigns `value` to `key` of `object` if the existing value is not equivalent\n   * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n   * for equality comparisons.\n   *\n   * @private\n   * @param {Object} object The object to modify.\n   * @param {string} key The key of the property to assign.\n   * @param {*} value The value to assign.\n   */\n  function assignValue(object, key, value) {\n    var objValue = object[key];\n    if (\n      !(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))\n    ) {\n      baseAssignValue(object, key, value);\n    }\n  }\n\n  /**\n   * Gets the index at which the `key` is found in `array` of key-value pairs.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} key The key to search for.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function assocIndexOf(array, key) {\n    var length = array.length;\n    while (length--) {\n      if (eq(array[length][0], key)) {\n        return length;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.assign` without support for multiple sources\n   * or `customizer` functions.\n   *\n   * @private\n   * @param {Object} object The destination object.\n   * @param {Object} source The source object.\n   * @returns {Object} Returns `object`.\n   */\n  function baseAssign(object, source) {\n    return object && copyObject(source, keys(source), object);\n  }\n\n  /**\n   * The base implementation of `_.assignIn` without support for multiple sources\n   * or `customizer` functions.\n   *\n   * @private\n   * @param {Object} object The destination object.\n   * @param {Object} source The source object.\n   * @returns {Object} Returns `object`.\n   */\n  function baseAssignIn(object, source) {\n    return object && copyObject(source, keysIn(source), object);\n  }\n\n  /**\n   * The base implementation of `assignValue` and `assignMergeValue` without\n   * value checks.\n   *\n   * @private\n   * @param {Object} object The object to modify.\n   * @param {string} key The key of the property to assign.\n   * @param {*} value The value to assign.\n   */\n  function baseAssignValue(object, key, value) {\n    if (key == '__proto__' && defineProperty) {\n      defineProperty(object, key, {\n        configurable: true,\n        enumerable: true,\n        value: value,\n        writable: true\n      });\n    } else {\n      object[key] = value;\n    }\n  }\n\n  /**\n   * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n   * traversed objects.\n   *\n   * @private\n   * @param {*} value The value to clone.\n   * @param {boolean} bitmask The bitmask flags.\n   *  1 - Deep clone\n   *  2 - Flatten inherited properties\n   *  4 - Clone symbols\n   * @param {Function} [customizer] The function to customize cloning.\n   * @param {string} [key] The key of `value`.\n   * @param {Object} [object] The parent object of `value`.\n   * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n   * @returns {*} Returns the cloned value.\n   */\n  function baseClone(value, bitmask, customizer, key, object, stack) {\n    var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n    if (customizer) {\n      result = object ? customizer(value, key, object, stack) : customizer(value);\n    }\n    if (result !== undefined) {\n      return result;\n    }\n    if (!isObject(value)) {\n      return value;\n    }\n    var isArr = isArray(value);\n    if (isArr) {\n      result = initCloneArray(value);\n      if (!isDeep) {\n        return copyArray(value, result);\n      }\n    } else {\n      var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n      if (isBuffer(value)) {\n        return cloneBuffer(value, isDeep);\n      }\n      if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n        result = isFlat || isFunc ? {} : initCloneObject(value);\n        if (!isDeep) {\n          return isFlat\n            ? copySymbolsIn(value, baseAssignIn(result, value))\n            : copySymbols(value, baseAssign(result, value));\n        }\n      } else {\n        if (!cloneableTags[tag]) {\n          return object ? value : {};\n        }\n        result = initCloneByTag(value, tag, isDeep);\n      }\n    }\n    // Check for circular references and return its corresponding clone.\n    stack || (stack = new Stack());\n    var stacked = stack.get(value);\n    if (stacked) {\n      return stacked;\n    }\n    stack.set(value, result);\n\n    if (isSet(value)) {\n      value.forEach(function(subValue) {\n        result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n      });\n\n      return result;\n    }\n\n    if (isMap(value)) {\n      value.forEach(function(subValue, key) {\n        result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n\n      return result;\n    }\n\n    var keysFunc = isFull ? (isFlat ? getAllKeysIn : getAllKeys) : isFlat ? keysIn : keys;\n\n    var props = isArr ? undefined : keysFunc(value);\n    arrayEach(props || value, function(subValue, key) {\n      if (props) {\n        key = subValue;\n        subValue = value[key];\n      }\n      // Recursively populate clone (susceptible to call stack limits).\n      assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n   * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n   * symbols of `object`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Function} keysFunc The function to get the keys of `object`.\n   * @param {Function} symbolsFunc The function to get the symbols of `object`.\n   * @returns {Array} Returns the array of property names and symbols.\n   */\n  function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n    var result = keysFunc(object);\n    return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n  }\n\n  /**\n   * The base implementation of `getTag` without fallbacks for buggy environments.\n   *\n   * @private\n   * @param {*} value The value to query.\n   * @returns {string} Returns the `toStringTag`.\n   */\n  function baseGetTag(value) {\n    if (value == null) {\n      return value === undefined ? undefinedTag : nullTag;\n    }\n    return symToStringTag && symToStringTag in Object(value)\n      ? getRawTag(value)\n      : objectToString(value);\n  }\n\n  /**\n   * The base implementation of `_.isArguments`.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n   */\n  function baseIsArguments(value) {\n    return isObjectLike(value) && baseGetTag(value) == argsTag;\n  }\n\n  /**\n   * The base implementation of `_.isMap` without Node.js optimizations.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n   */\n  function baseIsMap(value) {\n    return isObjectLike(value) && getTag(value) == mapTag;\n  }\n\n  /**\n   * The base implementation of `_.isNative` without bad shim checks.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a native function,\n   *  else `false`.\n   */\n  function baseIsNative(value) {\n    if (!isObject(value) || isMasked(value)) {\n      return false;\n    }\n    var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n    return pattern.test(toSource(value));\n  }\n\n  /**\n   * The base implementation of `_.isSet` without Node.js optimizations.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n   */\n  function baseIsSet(value) {\n    return isObjectLike(value) && getTag(value) == setTag;\n  }\n\n  /**\n   * The base implementation of `_.isTypedArray` without Node.js optimizations.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n   */\n  function baseIsTypedArray(value) {\n    return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n  }\n\n  /**\n   * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names.\n   */\n  function baseKeys(object) {\n    if (!isPrototype(object)) {\n      return nativeKeys(object);\n    }\n    var result = [];\n    for (var key in Object(object)) {\n      if (hasOwnProperty.call(object, key) && key != 'constructor') {\n        result.push(key);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names.\n   */\n  function baseKeysIn(object) {\n    if (!isObject(object)) {\n      return nativeKeysIn(object);\n    }\n    var isProto = isPrototype(object),\n      result = [];\n\n    for (var key in object) {\n      if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n        result.push(key);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Creates a clone of  `buffer`.\n   *\n   * @private\n   * @param {Buffer} buffer The buffer to clone.\n   * @param {boolean} [isDeep] Specify a deep clone.\n   * @returns {Buffer} Returns the cloned buffer.\n   */\n  function cloneBuffer(buffer, isDeep) {\n    if (isDeep) {\n      return buffer.slice();\n    }\n    var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n    buffer.copy(result);\n    return result;\n  }\n\n  /**\n   * Creates a clone of `arrayBuffer`.\n   *\n   * @private\n   * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n   * @returns {ArrayBuffer} Returns the cloned array buffer.\n   */\n  function cloneArrayBuffer(arrayBuffer) {\n    var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n    new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n    return result;\n  }\n\n  /**\n   * Creates a clone of `dataView`.\n   *\n   * @private\n   * @param {Object} dataView The data view to clone.\n   * @param {boolean} [isDeep] Specify a deep clone.\n   * @returns {Object} Returns the cloned data view.\n   */\n  function cloneDataView(dataView, isDeep) {\n    var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n    return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n  }\n\n  /**\n   * Creates a clone of `regexp`.\n   *\n   * @private\n   * @param {Object} regexp The regexp to clone.\n   * @returns {Object} Returns the cloned regexp.\n   */\n  function cloneRegExp(regexp) {\n    var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n    result.lastIndex = regexp.lastIndex;\n    return result;\n  }\n\n  /**\n   * Creates a clone of the `symbol` object.\n   *\n   * @private\n   * @param {Object} symbol The symbol object to clone.\n   * @returns {Object} Returns the cloned symbol object.\n   */\n  function cloneSymbol(symbol) {\n    return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n  }\n\n  /**\n   * Creates a clone of `typedArray`.\n   *\n   * @private\n   * @param {Object} typedArray The typed array to clone.\n   * @param {boolean} [isDeep] Specify a deep clone.\n   * @returns {Object} Returns the cloned typed array.\n   */\n  function cloneTypedArray(typedArray, isDeep) {\n    var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n    return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n  }\n\n  /**\n   * Copies the values of `source` to `array`.\n   *\n   * @private\n   * @param {Array} source The array to copy values from.\n   * @param {Array} [array=[]] The array to copy values to.\n   * @returns {Array} Returns `array`.\n   */\n  function copyArray(source, array) {\n    var index = -1,\n      length = source.length;\n\n    array || (array = Array(length));\n    while (++index < length) {\n      array[index] = source[index];\n    }\n    return array;\n  }\n\n  /**\n   * Copies properties of `source` to `object`.\n   *\n   * @private\n   * @param {Object} source The object to copy properties from.\n   * @param {Array} props The property identifiers to copy.\n   * @param {Object} [object={}] The object to copy properties to.\n   * @param {Function} [customizer] The function to customize copied values.\n   * @returns {Object} Returns `object`.\n   */\n  function copyObject(source, props, object, customizer) {\n    var isNew = !object;\n    object || (object = {});\n\n    var index = -1,\n      length = props.length;\n\n    while (++index < length) {\n      var key = props[index];\n\n      var newValue = customizer\n        ? customizer(object[key], source[key], key, object, source)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = source[key];\n      }\n      if (isNew) {\n        baseAssignValue(object, key, newValue);\n      } else {\n        assignValue(object, key, newValue);\n      }\n    }\n    return object;\n  }\n\n  /**\n   * Copies own symbols of `source` to `object`.\n   *\n   * @private\n   * @param {Object} source The object to copy symbols from.\n   * @param {Object} [object={}] The object to copy symbols to.\n   * @returns {Object} Returns `object`.\n   */\n  function copySymbols(source, object) {\n    return copyObject(source, getSymbols(source), object);\n  }\n\n  /**\n   * Copies own and inherited symbols of `source` to `object`.\n   *\n   * @private\n   * @param {Object} source The object to copy symbols from.\n   * @param {Object} [object={}] The object to copy symbols to.\n   * @returns {Object} Returns `object`.\n   */\n  function copySymbolsIn(source, object) {\n    return copyObject(source, getSymbolsIn(source), object);\n  }\n\n  /**\n   * Creates an array of own enumerable property names and symbols of `object`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names and symbols.\n   */\n  function getAllKeys(object) {\n    return baseGetAllKeys(object, keys, getSymbols);\n  }\n\n  /**\n   * Creates an array of own and inherited enumerable property names and\n   * symbols of `object`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names and symbols.\n   */\n  function getAllKeysIn(object) {\n    return baseGetAllKeys(object, keysIn, getSymbolsIn);\n  }\n\n  /**\n   * Gets the data for `map`.\n   *\n   * @private\n   * @param {Object} map The map to query.\n   * @param {string} key The reference key.\n   * @returns {*} Returns the map data.\n   */\n  function getMapData(map, key) {\n    var data = map.__data__;\n    return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n  }\n\n  /**\n   * Gets the native function at `key` of `object`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {string} key The key of the method to get.\n   * @returns {*} Returns the function if it's native, else `undefined`.\n   */\n  function getNative(object, key) {\n    var value = getValue(object, key);\n    return baseIsNative(value) ? value : undefined;\n  }\n\n  /**\n   * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n   *\n   * @private\n   * @param {*} value The value to query.\n   * @returns {string} Returns the raw `toStringTag`.\n   */\n  function getRawTag(value) {\n    var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n    try {\n      value[symToStringTag] = undefined;\n      var unmasked = true;\n    } catch (e) {}\n\n    var result = nativeObjectToString.call(value);\n    if (unmasked) {\n      if (isOwn) {\n        value[symToStringTag] = tag;\n      } else {\n        delete value[symToStringTag];\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Creates an array of the own enumerable symbols of `object`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of symbols.\n   */\n  var getSymbols = !nativeGetSymbols\n    ? stubArray\n    : function(object) {\n        if (object == null) {\n          return [];\n        }\n        object = Object(object);\n        return arrayFilter(nativeGetSymbols(object), function(symbol) {\n          return propertyIsEnumerable.call(object, symbol);\n        });\n      };\n\n  /**\n   * Creates an array of the own and inherited enumerable symbols of `object`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of symbols.\n   */\n  var getSymbolsIn = !nativeGetSymbols\n    ? stubArray\n    : function(object) {\n        var result = [];\n        while (object) {\n          arrayPush(result, getSymbols(object));\n          object = getPrototype(object);\n        }\n        return result;\n      };\n\n  /**\n   * Gets the `toStringTag` of `value`.\n   *\n   * @private\n   * @param {*} value The value to query.\n   * @returns {string} Returns the `toStringTag`.\n   */\n  var getTag = baseGetTag;\n\n  // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n  if (\n    (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map()) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set()) != setTag) ||\n    (WeakMap && getTag(new WeakMap()) != weakMapTag)\n  ) {\n    getTag = function(value) {\n      var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n      if (ctorString) {\n        switch (ctorString) {\n          case dataViewCtorString:\n            return dataViewTag;\n          case mapCtorString:\n            return mapTag;\n          case promiseCtorString:\n            return promiseTag;\n          case setCtorString:\n            return setTag;\n          case weakMapCtorString:\n            return weakMapTag;\n        }\n      }\n      return result;\n    };\n  }\n\n  /**\n   * Initializes an array clone.\n   *\n   * @private\n   * @param {Array} array The array to clone.\n   * @returns {Array} Returns the initialized clone.\n   */\n  function initCloneArray(array) {\n    var length = array.length,\n      result = new array.constructor(length);\n\n    // Add properties assigned by `RegExp#exec`.\n    if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n      result.index = array.index;\n      result.input = array.input;\n    }\n    return result;\n  }\n\n  /**\n   * Initializes an object clone.\n   *\n   * @private\n   * @param {Object} object The object to clone.\n   * @returns {Object} Returns the initialized clone.\n   */\n  function initCloneObject(object) {\n    return typeof object.constructor == 'function' && !isPrototype(object)\n      ? baseCreate(getPrototype(object))\n      : {};\n  }\n\n  /**\n   * Initializes an object clone based on its `toStringTag`.\n   *\n   * **Note:** This function only supports cloning values with tags of\n   * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n   *\n   * @private\n   * @param {Object} object The object to clone.\n   * @param {string} tag The `toStringTag` of the object to clone.\n   * @param {boolean} [isDeep] Specify a deep clone.\n   * @returns {Object} Returns the initialized clone.\n   */\n  function initCloneByTag(object, tag, isDeep) {\n    var Ctor = object.constructor;\n    switch (tag) {\n      case arrayBufferTag:\n        return cloneArrayBuffer(object);\n\n      case boolTag:\n      case dateTag:\n        return new Ctor(+object);\n\n      case dataViewTag:\n        return cloneDataView(object, isDeep);\n\n      case float32Tag:\n      case float64Tag:\n      case int8Tag:\n      case int16Tag:\n      case int32Tag:\n      case uint8Tag:\n      case uint8ClampedTag:\n      case uint16Tag:\n      case uint32Tag:\n        return cloneTypedArray(object, isDeep);\n\n      case mapTag:\n        return new Ctor();\n\n      case numberTag:\n      case stringTag:\n        return new Ctor(object);\n\n      case regexpTag:\n        return cloneRegExp(object);\n\n      case setTag:\n        return new Ctor();\n\n      case symbolTag:\n        return cloneSymbol(object);\n    }\n  }\n\n  /**\n   * Checks if `value` is a valid array-like index.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n   * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n   */\n  function isIndex(value, length) {\n    var type = typeof value;\n    length = length == null ? MAX_SAFE_INTEGER : length;\n\n    return (\n      !!length &&\n      (type == 'number' || (type != 'symbol' && reIsUint.test(value))) &&\n      (value > -1 && value % 1 == 0 && value < length)\n    );\n  }\n\n  /**\n   * Checks if `value` is suitable for use as unique object key.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n   */\n  function isKeyable(value) {\n    var type = typeof value;\n    return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean'\n      ? value !== '__proto__'\n      : value === null;\n  }\n\n  /**\n   * Checks if `func` has its source masked.\n   *\n   * @private\n   * @param {Function} func The function to check.\n   * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n   */\n  function isMasked(func) {\n    return !!maskSrcKey && maskSrcKey in func;\n  }\n\n  /**\n   * Checks if `value` is likely a prototype object.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n   */\n  function isPrototype(value) {\n    var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n    return value === proto;\n  }\n\n  /**\n   * This function is like\n   * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n   * except that it includes inherited enumerable properties.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names.\n   */\n  function nativeKeysIn(object) {\n    var result = [];\n    if (object != null) {\n      for (var key in Object(object)) {\n        result.push(key);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `value` to a string using `Object.prototype.toString`.\n   *\n   * @private\n   * @param {*} value The value to convert.\n   * @returns {string} Returns the converted string.\n   */\n  function objectToString(value) {\n    return nativeObjectToString.call(value);\n  }\n\n  /**\n   * Converts `func` to its source code.\n   *\n   * @private\n   * @param {Function} func The function to convert.\n   * @returns {string} Returns the source code.\n   */\n  function toSource(func) {\n    if (func != null) {\n      try {\n        return funcToString.call(func);\n      } catch (e) {}\n      try {\n        return func + '';\n      } catch (e) {}\n    }\n    return '';\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a shallow clone of `value`.\n   *\n   * **Note:** This method is loosely based on the\n   * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n   * and supports cloning arrays, array buffers, booleans, date objects, maps,\n   * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n   * arrays. The own enumerable properties of `arguments` objects are cloned\n   * as plain objects. An empty object is returned for uncloneable values such\n   * as error objects, functions, DOM nodes, and WeakMaps.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to clone.\n   * @returns {*} Returns the cloned value.\n   * @see _.cloneDeep\n   * @example\n   *\n   * var objects = [{ 'a': 1 }, { 'b': 2 }];\n   *\n   * var shallow = _.clone(objects);\n   * console.log(shallow[0] === objects[0]);\n   * // => true\n   */\n  function clone(value) {\n    return baseClone(value, CLONE_SYMBOLS_FLAG);\n  }\n\n  /**\n   * This method is like `_.clone` except that it recursively clones `value`.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.0.0\n   * @category Lang\n   * @param {*} value The value to recursively clone.\n   * @returns {*} Returns the deep cloned value.\n   * @see _.clone\n   * @example\n   *\n   * var objects = [{ 'a': 1 }, { 'b': 2 }];\n   *\n   * var deep = _.cloneDeep(objects);\n   * console.log(deep[0] === objects[0]);\n   * // => false\n   */\n  function cloneDeep(value) {\n    return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n  }\n\n  /**\n   * Performs a\n   * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n   * comparison between two values to determine if they are equivalent.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n   * @example\n   *\n   * var object = { 'a': 1 };\n   * var other = { 'a': 1 };\n   *\n   * _.eq(object, object);\n   * // => true\n   *\n   * _.eq(object, other);\n   * // => false\n   *\n   * _.eq('a', 'a');\n   * // => true\n   *\n   * _.eq('a', Object('a'));\n   * // => false\n   *\n   * _.eq(NaN, NaN);\n   * // => true\n   */\n  function eq(value, other) {\n    return value === other || (value !== value && other !== other);\n  }\n\n  /**\n   * Checks if `value` is likely an `arguments` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n   *  else `false`.\n   * @example\n   *\n   * _.isArguments(function() { return arguments; }());\n   * // => true\n   *\n   * _.isArguments([1, 2, 3]);\n   * // => false\n   */\n  var isArguments = baseIsArguments(\n    (function() {\n      return arguments;\n    })()\n  )\n    ? baseIsArguments\n    : function(value) {\n        return (\n          isObjectLike(value) &&\n          hasOwnProperty.call(value, 'callee') &&\n          !propertyIsEnumerable.call(value, 'callee')\n        );\n      };\n\n  /**\n   * Checks if `value` is classified as an `Array` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n   * @example\n   *\n   * _.isArray([1, 2, 3]);\n   * // => true\n   *\n   * _.isArray(document.body.children);\n   * // => false\n   *\n   * _.isArray('abc');\n   * // => false\n   *\n   * _.isArray(_.noop);\n   * // => false\n   */\n  var isArray = Array.isArray;\n\n  /**\n   * Checks if `value` is array-like. A value is considered array-like if it's\n   * not a function and has a `value.length` that's an integer greater than or\n   * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n   * @example\n   *\n   * _.isArrayLike([1, 2, 3]);\n   * // => true\n   *\n   * _.isArrayLike(document.body.children);\n   * // => true\n   *\n   * _.isArrayLike('abc');\n   * // => true\n   *\n   * _.isArrayLike(_.noop);\n   * // => false\n   */\n  function isArrayLike(value) {\n    return value != null && isLength(value.length) && !isFunction(value);\n  }\n\n  /**\n   * Checks if `value` is a buffer.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.3.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n   * @example\n   *\n   * _.isBuffer(new Buffer(2));\n   * // => true\n   *\n   * _.isBuffer(new Uint8Array(2));\n   * // => false\n   */\n  var isBuffer = nativeIsBuffer || stubFalse;\n\n  /**\n   * Checks if `value` is classified as a `Function` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n   * @example\n   *\n   * _.isFunction(_);\n   * // => true\n   *\n   * _.isFunction(/abc/);\n   * // => false\n   */\n  function isFunction(value) {\n    if (!isObject(value)) {\n      return false;\n    }\n    // The use of `Object#toString` avoids issues with the `typeof` operator\n    // in Safari 9 which returns 'object' for typed arrays and other constructors.\n    var tag = baseGetTag(value);\n    return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n  }\n\n  /**\n   * Checks if `value` is a valid array-like length.\n   *\n   * **Note:** This method is loosely based on\n   * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n   * @example\n   *\n   * _.isLength(3);\n   * // => true\n   *\n   * _.isLength(Number.MIN_VALUE);\n   * // => false\n   *\n   * _.isLength(Infinity);\n   * // => false\n   *\n   * _.isLength('3');\n   * // => false\n   */\n  function isLength(value) {\n    return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n  }\n\n  /**\n   * Checks if `value` is the\n   * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n   * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n   * @example\n   *\n   * _.isObject({});\n   * // => true\n   *\n   * _.isObject([1, 2, 3]);\n   * // => true\n   *\n   * _.isObject(_.noop);\n   * // => true\n   *\n   * _.isObject(null);\n   * // => false\n   */\n  function isObject(value) {\n    var type = typeof value;\n    return value != null && (type == 'object' || type == 'function');\n  }\n\n  /**\n   * Checks if `value` is object-like. A value is object-like if it's not `null`\n   * and has a `typeof` result of \"object\".\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   * @example\n   *\n   * _.isObjectLike({});\n   * // => true\n   *\n   * _.isObjectLike([1, 2, 3]);\n   * // => true\n   *\n   * _.isObjectLike(_.noop);\n   * // => false\n   *\n   * _.isObjectLike(null);\n   * // => false\n   */\n  function isObjectLike(value) {\n    return value != null && typeof value == 'object';\n  }\n\n  /**\n   * Checks if `value` is classified as a `Map` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.3.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n   * @example\n   *\n   * _.isMap(new Map);\n   * // => true\n   *\n   * _.isMap(new WeakMap);\n   * // => false\n   */\n  var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n  /**\n   * Checks if `value` is classified as a `Set` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.3.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n   * @example\n   *\n   * _.isSet(new Set);\n   * // => true\n   *\n   * _.isSet(new WeakSet);\n   * // => false\n   */\n  var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n  /**\n   * Checks if `value` is classified as a typed array.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n   * @example\n   *\n   * _.isTypedArray(new Uint8Array);\n   * // => true\n   *\n   * _.isTypedArray([]);\n   * // => false\n   */\n  var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates an array of the own enumerable property names of `object`.\n   *\n   * **Note:** Non-object values are coerced to objects. See the\n   * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n   * for more details.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names.\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   *   this.b = 2;\n   * }\n   *\n   * Foo.prototype.c = 3;\n   *\n   * _.keys(new Foo);\n   * // => ['a', 'b'] (iteration order is not guaranteed)\n   *\n   * _.keys('hi');\n   * // => ['0', '1']\n   */\n  function keys(object) {\n    return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n  }\n\n  /**\n   * Creates an array of the own and inherited enumerable property names of `object`.\n   *\n   * **Note:** Non-object values are coerced to objects.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Object\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names.\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   *   this.b = 2;\n   * }\n   *\n   * Foo.prototype.c = 3;\n   *\n   * _.keysIn(new Foo);\n   * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n   */\n  function keysIn(object) {\n    return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * This method returns a new empty array.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.13.0\n   * @category Util\n   * @returns {Array} Returns the new empty array.\n   * @example\n   *\n   * var arrays = _.times(2, _.stubArray);\n   *\n   * console.log(arrays);\n   * // => [[], []]\n   *\n   * console.log(arrays[0] === arrays[1]);\n   * // => false\n   */\n  function stubArray() {\n    return [];\n  }\n\n  /**\n   * This method returns `false`.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.13.0\n   * @category Util\n   * @returns {boolean} Returns `false`.\n   * @example\n   *\n   * _.times(2, _.stubFalse);\n   * // => [false, false]\n   */\n  function stubFalse() {\n    return false;\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  // Add methods that return wrapped values in chain sequences.\n  lodash.keys = keys;\n  lodash.keysIn = keysIn;\n\n  /*------------------------------------------------------------------------*/\n\n  // Add methods that return unwrapped values in chain sequences.\n  lodash.clone = clone;\n  lodash.cloneDeep = cloneDeep;\n  lodash.eq = eq;\n  lodash.isArguments = isArguments;\n  lodash.isArray = isArray;\n  lodash.isArrayLike = isArrayLike;\n  lodash.isBuffer = isBuffer;\n  lodash.isFunction = isFunction;\n  lodash.isLength = isLength;\n  lodash.isMap = isMap;\n  lodash.isObject = isObject;\n  lodash.isObjectLike = isObjectLike;\n  lodash.isSet = isSet;\n  lodash.isTypedArray = isTypedArray;\n  lodash.stubArray = stubArray;\n  lodash.stubFalse = stubFalse;\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * The semantic version number.\n   *\n   * @static\n   * @memberOf _\n   * @type {string}\n   */\n  lodash.VERSION = VERSION;\n\n  /*--------------------------------------------------------------------------*/\n\n  if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = lodash)._ = lodash;\n    // Export for CommonJS support.\n    freeExports._ = lodash;\n  }\n}.call(this));\n","'use strict';\n\nconst { asArray, isString, isFunction, isPlainObject } = require('./objectUtils');\n\nfunction createModifier({ modelClass, modifier, modifiers, args }) {\n  modifiers = modifiers || {};\n  args = args || [];\n\n  const modelModifiers = modelClass ? modelClass.getModifiers() : {};\n\n  const modifierFunctions = asArray(modifier).map(modifier => {\n    let modify = null;\n\n    if (isString(modifier)) {\n      modify = modifiers[modifier] || modelModifiers[modifier];\n      // Modifiers can be pointers to other modifiers. Call this function recursively.\n      if (modify) {\n        return createModifier({ modelClass, modifier: modify, modifiers });\n      }\n    } else if (isFunction(modifier)) {\n      modify = modifier;\n    } else if (isPlainObject(modifier)) {\n      modify = builder => builder.where(modifier);\n    } else if (Array.isArray(modifier)) {\n      return createModifier({ modelClass, modifier, modifiers });\n    }\n\n    if (!modify) {\n      modify = builder => modelClass.modifierNotFound(builder, modifier);\n    }\n\n    return modify;\n  });\n\n  return builder => modifierFunctions.forEach(modifier => modifier(builder, ...args));\n}\n\nmodule.exports = {\n  createModifier\n};\n","'use strict';\n\nconst LOGGED_DEPRECATIONS = new Set();\n\nfunction deprecate(message) {\n  // Only log deprecation messages once.\n  if (!LOGGED_DEPRECATIONS.has(message)) {\n    LOGGED_DEPRECATIONS.add(message);\n    console.warn(message);\n  }\n}\n\nmodule.exports = {\n  deprecate\n};\n","'use strict';\n\nconst { isObject } = require('./objectUtils');\n\n// Super fast memoize for single argument functions.\nfunction memoize(func) {\n  const cache = new Map();\n\n  return input => {\n    let output = cache.get(input);\n\n    if (output === undefined) {\n      output = func(input);\n      cache.set(input, output);\n    }\n\n    return output;\n  };\n}\n\n// camelCase to snake_case converter that also works with non-ascii characters\n// This is needed especially so that aliases containing the `:` character,\n// objection uses internally, work.\nfunction snakeCase(str, { upperCase = false, underscoreBeforeDigits = false } = {}) {\n  if (str.length === 0) {\n    return str;\n  }\n\n  const upper = str.toUpperCase();\n  const lower = str.toLowerCase();\n\n  let out = lower[0];\n\n  for (let i = 1, l = str.length; i < l; ++i) {\n    const char = str[i];\n    const prevChar = str[i - 1];\n\n    const upperChar = upper[i];\n    const prevUpperChar = upper[i - 1];\n\n    const lowerChar = lower[i];\n    const prevLowerChar = lower[i - 1];\n\n    // If underScoreBeforeDigits is true then, well, insert an underscore\n    // before digits :). Only the first digit gets an underscore if\n    // there are multiple.\n    if (underscoreBeforeDigits && isDigit(char) && !isDigit(prevChar)) {\n      out += '_' + char;\n      continue;\n    }\n\n    // Test if `char` is an upper-case character and that the character\n    // actually has different upper and lower case versions.\n    if (char === upperChar && upperChar !== lowerChar) {\n      // Multiple consecutive upper case characters shouldn't add underscores.\n      // For example \"fooBAR\" should be converted to \"foo_bar\".\n      if (prevChar === prevUpperChar && prevUpperChar !== prevLowerChar) {\n        out += lowerChar;\n      } else {\n        out += '_' + lowerChar;\n      }\n    } else {\n      out += char;\n    }\n  }\n\n  if (upperCase) {\n    return out.toUpperCase();\n  } else {\n    return out;\n  }\n}\n\n// snake_case to camelCase converter that simply reverses\n// the actions done by `snakeCase` function.\nfunction camelCase(str, { upperCase = false } = {}) {\n  if (str.length === 0) {\n    return str;\n  }\n\n  if (upperCase && isAllUpperCaseSnakeCase(str)) {\n    // Only convert to lower case if the string is all upper\n    // case snake_case. This allowes camelCase strings to go\n    // through without changing.\n    str = str.toLowerCase();\n  }\n\n  let out = str[0];\n\n  for (let i = 1, l = str.length; i < l; ++i) {\n    const char = str[i];\n    const prevChar = str[i - 1];\n\n    if (char !== '_') {\n      if (prevChar === '_') {\n        out += char.toUpperCase();\n      } else {\n        out += char;\n      }\n    }\n  }\n\n  return out;\n}\n\nfunction isAllUpperCaseSnakeCase(str) {\n  for (let i = 1, l = str.length; i < l; ++i) {\n    const char = str[i];\n\n    if (char !== '_' && char !== char.toUpperCase()) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isDigit(char) {\n  return char >= '0' && char <= '9';\n}\n\n// Returns a function that splits the inputs string into pieces using `separator`,\n// only calls `mapper` for the last part and concatenates the string back together.\n// If no separators are found, `mapper` is called for the entire string.\nfunction mapLastPart(mapper, separator) {\n  return str => {\n    const idx = str.lastIndexOf(separator);\n    const mapped = mapper(str.slice(idx + separator.length));\n    return str.slice(0, idx + separator.length) + mapped;\n  };\n}\n\n// Returns a function that takes an object as an input and maps the object's keys\n// using `mapper`. If the input is not an object, the input is returned unchanged.\nfunction keyMapper(mapper) {\n  return obj => {\n    if (!isObject(obj) || Array.isArray(obj)) {\n      return obj;\n    }\n\n    const keys = Object.keys(obj);\n    const out = {};\n\n    for (let i = 0, l = keys.length; i < l; ++i) {\n      const key = keys[i];\n      out[mapper(key)] = obj[key];\n    }\n\n    return out;\n  };\n}\n\nfunction snakeCaseMappers(opt = {}) {\n  return {\n    parse: keyMapper(memoize(str => camelCase(str, opt))),\n    format: keyMapper(memoize(str => snakeCase(str, opt)))\n  };\n}\n\nfunction knexIdentifierMappers({ parse, format, idSeparator = ':' } = {}) {\n  const formatId = memoize(mapLastPart(format, idSeparator));\n  const parseId = memoize(mapLastPart(parse, idSeparator));\n  const parseKeys = keyMapper(parseId);\n\n  return {\n    wrapIdentifier(identifier, origWrap) {\n      return origWrap(formatId(identifier));\n    },\n\n    postProcessResponse(result) {\n      if (Array.isArray(result)) {\n        const output = new Array(result.length);\n\n        for (let i = 0, l = result.length; i < l; ++i) {\n          output[i] = parseKeys(result[i]);\n        }\n\n        return output;\n      } else {\n        return parseKeys(result);\n      }\n    }\n  };\n}\n\nfunction knexSnakeCaseMappers(opt = {}) {\n  return knexIdentifierMappers({\n    parse: str => camelCase(str, opt),\n    format: str => snakeCase(str, opt)\n  });\n}\n\nfunction knexIdentifierMapping(colToProp) {\n  const propToCol = Object.keys(colToProp).reduce((propToCol, column) => {\n    propToCol[colToProp[column]] = column;\n    return propToCol;\n  }, {});\n\n  return knexIdentifierMappers({\n    parse: column => colToProp[column] || column,\n    format: prop => propToCol[prop] || prop\n  });\n}\n\nmodule.exports = {\n  snakeCase,\n  camelCase,\n  snakeCaseMappers,\n  knexSnakeCaseMappers,\n  knexIdentifierMappers,\n  knexIdentifierMapping,\n\n  camelCaseKeys: keyMapper(memoize(camelCase)),\n  snakeCaseKeys: keyMapper(memoize(snakeCase))\n};\n","'use strict';\n\nconst INTERNAL_PROP_PREFIX = '$';\n\nfunction isInternalProp(propName) {\n  return propName[0] === INTERNAL_PROP_PREFIX;\n}\n\nmodule.exports = {\n  isInternalProp\n};\n","'use strict';\n\nconst { isObject, isFunction } = require('../utils/objectUtils');\n\nfunction getDialect(knex) {\n  const type = typeof knex;\n\n  return (\n    (knex !== null &&\n      (type === 'object' || type === 'function') &&\n      knex.client &&\n      knex.client.dialect) ||\n    null\n  );\n}\n\nfunction isPostgres(knex) {\n  return getDialect(knex) === 'postgresql';\n}\n\nfunction isOracle(knex) {\n  const dialect = getDialect(knex);\n  return dialect === 'oracle' || dialect === 'oracledb';\n}\n\nfunction isMySql(knex) {\n  const dialect = getDialect(knex);\n  return dialect === 'mysql' || dialect === 'mysql2';\n}\n\nfunction isSqlite(knex) {\n  return getDialect(knex) === 'sqlite3';\n}\n\nfunction isMsSql(knex) {\n  return getDialect(knex) === 'mssql';\n}\n\nfunction isKnexQueryBuilder(value) {\n  return hasConstructor(value, 'Builder') && 'client' in value;\n}\n\nfunction isKnexJoinBuilder(value) {\n  return hasConstructor(value, 'JoinClause') && 'joinType' in value;\n}\n\nfunction isKnexRaw(value) {\n  return hasConstructor(value, 'Raw') && 'client' in value;\n}\n\nfunction isKnexTransaction(knex) {\n  return !!getDialect(knex) && isFunction(knex.commit) && isFunction(knex.rollback);\n}\n\nfunction hasConstructor(value, constructorName) {\n  return (\n    isObject(value) && isFunction(value.constructor) && value.constructor.name === constructorName\n  );\n}\n\nmodule.exports = {\n  getDialect,\n  isPostgres,\n  isMySql,\n  isSqlite,\n  isMsSql,\n  isOracle,\n  isKnexQueryBuilder,\n  isKnexJoinBuilder,\n  isKnexRaw,\n  isKnexTransaction\n};\n","'use strict';\n\nconst { flatten } = require('./objectUtils');\n\nfunction mixin() {\n  const args = flatten(arguments);\n  const mixins = args.slice(1);\n\n  return mixins.reduce((Class, mixinFunc) => {\n    return mixinFunc(Class);\n  }, args[0]);\n}\n\nfunction compose() {\n  const mixins = flatten(arguments);\n\n  return function(Class) {\n    return mixin(Class, mixins);\n  };\n}\n\nmodule.exports = {\n  compose,\n  mixin\n};\n","'use strict';\n\nconst { isObject } = require('../utils/objectUtils');\n\n// ids is of type RelationProperty.\nfunction normalizeIds(ids, prop, opt) {\n  opt = opt || {};\n\n  let isComposite = prop.size > 1;\n  let ret;\n\n  if (isComposite) {\n    // For composite ids these are okay:\n    //\n    // 1. [1, 'foo', 4]\n    // 2. {a: 1, b: 'foo', c: 4}\n    // 3. [[1, 'foo', 4], [4, 'bar', 1]]\n    // 4. [{a: 1, b: 'foo', c: 4}, {a: 4, b: 'bar', c: 1}]\n    //\n    if (Array.isArray(ids)) {\n      if (Array.isArray(ids[0])) {\n        ret = new Array(ids.length);\n\n        // 3.\n        for (let i = 0, l = ids.length; i < l; ++i) {\n          ret[i] = convertIdArrayToObject(ids[i], prop);\n        }\n      } else if (isObject(ids[0])) {\n        ret = new Array(ids.length);\n\n        // 4.\n        for (let i = 0, l = ids.length; i < l; ++i) {\n          ret[i] = ensureObject(ids[i], prop);\n        }\n      } else {\n        // 1.\n        ret = [convertIdArrayToObject(ids, prop)];\n      }\n    } else if (isObject(ids)) {\n      // 2.\n      ret = [ids];\n    } else {\n      throw new Error(`invalid composite key ${JSON.stringify(ids)}`);\n    }\n  } else {\n    // For non-composite ids, these are okay:\n    //\n    // 1. 1\n    // 2. {id: 1}\n    // 3. [1, 'foo', 4]\n    // 4. [{id: 1}, {id: 'foo'}, {id: 4}]\n    //\n    if (Array.isArray(ids)) {\n      if (isObject(ids[0])) {\n        ret = new Array(ids.length);\n\n        // 4.\n        for (let i = 0, l = ids.length; i < l; ++i) {\n          ret[i] = ensureObject(ids[i]);\n        }\n      } else {\n        ret = new Array(ids.length);\n\n        // 3.\n        for (let i = 0, l = ids.length; i < l; ++i) {\n          ret[i] = {};\n          prop.setProp(ret[i], 0, ids[i]);\n        }\n      }\n    } else if (isObject(ids)) {\n      // 2.\n      ret = [ids];\n    } else {\n      // 1.\n      const obj = {};\n      prop.setProp(obj, 0, ids);\n      ret = [obj];\n    }\n  }\n\n  checkProperties(ret, prop);\n\n  if (opt.arrayOutput) {\n    return normalizedToArray(ret, prop);\n  } else {\n    return ret;\n  }\n}\n\nfunction convertIdArrayToObject(ids, prop) {\n  if (!Array.isArray(ids)) {\n    throw new Error(`invalid composite key ${JSON.stringify(ids)}`);\n  }\n\n  if (ids.length != prop.size) {\n    throw new Error(`composite identifier ${JSON.stringify(ids)} should have ${prop.size} values`);\n  }\n\n  const obj = {};\n\n  for (let i = 0; i < ids.length; ++i) {\n    prop.setProp(obj, i, ids[i]);\n  }\n\n  return obj;\n}\n\nfunction ensureObject(ids) {\n  if (isObject(ids)) {\n    return ids;\n  } else {\n    throw new Error(`invalid composite key ${JSON.stringify(ids)}`);\n  }\n}\n\nfunction checkProperties(ret, prop) {\n  for (let i = 0, l = ret.length; i < l; ++i) {\n    const obj = ret[i];\n\n    for (let j = 0, lp = prop.size; j < lp; ++j) {\n      const val = prop.getProp(obj, j);\n\n      if (typeof val === 'undefined') {\n        throw new Error(\n          `expected id ${JSON.stringify(obj)} to have property ${prop.propDescription(j)}`\n        );\n      }\n    }\n  }\n}\n\nfunction normalizedToArray(ret, prop) {\n  const arr = new Array(ret.length);\n\n  for (let i = 0, l = ret.length; i < l; ++i) {\n    arr[i] = prop.getProps(ret[i]);\n  }\n\n  return arr;\n}\n\nmodule.exports = {\n  normalizeIds\n};\n","'use strict';\n\nconst { clone, cloneDeep } = require('./clone');\nconst SMALL_ARRAY_SIZE = 10;\n\nfunction isEmpty(item) {\n  if (Array.isArray(item)) {\n    return item.length === 0;\n  } else if (isObject(item)) {\n    return Object.keys(item).length === 0;\n  } else {\n    return true;\n  }\n}\n\nfunction isObject(value) {\n  return value !== null && typeof value === 'object';\n}\n\n// Quick and dirty check if an object is a plain object and not\n// for example an instance of some class.\nfunction isPlainObject(value) {\n  return (\n    isObject(value) &&\n    (!value.constructor || value.constructor === Object) &&\n    (!value.toString || value.toString === Object.prototype.toString)\n  );\n}\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n\nfunction isRegExp(value) {\n  return value instanceof RegExp;\n}\n\nfunction isString(value) {\n  return typeof value === 'string';\n}\n\nfunction isNumber(value) {\n  return typeof value === 'number';\n}\n\nfunction asArray(value) {\n  return Array.isArray(value) ? value : [value];\n}\n\nfunction asSingle(value) {\n  return Array.isArray(value) ? value[0] : value;\n}\n\nfunction uniqBy(items, keyGetter = null) {\n  const map = new Map();\n\n  for (let i = 0, l = items.length; i < l; ++i) {\n    const item = items[i];\n    const key = keyGetter !== null ? keyGetter(item) : item;\n\n    map.set(key, item);\n  }\n\n  return Array.from(map.values());\n}\n\nfunction groupBy(items, keyGetter = null) {\n  const groups = new Map();\n\n  for (const item of items) {\n    const key = keyGetter !== null ? keyGetter(item) : item;\n    let group = groups.get(key);\n\n    if (!group) {\n      group = [];\n      groups.set(key, group);\n    }\n\n    group.push(item);\n  }\n\n  return groups;\n}\n\nfunction omit(obj, keysToOmit) {\n  keysToOmit = asArray(keysToOmit);\n\n  const keys = Object.keys(obj);\n  const out = {};\n\n  for (let i = 0, l = keys.length; i < l; ++i) {\n    const key = keys[i];\n\n    if (!keysToOmit.includes(key)) {\n      out[key] = obj[key];\n    }\n  }\n\n  return out;\n}\n\nfunction difference(arr1, arr2) {\n  const arr2Set = new Set(arr2);\n  const diff = [];\n\n  for (let i = 0; i < arr1.length; ++i) {\n    const value = arr1[i];\n\n    if (!arr2Set.has(value)) {\n      diff.push(value);\n    }\n  }\n\n  return diff;\n}\n\nfunction union(arr1, arr2) {\n  if (arr1.length < SMALL_ARRAY_SIZE && arr2.length < SMALL_ARRAY_SIZE) {\n    return unionSmall(arr1, arr2);\n  } else {\n    return unionGeneric(arr1, arr2);\n  }\n}\n\nfunction unionSmall(arr1, arr2) {\n  const all = arr1.slice();\n\n  for (let i = 0, l = arr2.length; i < l; ++i) {\n    const item = arr2[i];\n\n    if (all.indexOf(item) === -1) {\n      all.push(item);\n    }\n  }\n\n  return all;\n}\n\nfunction unionGeneric(arr1, arr2) {\n  const all = new Set();\n\n  for (let i = 0; i < arr1.length; ++i) {\n    all.add(arr1[i]);\n  }\n\n  for (let i = 0; i < arr2.length; ++i) {\n    all.add(arr2[i]);\n  }\n\n  return Array.from(all);\n}\n\nfunction last(arr) {\n  return arr[arr.length - 1];\n}\n\nfunction upperFirst(str) {\n  return str[0].toUpperCase() + str.substring(1);\n}\n\nfunction values(obj) {\n  if (isObject(obj)) {\n    const keys = Object.keys(obj);\n    const values = new Array(keys.length);\n\n    for (let i = 0, l = keys.length; i < l; ++i) {\n      values[i] = obj[keys[i]];\n    }\n\n    return values;\n  } else {\n    return [];\n  }\n}\n\nfunction once(func) {\n  let called = false;\n  let value = undefined;\n\n  return function() {\n    if (called === false) {\n      called = true;\n      value = func.apply(this, arguments);\n    }\n\n    return value;\n  };\n}\n\nfunction flatten(arrays) {\n  const out = [];\n  let outIdx = 0;\n\n  for (let i = 0, l = arrays.length; i < l; ++i) {\n    const value = arrays[i];\n\n    if (Array.isArray(value)) {\n      for (let j = 0; j < value.length; ++j) {\n        out.push(value[j]);\n      }\n    } else {\n      out.push(value);\n    }\n  }\n\n  return out;\n}\n\nfunction get(obj, path) {\n  for (let i = 0, l = path.length; i < l; ++i) {\n    const key = path[i];\n\n    if (!isObject(obj)) {\n      return undefined;\n    }\n\n    obj = obj[key];\n  }\n\n  return obj;\n}\n\nfunction set(obj, path, value) {\n  const inputObj = obj;\n\n  for (let i = 0, l = path.length - 1; i < l; ++i) {\n    const key = path[i];\n    let child = obj[key];\n\n    if (!isObject(child)) {\n      const nextKey = path[i + 1];\n\n      if (isNaN(nextKey)) {\n        child = {};\n      } else {\n        child = [];\n      }\n\n      obj[key] = child;\n    }\n\n    obj = child;\n  }\n\n  if (path.length > 0 && isObject(obj)) {\n    obj[path[path.length - 1]] = value;\n  }\n\n  return inputObj;\n}\n\nfunction zipObject(keys, values) {\n  const out = {};\n\n  for (let i = 0, l = keys.length; i < l; ++i) {\n    out[keys[i]] = values[i];\n  }\n\n  return out;\n}\n\nfunction chunk(arr, chunkSize) {\n  const out = [];\n\n  for (let i = 0, l = arr.length; i < l; ++i) {\n    const item = arr[i];\n\n    if (out.length === 0 || out[out.length - 1].length === chunkSize) {\n      out.push([]);\n    }\n\n    out[out.length - 1].push(item);\n  }\n\n  return out;\n}\n\nfunction jsonEquals(val1, val2) {\n  return jsonEqualsBase(val1, val2, compareStrict);\n}\n\nfunction jsonEqualsBase(val1, val2, compare) {\n  if (val1 === val2) {\n    return true;\n  }\n\n  return jsonEqualsSlowPath(val1, val2, compare);\n}\n\nfunction jsonEqualsSlowPath(val1, val2, compare) {\n  const type1 = typeof val1;\n  const type2 = typeof val2;\n\n  const isNonNullObject1 = type1 === 'object' && !compare(val1, null);\n  const isNonNullObject2 = type2 === 'object' && !compare(val2, null);\n\n  if (isNonNullObject1 && isNonNullObject2) {\n    const isArray1 = Array.isArray(val1);\n    const isArray2 = Array.isArray(val2);\n\n    if (isArray1 && isArray2) {\n      return jsonEqualsArray(val1, val2, compare);\n    } else if (!isArray1 && !isArray2) {\n      return jsonEqualsObject(val1, val2, compare);\n    } else {\n      return false;\n    }\n  } else if (isNonNullObject1 !== isNonNullObject2) {\n    return false;\n  } else {\n    return compare(val1, val2);\n  }\n}\n\nfunction jsonEqualsArray(arr1, arr2, compare) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n\n  for (let i = 0, l = arr1.length; i < l; ++i) {\n    if (!jsonEqualsBase(arr1[i], arr2[i], compare)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction jsonEqualsObject(obj1, obj2, compare) {\n  if (obj1.constructor === Date && obj2.constructor === Date) {\n    return equalsDate(obj1, obj2);\n  }\n\n  const keys1 = Object.keys(obj1);\n  const keys2 = Object.keys(obj2);\n\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n\n  for (let i = 0, l = keys1.length; i < l; ++i) {\n    const key = keys1[i];\n\n    if (!jsonEqualsBase(obj1[key], obj2[key], compare)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction equalsDate(date1, date2) {\n  return date1.getTime() === date2.getTime();\n}\n\nfunction compareStrict(val1, val2) {\n  return val1 === val2;\n}\n\nmodule.exports = {\n  isEmpty,\n  isString,\n  isRegExp,\n  isObject,\n  isNumber,\n  isFunction,\n  jsonEquals,\n  isPlainObject,\n  difference,\n  upperFirst,\n  zipObject,\n  cloneDeep,\n  asSingle,\n  asArray,\n  flatten,\n  groupBy,\n  uniqBy,\n  values,\n  union,\n  chunk,\n  clone,\n  omit,\n  once,\n  last,\n  get,\n  set\n};\n","'use strict';\n\nconst jsonFieldExpressionParser = require('../queryBuilder/parsers/jsonFieldExpressionParser');\nconst cache = new Map();\n\nfunction parseFieldExpression(expr) {\n  let parsedExpr = cache.get(expr);\n\n  if (parsedExpr !== undefined) {\n    return parsedExpr;\n  } else {\n    parsedExpr = jsonFieldExpressionParser.parse(expr);\n    parsedExpr = preprocessParsedExpression(parsedExpr);\n\n    // We don't take a copy of the parsedExpr each time we\n    // use if from cache. Instead to make sure it's never\n    // mutated we deep-freeze it.\n    parsedExpr = freezeParsedExpr(parsedExpr);\n\n    cache.set(expr, parsedExpr);\n    return parsedExpr;\n  }\n}\n\nfunction preprocessParsedExpression(parsedExpr) {\n  const columnParts = parsedExpr.columnName.split('.').map(part => part.trim());\n  parsedExpr.column = columnParts[columnParts.length - 1];\n\n  if (columnParts.length >= 2) {\n    parsedExpr.table = columnParts.slice(0, columnParts.length - 1).join('.');\n  } else {\n    parsedExpr.table = null;\n  }\n\n  return parsedExpr;\n}\n\nfunction freezeParsedExpr(parsedExpr) {\n  for (const access of parsedExpr.access) {\n    Object.freeze(access);\n  }\n\n  Object.freeze(parsedExpr.access);\n  Object.freeze(parsedExpr);\n\n  return parsedExpr;\n}\n\nmodule.exports = {\n  parseFieldExpression\n};\n","'use strict';\n\nconst { isPromise } = require('./isPromise');\n\n// Call `func` after `obj` has been resolved. Call `func` synchronously if\n// `obj` is not a promise for performance reasons.\nfunction after(obj, func) {\n  if (isPromise(obj)) {\n    return obj.then(func);\n  } else {\n    return func(obj);\n  }\n}\n\nmodule.exports = {\n  after\n};\n","'use strict';\n\nconst { isPromise } = require('./isPromise');\n\n// Return `returnValue` after `obj` has been resolved. Return `returnValue`\n// synchronously if `obj` is not a promise for performance reasons.\nfunction afterReturn(obj, returnValue) {\n  if (isPromise(obj)) {\n    return obj.then(() => returnValue);\n  } else {\n    return returnValue;\n  }\n}\n\nmodule.exports = {\n  afterReturn\n};\n","'use strict';\n\nconst { isPromise } = require('./isPromise');\nconst { after } = require('./after');\nconst { afterReturn } = require('./afterReturn');\nconst { mapAfterAllReturn } = require('./mapAfterAllReturn');\nconst { promiseMap } = require('./map');\nconst { promiseTry } = require('./try');\n\nmodule.exports = {\n  isPromise,\n  after,\n  afterReturn,\n  mapAfterAllReturn,\n  map: promiseMap,\n  try: promiseTry\n};\n","'use strict';\n\nconst { isObject, isFunction } = require('../objectUtils');\n\nfunction isPromise(obj) {\n  return isObject(obj) && isFunction(obj.then);\n}\n\nmodule.exports = {\n  isPromise\n};\n","'use strict';\n\nconst { isPromise } = require('./isPromise');\n\n// Works like Bluebird.map.\nfunction promiseMap(items, mapper, opt) {\n  switch (items.length) {\n    case 0:\n      return mapZero();\n    case 1:\n      return mapOne(items, mapper);\n    default:\n      return mapMany(items, mapper, opt);\n  }\n}\n\nfunction mapZero() {\n  return Promise.resolve([]);\n}\n\nfunction mapOne(items, mapper) {\n  try {\n    const maybePromise = mapper(items[0], 0);\n\n    if (isPromise(maybePromise)) {\n      return maybePromise.then(wrapArray);\n    } else {\n      return Promise.resolve(wrapArray(maybePromise));\n    }\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\n\nfunction wrapArray(item) {\n  return [item];\n}\n\nfunction mapMany(items, mapper, opt = {}) {\n  return new Promise((resolve, reject) => {\n    const concurrency = opt.concurrency || Number.MAX_SAFE_INTEGER;\n\n    const ctx = {\n      reject,\n      resolve,\n      rejected: false,\n      index: 0,\n      numFinished: 0,\n      results: new Array(items.length),\n      items,\n      mapper\n    };\n\n    while (ctx.index < concurrency && ctx.index < items.length && !ctx.rejected) {\n      executeNext(ctx);\n    }\n  });\n}\n\nfunction executeNext(ctx) {\n  try {\n    if (ctx.rejected) {\n      return;\n    }\n\n    const index = ctx.index++;\n    const item = ctx.items[index];\n    const maybePromise = ctx.mapper(item, index);\n\n    if (isPromise(maybePromise)) {\n      maybePromise.then(result => afterExecute(ctx, result, index)).catch(err => onError(ctx, err));\n    } else {\n      process.nextTick(() => afterExecute(ctx, maybePromise, index));\n    }\n\n    return null;\n  } catch (err) {\n    onError(ctx, err);\n  }\n}\n\nfunction afterExecute(ctx, result, index) {\n  if (ctx.rejected) {\n    return null;\n  }\n\n  ctx.results[index] = result;\n  ctx.numFinished++;\n\n  if (ctx.numFinished === ctx.items.length) {\n    ctx.resolve(ctx.results);\n  }\n\n  if (ctx.index < ctx.items.length) {\n    executeNext(ctx);\n  }\n\n  return null;\n}\n\nfunction onError(ctx, err) {\n  ctx.rejected = true;\n  ctx.reject(err);\n}\n\nmodule.exports = {\n  promiseMap\n};\n","'use strict';\n\nconst { isPromise } = require('./isPromise');\n\n// Map `arr` with `mapper` and after that return `returnValue`. If none of\n// the mapped values is a promise, return synchronously for performance\n// reasons.\nfunction mapAfterAllReturn(arr, mapper, returnValue) {\n  const results = new Array(arr.length);\n  let containsPromise = false;\n\n  for (let i = 0, l = arr.length; i < l; ++i) {\n    results[i] = mapper(arr[i]);\n\n    if (isPromise(results[i])) {\n      containsPromise = true;\n    }\n  }\n\n  if (containsPromise) {\n    return Promise.all(results).then(() => returnValue);\n  } else {\n    return returnValue;\n  }\n}\n\nmodule.exports = {\n  mapAfterAllReturn\n};\n","'use strict';\n\nconst { isPromise } = require('./isPromise');\n\n// Works like Bluebird.try.\nfunction promiseTry(callback) {\n  try {\n    const maybePromise = callback();\n\n    if (isPromise(maybePromise)) {\n      return maybePromise;\n    } else {\n      return Promise.resolve(maybePromise);\n    }\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\n\nmodule.exports = {\n  promiseTry\n};\n","'use strict';\n\nconst path = require('path');\nconst { once, isString, isFunction } = require('../utils/objectUtils');\nconst { isSubclassOf } = require('../utils/classUtils');\n\nconst getModel = once(() => require('../model/Model').Model);\nclass ResolveError extends Error {}\n\nfunction resolveModel(modelRef, modelPaths, errorPrefix) {\n  try {\n    if (isString(modelRef)) {\n      if (isAbsolutePath(modelRef)) {\n        return requireModel(modelRef);\n      } else if (modelPaths) {\n        return requireUsingModelPaths(modelRef, modelPaths);\n      }\n    } else {\n      if (isFunction(modelRef) && !isSubclassOf(modelRef, getModel())) {\n        modelRef = modelRef();\n      }\n\n      if (!isSubclassOf(modelRef, getModel())) {\n        throw new ResolveError(\n          `is not a subclass of Model or a file path to a module that exports one. You may be dealing with a require loop. See the documentation section about require loops.`\n        );\n      }\n\n      return modelRef;\n    }\n  } catch (err) {\n    if (err instanceof ResolveError) {\n      throw new Error(`${errorPrefix}: ${err.message}`);\n    } else {\n      throw err;\n    }\n  }\n}\n\nfunction requireUsingModelPaths(modelRef, modelPaths) {\n  let firstError = null;\n\n  for (const modelPath of modelPaths) {\n    try {\n      return requireModel(path.join(modelPath, modelRef));\n    } catch (err) {\n      if (firstError === null) {\n        firstError = err;\n      }\n    }\n  }\n\n  if (firstError) {\n    throw firstError;\n  } else {\n    throw new ResolveError(`could not resolve ${modelRef} using modelPaths`);\n  }\n}\n\nfunction requireModel(modelPath) {\n  const Model = getModel();\n  /**\n   * Wrap path string in template literal to prevent\n   * warnings about Objection.JS being an expression\n   * in webpack builds.\n   * @link https://github.com/webpack/webpack/issues/196\n   */\n  let mod = require(`${path.resolve(modelPath)}`);\n  let modelClass = null;\n\n  if (isSubclassOf(mod, Model)) {\n    modelClass = mod;\n  } else if (isSubclassOf(mod.default, Model)) {\n    // Babel 6 style of exposing default export.\n    modelClass = mod.default;\n  } else {\n    Object.keys(mod).forEach(exportName => {\n      const exp = mod[exportName];\n\n      if (isSubclassOf(exp, Model)) {\n        if (modelClass !== null) {\n          throw new ResolveError(\n            `path ${modelPath} exports multiple models. Don't know which one to choose.`\n          );\n        }\n\n        modelClass = exp;\n      }\n    });\n  }\n\n  if (!isSubclassOf(modelClass, Model)) {\n    throw new ResolveError(`${modelPath} is an invalid file path to a model class`);\n  }\n\n  return modelClass;\n}\n\nfunction isAbsolutePath(pth) {\n  return path.normalize(pth + '/') === path.normalize(path.resolve(pth) + '/');\n}\n\nmodule.exports = {\n  resolveModel\n};\n","'use strict';\n\nconst OWNER_JOIN_COLUMN_ALIAS_PREFIX = 'objectiontmpjoin';\n\nfunction getTempColumn(index) {\n  return `${OWNER_JOIN_COLUMN_ALIAS_PREFIX}${index}`;\n}\n\nfunction isTempColumn(col) {\n  return col.startsWith(OWNER_JOIN_COLUMN_ALIAS_PREFIX);\n}\n\nmodule.exports = {\n  getTempColumn,\n  isTempColumn\n};\n","export const ADVITO_AIR_APPLICATION = 2\nexport const APP_URL = 'http://localhost:8080/#'\n\nexport const EMAIL_SENDER = 'IandA@advito.com'\nexport const EMAIL_BCC = ['ianda@advito.com', 'hshim@boostlabs.com']\n","export const Login = `displayName\n        clientId\n        profilePicturePath\n        sessionToken\n        roleIds`\n\nexport const User = `id\n        client_id\n        username\n        pwd\n        name_last\n        name_first\n        is_enabled\n        is_verified\n        must_change_pwd\n        pwd_expiration\n        email\n        phone\n        profile_picture_path\n        default_timezone\n        default_language\n        user_salt\n        default_date_format\n        address\n        created\n        modified`\n\nexport const SESSION = 'SESSION'\nexport const RECOVERY = 'RECOVERY'\n","import { ApolloServer } from 'apollo-server-lambda'\nimport typeDefs from './typeDefs'\nimport resolvers from './resolvers'\nimport playground from './playground'\nimport Knex from 'knex'\nimport { Model } from 'objection'\nrequire('dotenv').config()\n\nconst db = Knex({\n  client: 'pg',\n  connection: {\n    host: process.env.DB_HOST,\n    user: process.env.DB_USER,\n    password: process.env.DB_PASSWORD,\n    database: process.env.ADVITO_DB_DATABASE\n  }\n})\nModel.knex(db)\n\nconst server = new ApolloServer({\n  typeDefs,\n  resolvers,\n  context: async ({ event }) => {\n    const sessionToken = event.headers.sessiontoken || ''\n    return { db }\n    // const user = await authenticateUser(sessionToken, advitoDb)\n    // return { user, db }\n  },\n  // schemaDirectives: {\n  //   auth: requireAuthDirective\n  // },\n  playground\n})\n\nexport const graphqlHandler = server.createHandler({\n  cors: {\n    origin: true,\n    credentials: true\n  }\n})\n","import { Model } from 'objection'\n\nexport class AdvitoUser extends Model {\n  static get tableName () {\n    return 'advito_user'\n  }\n\n  fullName () {\n    return this.name_first + ' ' + this.name_last\n  }\n\n  static get relationMappings () {\n    return { advitoUserRoleLink: {\n      relation: Model.HasManyRelation,\n      modelClass: AdvitoUserRoleLink,\n      join: {\n        from: 'advito_user.id',\n        to: 'advito_user_role_link.advito_user_id'\n      }\n    },\n    advitoUserSession: {\n      relation: Model.HasManyRelation,\n      modelClass: AdvitoUserSession,\n      join: {\n        from: 'advito_user.id',\n        to: 'advito_user_session.advito_user_id'\n      }\n    },\n    accessToken: {\n      relation: Model.HasManyRelation,\n      modelClass: AccessToken,\n      join: {\n        from: 'advito_user.id',\n        to: 'access_token.advito_user_id'\n      }\n    } }\n  }\n}\n\nexport class AdvitoUserRoleLink extends Model {\n  static get tableName () {\n    return 'advito_user_role_link'\n  }\n}\n\nexport class AdvitoUserSession extends Model {\n  static get tableName () {\n    return 'advito_user_session'\n  }\n}\n\nexport class AccessToken extends Model {\n  static get tableName () {\n    return 'access_token'\n  }\n}\n\nexport class EmailTemplate extends Model {\n  static get tableName () {\n    return 'email_template'\n  }\n}\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['acm'] = {};\nAWS.ACM = Service.defineService('acm', ['2015-12-08']);\nObject.defineProperty(apiLoader.services['acm'], '2015-12-08', {\n  get: function get() {\n    var model = require('../apis/acm-2015-12-08.min.json');\n    model.paginators = require('../apis/acm-2015-12-08.paginators.json').pagination;\n    model.waiters = require('../apis/acm-2015-12-08.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.ACM;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['acmpca'] = {};\nAWS.ACMPCA = Service.defineService('acmpca', ['2017-08-22']);\nObject.defineProperty(apiLoader.services['acmpca'], '2017-08-22', {\n  get: function get() {\n    var model = require('../apis/acm-pca-2017-08-22.min.json');\n    model.paginators = require('../apis/acm-pca-2017-08-22.paginators.json').pagination;\n    model.waiters = require('../apis/acm-pca-2017-08-22.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.ACMPCA;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['alexaforbusiness'] = {};\nAWS.AlexaForBusiness = Service.defineService('alexaforbusiness', ['2017-11-09']);\nObject.defineProperty(apiLoader.services['alexaforbusiness'], '2017-11-09', {\n  get: function get() {\n    var model = require('../apis/alexaforbusiness-2017-11-09.min.json');\n    model.paginators = require('../apis/alexaforbusiness-2017-11-09.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.AlexaForBusiness;\n","require('../lib/node_loader');\nmodule.exports = {\n  ACM: require('./acm'),\n  APIGateway: require('./apigateway'),\n  ApplicationAutoScaling: require('./applicationautoscaling'),\n  AppStream: require('./appstream'),\n  AutoScaling: require('./autoscaling'),\n  Batch: require('./batch'),\n  Budgets: require('./budgets'),\n  CloudDirectory: require('./clouddirectory'),\n  CloudFormation: require('./cloudformation'),\n  CloudFront: require('./cloudfront'),\n  CloudHSM: require('./cloudhsm'),\n  CloudSearch: require('./cloudsearch'),\n  CloudSearchDomain: require('./cloudsearchdomain'),\n  CloudTrail: require('./cloudtrail'),\n  CloudWatch: require('./cloudwatch'),\n  CloudWatchEvents: require('./cloudwatchevents'),\n  CloudWatchLogs: require('./cloudwatchlogs'),\n  CodeBuild: require('./codebuild'),\n  CodeCommit: require('./codecommit'),\n  CodeDeploy: require('./codedeploy'),\n  CodePipeline: require('./codepipeline'),\n  CognitoIdentity: require('./cognitoidentity'),\n  CognitoIdentityServiceProvider: require('./cognitoidentityserviceprovider'),\n  CognitoSync: require('./cognitosync'),\n  ConfigService: require('./configservice'),\n  CUR: require('./cur'),\n  DataPipeline: require('./datapipeline'),\n  DeviceFarm: require('./devicefarm'),\n  DirectConnect: require('./directconnect'),\n  DirectoryService: require('./directoryservice'),\n  Discovery: require('./discovery'),\n  DMS: require('./dms'),\n  DynamoDB: require('./dynamodb'),\n  DynamoDBStreams: require('./dynamodbstreams'),\n  EC2: require('./ec2'),\n  ECR: require('./ecr'),\n  ECS: require('./ecs'),\n  EFS: require('./efs'),\n  ElastiCache: require('./elasticache'),\n  ElasticBeanstalk: require('./elasticbeanstalk'),\n  ELB: require('./elb'),\n  ELBv2: require('./elbv2'),\n  EMR: require('./emr'),\n  ES: require('./es'),\n  ElasticTranscoder: require('./elastictranscoder'),\n  Firehose: require('./firehose'),\n  GameLift: require('./gamelift'),\n  Glacier: require('./glacier'),\n  Health: require('./health'),\n  IAM: require('./iam'),\n  ImportExport: require('./importexport'),\n  Inspector: require('./inspector'),\n  Iot: require('./iot'),\n  IotData: require('./iotdata'),\n  Kinesis: require('./kinesis'),\n  KinesisAnalytics: require('./kinesisanalytics'),\n  KMS: require('./kms'),\n  Lambda: require('./lambda'),\n  LexRuntime: require('./lexruntime'),\n  Lightsail: require('./lightsail'),\n  MachineLearning: require('./machinelearning'),\n  MarketplaceCommerceAnalytics: require('./marketplacecommerceanalytics'),\n  MarketplaceMetering: require('./marketplacemetering'),\n  MTurk: require('./mturk'),\n  MobileAnalytics: require('./mobileanalytics'),\n  OpsWorks: require('./opsworks'),\n  OpsWorksCM: require('./opsworkscm'),\n  Organizations: require('./organizations'),\n  Pinpoint: require('./pinpoint'),\n  Polly: require('./polly'),\n  RDS: require('./rds'),\n  Redshift: require('./redshift'),\n  Rekognition: require('./rekognition'),\n  ResourceGroupsTaggingAPI: require('./resourcegroupstaggingapi'),\n  Route53: require('./route53'),\n  Route53Domains: require('./route53domains'),\n  S3: require('./s3'),\n  S3Control: require('./s3control'),\n  ServiceCatalog: require('./servicecatalog'),\n  SES: require('./ses'),\n  Shield: require('./shield'),\n  SimpleDB: require('./simpledb'),\n  SMS: require('./sms'),\n  Snowball: require('./snowball'),\n  SNS: require('./sns'),\n  SQS: require('./sqs'),\n  SSM: require('./ssm'),\n  StorageGateway: require('./storagegateway'),\n  StepFunctions: require('./stepfunctions'),\n  STS: require('./sts'),\n  Support: require('./support'),\n  SWF: require('./swf'),\n  XRay: require('./xray'),\n  WAF: require('./waf'),\n  WAFRegional: require('./wafregional'),\n  WorkDocs: require('./workdocs'),\n  WorkSpaces: require('./workspaces'),\n  CodeStar: require('./codestar'),\n  LexModelBuildingService: require('./lexmodelbuildingservice'),\n  MarketplaceEntitlementService: require('./marketplaceentitlementservice'),\n  Athena: require('./athena'),\n  Greengrass: require('./greengrass'),\n  DAX: require('./dax'),\n  MigrationHub: require('./migrationhub'),\n  CloudHSMV2: require('./cloudhsmv2'),\n  Glue: require('./glue'),\n  Mobile: require('./mobile'),\n  Pricing: require('./pricing'),\n  CostExplorer: require('./costexplorer'),\n  MediaConvert: require('./mediaconvert'),\n  MediaLive: require('./medialive'),\n  MediaPackage: require('./mediapackage'),\n  MediaStore: require('./mediastore'),\n  MediaStoreData: require('./mediastoredata'),\n  AppSync: require('./appsync'),\n  GuardDuty: require('./guardduty'),\n  MQ: require('./mq'),\n  Comprehend: require('./comprehend'),\n  IoTJobsDataPlane: require('./iotjobsdataplane'),\n  KinesisVideoArchivedMedia: require('./kinesisvideoarchivedmedia'),\n  KinesisVideoMedia: require('./kinesisvideomedia'),\n  KinesisVideo: require('./kinesisvideo'),\n  SageMakerRuntime: require('./sagemakerruntime'),\n  SageMaker: require('./sagemaker'),\n  Translate: require('./translate'),\n  ResourceGroups: require('./resourcegroups'),\n  AlexaForBusiness: require('./alexaforbusiness'),\n  Cloud9: require('./cloud9'),\n  ServerlessApplicationRepository: require('./serverlessapplicationrepository'),\n  ServiceDiscovery: require('./servicediscovery'),\n  WorkMail: require('./workmail'),\n  AutoScalingPlans: require('./autoscalingplans'),\n  TranscribeService: require('./transcribeservice'),\n  Connect: require('./connect'),\n  ACMPCA: require('./acmpca'),\n  FMS: require('./fms'),\n  SecretsManager: require('./secretsmanager'),\n  IoTAnalytics: require('./iotanalytics'),\n  IoT1ClickDevicesService: require('./iot1clickdevicesservice'),\n  IoT1ClickProjects: require('./iot1clickprojects'),\n  PI: require('./pi'),\n  Neptune: require('./neptune'),\n  MediaTailor: require('./mediatailor'),\n  EKS: require('./eks'),\n  Macie: require('./macie'),\n  DLM: require('./dlm'),\n  Signer: require('./signer'),\n  Chime: require('./chime'),\n  PinpointEmail: require('./pinpointemail'),\n  RAM: require('./ram'),\n  Route53Resolver: require('./route53resolver'),\n  PinpointSMSVoice: require('./pinpointsmsvoice'),\n  QuickSight: require('./quicksight'),\n  RDSDataService: require('./rdsdataservice'),\n  Amplify: require('./amplify'),\n  DataSync: require('./datasync'),\n  RoboMaker: require('./robomaker'),\n  Transfer: require('./transfer'),\n  GlobalAccelerator: require('./globalaccelerator'),\n  ComprehendMedical: require('./comprehendmedical'),\n  KinesisAnalyticsV2: require('./kinesisanalyticsv2'),\n  MediaConnect: require('./mediaconnect'),\n  FSx: require('./fsx'),\n  SecurityHub: require('./securityhub'),\n  AppMesh: require('./appmesh'),\n  LicenseManager: require('./licensemanager'),\n  Kafka: require('./kafka'),\n  ApiGatewayManagementApi: require('./apigatewaymanagementapi'),\n  ApiGatewayV2: require('./apigatewayv2'),\n  DocDB: require('./docdb'),\n  Backup: require('./backup'),\n  WorkLink: require('./worklink'),\n  Textract: require('./textract'),\n  ManagedBlockchain: require('./managedblockchain'),\n  MediaPackageVod: require('./mediapackagevod'),\n  GroundStation: require('./groundstation'),\n  IoTThingsGraph: require('./iotthingsgraph'),\n  IoTEvents: require('./iotevents'),\n  IoTEventsData: require('./ioteventsdata'),\n  Personalize: require('./personalize'),\n  PersonalizeEvents: require('./personalizeevents'),\n  PersonalizeRuntime: require('./personalizeruntime'),\n  ApplicationInsights: require('./applicationinsights'),\n  ServiceQuotas: require('./servicequotas'),\n  EC2InstanceConnect: require('./ec2instanceconnect'),\n  EventBridge: require('./eventbridge'),\n  LakeFormation: require('./lakeformation')\n};","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['amplify'] = {};\nAWS.Amplify = Service.defineService('amplify', ['2017-07-25']);\nObject.defineProperty(apiLoader.services['amplify'], '2017-07-25', {\n  get: function get() {\n    var model = require('../apis/amplify-2017-07-25.min.json');\n    model.paginators = require('../apis/amplify-2017-07-25.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Amplify;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['apigateway'] = {};\nAWS.APIGateway = Service.defineService('apigateway', ['2015-07-09']);\nrequire('../lib/services/apigateway');\nObject.defineProperty(apiLoader.services['apigateway'], '2015-07-09', {\n  get: function get() {\n    var model = require('../apis/apigateway-2015-07-09.min.json');\n    model.paginators = require('../apis/apigateway-2015-07-09.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.APIGateway;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['apigatewaymanagementapi'] = {};\nAWS.ApiGatewayManagementApi = Service.defineService('apigatewaymanagementapi', ['2018-11-29']);\nObject.defineProperty(apiLoader.services['apigatewaymanagementapi'], '2018-11-29', {\n  get: function get() {\n    var model = require('../apis/apigatewaymanagementapi-2018-11-29.min.json');\n    model.paginators = require('../apis/apigatewaymanagementapi-2018-11-29.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.ApiGatewayManagementApi;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['apigatewayv2'] = {};\nAWS.ApiGatewayV2 = Service.defineService('apigatewayv2', ['2018-11-29']);\nObject.defineProperty(apiLoader.services['apigatewayv2'], '2018-11-29', {\n  get: function get() {\n    var model = require('../apis/apigatewayv2-2018-11-29.min.json');\n    model.paginators = require('../apis/apigatewayv2-2018-11-29.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.ApiGatewayV2;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['applicationautoscaling'] = {};\nAWS.ApplicationAutoScaling = Service.defineService('applicationautoscaling', ['2016-02-06']);\nObject.defineProperty(apiLoader.services['applicationautoscaling'], '2016-02-06', {\n  get: function get() {\n    var model = require('../apis/application-autoscaling-2016-02-06.min.json');\n    model.paginators = require('../apis/application-autoscaling-2016-02-06.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.ApplicationAutoScaling;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['applicationinsights'] = {};\nAWS.ApplicationInsights = Service.defineService('applicationinsights', ['2018-11-25']);\nObject.defineProperty(apiLoader.services['applicationinsights'], '2018-11-25', {\n  get: function get() {\n    var model = require('../apis/application-insights-2018-11-25.min.json');\n    model.paginators = require('../apis/application-insights-2018-11-25.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.ApplicationInsights;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['appmesh'] = {};\nAWS.AppMesh = Service.defineService('appmesh', ['2018-10-01', '2018-10-01*', '2019-01-25']);\nObject.defineProperty(apiLoader.services['appmesh'], '2018-10-01', {\n  get: function get() {\n    var model = require('../apis/appmesh-2018-10-01.min.json');\n    model.paginators = require('../apis/appmesh-2018-10-01.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(apiLoader.services['appmesh'], '2019-01-25', {\n  get: function get() {\n    var model = require('../apis/appmesh-2019-01-25.min.json');\n    model.paginators = require('../apis/appmesh-2019-01-25.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.AppMesh;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['appstream'] = {};\nAWS.AppStream = Service.defineService('appstream', ['2016-12-01']);\nObject.defineProperty(apiLoader.services['appstream'], '2016-12-01', {\n  get: function get() {\n    var model = require('../apis/appstream-2016-12-01.min.json');\n    model.paginators = require('../apis/appstream-2016-12-01.paginators.json').pagination;\n    model.waiters = require('../apis/appstream-2016-12-01.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.AppStream;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['appsync'] = {};\nAWS.AppSync = Service.defineService('appsync', ['2017-07-25']);\nObject.defineProperty(apiLoader.services['appsync'], '2017-07-25', {\n  get: function get() {\n    var model = require('../apis/appsync-2017-07-25.min.json');\n    model.paginators = require('../apis/appsync-2017-07-25.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.AppSync;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['athena'] = {};\nAWS.Athena = Service.defineService('athena', ['2017-05-18']);\nObject.defineProperty(apiLoader.services['athena'], '2017-05-18', {\n  get: function get() {\n    var model = require('../apis/athena-2017-05-18.min.json');\n    model.paginators = require('../apis/athena-2017-05-18.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Athena;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['autoscaling'] = {};\nAWS.AutoScaling = Service.defineService('autoscaling', ['2011-01-01']);\nObject.defineProperty(apiLoader.services['autoscaling'], '2011-01-01', {\n  get: function get() {\n    var model = require('../apis/autoscaling-2011-01-01.min.json');\n    model.paginators = require('../apis/autoscaling-2011-01-01.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.AutoScaling;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['autoscalingplans'] = {};\nAWS.AutoScalingPlans = Service.defineService('autoscalingplans', ['2018-01-06']);\nObject.defineProperty(apiLoader.services['autoscalingplans'], '2018-01-06', {\n  get: function get() {\n    var model = require('../apis/autoscaling-plans-2018-01-06.min.json');\n    model.paginators = require('../apis/autoscaling-plans-2018-01-06.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.AutoScalingPlans;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['backup'] = {};\nAWS.Backup = Service.defineService('backup', ['2018-11-15']);\nObject.defineProperty(apiLoader.services['backup'], '2018-11-15', {\n  get: function get() {\n    var model = require('../apis/backup-2018-11-15.min.json');\n    model.paginators = require('../apis/backup-2018-11-15.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Backup;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['batch'] = {};\nAWS.Batch = Service.defineService('batch', ['2016-08-10']);\nObject.defineProperty(apiLoader.services['batch'], '2016-08-10', {\n  get: function get() {\n    var model = require('../apis/batch-2016-08-10.min.json');\n    model.paginators = require('../apis/batch-2016-08-10.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Batch;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['budgets'] = {};\nAWS.Budgets = Service.defineService('budgets', ['2016-10-20']);\nObject.defineProperty(apiLoader.services['budgets'], '2016-10-20', {\n  get: function get() {\n    var model = require('../apis/budgets-2016-10-20.min.json');\n    model.paginators = require('../apis/budgets-2016-10-20.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Budgets;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['chime'] = {};\nAWS.Chime = Service.defineService('chime', ['2018-05-01']);\nObject.defineProperty(apiLoader.services['chime'], '2018-05-01', {\n  get: function get() {\n    var model = require('../apis/chime-2018-05-01.min.json');\n    model.paginators = require('../apis/chime-2018-05-01.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Chime;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['cloud9'] = {};\nAWS.Cloud9 = Service.defineService('cloud9', ['2017-09-23']);\nObject.defineProperty(apiLoader.services['cloud9'], '2017-09-23', {\n  get: function get() {\n    var model = require('../apis/cloud9-2017-09-23.min.json');\n    model.paginators = require('../apis/cloud9-2017-09-23.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Cloud9;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['clouddirectory'] = {};\nAWS.CloudDirectory = Service.defineService('clouddirectory', ['2016-05-10', '2016-05-10*', '2017-01-11']);\nObject.defineProperty(apiLoader.services['clouddirectory'], '2016-05-10', {\n  get: function get() {\n    var model = require('../apis/clouddirectory-2016-05-10.min.json');\n    model.paginators = require('../apis/clouddirectory-2016-05-10.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(apiLoader.services['clouddirectory'], '2017-01-11', {\n  get: function get() {\n    var model = require('../apis/clouddirectory-2017-01-11.min.json');\n    model.paginators = require('../apis/clouddirectory-2017-01-11.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.CloudDirectory;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['cloudformation'] = {};\nAWS.CloudFormation = Service.defineService('cloudformation', ['2010-05-15']);\nObject.defineProperty(apiLoader.services['cloudformation'], '2010-05-15', {\n  get: function get() {\n    var model = require('../apis/cloudformation-2010-05-15.min.json');\n    model.paginators = require('../apis/cloudformation-2010-05-15.paginators.json').pagination;\n    model.waiters = require('../apis/cloudformation-2010-05-15.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.CloudFormation;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['cloudfront'] = {};\nAWS.CloudFront = Service.defineService('cloudfront', ['2013-05-12*', '2013-11-11*', '2014-05-31*', '2014-10-21*', '2014-11-06*', '2015-04-17*', '2015-07-27*', '2015-09-17*', '2016-01-13*', '2016-01-28*', '2016-08-01*', '2016-08-20*', '2016-09-07*', '2016-09-29*', '2016-11-25', '2016-11-25*', '2017-03-25', '2017-03-25*', '2017-10-30', '2017-10-30*', '2018-06-18', '2018-06-18*', '2018-11-05', '2018-11-05*', '2019-03-26']);\nrequire('../lib/services/cloudfront');\nObject.defineProperty(apiLoader.services['cloudfront'], '2016-11-25', {\n  get: function get() {\n    var model = require('../apis/cloudfront-2016-11-25.min.json');\n    model.paginators = require('../apis/cloudfront-2016-11-25.paginators.json').pagination;\n    model.waiters = require('../apis/cloudfront-2016-11-25.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(apiLoader.services['cloudfront'], '2017-03-25', {\n  get: function get() {\n    var model = require('../apis/cloudfront-2017-03-25.min.json');\n    model.paginators = require('../apis/cloudfront-2017-03-25.paginators.json').pagination;\n    model.waiters = require('../apis/cloudfront-2017-03-25.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(apiLoader.services['cloudfront'], '2017-10-30', {\n  get: function get() {\n    var model = require('../apis/cloudfront-2017-10-30.min.json');\n    model.paginators = require('../apis/cloudfront-2017-10-30.paginators.json').pagination;\n    model.waiters = require('../apis/cloudfront-2017-10-30.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(apiLoader.services['cloudfront'], '2018-06-18', {\n  get: function get() {\n    var model = require('../apis/cloudfront-2018-06-18.min.json');\n    model.paginators = require('../apis/cloudfront-2018-06-18.paginators.json').pagination;\n    model.waiters = require('../apis/cloudfront-2018-06-18.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(apiLoader.services['cloudfront'], '2018-11-05', {\n  get: function get() {\n    var model = require('../apis/cloudfront-2018-11-05.min.json');\n    model.paginators = require('../apis/cloudfront-2018-11-05.paginators.json').pagination;\n    model.waiters = require('../apis/cloudfront-2018-11-05.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(apiLoader.services['cloudfront'], '2019-03-26', {\n  get: function get() {\n    var model = require('../apis/cloudfront-2019-03-26.min.json');\n    model.paginators = require('../apis/cloudfront-2019-03-26.paginators.json').pagination;\n    model.waiters = require('../apis/cloudfront-2019-03-26.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.CloudFront;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['cloudhsm'] = {};\nAWS.CloudHSM = Service.defineService('cloudhsm', ['2014-05-30']);\nObject.defineProperty(apiLoader.services['cloudhsm'], '2014-05-30', {\n  get: function get() {\n    var model = require('../apis/cloudhsm-2014-05-30.min.json');\n    model.paginators = require('../apis/cloudhsm-2014-05-30.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.CloudHSM;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['cloudhsmv2'] = {};\nAWS.CloudHSMV2 = Service.defineService('cloudhsmv2', ['2017-04-28']);\nObject.defineProperty(apiLoader.services['cloudhsmv2'], '2017-04-28', {\n  get: function get() {\n    var model = require('../apis/cloudhsmv2-2017-04-28.min.json');\n    model.paginators = require('../apis/cloudhsmv2-2017-04-28.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.CloudHSMV2;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['cloudsearch'] = {};\nAWS.CloudSearch = Service.defineService('cloudsearch', ['2011-02-01', '2013-01-01']);\nObject.defineProperty(apiLoader.services['cloudsearch'], '2011-02-01', {\n  get: function get() {\n    var model = require('../apis/cloudsearch-2011-02-01.min.json');\n    model.paginators = require('../apis/cloudsearch-2011-02-01.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(apiLoader.services['cloudsearch'], '2013-01-01', {\n  get: function get() {\n    var model = require('../apis/cloudsearch-2013-01-01.min.json');\n    model.paginators = require('../apis/cloudsearch-2013-01-01.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.CloudSearch;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['cloudsearchdomain'] = {};\nAWS.CloudSearchDomain = Service.defineService('cloudsearchdomain', ['2013-01-01']);\nrequire('../lib/services/cloudsearchdomain');\nObject.defineProperty(apiLoader.services['cloudsearchdomain'], '2013-01-01', {\n  get: function get() {\n    var model = require('../apis/cloudsearchdomain-2013-01-01.min.json');\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.CloudSearchDomain;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['cloudtrail'] = {};\nAWS.CloudTrail = Service.defineService('cloudtrail', ['2013-11-01']);\nObject.defineProperty(apiLoader.services['cloudtrail'], '2013-11-01', {\n  get: function get() {\n    var model = require('../apis/cloudtrail-2013-11-01.min.json');\n    model.paginators = require('../apis/cloudtrail-2013-11-01.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.CloudTrail;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['cloudwatch'] = {};\nAWS.CloudWatch = Service.defineService('cloudwatch', ['2010-08-01']);\nObject.defineProperty(apiLoader.services['cloudwatch'], '2010-08-01', {\n  get: function get() {\n    var model = require('../apis/monitoring-2010-08-01.min.json');\n    model.paginators = require('../apis/monitoring-2010-08-01.paginators.json').pagination;\n    model.waiters = require('../apis/monitoring-2010-08-01.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.CloudWatch;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['cloudwatchevents'] = {};\nAWS.CloudWatchEvents = Service.defineService('cloudwatchevents', ['2014-02-03*', '2015-10-07']);\nObject.defineProperty(apiLoader.services['cloudwatchevents'], '2015-10-07', {\n  get: function get() {\n    var model = require('../apis/events-2015-10-07.min.json');\n    model.paginators = require('../apis/events-2015-10-07.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.CloudWatchEvents;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['cloudwatchlogs'] = {};\nAWS.CloudWatchLogs = Service.defineService('cloudwatchlogs', ['2014-03-28']);\nObject.defineProperty(apiLoader.services['cloudwatchlogs'], '2014-03-28', {\n  get: function get() {\n    var model = require('../apis/logs-2014-03-28.min.json');\n    model.paginators = require('../apis/logs-2014-03-28.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.CloudWatchLogs;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['codebuild'] = {};\nAWS.CodeBuild = Service.defineService('codebuild', ['2016-10-06']);\nObject.defineProperty(apiLoader.services['codebuild'], '2016-10-06', {\n  get: function get() {\n    var model = require('../apis/codebuild-2016-10-06.min.json');\n    model.paginators = require('../apis/codebuild-2016-10-06.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.CodeBuild;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['codecommit'] = {};\nAWS.CodeCommit = Service.defineService('codecommit', ['2015-04-13']);\nObject.defineProperty(apiLoader.services['codecommit'], '2015-04-13', {\n  get: function get() {\n    var model = require('../apis/codecommit-2015-04-13.min.json');\n    model.paginators = require('../apis/codecommit-2015-04-13.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.CodeCommit;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['codedeploy'] = {};\nAWS.CodeDeploy = Service.defineService('codedeploy', ['2014-10-06']);\nObject.defineProperty(apiLoader.services['codedeploy'], '2014-10-06', {\n  get: function get() {\n    var model = require('../apis/codedeploy-2014-10-06.min.json');\n    model.paginators = require('../apis/codedeploy-2014-10-06.paginators.json').pagination;\n    model.waiters = require('../apis/codedeploy-2014-10-06.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.CodeDeploy;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['codepipeline'] = {};\nAWS.CodePipeline = Service.defineService('codepipeline', ['2015-07-09']);\nObject.defineProperty(apiLoader.services['codepipeline'], '2015-07-09', {\n  get: function get() {\n    var model = require('../apis/codepipeline-2015-07-09.min.json');\n    model.paginators = require('../apis/codepipeline-2015-07-09.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.CodePipeline;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['codestar'] = {};\nAWS.CodeStar = Service.defineService('codestar', ['2017-04-19']);\nObject.defineProperty(apiLoader.services['codestar'], '2017-04-19', {\n  get: function get() {\n    var model = require('../apis/codestar-2017-04-19.min.json');\n    model.paginators = require('../apis/codestar-2017-04-19.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.CodeStar;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['cognitoidentity'] = {};\nAWS.CognitoIdentity = Service.defineService('cognitoidentity', ['2014-06-30']);\nrequire('../lib/services/cognitoidentity');\nObject.defineProperty(apiLoader.services['cognitoidentity'], '2014-06-30', {\n  get: function get() {\n    var model = require('../apis/cognito-identity-2014-06-30.min.json');\n    model.paginators = require('../apis/cognito-identity-2014-06-30.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.CognitoIdentity;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['cognitoidentityserviceprovider'] = {};\nAWS.CognitoIdentityServiceProvider = Service.defineService('cognitoidentityserviceprovider', ['2016-04-18']);\nObject.defineProperty(apiLoader.services['cognitoidentityserviceprovider'], '2016-04-18', {\n  get: function get() {\n    var model = require('../apis/cognito-idp-2016-04-18.min.json');\n    model.paginators = require('../apis/cognito-idp-2016-04-18.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.CognitoIdentityServiceProvider;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['cognitosync'] = {};\nAWS.CognitoSync = Service.defineService('cognitosync', ['2014-06-30']);\nObject.defineProperty(apiLoader.services['cognitosync'], '2014-06-30', {\n  get: function get() {\n    var model = require('../apis/cognito-sync-2014-06-30.min.json');\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.CognitoSync;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['comprehend'] = {};\nAWS.Comprehend = Service.defineService('comprehend', ['2017-11-27']);\nObject.defineProperty(apiLoader.services['comprehend'], '2017-11-27', {\n  get: function get() {\n    var model = require('../apis/comprehend-2017-11-27.min.json');\n    model.paginators = require('../apis/comprehend-2017-11-27.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Comprehend;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['comprehendmedical'] = {};\nAWS.ComprehendMedical = Service.defineService('comprehendmedical', ['2018-10-30']);\nObject.defineProperty(apiLoader.services['comprehendmedical'], '2018-10-30', {\n  get: function get() {\n    var model = require('../apis/comprehendmedical-2018-10-30.min.json');\n    model.paginators = require('../apis/comprehendmedical-2018-10-30.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.ComprehendMedical;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['configservice'] = {};\nAWS.ConfigService = Service.defineService('configservice', ['2014-11-12']);\nObject.defineProperty(apiLoader.services['configservice'], '2014-11-12', {\n  get: function get() {\n    var model = require('../apis/config-2014-11-12.min.json');\n    model.paginators = require('../apis/config-2014-11-12.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.ConfigService;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['connect'] = {};\nAWS.Connect = Service.defineService('connect', ['2017-08-08']);\nObject.defineProperty(apiLoader.services['connect'], '2017-08-08', {\n  get: function get() {\n    var model = require('../apis/connect-2017-08-08.min.json');\n    model.paginators = require('../apis/connect-2017-08-08.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Connect;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['costexplorer'] = {};\nAWS.CostExplorer = Service.defineService('costexplorer', ['2017-10-25']);\nObject.defineProperty(apiLoader.services['costexplorer'], '2017-10-25', {\n  get: function get() {\n    var model = require('../apis/ce-2017-10-25.min.json');\n    model.paginators = require('../apis/ce-2017-10-25.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.CostExplorer;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['cur'] = {};\nAWS.CUR = Service.defineService('cur', ['2017-01-06']);\nObject.defineProperty(apiLoader.services['cur'], '2017-01-06', {\n  get: function get() {\n    var model = require('../apis/cur-2017-01-06.min.json');\n    model.paginators = require('../apis/cur-2017-01-06.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.CUR;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['datapipeline'] = {};\nAWS.DataPipeline = Service.defineService('datapipeline', ['2012-10-29']);\nObject.defineProperty(apiLoader.services['datapipeline'], '2012-10-29', {\n  get: function get() {\n    var model = require('../apis/datapipeline-2012-10-29.min.json');\n    model.paginators = require('../apis/datapipeline-2012-10-29.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.DataPipeline;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['datasync'] = {};\nAWS.DataSync = Service.defineService('datasync', ['2018-11-09']);\nObject.defineProperty(apiLoader.services['datasync'], '2018-11-09', {\n  get: function get() {\n    var model = require('../apis/datasync-2018-11-09.min.json');\n    model.paginators = require('../apis/datasync-2018-11-09.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.DataSync;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['dax'] = {};\nAWS.DAX = Service.defineService('dax', ['2017-04-19']);\nObject.defineProperty(apiLoader.services['dax'], '2017-04-19', {\n  get: function get() {\n    var model = require('../apis/dax-2017-04-19.min.json');\n    model.paginators = require('../apis/dax-2017-04-19.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.DAX;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['devicefarm'] = {};\nAWS.DeviceFarm = Service.defineService('devicefarm', ['2015-06-23']);\nObject.defineProperty(apiLoader.services['devicefarm'], '2015-06-23', {\n  get: function get() {\n    var model = require('../apis/devicefarm-2015-06-23.min.json');\n    model.paginators = require('../apis/devicefarm-2015-06-23.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.DeviceFarm;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['directconnect'] = {};\nAWS.DirectConnect = Service.defineService('directconnect', ['2012-10-25']);\nObject.defineProperty(apiLoader.services['directconnect'], '2012-10-25', {\n  get: function get() {\n    var model = require('../apis/directconnect-2012-10-25.min.json');\n    model.paginators = require('../apis/directconnect-2012-10-25.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.DirectConnect;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['directoryservice'] = {};\nAWS.DirectoryService = Service.defineService('directoryservice', ['2015-04-16']);\nObject.defineProperty(apiLoader.services['directoryservice'], '2015-04-16', {\n  get: function get() {\n    var model = require('../apis/ds-2015-04-16.min.json');\n    model.paginators = require('../apis/ds-2015-04-16.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.DirectoryService;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['discovery'] = {};\nAWS.Discovery = Service.defineService('discovery', ['2015-11-01']);\nObject.defineProperty(apiLoader.services['discovery'], '2015-11-01', {\n  get: function get() {\n    var model = require('../apis/discovery-2015-11-01.min.json');\n    model.paginators = require('../apis/discovery-2015-11-01.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Discovery;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['dlm'] = {};\nAWS.DLM = Service.defineService('dlm', ['2018-01-12']);\nObject.defineProperty(apiLoader.services['dlm'], '2018-01-12', {\n  get: function get() {\n    var model = require('../apis/dlm-2018-01-12.min.json');\n    model.paginators = require('../apis/dlm-2018-01-12.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.DLM;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['dms'] = {};\nAWS.DMS = Service.defineService('dms', ['2016-01-01']);\nObject.defineProperty(apiLoader.services['dms'], '2016-01-01', {\n  get: function get() {\n    var model = require('../apis/dms-2016-01-01.min.json');\n    model.paginators = require('../apis/dms-2016-01-01.paginators.json').pagination;\n    model.waiters = require('../apis/dms-2016-01-01.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.DMS;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['docdb'] = {};\nAWS.DocDB = Service.defineService('docdb', ['2014-10-31']);\nObject.defineProperty(apiLoader.services['docdb'], '2014-10-31', {\n  get: function get() {\n    var model = require('../apis/docdb-2014-10-31.min.json');\n    model.paginators = require('../apis/docdb-2014-10-31.paginators.json').pagination;\n    model.waiters = require('../apis/docdb-2014-10-31.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.DocDB;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['dynamodb'] = {};\nAWS.DynamoDB = Service.defineService('dynamodb', ['2011-12-05', '2012-08-10']);\nrequire('../lib/services/dynamodb');\nObject.defineProperty(apiLoader.services['dynamodb'], '2011-12-05', {\n  get: function get() {\n    var model = require('../apis/dynamodb-2011-12-05.min.json');\n    model.paginators = require('../apis/dynamodb-2011-12-05.paginators.json').pagination;\n    model.waiters = require('../apis/dynamodb-2011-12-05.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(apiLoader.services['dynamodb'], '2012-08-10', {\n  get: function get() {\n    var model = require('../apis/dynamodb-2012-08-10.min.json');\n    model.paginators = require('../apis/dynamodb-2012-08-10.paginators.json').pagination;\n    model.waiters = require('../apis/dynamodb-2012-08-10.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.DynamoDB;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['dynamodbstreams'] = {};\nAWS.DynamoDBStreams = Service.defineService('dynamodbstreams', ['2012-08-10']);\nObject.defineProperty(apiLoader.services['dynamodbstreams'], '2012-08-10', {\n  get: function get() {\n    var model = require('../apis/streams.dynamodb-2012-08-10.min.json');\n    model.paginators = require('../apis/streams.dynamodb-2012-08-10.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.DynamoDBStreams;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['ec2'] = {};\nAWS.EC2 = Service.defineService('ec2', ['2013-06-15*', '2013-10-15*', '2014-02-01*', '2014-05-01*', '2014-06-15*', '2014-09-01*', '2014-10-01*', '2015-03-01*', '2015-04-15*', '2015-10-01*', '2016-04-01*', '2016-09-15*', '2016-11-15']);\nrequire('../lib/services/ec2');\nObject.defineProperty(apiLoader.services['ec2'], '2016-11-15', {\n  get: function get() {\n    var model = require('../apis/ec2-2016-11-15.min.json');\n    model.paginators = require('../apis/ec2-2016-11-15.paginators.json').pagination;\n    model.waiters = require('../apis/ec2-2016-11-15.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.EC2;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['ec2instanceconnect'] = {};\nAWS.EC2InstanceConnect = Service.defineService('ec2instanceconnect', ['2018-04-02']);\nObject.defineProperty(apiLoader.services['ec2instanceconnect'], '2018-04-02', {\n  get: function get() {\n    var model = require('../apis/ec2-instance-connect-2018-04-02.min.json');\n    model.paginators = require('../apis/ec2-instance-connect-2018-04-02.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.EC2InstanceConnect;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['ecr'] = {};\nAWS.ECR = Service.defineService('ecr', ['2015-09-21']);\nObject.defineProperty(apiLoader.services['ecr'], '2015-09-21', {\n  get: function get() {\n    var model = require('../apis/ecr-2015-09-21.min.json');\n    model.paginators = require('../apis/ecr-2015-09-21.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.ECR;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['ecs'] = {};\nAWS.ECS = Service.defineService('ecs', ['2014-11-13']);\nObject.defineProperty(apiLoader.services['ecs'], '2014-11-13', {\n  get: function get() {\n    var model = require('../apis/ecs-2014-11-13.min.json');\n    model.paginators = require('../apis/ecs-2014-11-13.paginators.json').pagination;\n    model.waiters = require('../apis/ecs-2014-11-13.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.ECS;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['efs'] = {};\nAWS.EFS = Service.defineService('efs', ['2015-02-01']);\nObject.defineProperty(apiLoader.services['efs'], '2015-02-01', {\n  get: function get() {\n    var model = require('../apis/elasticfilesystem-2015-02-01.min.json');\n    model.paginators = require('../apis/elasticfilesystem-2015-02-01.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.EFS;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['eks'] = {};\nAWS.EKS = Service.defineService('eks', ['2017-11-01']);\nObject.defineProperty(apiLoader.services['eks'], '2017-11-01', {\n  get: function get() {\n    var model = require('../apis/eks-2017-11-01.min.json');\n    model.paginators = require('../apis/eks-2017-11-01.paginators.json').pagination;\n    model.waiters = require('../apis/eks-2017-11-01.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.EKS;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['elasticache'] = {};\nAWS.ElastiCache = Service.defineService('elasticache', ['2012-11-15*', '2014-03-24*', '2014-07-15*', '2014-09-30*', '2015-02-02']);\nObject.defineProperty(apiLoader.services['elasticache'], '2015-02-02', {\n  get: function get() {\n    var model = require('../apis/elasticache-2015-02-02.min.json');\n    model.paginators = require('../apis/elasticache-2015-02-02.paginators.json').pagination;\n    model.waiters = require('../apis/elasticache-2015-02-02.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.ElastiCache;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['elasticbeanstalk'] = {};\nAWS.ElasticBeanstalk = Service.defineService('elasticbeanstalk', ['2010-12-01']);\nObject.defineProperty(apiLoader.services['elasticbeanstalk'], '2010-12-01', {\n  get: function get() {\n    var model = require('../apis/elasticbeanstalk-2010-12-01.min.json');\n    model.paginators = require('../apis/elasticbeanstalk-2010-12-01.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.ElasticBeanstalk;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['elastictranscoder'] = {};\nAWS.ElasticTranscoder = Service.defineService('elastictranscoder', ['2012-09-25']);\nObject.defineProperty(apiLoader.services['elastictranscoder'], '2012-09-25', {\n  get: function get() {\n    var model = require('../apis/elastictranscoder-2012-09-25.min.json');\n    model.paginators = require('../apis/elastictranscoder-2012-09-25.paginators.json').pagination;\n    model.waiters = require('../apis/elastictranscoder-2012-09-25.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.ElasticTranscoder;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['elb'] = {};\nAWS.ELB = Service.defineService('elb', ['2012-06-01']);\nObject.defineProperty(apiLoader.services['elb'], '2012-06-01', {\n  get: function get() {\n    var model = require('../apis/elasticloadbalancing-2012-06-01.min.json');\n    model.paginators = require('../apis/elasticloadbalancing-2012-06-01.paginators.json').pagination;\n    model.waiters = require('../apis/elasticloadbalancing-2012-06-01.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.ELB;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['elbv2'] = {};\nAWS.ELBv2 = Service.defineService('elbv2', ['2015-12-01']);\nObject.defineProperty(apiLoader.services['elbv2'], '2015-12-01', {\n  get: function get() {\n    var model = require('../apis/elasticloadbalancingv2-2015-12-01.min.json');\n    model.paginators = require('../apis/elasticloadbalancingv2-2015-12-01.paginators.json').pagination;\n    model.waiters = require('../apis/elasticloadbalancingv2-2015-12-01.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.ELBv2;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['emr'] = {};\nAWS.EMR = Service.defineService('emr', ['2009-03-31']);\nObject.defineProperty(apiLoader.services['emr'], '2009-03-31', {\n  get: function get() {\n    var model = require('../apis/elasticmapreduce-2009-03-31.min.json');\n    model.paginators = require('../apis/elasticmapreduce-2009-03-31.paginators.json').pagination;\n    model.waiters = require('../apis/elasticmapreduce-2009-03-31.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.EMR;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['es'] = {};\nAWS.ES = Service.defineService('es', ['2015-01-01']);\nObject.defineProperty(apiLoader.services['es'], '2015-01-01', {\n  get: function get() {\n    var model = require('../apis/es-2015-01-01.min.json');\n    model.paginators = require('../apis/es-2015-01-01.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.ES;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['eventbridge'] = {};\nAWS.EventBridge = Service.defineService('eventbridge', ['2015-10-07']);\nObject.defineProperty(apiLoader.services['eventbridge'], '2015-10-07', {\n  get: function get() {\n    var model = require('../apis/eventbridge-2015-10-07.min.json');\n    model.paginators = require('../apis/eventbridge-2015-10-07.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.EventBridge;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['firehose'] = {};\nAWS.Firehose = Service.defineService('firehose', ['2015-08-04']);\nObject.defineProperty(apiLoader.services['firehose'], '2015-08-04', {\n  get: function get() {\n    var model = require('../apis/firehose-2015-08-04.min.json');\n    model.paginators = require('../apis/firehose-2015-08-04.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Firehose;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['fms'] = {};\nAWS.FMS = Service.defineService('fms', ['2018-01-01']);\nObject.defineProperty(apiLoader.services['fms'], '2018-01-01', {\n  get: function get() {\n    var model = require('../apis/fms-2018-01-01.min.json');\n    model.paginators = require('../apis/fms-2018-01-01.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.FMS;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['fsx'] = {};\nAWS.FSx = Service.defineService('fsx', ['2018-03-01']);\nObject.defineProperty(apiLoader.services['fsx'], '2018-03-01', {\n  get: function get() {\n    var model = require('../apis/fsx-2018-03-01.min.json');\n    model.paginators = require('../apis/fsx-2018-03-01.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.FSx;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['gamelift'] = {};\nAWS.GameLift = Service.defineService('gamelift', ['2015-10-01']);\nObject.defineProperty(apiLoader.services['gamelift'], '2015-10-01', {\n  get: function get() {\n    var model = require('../apis/gamelift-2015-10-01.min.json');\n    model.paginators = require('../apis/gamelift-2015-10-01.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.GameLift;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['glacier'] = {};\nAWS.Glacier = Service.defineService('glacier', ['2012-06-01']);\nrequire('../lib/services/glacier');\nObject.defineProperty(apiLoader.services['glacier'], '2012-06-01', {\n  get: function get() {\n    var model = require('../apis/glacier-2012-06-01.min.json');\n    model.paginators = require('../apis/glacier-2012-06-01.paginators.json').pagination;\n    model.waiters = require('../apis/glacier-2012-06-01.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Glacier;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['globalaccelerator'] = {};\nAWS.GlobalAccelerator = Service.defineService('globalaccelerator', ['2018-08-08']);\nObject.defineProperty(apiLoader.services['globalaccelerator'], '2018-08-08', {\n  get: function get() {\n    var model = require('../apis/globalaccelerator-2018-08-08.min.json');\n    model.paginators = require('../apis/globalaccelerator-2018-08-08.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.GlobalAccelerator;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['glue'] = {};\nAWS.Glue = Service.defineService('glue', ['2017-03-31']);\nObject.defineProperty(apiLoader.services['glue'], '2017-03-31', {\n  get: function get() {\n    var model = require('../apis/glue-2017-03-31.min.json');\n    model.paginators = require('../apis/glue-2017-03-31.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Glue;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['greengrass'] = {};\nAWS.Greengrass = Service.defineService('greengrass', ['2017-06-07']);\nObject.defineProperty(apiLoader.services['greengrass'], '2017-06-07', {\n  get: function get() {\n    var model = require('../apis/greengrass-2017-06-07.min.json');\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Greengrass;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['groundstation'] = {};\nAWS.GroundStation = Service.defineService('groundstation', ['2019-05-23']);\nObject.defineProperty(apiLoader.services['groundstation'], '2019-05-23', {\n  get: function get() {\n    var model = require('../apis/groundstation-2019-05-23.min.json');\n    model.paginators = require('../apis/groundstation-2019-05-23.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.GroundStation;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['guardduty'] = {};\nAWS.GuardDuty = Service.defineService('guardduty', ['2017-11-28']);\nObject.defineProperty(apiLoader.services['guardduty'], '2017-11-28', {\n  get: function get() {\n    var model = require('../apis/guardduty-2017-11-28.min.json');\n    model.paginators = require('../apis/guardduty-2017-11-28.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.GuardDuty;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['health'] = {};\nAWS.Health = Service.defineService('health', ['2016-08-04']);\nObject.defineProperty(apiLoader.services['health'], '2016-08-04', {\n  get: function get() {\n    var model = require('../apis/health-2016-08-04.min.json');\n    model.paginators = require('../apis/health-2016-08-04.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Health;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['iam'] = {};\nAWS.IAM = Service.defineService('iam', ['2010-05-08']);\nObject.defineProperty(apiLoader.services['iam'], '2010-05-08', {\n  get: function get() {\n    var model = require('../apis/iam-2010-05-08.min.json');\n    model.paginators = require('../apis/iam-2010-05-08.paginators.json').pagination;\n    model.waiters = require('../apis/iam-2010-05-08.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.IAM;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['importexport'] = {};\nAWS.ImportExport = Service.defineService('importexport', ['2010-06-01']);\nObject.defineProperty(apiLoader.services['importexport'], '2010-06-01', {\n  get: function get() {\n    var model = require('../apis/importexport-2010-06-01.min.json');\n    model.paginators = require('../apis/importexport-2010-06-01.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.ImportExport;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['inspector'] = {};\nAWS.Inspector = Service.defineService('inspector', ['2015-08-18*', '2016-02-16']);\nObject.defineProperty(apiLoader.services['inspector'], '2016-02-16', {\n  get: function get() {\n    var model = require('../apis/inspector-2016-02-16.min.json');\n    model.paginators = require('../apis/inspector-2016-02-16.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Inspector;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['iot'] = {};\nAWS.Iot = Service.defineService('iot', ['2015-05-28']);\nObject.defineProperty(apiLoader.services['iot'], '2015-05-28', {\n  get: function get() {\n    var model = require('../apis/iot-2015-05-28.min.json');\n    model.paginators = require('../apis/iot-2015-05-28.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Iot;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['iot1clickdevicesservice'] = {};\nAWS.IoT1ClickDevicesService = Service.defineService('iot1clickdevicesservice', ['2018-05-14']);\nObject.defineProperty(apiLoader.services['iot1clickdevicesservice'], '2018-05-14', {\n  get: function get() {\n    var model = require('../apis/iot1click-devices-2018-05-14.min.json');\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.IoT1ClickDevicesService;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['iot1clickprojects'] = {};\nAWS.IoT1ClickProjects = Service.defineService('iot1clickprojects', ['2018-05-14']);\nObject.defineProperty(apiLoader.services['iot1clickprojects'], '2018-05-14', {\n  get: function get() {\n    var model = require('../apis/iot1click-projects-2018-05-14.min.json');\n    model.paginators = require('../apis/iot1click-projects-2018-05-14.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.IoT1ClickProjects;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['iotanalytics'] = {};\nAWS.IoTAnalytics = Service.defineService('iotanalytics', ['2017-11-27']);\nObject.defineProperty(apiLoader.services['iotanalytics'], '2017-11-27', {\n  get: function get() {\n    var model = require('../apis/iotanalytics-2017-11-27.min.json');\n    model.paginators = require('../apis/iotanalytics-2017-11-27.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.IoTAnalytics;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['iotdata'] = {};\nAWS.IotData = Service.defineService('iotdata', ['2015-05-28']);\nrequire('../lib/services/iotdata');\nObject.defineProperty(apiLoader.services['iotdata'], '2015-05-28', {\n  get: function get() {\n    var model = require('../apis/iot-data-2015-05-28.min.json');\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.IotData;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['iotevents'] = {};\nAWS.IoTEvents = Service.defineService('iotevents', ['2018-07-27']);\nObject.defineProperty(apiLoader.services['iotevents'], '2018-07-27', {\n  get: function get() {\n    var model = require('../apis/iotevents-2018-07-27.min.json');\n    model.paginators = require('../apis/iotevents-2018-07-27.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.IoTEvents;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['ioteventsdata'] = {};\nAWS.IoTEventsData = Service.defineService('ioteventsdata', ['2018-10-23']);\nObject.defineProperty(apiLoader.services['ioteventsdata'], '2018-10-23', {\n  get: function get() {\n    var model = require('../apis/iotevents-data-2018-10-23.min.json');\n    model.paginators = require('../apis/iotevents-data-2018-10-23.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.IoTEventsData;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['iotjobsdataplane'] = {};\nAWS.IoTJobsDataPlane = Service.defineService('iotjobsdataplane', ['2017-09-29']);\nObject.defineProperty(apiLoader.services['iotjobsdataplane'], '2017-09-29', {\n  get: function get() {\n    var model = require('../apis/iot-jobs-data-2017-09-29.min.json');\n    model.paginators = require('../apis/iot-jobs-data-2017-09-29.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.IoTJobsDataPlane;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['iotthingsgraph'] = {};\nAWS.IoTThingsGraph = Service.defineService('iotthingsgraph', ['2018-09-06']);\nObject.defineProperty(apiLoader.services['iotthingsgraph'], '2018-09-06', {\n  get: function get() {\n    var model = require('../apis/iotthingsgraph-2018-09-06.min.json');\n    model.paginators = require('../apis/iotthingsgraph-2018-09-06.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.IoTThingsGraph;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['kafka'] = {};\nAWS.Kafka = Service.defineService('kafka', ['2018-11-14']);\nObject.defineProperty(apiLoader.services['kafka'], '2018-11-14', {\n  get: function get() {\n    var model = require('../apis/kafka-2018-11-14.min.json');\n    model.paginators = require('../apis/kafka-2018-11-14.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Kafka;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['kinesis'] = {};\nAWS.Kinesis = Service.defineService('kinesis', ['2013-12-02']);\nObject.defineProperty(apiLoader.services['kinesis'], '2013-12-02', {\n  get: function get() {\n    var model = require('../apis/kinesis-2013-12-02.min.json');\n    model.paginators = require('../apis/kinesis-2013-12-02.paginators.json').pagination;\n    model.waiters = require('../apis/kinesis-2013-12-02.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Kinesis;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['kinesisanalytics'] = {};\nAWS.KinesisAnalytics = Service.defineService('kinesisanalytics', ['2015-08-14']);\nObject.defineProperty(apiLoader.services['kinesisanalytics'], '2015-08-14', {\n  get: function get() {\n    var model = require('../apis/kinesisanalytics-2015-08-14.min.json');\n    model.paginators = require('../apis/kinesisanalytics-2015-08-14.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.KinesisAnalytics;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['kinesisanalyticsv2'] = {};\nAWS.KinesisAnalyticsV2 = Service.defineService('kinesisanalyticsv2', ['2018-05-23']);\nObject.defineProperty(apiLoader.services['kinesisanalyticsv2'], '2018-05-23', {\n  get: function get() {\n    var model = require('../apis/kinesisanalyticsv2-2018-05-23.min.json');\n    model.paginators = require('../apis/kinesisanalyticsv2-2018-05-23.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.KinesisAnalyticsV2;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['kinesisvideo'] = {};\nAWS.KinesisVideo = Service.defineService('kinesisvideo', ['2017-09-30']);\nObject.defineProperty(apiLoader.services['kinesisvideo'], '2017-09-30', {\n  get: function get() {\n    var model = require('../apis/kinesisvideo-2017-09-30.min.json');\n    model.paginators = require('../apis/kinesisvideo-2017-09-30.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.KinesisVideo;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['kinesisvideoarchivedmedia'] = {};\nAWS.KinesisVideoArchivedMedia = Service.defineService('kinesisvideoarchivedmedia', ['2017-09-30']);\nObject.defineProperty(apiLoader.services['kinesisvideoarchivedmedia'], '2017-09-30', {\n  get: function get() {\n    var model = require('../apis/kinesis-video-archived-media-2017-09-30.min.json');\n    model.paginators = require('../apis/kinesis-video-archived-media-2017-09-30.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.KinesisVideoArchivedMedia;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['kinesisvideomedia'] = {};\nAWS.KinesisVideoMedia = Service.defineService('kinesisvideomedia', ['2017-09-30']);\nObject.defineProperty(apiLoader.services['kinesisvideomedia'], '2017-09-30', {\n  get: function get() {\n    var model = require('../apis/kinesis-video-media-2017-09-30.min.json');\n    model.paginators = require('../apis/kinesis-video-media-2017-09-30.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.KinesisVideoMedia;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['kms'] = {};\nAWS.KMS = Service.defineService('kms', ['2014-11-01']);\nObject.defineProperty(apiLoader.services['kms'], '2014-11-01', {\n  get: function get() {\n    var model = require('../apis/kms-2014-11-01.min.json');\n    model.paginators = require('../apis/kms-2014-11-01.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.KMS;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['lakeformation'] = {};\nAWS.LakeFormation = Service.defineService('lakeformation', ['2017-03-31']);\nObject.defineProperty(apiLoader.services['lakeformation'], '2017-03-31', {\n  get: function get() {\n    var model = require('../apis/lakeformation-2017-03-31.min.json');\n    model.paginators = require('../apis/lakeformation-2017-03-31.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.LakeFormation;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['lambda'] = {};\nAWS.Lambda = Service.defineService('lambda', ['2014-11-11', '2015-03-31']);\nrequire('../lib/services/lambda');\nObject.defineProperty(apiLoader.services['lambda'], '2014-11-11', {\n  get: function get() {\n    var model = require('../apis/lambda-2014-11-11.min.json');\n    model.paginators = require('../apis/lambda-2014-11-11.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(apiLoader.services['lambda'], '2015-03-31', {\n  get: function get() {\n    var model = require('../apis/lambda-2015-03-31.min.json');\n    model.paginators = require('../apis/lambda-2015-03-31.paginators.json').pagination;\n    model.waiters = require('../apis/lambda-2015-03-31.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Lambda;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['lexmodelbuildingservice'] = {};\nAWS.LexModelBuildingService = Service.defineService('lexmodelbuildingservice', ['2017-04-19']);\nObject.defineProperty(apiLoader.services['lexmodelbuildingservice'], '2017-04-19', {\n  get: function get() {\n    var model = require('../apis/lex-models-2017-04-19.min.json');\n    model.paginators = require('../apis/lex-models-2017-04-19.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.LexModelBuildingService;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['lexruntime'] = {};\nAWS.LexRuntime = Service.defineService('lexruntime', ['2016-11-28']);\nObject.defineProperty(apiLoader.services['lexruntime'], '2016-11-28', {\n  get: function get() {\n    var model = require('../apis/runtime.lex-2016-11-28.min.json');\n    model.paginators = require('../apis/runtime.lex-2016-11-28.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.LexRuntime;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['licensemanager'] = {};\nAWS.LicenseManager = Service.defineService('licensemanager', ['2018-08-01']);\nObject.defineProperty(apiLoader.services['licensemanager'], '2018-08-01', {\n  get: function get() {\n    var model = require('../apis/license-manager-2018-08-01.min.json');\n    model.paginators = require('../apis/license-manager-2018-08-01.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.LicenseManager;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['lightsail'] = {};\nAWS.Lightsail = Service.defineService('lightsail', ['2016-11-28']);\nObject.defineProperty(apiLoader.services['lightsail'], '2016-11-28', {\n  get: function get() {\n    var model = require('../apis/lightsail-2016-11-28.min.json');\n    model.paginators = require('../apis/lightsail-2016-11-28.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Lightsail;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['machinelearning'] = {};\nAWS.MachineLearning = Service.defineService('machinelearning', ['2014-12-12']);\nrequire('../lib/services/machinelearning');\nObject.defineProperty(apiLoader.services['machinelearning'], '2014-12-12', {\n  get: function get() {\n    var model = require('../apis/machinelearning-2014-12-12.min.json');\n    model.paginators = require('../apis/machinelearning-2014-12-12.paginators.json').pagination;\n    model.waiters = require('../apis/machinelearning-2014-12-12.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.MachineLearning;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['macie'] = {};\nAWS.Macie = Service.defineService('macie', ['2017-12-19']);\nObject.defineProperty(apiLoader.services['macie'], '2017-12-19', {\n  get: function get() {\n    var model = require('../apis/macie-2017-12-19.min.json');\n    model.paginators = require('../apis/macie-2017-12-19.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Macie;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['managedblockchain'] = {};\nAWS.ManagedBlockchain = Service.defineService('managedblockchain', ['2018-09-24']);\nObject.defineProperty(apiLoader.services['managedblockchain'], '2018-09-24', {\n  get: function get() {\n    var model = require('../apis/managedblockchain-2018-09-24.min.json');\n    model.paginators = require('../apis/managedblockchain-2018-09-24.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.ManagedBlockchain;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['marketplacecommerceanalytics'] = {};\nAWS.MarketplaceCommerceAnalytics = Service.defineService('marketplacecommerceanalytics', ['2015-07-01']);\nObject.defineProperty(apiLoader.services['marketplacecommerceanalytics'], '2015-07-01', {\n  get: function get() {\n    var model = require('../apis/marketplacecommerceanalytics-2015-07-01.min.json');\n    model.paginators = require('../apis/marketplacecommerceanalytics-2015-07-01.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.MarketplaceCommerceAnalytics;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['marketplaceentitlementservice'] = {};\nAWS.MarketplaceEntitlementService = Service.defineService('marketplaceentitlementservice', ['2017-01-11']);\nObject.defineProperty(apiLoader.services['marketplaceentitlementservice'], '2017-01-11', {\n  get: function get() {\n    var model = require('../apis/entitlement.marketplace-2017-01-11.min.json');\n    model.paginators = require('../apis/entitlement.marketplace-2017-01-11.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.MarketplaceEntitlementService;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['marketplacemetering'] = {};\nAWS.MarketplaceMetering = Service.defineService('marketplacemetering', ['2016-01-14']);\nObject.defineProperty(apiLoader.services['marketplacemetering'], '2016-01-14', {\n  get: function get() {\n    var model = require('../apis/meteringmarketplace-2016-01-14.min.json');\n    model.paginators = require('../apis/meteringmarketplace-2016-01-14.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.MarketplaceMetering;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['mediaconnect'] = {};\nAWS.MediaConnect = Service.defineService('mediaconnect', ['2018-11-14']);\nObject.defineProperty(apiLoader.services['mediaconnect'], '2018-11-14', {\n  get: function get() {\n    var model = require('../apis/mediaconnect-2018-11-14.min.json');\n    model.paginators = require('../apis/mediaconnect-2018-11-14.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.MediaConnect;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['mediaconvert'] = {};\nAWS.MediaConvert = Service.defineService('mediaconvert', ['2017-08-29']);\nObject.defineProperty(apiLoader.services['mediaconvert'], '2017-08-29', {\n  get: function get() {\n    var model = require('../apis/mediaconvert-2017-08-29.min.json');\n    model.paginators = require('../apis/mediaconvert-2017-08-29.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.MediaConvert;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['medialive'] = {};\nAWS.MediaLive = Service.defineService('medialive', ['2017-10-14']);\nObject.defineProperty(apiLoader.services['medialive'], '2017-10-14', {\n  get: function get() {\n    var model = require('../apis/medialive-2017-10-14.min.json');\n    model.paginators = require('../apis/medialive-2017-10-14.paginators.json').pagination;\n    model.waiters = require('../apis/medialive-2017-10-14.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.MediaLive;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['mediapackage'] = {};\nAWS.MediaPackage = Service.defineService('mediapackage', ['2017-10-12']);\nObject.defineProperty(apiLoader.services['mediapackage'], '2017-10-12', {\n  get: function get() {\n    var model = require('../apis/mediapackage-2017-10-12.min.json');\n    model.paginators = require('../apis/mediapackage-2017-10-12.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.MediaPackage;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['mediapackagevod'] = {};\nAWS.MediaPackageVod = Service.defineService('mediapackagevod', ['2018-11-07']);\nObject.defineProperty(apiLoader.services['mediapackagevod'], '2018-11-07', {\n  get: function get() {\n    var model = require('../apis/mediapackage-vod-2018-11-07.min.json');\n    model.paginators = require('../apis/mediapackage-vod-2018-11-07.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.MediaPackageVod;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['mediastore'] = {};\nAWS.MediaStore = Service.defineService('mediastore', ['2017-09-01']);\nObject.defineProperty(apiLoader.services['mediastore'], '2017-09-01', {\n  get: function get() {\n    var model = require('../apis/mediastore-2017-09-01.min.json');\n    model.paginators = require('../apis/mediastore-2017-09-01.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.MediaStore;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['mediastoredata'] = {};\nAWS.MediaStoreData = Service.defineService('mediastoredata', ['2017-09-01']);\nObject.defineProperty(apiLoader.services['mediastoredata'], '2017-09-01', {\n  get: function get() {\n    var model = require('../apis/mediastore-data-2017-09-01.min.json');\n    model.paginators = require('../apis/mediastore-data-2017-09-01.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.MediaStoreData;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['mediatailor'] = {};\nAWS.MediaTailor = Service.defineService('mediatailor', ['2018-04-23']);\nObject.defineProperty(apiLoader.services['mediatailor'], '2018-04-23', {\n  get: function get() {\n    var model = require('../apis/mediatailor-2018-04-23.min.json');\n    model.paginators = require('../apis/mediatailor-2018-04-23.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.MediaTailor;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['migrationhub'] = {};\nAWS.MigrationHub = Service.defineService('migrationhub', ['2017-05-31']);\nObject.defineProperty(apiLoader.services['migrationhub'], '2017-05-31', {\n  get: function get() {\n    var model = require('../apis/AWSMigrationHub-2017-05-31.min.json');\n    model.paginators = require('../apis/AWSMigrationHub-2017-05-31.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.MigrationHub;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['mobile'] = {};\nAWS.Mobile = Service.defineService('mobile', ['2017-07-01']);\nObject.defineProperty(apiLoader.services['mobile'], '2017-07-01', {\n  get: function get() {\n    var model = require('../apis/mobile-2017-07-01.min.json');\n    model.paginators = require('../apis/mobile-2017-07-01.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Mobile;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['mobileanalytics'] = {};\nAWS.MobileAnalytics = Service.defineService('mobileanalytics', ['2014-06-05']);\nObject.defineProperty(apiLoader.services['mobileanalytics'], '2014-06-05', {\n  get: function get() {\n    var model = require('../apis/mobileanalytics-2014-06-05.min.json');\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.MobileAnalytics;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['mq'] = {};\nAWS.MQ = Service.defineService('mq', ['2017-11-27']);\nObject.defineProperty(apiLoader.services['mq'], '2017-11-27', {\n  get: function get() {\n    var model = require('../apis/mq-2017-11-27.min.json');\n    model.paginators = require('../apis/mq-2017-11-27.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.MQ;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['mturk'] = {};\nAWS.MTurk = Service.defineService('mturk', ['2017-01-17']);\nObject.defineProperty(apiLoader.services['mturk'], '2017-01-17', {\n  get: function get() {\n    var model = require('../apis/mturk-requester-2017-01-17.min.json');\n    model.paginators = require('../apis/mturk-requester-2017-01-17.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.MTurk;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['neptune'] = {};\nAWS.Neptune = Service.defineService('neptune', ['2014-10-31']);\nObject.defineProperty(apiLoader.services['neptune'], '2014-10-31', {\n  get: function get() {\n    var model = require('../apis/neptune-2014-10-31.min.json');\n    model.paginators = require('../apis/neptune-2014-10-31.paginators.json').pagination;\n    model.waiters = require('../apis/neptune-2014-10-31.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Neptune;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['opsworks'] = {};\nAWS.OpsWorks = Service.defineService('opsworks', ['2013-02-18']);\nObject.defineProperty(apiLoader.services['opsworks'], '2013-02-18', {\n  get: function get() {\n    var model = require('../apis/opsworks-2013-02-18.min.json');\n    model.paginators = require('../apis/opsworks-2013-02-18.paginators.json').pagination;\n    model.waiters = require('../apis/opsworks-2013-02-18.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.OpsWorks;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['opsworkscm'] = {};\nAWS.OpsWorksCM = Service.defineService('opsworkscm', ['2016-11-01']);\nObject.defineProperty(apiLoader.services['opsworkscm'], '2016-11-01', {\n  get: function get() {\n    var model = require('../apis/opsworkscm-2016-11-01.min.json');\n    model.paginators = require('../apis/opsworkscm-2016-11-01.paginators.json').pagination;\n    model.waiters = require('../apis/opsworkscm-2016-11-01.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.OpsWorksCM;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['organizations'] = {};\nAWS.Organizations = Service.defineService('organizations', ['2016-11-28']);\nObject.defineProperty(apiLoader.services['organizations'], '2016-11-28', {\n  get: function get() {\n    var model = require('../apis/organizations-2016-11-28.min.json');\n    model.paginators = require('../apis/organizations-2016-11-28.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Organizations;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['personalize'] = {};\nAWS.Personalize = Service.defineService('personalize', ['2018-05-22']);\nObject.defineProperty(apiLoader.services['personalize'], '2018-05-22', {\n  get: function get() {\n    var model = require('../apis/personalize-2018-05-22.min.json');\n    model.paginators = require('../apis/personalize-2018-05-22.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Personalize;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['personalizeevents'] = {};\nAWS.PersonalizeEvents = Service.defineService('personalizeevents', ['2018-03-22']);\nObject.defineProperty(apiLoader.services['personalizeevents'], '2018-03-22', {\n  get: function get() {\n    var model = require('../apis/personalize-events-2018-03-22.min.json');\n    model.paginators = require('../apis/personalize-events-2018-03-22.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.PersonalizeEvents;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['personalizeruntime'] = {};\nAWS.PersonalizeRuntime = Service.defineService('personalizeruntime', ['2018-05-22']);\nObject.defineProperty(apiLoader.services['personalizeruntime'], '2018-05-22', {\n  get: function get() {\n    var model = require('../apis/personalize-runtime-2018-05-22.min.json');\n    model.paginators = require('../apis/personalize-runtime-2018-05-22.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.PersonalizeRuntime;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['pi'] = {};\nAWS.PI = Service.defineService('pi', ['2018-02-27']);\nObject.defineProperty(apiLoader.services['pi'], '2018-02-27', {\n  get: function get() {\n    var model = require('../apis/pi-2018-02-27.min.json');\n    model.paginators = require('../apis/pi-2018-02-27.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.PI;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['pinpoint'] = {};\nAWS.Pinpoint = Service.defineService('pinpoint', ['2016-12-01']);\nObject.defineProperty(apiLoader.services['pinpoint'], '2016-12-01', {\n  get: function get() {\n    var model = require('../apis/pinpoint-2016-12-01.min.json');\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Pinpoint;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['pinpointemail'] = {};\nAWS.PinpointEmail = Service.defineService('pinpointemail', ['2018-07-26']);\nObject.defineProperty(apiLoader.services['pinpointemail'], '2018-07-26', {\n  get: function get() {\n    var model = require('../apis/pinpoint-email-2018-07-26.min.json');\n    model.paginators = require('../apis/pinpoint-email-2018-07-26.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.PinpointEmail;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['pinpointsmsvoice'] = {};\nAWS.PinpointSMSVoice = Service.defineService('pinpointsmsvoice', ['2018-09-05']);\nObject.defineProperty(apiLoader.services['pinpointsmsvoice'], '2018-09-05', {\n  get: function get() {\n    var model = require('../apis/sms-voice-2018-09-05.min.json');\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.PinpointSMSVoice;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['polly'] = {};\nAWS.Polly = Service.defineService('polly', ['2016-06-10']);\nrequire('../lib/services/polly');\nObject.defineProperty(apiLoader.services['polly'], '2016-06-10', {\n  get: function get() {\n    var model = require('../apis/polly-2016-06-10.min.json');\n    model.paginators = require('../apis/polly-2016-06-10.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Polly;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['pricing'] = {};\nAWS.Pricing = Service.defineService('pricing', ['2017-10-15']);\nObject.defineProperty(apiLoader.services['pricing'], '2017-10-15', {\n  get: function get() {\n    var model = require('../apis/pricing-2017-10-15.min.json');\n    model.paginators = require('../apis/pricing-2017-10-15.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Pricing;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['quicksight'] = {};\nAWS.QuickSight = Service.defineService('quicksight', ['2018-04-01']);\nObject.defineProperty(apiLoader.services['quicksight'], '2018-04-01', {\n  get: function get() {\n    var model = require('../apis/quicksight-2018-04-01.min.json');\n    model.paginators = require('../apis/quicksight-2018-04-01.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.QuickSight;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['ram'] = {};\nAWS.RAM = Service.defineService('ram', ['2018-01-04']);\nObject.defineProperty(apiLoader.services['ram'], '2018-01-04', {\n  get: function get() {\n    var model = require('../apis/ram-2018-01-04.min.json');\n    model.paginators = require('../apis/ram-2018-01-04.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.RAM;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['rds'] = {};\nAWS.RDS = Service.defineService('rds', ['2013-01-10', '2013-02-12', '2013-09-09', '2014-09-01', '2014-09-01*', '2014-10-31']);\nrequire('../lib/services/rds');\nObject.defineProperty(apiLoader.services['rds'], '2013-01-10', {\n  get: function get() {\n    var model = require('../apis/rds-2013-01-10.min.json');\n    model.paginators = require('../apis/rds-2013-01-10.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(apiLoader.services['rds'], '2013-02-12', {\n  get: function get() {\n    var model = require('../apis/rds-2013-02-12.min.json');\n    model.paginators = require('../apis/rds-2013-02-12.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(apiLoader.services['rds'], '2013-09-09', {\n  get: function get() {\n    var model = require('../apis/rds-2013-09-09.min.json');\n    model.paginators = require('../apis/rds-2013-09-09.paginators.json').pagination;\n    model.waiters = require('../apis/rds-2013-09-09.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(apiLoader.services['rds'], '2014-09-01', {\n  get: function get() {\n    var model = require('../apis/rds-2014-09-01.min.json');\n    model.paginators = require('../apis/rds-2014-09-01.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(apiLoader.services['rds'], '2014-10-31', {\n  get: function get() {\n    var model = require('../apis/rds-2014-10-31.min.json');\n    model.paginators = require('../apis/rds-2014-10-31.paginators.json').pagination;\n    model.waiters = require('../apis/rds-2014-10-31.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.RDS;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['rdsdataservice'] = {};\nAWS.RDSDataService = Service.defineService('rdsdataservice', ['2018-08-01']);\nObject.defineProperty(apiLoader.services['rdsdataservice'], '2018-08-01', {\n  get: function get() {\n    var model = require('../apis/rds-data-2018-08-01.min.json');\n    model.paginators = require('../apis/rds-data-2018-08-01.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.RDSDataService;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['redshift'] = {};\nAWS.Redshift = Service.defineService('redshift', ['2012-12-01']);\nObject.defineProperty(apiLoader.services['redshift'], '2012-12-01', {\n  get: function get() {\n    var model = require('../apis/redshift-2012-12-01.min.json');\n    model.paginators = require('../apis/redshift-2012-12-01.paginators.json').pagination;\n    model.waiters = require('../apis/redshift-2012-12-01.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Redshift;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['rekognition'] = {};\nAWS.Rekognition = Service.defineService('rekognition', ['2016-06-27']);\nObject.defineProperty(apiLoader.services['rekognition'], '2016-06-27', {\n  get: function get() {\n    var model = require('../apis/rekognition-2016-06-27.min.json');\n    model.paginators = require('../apis/rekognition-2016-06-27.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Rekognition;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['resourcegroups'] = {};\nAWS.ResourceGroups = Service.defineService('resourcegroups', ['2017-11-27']);\nObject.defineProperty(apiLoader.services['resourcegroups'], '2017-11-27', {\n  get: function get() {\n    var model = require('../apis/resource-groups-2017-11-27.min.json');\n    model.paginators = require('../apis/resource-groups-2017-11-27.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.ResourceGroups;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['resourcegroupstaggingapi'] = {};\nAWS.ResourceGroupsTaggingAPI = Service.defineService('resourcegroupstaggingapi', ['2017-01-26']);\nObject.defineProperty(apiLoader.services['resourcegroupstaggingapi'], '2017-01-26', {\n  get: function get() {\n    var model = require('../apis/resourcegroupstaggingapi-2017-01-26.min.json');\n    model.paginators = require('../apis/resourcegroupstaggingapi-2017-01-26.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.ResourceGroupsTaggingAPI;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['robomaker'] = {};\nAWS.RoboMaker = Service.defineService('robomaker', ['2018-06-29']);\nObject.defineProperty(apiLoader.services['robomaker'], '2018-06-29', {\n  get: function get() {\n    var model = require('../apis/robomaker-2018-06-29.min.json');\n    model.paginators = require('../apis/robomaker-2018-06-29.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.RoboMaker;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['route53'] = {};\nAWS.Route53 = Service.defineService('route53', ['2013-04-01']);\nrequire('../lib/services/route53');\nObject.defineProperty(apiLoader.services['route53'], '2013-04-01', {\n  get: function get() {\n    var model = require('../apis/route53-2013-04-01.min.json');\n    model.paginators = require('../apis/route53-2013-04-01.paginators.json').pagination;\n    model.waiters = require('../apis/route53-2013-04-01.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Route53;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['route53domains'] = {};\nAWS.Route53Domains = Service.defineService('route53domains', ['2014-05-15']);\nObject.defineProperty(apiLoader.services['route53domains'], '2014-05-15', {\n  get: function get() {\n    var model = require('../apis/route53domains-2014-05-15.min.json');\n    model.paginators = require('../apis/route53domains-2014-05-15.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Route53Domains;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['route53resolver'] = {};\nAWS.Route53Resolver = Service.defineService('route53resolver', ['2018-04-01']);\nObject.defineProperty(apiLoader.services['route53resolver'], '2018-04-01', {\n  get: function get() {\n    var model = require('../apis/route53resolver-2018-04-01.min.json');\n    model.paginators = require('../apis/route53resolver-2018-04-01.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Route53Resolver;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['s3'] = {};\nAWS.S3 = Service.defineService('s3', ['2006-03-01']);\nrequire('../lib/services/s3');\nObject.defineProperty(apiLoader.services['s3'], '2006-03-01', {\n  get: function get() {\n    var model = require('../apis/s3-2006-03-01.min.json');\n    model.paginators = require('../apis/s3-2006-03-01.paginators.json').pagination;\n    model.waiters = require('../apis/s3-2006-03-01.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.S3;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['s3control'] = {};\nAWS.S3Control = Service.defineService('s3control', ['2018-08-20']);\nrequire('../lib/services/s3control');\nObject.defineProperty(apiLoader.services['s3control'], '2018-08-20', {\n  get: function get() {\n    var model = require('../apis/s3control-2018-08-20.min.json');\n    model.paginators = require('../apis/s3control-2018-08-20.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.S3Control;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['sagemaker'] = {};\nAWS.SageMaker = Service.defineService('sagemaker', ['2017-07-24']);\nObject.defineProperty(apiLoader.services['sagemaker'], '2017-07-24', {\n  get: function get() {\n    var model = require('../apis/sagemaker-2017-07-24.min.json');\n    model.paginators = require('../apis/sagemaker-2017-07-24.paginators.json').pagination;\n    model.waiters = require('../apis/sagemaker-2017-07-24.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.SageMaker;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['sagemakerruntime'] = {};\nAWS.SageMakerRuntime = Service.defineService('sagemakerruntime', ['2017-05-13']);\nObject.defineProperty(apiLoader.services['sagemakerruntime'], '2017-05-13', {\n  get: function get() {\n    var model = require('../apis/runtime.sagemaker-2017-05-13.min.json');\n    model.paginators = require('../apis/runtime.sagemaker-2017-05-13.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.SageMakerRuntime;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['secretsmanager'] = {};\nAWS.SecretsManager = Service.defineService('secretsmanager', ['2017-10-17']);\nObject.defineProperty(apiLoader.services['secretsmanager'], '2017-10-17', {\n  get: function get() {\n    var model = require('../apis/secretsmanager-2017-10-17.min.json');\n    model.paginators = require('../apis/secretsmanager-2017-10-17.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.SecretsManager;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['securityhub'] = {};\nAWS.SecurityHub = Service.defineService('securityhub', ['2018-10-26']);\nObject.defineProperty(apiLoader.services['securityhub'], '2018-10-26', {\n  get: function get() {\n    var model = require('../apis/securityhub-2018-10-26.min.json');\n    model.paginators = require('../apis/securityhub-2018-10-26.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.SecurityHub;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['serverlessapplicationrepository'] = {};\nAWS.ServerlessApplicationRepository = Service.defineService('serverlessapplicationrepository', ['2017-09-08']);\nObject.defineProperty(apiLoader.services['serverlessapplicationrepository'], '2017-09-08', {\n  get: function get() {\n    var model = require('../apis/serverlessrepo-2017-09-08.min.json');\n    model.paginators = require('../apis/serverlessrepo-2017-09-08.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.ServerlessApplicationRepository;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['servicecatalog'] = {};\nAWS.ServiceCatalog = Service.defineService('servicecatalog', ['2015-12-10']);\nObject.defineProperty(apiLoader.services['servicecatalog'], '2015-12-10', {\n  get: function get() {\n    var model = require('../apis/servicecatalog-2015-12-10.min.json');\n    model.paginators = require('../apis/servicecatalog-2015-12-10.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.ServiceCatalog;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['servicediscovery'] = {};\nAWS.ServiceDiscovery = Service.defineService('servicediscovery', ['2017-03-14']);\nObject.defineProperty(apiLoader.services['servicediscovery'], '2017-03-14', {\n  get: function get() {\n    var model = require('../apis/servicediscovery-2017-03-14.min.json');\n    model.paginators = require('../apis/servicediscovery-2017-03-14.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.ServiceDiscovery;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['servicequotas'] = {};\nAWS.ServiceQuotas = Service.defineService('servicequotas', ['2019-06-24']);\nObject.defineProperty(apiLoader.services['servicequotas'], '2019-06-24', {\n  get: function get() {\n    var model = require('../apis/service-quotas-2019-06-24.min.json');\n    model.paginators = require('../apis/service-quotas-2019-06-24.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.ServiceQuotas;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['ses'] = {};\nAWS.SES = Service.defineService('ses', ['2010-12-01']);\nObject.defineProperty(apiLoader.services['ses'], '2010-12-01', {\n  get: function get() {\n    var model = require('../apis/email-2010-12-01.min.json');\n    model.paginators = require('../apis/email-2010-12-01.paginators.json').pagination;\n    model.waiters = require('../apis/email-2010-12-01.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.SES;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['shield'] = {};\nAWS.Shield = Service.defineService('shield', ['2016-06-02']);\nObject.defineProperty(apiLoader.services['shield'], '2016-06-02', {\n  get: function get() {\n    var model = require('../apis/shield-2016-06-02.min.json');\n    model.paginators = require('../apis/shield-2016-06-02.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Shield;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['signer'] = {};\nAWS.Signer = Service.defineService('signer', ['2017-08-25']);\nObject.defineProperty(apiLoader.services['signer'], '2017-08-25', {\n  get: function get() {\n    var model = require('../apis/signer-2017-08-25.min.json');\n    model.paginators = require('../apis/signer-2017-08-25.paginators.json').pagination;\n    model.waiters = require('../apis/signer-2017-08-25.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Signer;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['simpledb'] = {};\nAWS.SimpleDB = Service.defineService('simpledb', ['2009-04-15']);\nObject.defineProperty(apiLoader.services['simpledb'], '2009-04-15', {\n  get: function get() {\n    var model = require('../apis/sdb-2009-04-15.min.json');\n    model.paginators = require('../apis/sdb-2009-04-15.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.SimpleDB;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['sms'] = {};\nAWS.SMS = Service.defineService('sms', ['2016-10-24']);\nObject.defineProperty(apiLoader.services['sms'], '2016-10-24', {\n  get: function get() {\n    var model = require('../apis/sms-2016-10-24.min.json');\n    model.paginators = require('../apis/sms-2016-10-24.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.SMS;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['snowball'] = {};\nAWS.Snowball = Service.defineService('snowball', ['2016-06-30']);\nObject.defineProperty(apiLoader.services['snowball'], '2016-06-30', {\n  get: function get() {\n    var model = require('../apis/snowball-2016-06-30.min.json');\n    model.paginators = require('../apis/snowball-2016-06-30.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Snowball;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['sns'] = {};\nAWS.SNS = Service.defineService('sns', ['2010-03-31']);\nObject.defineProperty(apiLoader.services['sns'], '2010-03-31', {\n  get: function get() {\n    var model = require('../apis/sns-2010-03-31.min.json');\n    model.paginators = require('../apis/sns-2010-03-31.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.SNS;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['sqs'] = {};\nAWS.SQS = Service.defineService('sqs', ['2012-11-05']);\nrequire('../lib/services/sqs');\nObject.defineProperty(apiLoader.services['sqs'], '2012-11-05', {\n  get: function get() {\n    var model = require('../apis/sqs-2012-11-05.min.json');\n    model.paginators = require('../apis/sqs-2012-11-05.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.SQS;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['ssm'] = {};\nAWS.SSM = Service.defineService('ssm', ['2014-11-06']);\nObject.defineProperty(apiLoader.services['ssm'], '2014-11-06', {\n  get: function get() {\n    var model = require('../apis/ssm-2014-11-06.min.json');\n    model.paginators = require('../apis/ssm-2014-11-06.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.SSM;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['stepfunctions'] = {};\nAWS.StepFunctions = Service.defineService('stepfunctions', ['2016-11-23']);\nObject.defineProperty(apiLoader.services['stepfunctions'], '2016-11-23', {\n  get: function get() {\n    var model = require('../apis/states-2016-11-23.min.json');\n    model.paginators = require('../apis/states-2016-11-23.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.StepFunctions;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['storagegateway'] = {};\nAWS.StorageGateway = Service.defineService('storagegateway', ['2013-06-30']);\nObject.defineProperty(apiLoader.services['storagegateway'], '2013-06-30', {\n  get: function get() {\n    var model = require('../apis/storagegateway-2013-06-30.min.json');\n    model.paginators = require('../apis/storagegateway-2013-06-30.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.StorageGateway;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['sts'] = {};\nAWS.STS = Service.defineService('sts', ['2011-06-15']);\nrequire('../lib/services/sts');\nObject.defineProperty(apiLoader.services['sts'], '2011-06-15', {\n  get: function get() {\n    var model = require('../apis/sts-2011-06-15.min.json');\n    model.paginators = require('../apis/sts-2011-06-15.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.STS;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['support'] = {};\nAWS.Support = Service.defineService('support', ['2013-04-15']);\nObject.defineProperty(apiLoader.services['support'], '2013-04-15', {\n  get: function get() {\n    var model = require('../apis/support-2013-04-15.min.json');\n    model.paginators = require('../apis/support-2013-04-15.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Support;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['swf'] = {};\nAWS.SWF = Service.defineService('swf', ['2012-01-25']);\nrequire('../lib/services/swf');\nObject.defineProperty(apiLoader.services['swf'], '2012-01-25', {\n  get: function get() {\n    var model = require('../apis/swf-2012-01-25.min.json');\n    model.paginators = require('../apis/swf-2012-01-25.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.SWF;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['textract'] = {};\nAWS.Textract = Service.defineService('textract', ['2018-06-27']);\nObject.defineProperty(apiLoader.services['textract'], '2018-06-27', {\n  get: function get() {\n    var model = require('../apis/textract-2018-06-27.min.json');\n    model.paginators = require('../apis/textract-2018-06-27.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Textract;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['transcribeservice'] = {};\nAWS.TranscribeService = Service.defineService('transcribeservice', ['2017-10-26']);\nObject.defineProperty(apiLoader.services['transcribeservice'], '2017-10-26', {\n  get: function get() {\n    var model = require('../apis/transcribe-2017-10-26.min.json');\n    model.paginators = require('../apis/transcribe-2017-10-26.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.TranscribeService;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['transfer'] = {};\nAWS.Transfer = Service.defineService('transfer', ['2018-11-05']);\nObject.defineProperty(apiLoader.services['transfer'], '2018-11-05', {\n  get: function get() {\n    var model = require('../apis/transfer-2018-11-05.min.json');\n    model.paginators = require('../apis/transfer-2018-11-05.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Transfer;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['translate'] = {};\nAWS.Translate = Service.defineService('translate', ['2017-07-01']);\nObject.defineProperty(apiLoader.services['translate'], '2017-07-01', {\n  get: function get() {\n    var model = require('../apis/translate-2017-07-01.min.json');\n    model.paginators = require('../apis/translate-2017-07-01.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Translate;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['waf'] = {};\nAWS.WAF = Service.defineService('waf', ['2015-08-24']);\nObject.defineProperty(apiLoader.services['waf'], '2015-08-24', {\n  get: function get() {\n    var model = require('../apis/waf-2015-08-24.min.json');\n    model.paginators = require('../apis/waf-2015-08-24.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.WAF;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['wafregional'] = {};\nAWS.WAFRegional = Service.defineService('wafregional', ['2016-11-28']);\nObject.defineProperty(apiLoader.services['wafregional'], '2016-11-28', {\n  get: function get() {\n    var model = require('../apis/waf-regional-2016-11-28.min.json');\n    model.paginators = require('../apis/waf-regional-2016-11-28.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.WAFRegional;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['workdocs'] = {};\nAWS.WorkDocs = Service.defineService('workdocs', ['2016-05-01']);\nObject.defineProperty(apiLoader.services['workdocs'], '2016-05-01', {\n  get: function get() {\n    var model = require('../apis/workdocs-2016-05-01.min.json');\n    model.paginators = require('../apis/workdocs-2016-05-01.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.WorkDocs;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['worklink'] = {};\nAWS.WorkLink = Service.defineService('worklink', ['2018-09-25']);\nObject.defineProperty(apiLoader.services['worklink'], '2018-09-25', {\n  get: function get() {\n    var model = require('../apis/worklink-2018-09-25.min.json');\n    model.paginators = require('../apis/worklink-2018-09-25.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.WorkLink;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['workmail'] = {};\nAWS.WorkMail = Service.defineService('workmail', ['2017-10-01']);\nObject.defineProperty(apiLoader.services['workmail'], '2017-10-01', {\n  get: function get() {\n    var model = require('../apis/workmail-2017-10-01.min.json');\n    model.paginators = require('../apis/workmail-2017-10-01.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.WorkMail;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['workspaces'] = {};\nAWS.WorkSpaces = Service.defineService('workspaces', ['2015-04-08']);\nObject.defineProperty(apiLoader.services['workspaces'], '2015-04-08', {\n  get: function get() {\n    var model = require('../apis/workspaces-2015-04-08.min.json');\n    model.paginators = require('../apis/workspaces-2015-04-08.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.WorkSpaces;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['xray'] = {};\nAWS.XRay = Service.defineService('xray', ['2016-04-12']);\nObject.defineProperty(apiLoader.services['xray'], '2016-04-12', {\n  get: function get() {\n    var model = require('../apis/xray-2016-04-12.min.json');\n    model.paginators = require('../apis/xray-2016-04-12.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.XRay;\n","function apiLoader(svc, version) {\n  if (!apiLoader.services.hasOwnProperty(svc)) {\n    throw new Error('InvalidService: Failed to load api for ' + svc);\n  }\n  return apiLoader.services[svc][version];\n}\n\n/**\n * @api private\n *\n * This member of AWS.apiLoader is private, but changing it will necessitate a\n * change to ../scripts/services-table-generator.ts\n */\napiLoader.services = {};\n\n/**\n * @api private\n */\nmodule.exports = apiLoader;\n","require('./node_loader');\n\nvar AWS = require('./core');\n\n// Load all service classes\nrequire('../clients/all');\n\n/**\n * @api private\n */\nmodule.exports = AWS;\n","var AWS = require('../core'),\n    url = AWS.util.url,\n    crypto = AWS.util.crypto.lib,\n    base64Encode = AWS.util.base64.encode,\n    inherit = AWS.util.inherit;\n\nvar queryEncode = function (string) {\n    var replacements = {\n        '+': '-',\n        '=': '_',\n        '/': '~'\n    };\n    return string.replace(/[\\+=\\/]/g, function (match) {\n        return replacements[match];\n    });\n};\n\nvar signPolicy = function (policy, privateKey) {\n    var sign = crypto.createSign('RSA-SHA1');\n    sign.write(policy);\n    return queryEncode(sign.sign(privateKey, 'base64'));\n};\n\nvar signWithCannedPolicy = function (url, expires, keyPairId, privateKey) {\n    var policy = JSON.stringify({\n        Statement: [\n            {\n                Resource: url,\n                Condition: { DateLessThan: { 'AWS:EpochTime': expires } }\n            }\n        ]\n    });\n\n    return {\n        Expires: expires,\n        'Key-Pair-Id': keyPairId,\n        Signature: signPolicy(policy.toString(), privateKey)\n    };\n};\n\nvar signWithCustomPolicy = function (policy, keyPairId, privateKey) {\n    policy = policy.replace(/\\s/mg, '');\n\n    return {\n        Policy: queryEncode(base64Encode(policy)),\n        'Key-Pair-Id': keyPairId,\n        Signature: signPolicy(policy, privateKey)\n    };\n};\n\nvar determineScheme = function (url) {\n    var parts = url.split('://');\n    if (parts.length < 2) {\n        throw new Error('Invalid URL.');\n    }\n\n    return parts[0].replace('*', '');\n};\n\nvar getRtmpUrl = function (rtmpUrl) {\n    var parsed = url.parse(rtmpUrl);\n    return parsed.path.replace(/^\\//, '') + (parsed.hash || '');\n};\n\nvar getResource = function (url) {\n    switch (determineScheme(url)) {\n        case 'http':\n        case 'https':\n            return url;\n        case 'rtmp':\n            return getRtmpUrl(url);\n        default:\n            throw new Error('Invalid URI scheme. Scheme must be one of'\n                + ' http, https, or rtmp');\n    }\n};\n\nvar handleError = function (err, callback) {\n    if (!callback || typeof callback !== 'function') {\n        throw err;\n    }\n\n    callback(err);\n};\n\nvar handleSuccess = function (result, callback) {\n    if (!callback || typeof callback !== 'function') {\n        return result;\n    }\n\n    callback(null, result);\n};\n\nAWS.CloudFront.Signer = inherit({\n    /**\n     * A signer object can be used to generate signed URLs and cookies for granting\n     * access to content on restricted CloudFront distributions.\n     *\n     * @see http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html\n     *\n     * @param keyPairId [String]    (Required) The ID of the CloudFront key pair\n     *                              being used.\n     * @param privateKey [String]   (Required) A private key in RSA format.\n     */\n    constructor: function Signer(keyPairId, privateKey) {\n        if (keyPairId === void 0 || privateKey === void 0) {\n            throw new Error('A key pair ID and private key are required');\n        }\n\n        this.keyPairId = keyPairId;\n        this.privateKey = privateKey;\n    },\n\n    /**\n     * Create a signed Amazon CloudFront Cookie.\n     *\n     * @param options [Object]            The options to create a signed cookie.\n     * @option options url [String]     The URL to which the signature will grant\n     *                                  access. Required unless you pass in a full\n     *                                  policy.\n     * @option options expires [Number] A Unix UTC timestamp indicating when the\n     *                                  signature should expire. Required unless you\n     *                                  pass in a full policy.\n     * @option options policy [String]  A CloudFront JSON policy. Required unless\n     *                                  you pass in a url and an expiry time.\n     *\n     * @param cb [Function] if a callback is provided, this function will\n     *   pass the hash as the second parameter (after the error parameter) to\n     *   the callback function.\n     *\n     * @return [Object] if called synchronously (with no callback), returns the\n     *   signed cookie parameters.\n     * @return [null] nothing is returned if a callback is provided.\n     */\n    getSignedCookie: function (options, cb) {\n        var signatureHash = 'policy' in options\n            ? signWithCustomPolicy(options.policy, this.keyPairId, this.privateKey)\n            : signWithCannedPolicy(options.url, options.expires, this.keyPairId, this.privateKey);\n\n        var cookieHash = {};\n        for (var key in signatureHash) {\n            if (Object.prototype.hasOwnProperty.call(signatureHash, key)) {\n                cookieHash['CloudFront-' + key] = signatureHash[key];\n            }\n        }\n\n        return handleSuccess(cookieHash, cb);\n    },\n\n    /**\n     * Create a signed Amazon CloudFront URL.\n     *\n     * Keep in mind that URLs meant for use in media/flash players may have\n     * different requirements for URL formats (e.g. some require that the\n     * extension be removed, some require the file name to be prefixed\n     * - mp4:<path>, some require you to add \"/cfx/st\" into your URL).\n     *\n     * @param options [Object]          The options to create a signed URL.\n     * @option options url [String]     The URL to which the signature will grant\n     *                                  access. Any query params included with\n     *                                  the URL should be encoded. Required.\n     * @option options expires [Number] A Unix UTC timestamp indicating when the\n     *                                  signature should expire. Required unless you\n     *                                  pass in a full policy.\n     * @option options policy [String]  A CloudFront JSON policy. Required unless\n     *                                  you pass in a url and an expiry time.\n     *\n     * @param cb [Function] if a callback is provided, this function will\n     *   pass the URL as the second parameter (after the error parameter) to\n     *   the callback function.\n     *\n     * @return [String] if called synchronously (with no callback), returns the\n     *   signed URL.\n     * @return [null] nothing is returned if a callback is provided.\n     */\n    getSignedUrl: function (options, cb) {\n        try {\n            var resource = getResource(options.url);\n        } catch (err) {\n            return handleError(err, cb);\n        }\n\n        var parsedUrl = url.parse(options.url, true),\n            signatureHash = Object.prototype.hasOwnProperty.call(options, 'policy')\n                ? signWithCustomPolicy(options.policy, this.keyPairId, this.privateKey)\n                : signWithCannedPolicy(resource, options.expires, this.keyPairId, this.privateKey);\n\n        parsedUrl.search = null;\n        for (var key in signatureHash) {\n            if (Object.prototype.hasOwnProperty.call(signatureHash, key)) {\n                parsedUrl.query[key] = signatureHash[key];\n            }\n        }\n\n        try {\n            var signedUrl = determineScheme(options.url) === 'rtmp'\n                    ? getRtmpUrl(url.format(parsedUrl))\n                    : url.format(parsedUrl);\n        } catch (err) {\n            return handleError(err, cb);\n        }\n\n        return handleSuccess(signedUrl, cb);\n    }\n});\n\n/**\n * @api private\n */\nmodule.exports = AWS.CloudFront.Signer;\n","var AWS = require('./core');\nrequire('./credentials');\nrequire('./credentials/credential_provider_chain');\nvar PromisesDependency;\n\n/**\n * The main configuration class used by all service objects to set\n * the region, credentials, and other options for requests.\n *\n * By default, credentials and region settings are left unconfigured.\n * This should be configured by the application before using any\n * AWS service APIs.\n *\n * In order to set global configuration options, properties should\n * be assigned to the global {AWS.config} object.\n *\n * @see AWS.config\n *\n * @!group General Configuration Options\n *\n * @!attribute credentials\n *   @return [AWS.Credentials] the AWS credentials to sign requests with.\n *\n * @!attribute region\n *   @example Set the global region setting to us-west-2\n *     AWS.config.update({region: 'us-west-2'});\n *   @return [AWS.Credentials] The region to send service requests to.\n *   @see http://docs.amazonwebservices.com/general/latest/gr/rande.html\n *     A list of available endpoints for each AWS service\n *\n * @!attribute maxRetries\n *   @return [Integer] the maximum amount of retries to perform for a\n *     service request. By default this value is calculated by the specific\n *     service object that the request is being made to.\n *\n * @!attribute maxRedirects\n *   @return [Integer] the maximum amount of redirects to follow for a\n *     service request. Defaults to 10.\n *\n * @!attribute paramValidation\n *   @return [Boolean|map] whether input parameters should be validated against\n *     the operation description before sending the request. Defaults to true.\n *     Pass a map to enable any of the following specific validation features:\n *\n *     * **min** [Boolean] &mdash; Validates that a value meets the min\n *       constraint. This is enabled by default when paramValidation is set\n *       to `true`.\n *     * **max** [Boolean] &mdash; Validates that a value meets the max\n *       constraint.\n *     * **pattern** [Boolean] &mdash; Validates that a string value matches a\n *       regular expression.\n *     * **enum** [Boolean] &mdash; Validates that a string value matches one\n *       of the allowable enum values.\n *\n * @!attribute computeChecksums\n *   @return [Boolean] whether to compute checksums for payload bodies when\n *     the service accepts it (currently supported in S3 only).\n *\n * @!attribute convertResponseTypes\n *   @return [Boolean] whether types are converted when parsing response data.\n *     Currently only supported for JSON based services. Turning this off may\n *     improve performance on large response payloads. Defaults to `true`.\n *\n * @!attribute correctClockSkew\n *   @return [Boolean] whether to apply a clock skew correction and retry\n *     requests that fail because of an skewed client clock. Defaults to\n *     `false`.\n *\n * @!attribute sslEnabled\n *   @return [Boolean] whether SSL is enabled for requests\n *\n * @!attribute s3ForcePathStyle\n *   @return [Boolean] whether to force path style URLs for S3 objects\n *\n * @!attribute s3BucketEndpoint\n *   @note Setting this configuration option requires an `endpoint` to be\n *     provided explicitly to the service constructor.\n *   @return [Boolean] whether the provided endpoint addresses an individual\n *     bucket (false if it addresses the root API endpoint).\n *\n * @!attribute s3DisableBodySigning\n *   @return [Boolean] whether to disable S3 body signing when using signature version `v4`.\n *     Body signing can only be disabled when using https. Defaults to `true`.\n *\n * @!attribute useAccelerateEndpoint\n *   @note This configuration option is only compatible with S3 while accessing\n *     dns-compatible buckets.\n *   @return [Boolean] Whether to use the Accelerate endpoint with the S3 service.\n *     Defaults to `false`.\n *\n * @!attribute retryDelayOptions\n *   @example Set the base retry delay for all services to 300 ms\n *     AWS.config.update({retryDelayOptions: {base: 300}});\n *     // Delays with maxRetries = 3: 300, 600, 1200\n *   @example Set a custom backoff function to provide delay values on retries\n *     AWS.config.update({retryDelayOptions: {customBackoff: function(retryCount) {\n *       // returns delay in ms\n *     }}});\n *   @return [map] A set of options to configure the retry delay on retryable errors.\n *     Currently supported options are:\n *\n *     * **base** [Integer] &mdash; The base number of milliseconds to use in the\n *       exponential backoff for operation retries. Defaults to 100 ms for all services except\n *       DynamoDB, where it defaults to 50ms.\n *     * **customBackoff ** [function] &mdash; A custom function that accepts a retry count\n *       and returns the amount of time to delay in milliseconds. The `base` option will be\n *       ignored if this option is supplied.\n *\n * @!attribute httpOptions\n *   @return [map] A set of options to pass to the low-level HTTP request.\n *     Currently supported options are:\n *\n *     * **proxy** [String] &mdash; the URL to proxy requests through\n *     * **agent** [http.Agent, https.Agent] &mdash; the Agent object to perform\n *       HTTP requests with. Used for connection pooling. Note that for\n *       SSL connections, a special Agent object is used in order to enable\n *       peer certificate verification. This feature is only supported in the\n *       Node.js environment.\n *     * **connectTimeout** [Integer] &mdash; Sets the socket to timeout after\n *       failing to establish a connection with the server after\n *       `connectTimeout` milliseconds. This timeout has no effect once a socket\n *       connection has been established.\n *     * **timeout** [Integer] &mdash; Sets the socket to timeout after timeout\n *       milliseconds of inactivity on the socket. Defaults to two minutes\n *       (120000)\n *     * **xhrAsync** [Boolean] &mdash; Whether the SDK will send asynchronous\n *       HTTP requests. Used in the browser environment only. Set to false to\n *       send requests synchronously. Defaults to true (async on).\n *     * **xhrWithCredentials** [Boolean] &mdash; Sets the \"withCredentials\"\n *       property of an XMLHttpRequest object. Used in the browser environment\n *       only. Defaults to false.\n * @!attribute logger\n *   @return [#write,#log] an object that responds to .write() (like a stream)\n *     or .log() (like the console object) in order to log information about\n *     requests\n *\n * @!attribute systemClockOffset\n *   @return [Number] an offset value in milliseconds to apply to all signing\n *     times. Use this to compensate for clock skew when your system may be\n *     out of sync with the service time. Note that this configuration option\n *     can only be applied to the global `AWS.config` object and cannot be\n *     overridden in service-specific configuration. Defaults to 0 milliseconds.\n *\n * @!attribute signatureVersion\n *   @return [String] the signature version to sign requests with (overriding\n *     the API configuration). Possible values are: 'v2', 'v3', 'v4'.\n *\n * @!attribute signatureCache\n *   @return [Boolean] whether the signature to sign requests with (overriding\n *     the API configuration) is cached. Only applies to the signature version 'v4'.\n *     Defaults to `true`.\n *\n * @!attribute endpointDiscoveryEnabled\n *   @return [Boolean] whether to enable endpoint discovery for operations that\n *     allow optionally using an endpoint returned by the service.\n *     Defaults to 'false'\n *\n * @!attribute endpointCacheSize\n *   @return [Number] the size of the global cache storing endpoints from endpoint\n *     discovery operations. Once endpoint cache is created, updating this setting\n *     cannot change existing cache size.\n *     Defaults to 1000\n *\n * @!attribute hostPrefixEnabled\n *   @return [Boolean] whether to marshal request parameters to the prefix of\n *     hostname. Defaults to `true`.\n */\nAWS.Config = AWS.util.inherit({\n  /**\n   * @!endgroup\n   */\n\n  /**\n   * Creates a new configuration object. This is the object that passes\n   * option data along to service requests, including credentials, security,\n   * region information, and some service specific settings.\n   *\n   * @example Creating a new configuration object with credentials and region\n   *   var config = new AWS.Config({\n   *     accessKeyId: 'AKID', secretAccessKey: 'SECRET', region: 'us-west-2'\n   *   });\n   * @option options accessKeyId [String] your AWS access key ID.\n   * @option options secretAccessKey [String] your AWS secret access key.\n   * @option options sessionToken [AWS.Credentials] the optional AWS\n   *   session token to sign requests with.\n   * @option options credentials [AWS.Credentials] the AWS credentials\n   *   to sign requests with. You can either specify this object, or\n   *   specify the accessKeyId and secretAccessKey options directly.\n   * @option options credentialProvider [AWS.CredentialProviderChain] the\n   *   provider chain used to resolve credentials if no static `credentials`\n   *   property is set.\n   * @option options region [String] the region to send service requests to.\n   *   See {region} for more information.\n   * @option options maxRetries [Integer] the maximum amount of retries to\n   *   attempt with a request. See {maxRetries} for more information.\n   * @option options maxRedirects [Integer] the maximum amount of redirects to\n   *   follow with a request. See {maxRedirects} for more information.\n   * @option options sslEnabled [Boolean] whether to enable SSL for\n   *   requests.\n   * @option options paramValidation [Boolean|map] whether input parameters\n   *   should be validated against the operation description before sending\n   *   the request. Defaults to true. Pass a map to enable any of the\n   *   following specific validation features:\n   *\n   *   * **min** [Boolean] &mdash; Validates that a value meets the min\n   *     constraint. This is enabled by default when paramValidation is set\n   *     to `true`.\n   *   * **max** [Boolean] &mdash; Validates that a value meets the max\n   *     constraint.\n   *   * **pattern** [Boolean] &mdash; Validates that a string value matches a\n   *     regular expression.\n   *   * **enum** [Boolean] &mdash; Validates that a string value matches one\n   *     of the allowable enum values.\n   * @option options computeChecksums [Boolean] whether to compute checksums\n   *   for payload bodies when the service accepts it (currently supported\n   *   in S3 only)\n   * @option options convertResponseTypes [Boolean] whether types are converted\n   *     when parsing response data. Currently only supported for JSON based\n   *     services. Turning this off may improve performance on large response\n   *     payloads. Defaults to `true`.\n   * @option options correctClockSkew [Boolean] whether to apply a clock skew\n   *     correction and retry requests that fail because of an skewed client\n   *     clock. Defaults to `false`.\n   * @option options s3ForcePathStyle [Boolean] whether to force path\n   *   style URLs for S3 objects.\n   * @option options s3BucketEndpoint [Boolean] whether the provided endpoint\n   *   addresses an individual bucket (false if it addresses the root API\n   *   endpoint). Note that setting this configuration option requires an\n   *   `endpoint` to be provided explicitly to the service constructor.\n   * @option options s3DisableBodySigning [Boolean] whether S3 body signing\n   *   should be disabled when using signature version `v4`. Body signing\n   *   can only be disabled when using https. Defaults to `true`.\n   *\n   * @option options retryDelayOptions [map] A set of options to configure\n   *   the retry delay on retryable errors. Currently supported options are:\n   *\n   *   * **base** [Integer] &mdash; The base number of milliseconds to use in the\n   *     exponential backoff for operation retries. Defaults to 100 ms for all\n   *     services except DynamoDB, where it defaults to 50ms.\n   *   * **customBackoff ** [function] &mdash; A custom function that accepts a retry count\n   *     and returns the amount of time to delay in milliseconds. The `base` option will be\n   *     ignored if this option is supplied.\n   * @option options httpOptions [map] A set of options to pass to the low-level\n   *   HTTP request. Currently supported options are:\n   *\n   *   * **proxy** [String] &mdash; the URL to proxy requests through\n   *   * **agent** [http.Agent, https.Agent] &mdash; the Agent object to perform\n   *     HTTP requests with. Used for connection pooling. Defaults to the global\n   *     agent (`http.globalAgent`) for non-SSL connections. Note that for\n   *     SSL connections, a special Agent object is used in order to enable\n   *     peer certificate verification. This feature is only available in the\n   *     Node.js environment.\n   *   * **connectTimeout** [Integer] &mdash; Sets the socket to timeout after\n   *     failing to establish a connection with the server after\n   *     `connectTimeout` milliseconds. This timeout has no effect once a socket\n   *     connection has been established.\n   *   * **timeout** [Integer] &mdash; Sets the socket to timeout after timeout\n   *     milliseconds of inactivity on the socket. Defaults to two minutes\n   *     (120000).\n   *   * **xhrAsync** [Boolean] &mdash; Whether the SDK will send asynchronous\n   *     HTTP requests. Used in the browser environment only. Set to false to\n   *     send requests synchronously. Defaults to true (async on).\n   *   * **xhrWithCredentials** [Boolean] &mdash; Sets the \"withCredentials\"\n   *     property of an XMLHttpRequest object. Used in the browser environment\n   *     only. Defaults to false.\n   * @option options apiVersion [String, Date] a String in YYYY-MM-DD format\n   *   (or a date) that represents the latest possible API version that can be\n   *   used in all services (unless overridden by `apiVersions`). Specify\n   *   'latest' to use the latest possible version.\n   * @option options apiVersions [map<String, String|Date>] a map of service\n   *   identifiers (the lowercase service class name) with the API version to\n   *   use when instantiating a service. Specify 'latest' for each individual\n   *   that can use the latest available version.\n   * @option options logger [#write,#log] an object that responds to .write()\n   *   (like a stream) or .log() (like the console object) in order to log\n   *   information about requests\n   * @option options systemClockOffset [Number] an offset value in milliseconds\n   *   to apply to all signing times. Use this to compensate for clock skew\n   *   when your system may be out of sync with the service time. Note that\n   *   this configuration option can only be applied to the global `AWS.config`\n   *   object and cannot be overridden in service-specific configuration.\n   *   Defaults to 0 milliseconds.\n   * @option options signatureVersion [String] the signature version to sign\n   *   requests with (overriding the API configuration). Possible values are:\n   *   'v2', 'v3', 'v4'.\n   * @option options signatureCache [Boolean] whether the signature to sign\n   *   requests with (overriding the API configuration) is cached. Only applies\n   *   to the signature version 'v4'. Defaults to `true`.\n   * @option options dynamoDbCrc32 [Boolean] whether to validate the CRC32\n   *   checksum of HTTP response bodies returned by DynamoDB. Default: `true`.\n   * @option options useAccelerateEndpoint [Boolean] Whether to use the\n   *   S3 Transfer Acceleration endpoint with the S3 service. Default: `false`.\n   * @option options clientSideMonitoring [Boolean] whether to collect and\n   *   publish this client's performance metrics of all its API requests.\n   * @option options endpointDiscoveryEnabled [Boolean] whether to enable endpoint\n   *   discovery for operations that allow optionally using an endpoint returned by\n   *   the service.\n   *   Defaults to 'false'\n   * @option options endpointCacheSize [Number] the size of the global cache storing\n   *   endpoints from endpoint discovery operations. Once endpoint cache is created,\n   *   updating this setting cannot change existing cache size.\n   *   Defaults to 1000\n   * @option options hostPrefixEnabled [Boolean] whether to marshal request\n   *   parameters to the prefix of hostname.\n   *   Defaults to `true`.\n   */\n  constructor: function Config(options) {\n    if (options === undefined) options = {};\n    options = this.extractCredentials(options);\n\n    AWS.util.each.call(this, this.keys, function (key, value) {\n      this.set(key, options[key], value);\n    });\n  },\n\n  /**\n   * @!group Managing Credentials\n   */\n\n  /**\n   * Loads credentials from the configuration object. This is used internally\n   * by the SDK to ensure that refreshable {Credentials} objects are properly\n   * refreshed and loaded when sending a request. If you want to ensure that\n   * your credentials are loaded prior to a request, you can use this method\n   * directly to provide accurate credential data stored in the object.\n   *\n   * @note If you configure the SDK with static or environment credentials,\n   *   the credential data should already be present in {credentials} attribute.\n   *   This method is primarily necessary to load credentials from asynchronous\n   *   sources, or sources that can refresh credentials periodically.\n   * @example Getting your access key\n   *   AWS.config.getCredentials(function(err) {\n   *     if (err) console.log(err.stack); // credentials not loaded\n   *     else console.log(\"Access Key:\", AWS.config.credentials.accessKeyId);\n   *   })\n   * @callback callback function(err)\n   *   Called when the {credentials} have been properly set on the configuration\n   *   object.\n   *\n   *   @param err [Error] if this is set, credentials were not successfully\n   *     loaded and this error provides information why.\n   * @see credentials\n   * @see Credentials\n   */\n  getCredentials: function getCredentials(callback) {\n    var self = this;\n\n    function finish(err) {\n      callback(err, err ? null : self.credentials);\n    }\n\n    function credError(msg, err) {\n      return new AWS.util.error(err || new Error(), {\n        code: 'CredentialsError',\n        message: msg,\n        name: 'CredentialsError'\n      });\n    }\n\n    function getAsyncCredentials() {\n      self.credentials.get(function(err) {\n        if (err) {\n          var msg = 'Could not load credentials from ' +\n            self.credentials.constructor.name;\n          err = credError(msg, err);\n        }\n        finish(err);\n      });\n    }\n\n    function getStaticCredentials() {\n      var err = null;\n      if (!self.credentials.accessKeyId || !self.credentials.secretAccessKey) {\n        err = credError('Missing credentials');\n      }\n      finish(err);\n    }\n\n    if (self.credentials) {\n      if (typeof self.credentials.get === 'function') {\n        getAsyncCredentials();\n      } else { // static credentials\n        getStaticCredentials();\n      }\n    } else if (self.credentialProvider) {\n      self.credentialProvider.resolve(function(err, creds) {\n        if (err) {\n          err = credError('Could not load credentials from any providers', err);\n        }\n        self.credentials = creds;\n        finish(err);\n      });\n    } else {\n      finish(credError('No credentials to load'));\n    }\n  },\n\n  /**\n   * @!group Loading and Setting Configuration Options\n   */\n\n  /**\n   * @overload update(options, allowUnknownKeys = false)\n   *   Updates the current configuration object with new options.\n   *\n   *   @example Update maxRetries property of a configuration object\n   *     config.update({maxRetries: 10});\n   *   @param [Object] options a map of option keys and values.\n   *   @param [Boolean] allowUnknownKeys whether unknown keys can be set on\n   *     the configuration object. Defaults to `false`.\n   *   @see constructor\n   */\n  update: function update(options, allowUnknownKeys) {\n    allowUnknownKeys = allowUnknownKeys || false;\n    options = this.extractCredentials(options);\n    AWS.util.each.call(this, options, function (key, value) {\n      if (allowUnknownKeys || Object.prototype.hasOwnProperty.call(this.keys, key) ||\n          AWS.Service.hasService(key)) {\n        this.set(key, value);\n      }\n    });\n  },\n\n  /**\n   * Loads configuration data from a JSON file into this config object.\n   * @note Loading configuration will reset all existing configuration\n   *   on the object.\n   * @!macro nobrowser\n   * @param path [String] the path relative to your process's current\n   *    working directory to load configuration from.\n   * @return [AWS.Config] the same configuration object\n   */\n  loadFromPath: function loadFromPath(path) {\n    this.clear();\n\n    var options = JSON.parse(AWS.util.readFileSync(path));\n    var fileSystemCreds = new AWS.FileSystemCredentials(path);\n    var chain = new AWS.CredentialProviderChain();\n    chain.providers.unshift(fileSystemCreds);\n    chain.resolve(function (err, creds) {\n      if (err) throw err;\n      else options.credentials = creds;\n    });\n\n    this.constructor(options);\n\n    return this;\n  },\n\n  /**\n   * Clears configuration data on this object\n   *\n   * @api private\n   */\n  clear: function clear() {\n    /*jshint forin:false */\n    AWS.util.each.call(this, this.keys, function (key) {\n      delete this[key];\n    });\n\n    // reset credential provider\n    this.set('credentials', undefined);\n    this.set('credentialProvider', undefined);\n  },\n\n  /**\n   * Sets a property on the configuration object, allowing for a\n   * default value\n   * @api private\n   */\n  set: function set(property, value, defaultValue) {\n    if (value === undefined) {\n      if (defaultValue === undefined) {\n        defaultValue = this.keys[property];\n      }\n      if (typeof defaultValue === 'function') {\n        this[property] = defaultValue.call(this);\n      } else {\n        this[property] = defaultValue;\n      }\n    } else if (property === 'httpOptions' && this[property]) {\n      // deep merge httpOptions\n      this[property] = AWS.util.merge(this[property], value);\n    } else {\n      this[property] = value;\n    }\n  },\n\n  /**\n   * All of the keys with their default values.\n   *\n   * @constant\n   * @api private\n   */\n  keys: {\n    credentials: null,\n    credentialProvider: null,\n    region: null,\n    logger: null,\n    apiVersions: {},\n    apiVersion: null,\n    endpoint: undefined,\n    httpOptions: {\n      timeout: 120000\n    },\n    maxRetries: undefined,\n    maxRedirects: 10,\n    paramValidation: true,\n    sslEnabled: true,\n    s3ForcePathStyle: false,\n    s3BucketEndpoint: false,\n    s3DisableBodySigning: true,\n    computeChecksums: true,\n    convertResponseTypes: true,\n    correctClockSkew: false,\n    customUserAgent: null,\n    dynamoDbCrc32: true,\n    systemClockOffset: 0,\n    signatureVersion: null,\n    signatureCache: true,\n    retryDelayOptions: {},\n    useAccelerateEndpoint: false,\n    clientSideMonitoring: false,\n    endpointDiscoveryEnabled: false,\n    endpointCacheSize: 1000,\n    hostPrefixEnabled: true\n  },\n\n  /**\n   * Extracts accessKeyId, secretAccessKey and sessionToken\n   * from a configuration hash.\n   *\n   * @api private\n   */\n  extractCredentials: function extractCredentials(options) {\n    if (options.accessKeyId && options.secretAccessKey) {\n      options = AWS.util.copy(options);\n      options.credentials = new AWS.Credentials(options);\n    }\n    return options;\n  },\n\n  /**\n   * Sets the promise dependency the SDK will use wherever Promises are returned.\n   * Passing `null` will force the SDK to use native Promises if they are available.\n   * If native Promises are not available, passing `null` will have no effect.\n   * @param [Constructor] dep A reference to a Promise constructor\n   */\n  setPromisesDependency: function setPromisesDependency(dep) {\n    PromisesDependency = dep;\n    // if null was passed in, we should try to use native promises\n    if (dep === null && typeof Promise === 'function') {\n      PromisesDependency = Promise;\n    }\n    var constructors = [AWS.Request, AWS.Credentials, AWS.CredentialProviderChain];\n    if (AWS.S3 && AWS.S3.ManagedUpload) constructors.push(AWS.S3.ManagedUpload);\n    AWS.util.addPromises(constructors, PromisesDependency);\n  },\n\n  /**\n   * Gets the promise dependency set by `AWS.config.setPromisesDependency`.\n   */\n  getPromisesDependency: function getPromisesDependency() {\n    return PromisesDependency;\n  }\n});\n\n/**\n * @return [AWS.Config] The global configuration object singleton instance\n * @readonly\n * @see AWS.Config\n */\nAWS.config = new AWS.Config();\n","/**\n * The main AWS namespace\n */\nvar AWS = { util: require('./util') };\n\n/**\n * @api private\n * @!macro [new] nobrowser\n *   @note This feature is not supported in the browser environment of the SDK.\n */\nvar _hidden = {}; _hidden.toString(); // hack to parse macro\n\n/**\n * @api private\n */\nmodule.exports = AWS;\n\nAWS.util.update(AWS, {\n\n  /**\n   * @constant\n   */\n  VERSION: '2.514.0',\n\n  /**\n   * @api private\n   */\n  Signers: {},\n\n  /**\n   * @api private\n   */\n  Protocol: {\n    Json: require('./protocol/json'),\n    Query: require('./protocol/query'),\n    Rest: require('./protocol/rest'),\n    RestJson: require('./protocol/rest_json'),\n    RestXml: require('./protocol/rest_xml')\n  },\n\n  /**\n   * @api private\n   */\n  XML: {\n    Builder: require('./xml/builder'),\n    Parser: null // conditionally set based on environment\n  },\n\n  /**\n   * @api private\n   */\n  JSON: {\n    Builder: require('./json/builder'),\n    Parser: require('./json/parser')\n  },\n\n  /**\n   * @api private\n   */\n  Model: {\n    Api: require('./model/api'),\n    Operation: require('./model/operation'),\n    Shape: require('./model/shape'),\n    Paginator: require('./model/paginator'),\n    ResourceWaiter: require('./model/resource_waiter')\n  },\n\n  /**\n   * @api private\n   */\n  apiLoader: require('./api_loader'),\n\n  /**\n   * @api private\n   */\n  EndpointCache: require('../vendor/endpoint-cache').EndpointCache\n});\nrequire('./sequential_executor');\nrequire('./service');\nrequire('./config');\nrequire('./http');\nrequire('./event_listeners');\nrequire('./request');\nrequire('./response');\nrequire('./resource_waiter');\nrequire('./signers/request_signer');\nrequire('./param_validator');\n\n/**\n * @readonly\n * @return [AWS.SequentialExecutor] a collection of global event listeners that\n *   are attached to every sent request.\n * @see AWS.Request AWS.Request for a list of events to listen for\n * @example Logging the time taken to send a request\n *   AWS.events.on('send', function startSend(resp) {\n *     resp.startTime = new Date().getTime();\n *   }).on('complete', function calculateTime(resp) {\n *     var time = (new Date().getTime() - resp.startTime) / 1000;\n *     console.log('Request took ' + time + ' seconds');\n *   });\n *\n *   new AWS.S3().listBuckets(); // prints 'Request took 0.285 seconds'\n */\nAWS.events = new AWS.SequentialExecutor();\n\n//create endpoint cache lazily\nAWS.util.memoizedProperty(AWS, 'endpointCache', function() {\n  return new AWS.EndpointCache(AWS.config.endpointCacheSize);\n}, true);\n","var AWS = require('./core');\n\n/**\n * Represents your AWS security credentials, specifically the\n * {accessKeyId}, {secretAccessKey}, and optional {sessionToken}.\n * Creating a `Credentials` object allows you to pass around your\n * security information to configuration and service objects.\n *\n * Note that this class typically does not need to be constructed manually,\n * as the {AWS.Config} and {AWS.Service} classes both accept simple\n * options hashes with the three keys. These structures will be converted\n * into Credentials objects automatically.\n *\n * ## Expiring and Refreshing Credentials\n *\n * Occasionally credentials can expire in the middle of a long-running\n * application. In this case, the SDK will automatically attempt to\n * refresh the credentials from the storage location if the Credentials\n * class implements the {refresh} method.\n *\n * If you are implementing a credential storage location, you\n * will want to create a subclass of the `Credentials` class and\n * override the {refresh} method. This method allows credentials to be\n * retrieved from the backing store, be it a file system, database, or\n * some network storage. The method should reset the credential attributes\n * on the object.\n *\n * @!attribute expired\n *   @return [Boolean] whether the credentials have been expired and\n *     require a refresh. Used in conjunction with {expireTime}.\n * @!attribute expireTime\n *   @return [Date] a time when credentials should be considered expired. Used\n *     in conjunction with {expired}.\n * @!attribute accessKeyId\n *   @return [String] the AWS access key ID\n * @!attribute secretAccessKey\n *   @return [String] the AWS secret access key\n * @!attribute sessionToken\n *   @return [String] an optional AWS session token\n */\nAWS.Credentials = AWS.util.inherit({\n  /**\n   * A credentials object can be created using positional arguments or an options\n   * hash.\n   *\n   * @overload AWS.Credentials(accessKeyId, secretAccessKey, sessionToken=null)\n   *   Creates a Credentials object with a given set of credential information\n   *   as positional arguments.\n   *   @param accessKeyId [String] the AWS access key ID\n   *   @param secretAccessKey [String] the AWS secret access key\n   *   @param sessionToken [String] the optional AWS session token\n   *   @example Create a credentials object with AWS credentials\n   *     var creds = new AWS.Credentials('akid', 'secret', 'session');\n   * @overload AWS.Credentials(options)\n   *   Creates a Credentials object with a given set of credential information\n   *   as an options hash.\n   *   @option options accessKeyId [String] the AWS access key ID\n   *   @option options secretAccessKey [String] the AWS secret access key\n   *   @option options sessionToken [String] the optional AWS session token\n   *   @example Create a credentials object with AWS credentials\n   *     var creds = new AWS.Credentials({\n   *       accessKeyId: 'akid', secretAccessKey: 'secret', sessionToken: 'session'\n   *     });\n   */\n  constructor: function Credentials() {\n    // hide secretAccessKey from being displayed with util.inspect\n    AWS.util.hideProperties(this, ['secretAccessKey']);\n\n    this.expired = false;\n    this.expireTime = null;\n    this.refreshCallbacks = [];\n    if (arguments.length === 1 && typeof arguments[0] === 'object') {\n      var creds = arguments[0].credentials || arguments[0];\n      this.accessKeyId = creds.accessKeyId;\n      this.secretAccessKey = creds.secretAccessKey;\n      this.sessionToken = creds.sessionToken;\n    } else {\n      this.accessKeyId = arguments[0];\n      this.secretAccessKey = arguments[1];\n      this.sessionToken = arguments[2];\n    }\n  },\n\n  /**\n   * @return [Integer] the number of seconds before {expireTime} during which\n   *   the credentials will be considered expired.\n   */\n  expiryWindow: 15,\n\n  /**\n   * @return [Boolean] whether the credentials object should call {refresh}\n   * @note Subclasses should override this method to provide custom refresh\n   *   logic.\n   */\n  needsRefresh: function needsRefresh() {\n    var currentTime = AWS.util.date.getDate().getTime();\n    var adjustedTime = new Date(currentTime + this.expiryWindow * 1000);\n\n    if (this.expireTime && adjustedTime > this.expireTime) {\n      return true;\n    } else {\n      return this.expired || !this.accessKeyId || !this.secretAccessKey;\n    }\n  },\n\n  /**\n   * Gets the existing credentials, refreshing them if they are not yet loaded\n   * or have expired. Users should call this method before using {refresh},\n   * as this will not attempt to reload credentials when they are already\n   * loaded into the object.\n   *\n   * @callback callback function(err)\n   *   When this callback is called with no error, it means either credentials\n   *   do not need to be refreshed or refreshed credentials information has\n   *   been loaded into the object (as the `accessKeyId`, `secretAccessKey`,\n   *   and `sessionToken` properties).\n   *   @param err [Error] if an error occurred, this value will be filled\n   */\n  get: function get(callback) {\n    var self = this;\n    if (this.needsRefresh()) {\n      this.refresh(function(err) {\n        if (!err) self.expired = false; // reset expired flag\n        if (callback) callback(err);\n      });\n    } else if (callback) {\n      callback();\n    }\n  },\n\n  /**\n   * @!method  getPromise()\n   *   Returns a 'thenable' promise.\n   *   Gets the existing credentials, refreshing them if they are not yet loaded\n   *   or have expired. Users should call this method before using {refresh},\n   *   as this will not attempt to reload credentials when they are already\n   *   loaded into the object.\n   *\n   *   Two callbacks can be provided to the `then` method on the returned promise.\n   *   The first callback will be called if the promise is fulfilled, and the second\n   *   callback will be called if the promise is rejected.\n   *   @callback fulfilledCallback function()\n   *     Called if the promise is fulfilled. When this callback is called, it\n   *     means either credentials do not need to be refreshed or refreshed\n   *     credentials information has been loaded into the object (as the\n   *     `accessKeyId`, `secretAccessKey`, and `sessionToken` properties).\n   *   @callback rejectedCallback function(err)\n   *     Called if the promise is rejected.\n   *     @param err [Error] if an error occurred, this value will be filled\n   *   @return [Promise] A promise that represents the state of the `get` call.\n   *   @example Calling the `getPromise` method.\n   *     var promise = credProvider.getPromise();\n   *     promise.then(function() { ... }, function(err) { ... });\n   */\n\n  /**\n   * @!method  refreshPromise()\n   *   Returns a 'thenable' promise.\n   *   Refreshes the credentials. Users should call {get} before attempting\n   *   to forcibly refresh credentials.\n   *\n   *   Two callbacks can be provided to the `then` method on the returned promise.\n   *   The first callback will be called if the promise is fulfilled, and the second\n   *   callback will be called if the promise is rejected.\n   *   @callback fulfilledCallback function()\n   *     Called if the promise is fulfilled. When this callback is called, it\n   *     means refreshed credentials information has been loaded into the object\n   *     (as the `accessKeyId`, `secretAccessKey`, and `sessionToken` properties).\n   *   @callback rejectedCallback function(err)\n   *     Called if the promise is rejected.\n   *     @param err [Error] if an error occurred, this value will be filled\n   *   @return [Promise] A promise that represents the state of the `refresh` call.\n   *   @example Calling the `refreshPromise` method.\n   *     var promise = credProvider.refreshPromise();\n   *     promise.then(function() { ... }, function(err) { ... });\n   */\n\n  /**\n   * Refreshes the credentials. Users should call {get} before attempting\n   * to forcibly refresh credentials.\n   *\n   * @callback callback function(err)\n   *   When this callback is called with no error, it means refreshed\n   *   credentials information has been loaded into the object (as the\n   *   `accessKeyId`, `secretAccessKey`, and `sessionToken` properties).\n   *   @param err [Error] if an error occurred, this value will be filled\n   * @note Subclasses should override this class to reset the\n   *   {accessKeyId}, {secretAccessKey} and optional {sessionToken}\n   *   on the credentials object and then call the callback with\n   *   any error information.\n   * @see get\n   */\n  refresh: function refresh(callback) {\n    this.expired = false;\n    callback();\n  },\n\n  /**\n   * @api private\n   * @param callback\n   */\n  coalesceRefresh: function coalesceRefresh(callback, sync) {\n    var self = this;\n    if (self.refreshCallbacks.push(callback) === 1) {\n      self.load(function onLoad(err) {\n        AWS.util.arrayEach(self.refreshCallbacks, function(callback) {\n          if (sync) {\n            callback(err);\n          } else {\n            // callback could throw, so defer to ensure all callbacks are notified\n            AWS.util.defer(function () {\n              callback(err);\n            });\n          }\n        });\n        self.refreshCallbacks.length = 0;\n      });\n    }\n  },\n\n  /**\n   * @api private\n   * @param callback\n   */\n  load: function load(callback) {\n    callback();\n  }\n});\n\n/**\n * @api private\n */\nAWS.Credentials.addPromisesToClass = function addPromisesToClass(PromiseDependency) {\n  this.prototype.getPromise = AWS.util.promisifyMethod('get', PromiseDependency);\n  this.prototype.refreshPromise = AWS.util.promisifyMethod('refresh', PromiseDependency);\n};\n\n/**\n * @api private\n */\nAWS.Credentials.deletePromisesFromClass = function deletePromisesFromClass() {\n  delete this.prototype.getPromise;\n  delete this.prototype.refreshPromise;\n};\n\nAWS.util.addPromises(AWS.Credentials);\n","var AWS = require('../core');\nvar STS = require('../../clients/sts');\n\n/**\n * Represents temporary credentials retrieved from {AWS.STS}. Without any\n * extra parameters, credentials will be fetched from the\n * {AWS.STS.getSessionToken} operation. If an IAM role is provided, the\n * {AWS.STS.assumeRole} operation will be used to fetch credentials for the\n * role instead.\n *\n * AWS.ChainableTemporaryCredentials differs from AWS.TemporaryCredentials in\n * the way masterCredentials and refreshes are handled.\n * AWS.ChainableTemporaryCredentials refreshes expired credentials using the\n * masterCredentials passed by the user to support chaining of STS credentials.\n * However, AWS.TemporaryCredentials recursively collapses the masterCredentials\n * during instantiation, precluding the ability to refresh credentials which\n * require intermediate, temporary credentials.\n *\n * For example, if the application should use RoleA, which must be assumed from\n * RoleB, and the environment provides credentials which can assume RoleB, then\n * AWS.ChainableTemporaryCredentials must be used to support refreshing the\n * temporary credentials for RoleA:\n *\n * ```javascript\n * var roleACreds = new AWS.ChainableTemporaryCredentials({\n *   params: {RoleArn: 'RoleA'},\n *   masterCredentials: new AWS.ChainableTemporaryCredentials({\n *     params: {RoleArn: 'RoleB'},\n *     masterCredentials: new AWS.EnvironmentCredentials('AWS')\n *   })\n * });\n * ```\n *\n * If AWS.TemporaryCredentials had been used in the previous example,\n * `roleACreds` would fail to refresh because `roleACreds` would\n * use the environment credentials for the AssumeRole request.\n *\n * Another difference is that AWS.ChainableTemporaryCredentials creates the STS\n * service instance during instantiation while AWS.TemporaryCredentials creates\n * the STS service instance during the first refresh. Creating the service\n * instance during instantiation effectively captures the master credentials\n * from the global config, so that subsequent changes to the global config do\n * not affect the master credentials used to refresh the temporary credentials.\n *\n * This allows an instance of AWS.ChainableTemporaryCredentials to be assigned\n * to AWS.config.credentials:\n *\n * ```javascript\n * var envCreds = new AWS.EnvironmentCredentials('AWS');\n * AWS.config.credentials = envCreds;\n * // masterCredentials will be envCreds\n * AWS.config.credentials = new AWS.ChainableTemporaryCredentials({\n *   params: {RoleArn: '...'}\n * });\n * ```\n *\n * Similarly, to use the CredentialProviderChain's default providers as the\n * master credentials, simply create a new instance of\n * AWS.ChainableTemporaryCredentials:\n *\n * ```javascript\n * AWS.config.credentials = new ChainableTemporaryCredentials({\n *   params: {RoleArn: '...'}\n * });\n * ```\n *\n * @!attribute service\n *   @return [AWS.STS] the STS service instance used to\n *     get and refresh temporary credentials from AWS STS.\n * @note (see constructor)\n */\nAWS.ChainableTemporaryCredentials = AWS.util.inherit(AWS.Credentials, {\n  /**\n   * Creates a new temporary credentials object.\n   *\n   * @param options [map] a set of options\n   * @option options params [map] ({}) a map of options that are passed to the\n   *   {AWS.STS.assumeRole} or {AWS.STS.getSessionToken} operations.\n   *   If a `RoleArn` parameter is passed in, credentials will be based on the\n   *   IAM role. If a `SerialNumber` parameter is passed in, {tokenCodeFn} must\n   *   also be passed in or an error will be thrown.\n   * @option options masterCredentials [AWS.Credentials] the master credentials\n   *   used to get and refresh temporary credentials from AWS STS. By default,\n   *   AWS.config.credentials or AWS.config.credentialProvider will be used.\n   * @option options tokenCodeFn [Function] (null) Function to provide\n   *   `TokenCode`, if `SerialNumber` is provided for profile in {params}. Function\n   *   is called with value of `SerialNumber` and `callback`, and should provide\n   *   the `TokenCode` or an error to the callback in the format\n   *   `callback(err, token)`.\n   * @example Creating a new credentials object for generic temporary credentials\n   *   AWS.config.credentials = new AWS.ChainableTemporaryCredentials();\n   * @example Creating a new credentials object for an IAM role\n   *   AWS.config.credentials = new AWS.ChainableTemporaryCredentials({\n   *     params: {\n   *       RoleArn: 'arn:aws:iam::1234567890:role/TemporaryCredentials'\n   *     }\n   *   });\n   * @see AWS.STS.assumeRole\n   * @see AWS.STS.getSessionToken\n   */\n  constructor: function ChainableTemporaryCredentials(options) {\n    AWS.Credentials.call(this);\n    options = options || {};\n    this.errorCode = 'ChainableTemporaryCredentialsProviderFailure';\n    this.expired = true;\n    this.tokenCodeFn = null;\n\n    var params = AWS.util.copy(options.params) || {};\n    if (params.RoleArn) {\n      params.RoleSessionName = params.RoleSessionName || 'temporary-credentials';\n    }\n    if (params.SerialNumber) {\n      if (!options.tokenCodeFn || (typeof options.tokenCodeFn !== 'function')) {\n        throw new AWS.util.error(\n          new Error('tokenCodeFn must be a function when params.SerialNumber is given'),\n          {code: this.errorCode}\n        );\n      } else {\n        this.tokenCodeFn = options.tokenCodeFn;\n      }\n    }\n    config = AWS.util.merge(\n      {\n        params: params,\n        credentials: options.masterCredentials || AWS.config.credentials\n      },\n      options.stsConfig || {}\n    );\n    this.service = new STS(config);\n  },\n\n  /**\n   * Refreshes credentials using {AWS.STS.assumeRole} or\n   * {AWS.STS.getSessionToken}, depending on whether an IAM role ARN was passed\n   * to the credentials {constructor}.\n   *\n   * @callback callback function(err)\n   *   Called when the STS service responds (or fails). When\n   *   this callback is called with no error, it means that the credentials\n   *   information has been loaded into the object (as the `accessKeyId`,\n   *   `secretAccessKey`, and `sessionToken` properties).\n   *   @param err [Error] if an error occurred, this value will be filled\n   * @see AWS.Credentials.get\n   */\n  refresh: function refresh(callback) {\n    this.coalesceRefresh(callback || AWS.util.fn.callback);\n  },\n\n  /**\n   * @api private\n   * @param callback\n   */\n  load: function load(callback) {\n    var self = this;\n    var operation = self.service.config.params.RoleArn ? 'assumeRole' : 'getSessionToken';\n    this.getTokenCode(function (err, tokenCode) {\n      var params = {};\n      if (err) {\n        callback(err);\n        return;\n      }\n      if (tokenCode) {\n        params.TokenCode = tokenCode;\n      }\n      self.service[operation](params, function (err, data) {\n        if (!err) {\n          self.service.credentialsFrom(data, self);\n        }\n        callback(err);\n      });\n    });\n  },\n\n  /**\n   * @api private\n   */\n  getTokenCode: function getTokenCode(callback) {\n    var self = this;\n    if (this.tokenCodeFn) {\n      this.tokenCodeFn(this.service.config.params.SerialNumber, function (err, token) {\n        if (err) {\n          var message = err;\n          if (err instanceof Error) {\n            message = err.message;\n          }\n          callback(\n            AWS.util.error(\n              new Error('Error fetching MFA token: ' + message),\n              { code: self.errorCode}\n            )\n          );\n          return;\n        }\n        callback(null, token);\n      });\n    } else {\n      callback(null);\n    }\n  }\n});\n","var AWS = require('../core');\nvar CognitoIdentity = require('../../clients/cognitoidentity');\nvar STS = require('../../clients/sts');\n\n/**\n * Represents credentials retrieved from STS Web Identity Federation using\n * the Amazon Cognito Identity service.\n *\n * By default this provider gets credentials using the\n * {AWS.CognitoIdentity.getCredentialsForIdentity} service operation, which\n * requires either an `IdentityId` or an `IdentityPoolId` (Amazon Cognito\n * Identity Pool ID), which is used to call {AWS.CognitoIdentity.getId} to\n * obtain an `IdentityId`. If the identity or identity pool is not configured in\n * the Amazon Cognito Console to use IAM roles with the appropriate permissions,\n * then additionally a `RoleArn` is required containing the ARN of the IAM trust\n * policy for the Amazon Cognito role that the user will log into. If a `RoleArn`\n * is provided, then this provider gets credentials using the\n * {AWS.STS.assumeRoleWithWebIdentity} service operation, after first getting an\n * Open ID token from {AWS.CognitoIdentity.getOpenIdToken}.\n *\n * In addition, if this credential provider is used to provide authenticated\n * login, the `Logins` map may be set to the tokens provided by the respective\n * identity providers. See {constructor} for an example on creating a credentials\n * object with proper property values.\n *\n * ## Refreshing Credentials from Identity Service\n *\n * In addition to AWS credentials expiring after a given amount of time, the\n * login token from the identity provider will also expire. Once this token\n * expires, it will not be usable to refresh AWS credentials, and another\n * token will be needed. The SDK does not manage refreshing of the token value,\n * but this can be done through a \"refresh token\" supported by most identity\n * providers. Consult the documentation for the identity provider for refreshing\n * tokens. Once the refreshed token is acquired, you should make sure to update\n * this new token in the credentials object's {params} property. The following\n * code will update the WebIdentityToken, assuming you have retrieved an updated\n * token from the identity provider:\n *\n * ```javascript\n * AWS.config.credentials.params.Logins['graph.facebook.com'] = updatedToken;\n * ```\n *\n * Future calls to `credentials.refresh()` will now use the new token.\n *\n * @!attribute params\n *   @return [map] the map of params passed to\n *     {AWS.CognitoIdentity.getId},\n *     {AWS.CognitoIdentity.getOpenIdToken}, and\n *     {AWS.STS.assumeRoleWithWebIdentity}. To update the token, set the\n *     `params.WebIdentityToken` property.\n * @!attribute data\n *   @return [map] the raw data response from the call to\n *     {AWS.CognitoIdentity.getCredentialsForIdentity}, or\n *     {AWS.STS.assumeRoleWithWebIdentity}. Use this if you want to get\n *     access to other properties from the response.\n * @!attribute identityId\n *   @return [String] the Cognito ID returned by the last call to\n *     {AWS.CognitoIdentity.getOpenIdToken}. This ID represents the actual\n *     final resolved identity ID from Amazon Cognito.\n */\nAWS.CognitoIdentityCredentials = AWS.util.inherit(AWS.Credentials, {\n  /**\n   * @api private\n   */\n  localStorageKey: {\n    id: 'aws.cognito.identity-id.',\n    providers: 'aws.cognito.identity-providers.'\n  },\n\n  /**\n   * Creates a new credentials object.\n   * @example Creating a new credentials object\n   *   AWS.config.credentials = new AWS.CognitoIdentityCredentials({\n   *\n   *     // either IdentityPoolId or IdentityId is required\n   *     // See the IdentityPoolId param for AWS.CognitoIdentity.getID (linked below)\n   *     // See the IdentityId param for AWS.CognitoIdentity.getCredentialsForIdentity\n   *     // or AWS.CognitoIdentity.getOpenIdToken (linked below)\n   *     IdentityPoolId: 'us-east-1:1699ebc0-7900-4099-b910-2df94f52a030',\n   *     IdentityId: 'us-east-1:128d0a74-c82f-4553-916d-90053e4a8b0f'\n   *\n   *     // optional, only necessary when the identity pool is not configured\n   *     // to use IAM roles in the Amazon Cognito Console\n   *     // See the RoleArn param for AWS.STS.assumeRoleWithWebIdentity (linked below)\n   *     RoleArn: 'arn:aws:iam::1234567890:role/MYAPP-CognitoIdentity',\n   *\n   *     // optional tokens, used for authenticated login\n   *     // See the Logins param for AWS.CognitoIdentity.getID (linked below)\n   *     Logins: {\n   *       'graph.facebook.com': 'FBTOKEN',\n   *       'www.amazon.com': 'AMAZONTOKEN',\n   *       'accounts.google.com': 'GOOGLETOKEN',\n   *       'api.twitter.com': 'TWITTERTOKEN',\n   *       'www.digits.com': 'DIGITSTOKEN'\n   *     },\n   *\n   *     // optional name, defaults to web-identity\n   *     // See the RoleSessionName param for AWS.STS.assumeRoleWithWebIdentity (linked below)\n   *     RoleSessionName: 'web',\n   *\n   *     // optional, only necessary when application runs in a browser\n   *     // and multiple users are signed in at once, used for caching\n   *     LoginId: 'example@gmail.com'\n   *\n   *   }, {\n   *      // optionally provide configuration to apply to the underlying service clients\n   *      // if configuration is not provided, then configuration will be pulled from AWS.config\n   *\n   *      // region should match the region your identity pool is located in\n   *      region: 'us-east-1',\n   *\n   *      // specify timeout options\n   *      httpOptions: {\n   *        timeout: 100\n   *      }\n   *   });\n   * @see AWS.CognitoIdentity.getId\n   * @see AWS.CognitoIdentity.getCredentialsForIdentity\n   * @see AWS.STS.assumeRoleWithWebIdentity\n   * @see AWS.CognitoIdentity.getOpenIdToken\n   * @see AWS.Config\n   * @note If a region is not provided in the global AWS.config, or\n   *   specified in the `clientConfig` to the CognitoIdentityCredentials\n   *   constructor, you may encounter a 'Missing credentials in config' error\n   *   when calling making a service call.\n   */\n  constructor: function CognitoIdentityCredentials(params, clientConfig) {\n    AWS.Credentials.call(this);\n    this.expired = true;\n    this.params = params;\n    this.data = null;\n    this._identityId = null;\n    this._clientConfig = AWS.util.copy(clientConfig || {});\n    this.loadCachedId();\n    var self = this;\n    Object.defineProperty(this, 'identityId', {\n      get: function() {\n        self.loadCachedId();\n        return self._identityId || self.params.IdentityId;\n      },\n      set: function(identityId) {\n        self._identityId = identityId;\n      }\n    });\n  },\n\n  /**\n   * Refreshes credentials using {AWS.CognitoIdentity.getCredentialsForIdentity},\n   * or {AWS.STS.assumeRoleWithWebIdentity}.\n   *\n   * @callback callback function(err)\n   *   Called when the STS service responds (or fails). When\n   *   this callback is called with no error, it means that the credentials\n   *   information has been loaded into the object (as the `accessKeyId`,\n   *   `secretAccessKey`, and `sessionToken` properties).\n   *   @param err [Error] if an error occurred, this value will be filled\n   * @see AWS.Credentials.get\n   */\n  refresh: function refresh(callback) {\n    this.coalesceRefresh(callback || AWS.util.fn.callback);\n  },\n\n  /**\n   * @api private\n   * @param callback\n   */\n  load: function load(callback) {\n    var self = this;\n    self.createClients();\n    self.data = null;\n    self._identityId = null;\n    self.getId(function(err) {\n      if (!err) {\n        if (!self.params.RoleArn) {\n          self.getCredentialsForIdentity(callback);\n        } else {\n          self.getCredentialsFromSTS(callback);\n        }\n      } else {\n        self.clearIdOnNotAuthorized(err);\n        callback(err);\n      }\n    });\n  },\n\n  /**\n   * Clears the cached Cognito ID associated with the currently configured\n   * identity pool ID. Use this to manually invalidate your cache if\n   * the identity pool ID was deleted.\n   */\n  clearCachedId: function clearCache() {\n    this._identityId = null;\n    delete this.params.IdentityId;\n\n    var poolId = this.params.IdentityPoolId;\n    var loginId = this.params.LoginId || '';\n    delete this.storage[this.localStorageKey.id + poolId + loginId];\n    delete this.storage[this.localStorageKey.providers + poolId + loginId];\n  },\n\n  /**\n   * @api private\n   */\n  clearIdOnNotAuthorized: function clearIdOnNotAuthorized(err) {\n    var self = this;\n    if (err.code == 'NotAuthorizedException') {\n      self.clearCachedId();\n    }\n  },\n\n  /**\n   * Retrieves a Cognito ID, loading from cache if it was already retrieved\n   * on this device.\n   *\n   * @callback callback function(err, identityId)\n   *   @param err [Error, null] an error object if the call failed or null if\n   *     it succeeded.\n   *   @param identityId [String, null] if successful, the callback will return\n   *     the Cognito ID.\n   * @note If not loaded explicitly, the Cognito ID is loaded and stored in\n   *   localStorage in the browser environment of a device.\n   * @api private\n   */\n  getId: function getId(callback) {\n    var self = this;\n    if (typeof self.params.IdentityId === 'string') {\n      return callback(null, self.params.IdentityId);\n    }\n\n    self.cognito.getId(function(err, data) {\n      if (!err && data.IdentityId) {\n        self.params.IdentityId = data.IdentityId;\n        callback(null, data.IdentityId);\n      } else {\n        callback(err);\n      }\n    });\n  },\n\n\n  /**\n   * @api private\n   */\n  loadCredentials: function loadCredentials(data, credentials) {\n    if (!data || !credentials) return;\n    credentials.expired = false;\n    credentials.accessKeyId = data.Credentials.AccessKeyId;\n    credentials.secretAccessKey = data.Credentials.SecretKey;\n    credentials.sessionToken = data.Credentials.SessionToken;\n    credentials.expireTime = data.Credentials.Expiration;\n  },\n\n  /**\n   * @api private\n   */\n  getCredentialsForIdentity: function getCredentialsForIdentity(callback) {\n    var self = this;\n    self.cognito.getCredentialsForIdentity(function(err, data) {\n      if (!err) {\n        self.cacheId(data);\n        self.data = data;\n        self.loadCredentials(self.data, self);\n      } else {\n        self.clearIdOnNotAuthorized(err);\n      }\n      callback(err);\n    });\n  },\n\n  /**\n   * @api private\n   */\n  getCredentialsFromSTS: function getCredentialsFromSTS(callback) {\n    var self = this;\n    self.cognito.getOpenIdToken(function(err, data) {\n      if (!err) {\n        self.cacheId(data);\n        self.params.WebIdentityToken = data.Token;\n        self.webIdentityCredentials.refresh(function(webErr) {\n          if (!webErr) {\n            self.data = self.webIdentityCredentials.data;\n            self.sts.credentialsFrom(self.data, self);\n          }\n          callback(webErr);\n        });\n      } else {\n        self.clearIdOnNotAuthorized(err);\n        callback(err);\n      }\n    });\n  },\n\n  /**\n   * @api private\n   */\n  loadCachedId: function loadCachedId() {\n    var self = this;\n\n    // in the browser we source default IdentityId from localStorage\n    if (AWS.util.isBrowser() && !self.params.IdentityId) {\n      var id = self.getStorage('id');\n      if (id && self.params.Logins) {\n        var actualProviders = Object.keys(self.params.Logins);\n        var cachedProviders =\n          (self.getStorage('providers') || '').split(',');\n\n        // only load ID if at least one provider used this ID before\n        var intersect = cachedProviders.filter(function(n) {\n          return actualProviders.indexOf(n) !== -1;\n        });\n        if (intersect.length !== 0) {\n          self.params.IdentityId = id;\n        }\n      } else if (id) {\n        self.params.IdentityId = id;\n      }\n    }\n  },\n\n  /**\n   * @api private\n   */\n  createClients: function() {\n    var clientConfig = this._clientConfig;\n    this.webIdentityCredentials = this.webIdentityCredentials ||\n      new AWS.WebIdentityCredentials(this.params, clientConfig);\n    if (!this.cognito) {\n      var cognitoConfig = AWS.util.merge({}, clientConfig);\n      cognitoConfig.params = this.params;\n      this.cognito = new CognitoIdentity(cognitoConfig);\n    }\n    this.sts = this.sts || new STS(clientConfig);\n  },\n\n  /**\n   * @api private\n   */\n  cacheId: function cacheId(data) {\n    this._identityId = data.IdentityId;\n    this.params.IdentityId = this._identityId;\n\n    // cache this IdentityId in browser localStorage if possible\n    if (AWS.util.isBrowser()) {\n      this.setStorage('id', data.IdentityId);\n\n      if (this.params.Logins) {\n        this.setStorage('providers', Object.keys(this.params.Logins).join(','));\n      }\n    }\n  },\n\n  /**\n   * @api private\n   */\n  getStorage: function getStorage(key) {\n    return this.storage[this.localStorageKey[key] + this.params.IdentityPoolId + (this.params.LoginId || '')];\n  },\n\n  /**\n   * @api private\n   */\n  setStorage: function setStorage(key, val) {\n    try {\n      this.storage[this.localStorageKey[key] + this.params.IdentityPoolId + (this.params.LoginId || '')] = val;\n    } catch (_) {}\n  },\n\n  /**\n   * @api private\n   */\n  storage: (function() {\n    try {\n      var storage = AWS.util.isBrowser() && window.localStorage !== null && typeof window.localStorage === 'object' ?\n          window.localStorage : {};\n\n      // Test set/remove which would throw an error in Safari's private browsing\n      storage['aws.test-storage'] = 'foobar';\n      delete storage['aws.test-storage'];\n\n      return storage;\n    } catch (_) {\n      return {};\n    }\n  })()\n});\n","var AWS = require('../core');\n\n/**\n * Creates a credential provider chain that searches for AWS credentials\n * in a list of credential providers specified by the {providers} property.\n *\n * By default, the chain will use the {defaultProviders} to resolve credentials.\n * These providers will look in the environment using the\n * {AWS.EnvironmentCredentials} class with the 'AWS' and 'AMAZON' prefixes.\n *\n * ## Setting Providers\n *\n * Each provider in the {providers} list should be a function that returns\n * a {AWS.Credentials} object, or a hardcoded credentials object. The function\n * form allows for delayed execution of the credential construction.\n *\n * ## Resolving Credentials from a Chain\n *\n * Call {resolve} to return the first valid credential object that can be\n * loaded by the provider chain.\n *\n * For example, to resolve a chain with a custom provider that checks a file\n * on disk after the set of {defaultProviders}:\n *\n * ```javascript\n * var diskProvider = new AWS.FileSystemCredentials('./creds.json');\n * var chain = new AWS.CredentialProviderChain();\n * chain.providers.push(diskProvider);\n * chain.resolve();\n * ```\n *\n * The above code will return the `diskProvider` object if the\n * file contains credentials and the `defaultProviders` do not contain\n * any credential settings.\n *\n * @!attribute providers\n *   @return [Array<AWS.Credentials, Function>]\n *     a list of credentials objects or functions that return credentials\n *     objects. If the provider is a function, the function will be\n *     executed lazily when the provider needs to be checked for valid\n *     credentials. By default, this object will be set to the\n *     {defaultProviders}.\n *   @see defaultProviders\n */\nAWS.CredentialProviderChain = AWS.util.inherit(AWS.Credentials, {\n\n  /**\n   * Creates a new CredentialProviderChain with a default set of providers\n   * specified by {defaultProviders}.\n   */\n  constructor: function CredentialProviderChain(providers) {\n    if (providers) {\n      this.providers = providers;\n    } else {\n      this.providers = AWS.CredentialProviderChain.defaultProviders.slice(0);\n    }\n    this.resolveCallbacks = [];\n  },\n\n  /**\n   * @!method  resolvePromise()\n   *   Returns a 'thenable' promise.\n   *   Resolves the provider chain by searching for the first set of\n   *   credentials in {providers}.\n   *\n   *   Two callbacks can be provided to the `then` method on the returned promise.\n   *   The first callback will be called if the promise is fulfilled, and the second\n   *   callback will be called if the promise is rejected.\n   *   @callback fulfilledCallback function(credentials)\n   *     Called if the promise is fulfilled and the provider resolves the chain\n   *     to a credentials object\n   *     @param credentials [AWS.Credentials] the credentials object resolved\n   *       by the provider chain.\n   *   @callback rejectedCallback function(error)\n   *     Called if the promise is rejected.\n   *     @param err [Error] the error object returned if no credentials are found.\n   *   @return [Promise] A promise that represents the state of the `resolve` method call.\n   *   @example Calling the `resolvePromise` method.\n   *     var promise = chain.resolvePromise();\n   *     promise.then(function(credentials) { ... }, function(err) { ... });\n   */\n\n  /**\n   * Resolves the provider chain by searching for the first set of\n   * credentials in {providers}.\n   *\n   * @callback callback function(err, credentials)\n   *   Called when the provider resolves the chain to a credentials object\n   *   or null if no credentials can be found.\n   *\n   *   @param err [Error] the error object returned if no credentials are\n   *     found.\n   *   @param credentials [AWS.Credentials] the credentials object resolved\n   *     by the provider chain.\n   * @return [AWS.CredentialProviderChain] the provider, for chaining.\n   */\n  resolve: function resolve(callback) {\n    var self = this;\n    if (self.providers.length === 0) {\n      callback(new Error('No providers'));\n      return self;\n    }\n\n    if (self.resolveCallbacks.push(callback) === 1) {\n      var index = 0;\n      var providers = self.providers.slice(0);\n\n      function resolveNext(err, creds) {\n        if ((!err && creds) || index === providers.length) {\n          AWS.util.arrayEach(self.resolveCallbacks, function (callback) {\n            callback(err, creds);\n          });\n          self.resolveCallbacks.length = 0;\n          return;\n        }\n\n        var provider = providers[index++];\n        if (typeof provider === 'function') {\n          creds = provider.call();\n        } else {\n          creds = provider;\n        }\n\n        if (creds.get) {\n          creds.get(function (getErr) {\n            resolveNext(getErr, getErr ? null : creds);\n          });\n        } else {\n          resolveNext(null, creds);\n        }\n      }\n\n      resolveNext();\n    }\n\n    return self;\n  }\n});\n\n/**\n * The default set of providers used by a vanilla CredentialProviderChain.\n *\n * In the browser:\n *\n * ```javascript\n * AWS.CredentialProviderChain.defaultProviders = []\n * ```\n *\n * In Node.js:\n *\n * ```javascript\n * AWS.CredentialProviderChain.defaultProviders = [\n *   function () { return new AWS.EnvironmentCredentials('AWS'); },\n *   function () { return new AWS.EnvironmentCredentials('AMAZON'); },\n *   function () { return new AWS.SharedIniFileCredentials(); },\n *   function () { return new AWS.ECSCredentials(); },\n *   function () { return new AWS.ProcessCredentials(); },\n *   function () { return new AWS.EC2MetadataCredentials() }\n * ]\n * ```\n */\nAWS.CredentialProviderChain.defaultProviders = [];\n\n/**\n * @api private\n */\nAWS.CredentialProviderChain.addPromisesToClass = function addPromisesToClass(PromiseDependency) {\n  this.prototype.resolvePromise = AWS.util.promisifyMethod('resolve', PromiseDependency);\n};\n\n/**\n * @api private\n */\nAWS.CredentialProviderChain.deletePromisesFromClass = function deletePromisesFromClass() {\n  delete this.prototype.resolvePromise;\n};\n\nAWS.util.addPromises(AWS.CredentialProviderChain);\n","var AWS = require('../core');\nrequire('../metadata_service');\n\n/**\n * Represents credentials received from the metadata service on an EC2 instance.\n *\n * By default, this class will connect to the metadata service using\n * {AWS.MetadataService} and attempt to load any available credentials. If it\n * can connect, and credentials are available, these will be used with zero\n * configuration.\n *\n * This credentials class will by default timeout after 1 second of inactivity\n * and retry 3 times.\n * If your requests to the EC2 metadata service are timing out, you can increase\n * these values by configuring them directly:\n *\n * ```javascript\n * AWS.config.credentials = new AWS.EC2MetadataCredentials({\n *   httpOptions: { timeout: 5000 }, // 5 second timeout\n *   maxRetries: 10, // retry 10 times\n *   retryDelayOptions: { base: 200 } // see AWS.Config for information\n * });\n * ```\n *\n * @see AWS.Config.retryDelayOptions\n *\n * @!macro nobrowser\n */\nAWS.EC2MetadataCredentials = AWS.util.inherit(AWS.Credentials, {\n  constructor: function EC2MetadataCredentials(options) {\n    AWS.Credentials.call(this);\n\n    options = options ? AWS.util.copy(options) : {};\n    options = AWS.util.merge(\n      {maxRetries: this.defaultMaxRetries}, options);\n    if (!options.httpOptions) options.httpOptions = {};\n    options.httpOptions = AWS.util.merge(\n      {timeout: this.defaultTimeout}, options.httpOptions);\n\n    this.metadataService = new AWS.MetadataService(options);\n    this.metadata = {};\n  },\n\n  /**\n   * @api private\n   */\n  defaultTimeout: 1000,\n\n  /**\n   * @api private\n   */\n  defaultMaxRetries: 3,\n\n  /**\n   * Loads the credentials from the instance metadata service\n   *\n   * @callback callback function(err)\n   *   Called when the instance metadata service responds (or fails). When\n   *   this callback is called with no error, it means that the credentials\n   *   information has been loaded into the object (as the `accessKeyId`,\n   *   `secretAccessKey`, and `sessionToken` properties).\n   *   @param err [Error] if an error occurred, this value will be filled\n   * @see get\n   */\n  refresh: function refresh(callback) {\n    this.coalesceRefresh(callback || AWS.util.fn.callback);\n  },\n\n  /**\n   * @api private\n   * @param callback\n   */\n  load: function load(callback) {\n    var self = this;\n    self.metadataService.loadCredentials(function(err, creds) {\n      if (!err) {\n        var currentTime = AWS.util.date.getDate();\n        var expireTime = new Date(creds.Expiration);\n        if (expireTime < currentTime) {\n          err = AWS.util.error(\n            new Error('EC2 Instance Metadata Serivce provided expired credentials'),\n            { code: 'EC2MetadataCredentialsProviderFailure' }\n          );\n        } else {\n          self.expired = false;\n          self.metadata = creds;\n          self.accessKeyId = creds.AccessKeyId;\n          self.secretAccessKey = creds.SecretAccessKey;\n          self.sessionToken = creds.Token;\n          self.expireTime = expireTime;\n        }\n      }\n      callback(err);\n    });\n  }\n});\n","var AWS = require('../core');\n\n/**\n * Represents credentials received from relative URI specified in the ECS container.\n *\n * This class will request refreshable credentials from the relative URI\n * specified by the AWS_CONTAINER_CREDENTIALS_RELATIVE_URI or the\n * AWS_CONTAINER_CREDENTIALS_FULL_URI environment variable. If valid credentials\n * are returned in the response, these will be used with zero configuration.\n *\n * This credentials class will by default timeout after 1 second of inactivity\n * and retry 3 times.\n * If your requests to the relative URI are timing out, you can increase\n * the value by configuring them directly:\n *\n * ```javascript\n * AWS.config.credentials = new AWS.ECSCredentials({\n *   httpOptions: { timeout: 5000 }, // 5 second timeout\n *   maxRetries: 10, // retry 10 times\n *   retryDelayOptions: { base: 200 } // see AWS.Config for information\n * });\n * ```\n *\n * @see AWS.Config.retryDelayOptions\n *\n * @!macro nobrowser\n */\nAWS.ECSCredentials = AWS.RemoteCredentials;\n","var AWS = require('../core');\n\n/**\n * Represents credentials from the environment.\n *\n * By default, this class will look for the matching environment variables\n * prefixed by a given {envPrefix}. The un-prefixed environment variable names\n * for each credential value is listed below:\n *\n * ```javascript\n * accessKeyId: ACCESS_KEY_ID\n * secretAccessKey: SECRET_ACCESS_KEY\n * sessionToken: SESSION_TOKEN\n * ```\n *\n * With the default prefix of 'AWS', the environment variables would be:\n *\n *     AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, AWS_SESSION_TOKEN\n *\n * @!attribute envPrefix\n *   @readonly\n *   @return [String] the prefix for the environment variable names excluding\n *     the separating underscore ('_').\n */\nAWS.EnvironmentCredentials = AWS.util.inherit(AWS.Credentials, {\n\n  /**\n   * Creates a new EnvironmentCredentials class with a given variable\n   * prefix {envPrefix}. For example, to load credentials using the 'AWS'\n   * prefix:\n   *\n   * ```javascript\n   * var creds = new AWS.EnvironmentCredentials('AWS');\n   * creds.accessKeyId == 'AKID' // from AWS_ACCESS_KEY_ID env var\n   * ```\n   *\n   * @param envPrefix [String] the prefix to use (e.g., 'AWS') for environment\n   *   variables. Do not include the separating underscore.\n   */\n  constructor: function EnvironmentCredentials(envPrefix) {\n    AWS.Credentials.call(this);\n    this.envPrefix = envPrefix;\n    this.get(function() {});\n  },\n\n  /**\n   * Loads credentials from the environment using the prefixed\n   * environment variables.\n   *\n   * @callback callback function(err)\n   *   Called after the (prefixed) ACCESS_KEY_ID, SECRET_ACCESS_KEY, and\n   *   SESSION_TOKEN environment variables are read. When this callback is\n   *   called with no error, it means that the credentials information has\n   *   been loaded into the object (as the `accessKeyId`, `secretAccessKey`,\n   *   and `sessionToken` properties).\n   *   @param err [Error] if an error occurred, this value will be filled\n   * @see get\n   */\n  refresh: function refresh(callback) {\n    if (!callback) callback = AWS.util.fn.callback;\n\n    if (!process || !process.env) {\n      callback(AWS.util.error(\n        new Error('No process info or environment variables available'),\n        { code: 'EnvironmentCredentialsProviderFailure' }\n      ));\n      return;\n    }\n\n    var keys = ['ACCESS_KEY_ID', 'SECRET_ACCESS_KEY', 'SESSION_TOKEN'];\n    var values = [];\n\n    for (var i = 0; i < keys.length; i++) {\n      var prefix = '';\n      if (this.envPrefix) prefix = this.envPrefix + '_';\n      values[i] = process.env[prefix + keys[i]];\n      if (!values[i] && keys[i] !== 'SESSION_TOKEN') {\n        callback(AWS.util.error(\n          new Error('Variable ' + prefix + keys[i] + ' not set.'),\n        { code: 'EnvironmentCredentialsProviderFailure' }\n        ));\n        return;\n      }\n    }\n\n    this.expired = false;\n    AWS.Credentials.apply(this, values);\n    callback();\n  }\n\n});\n","var AWS = require('../core');\n\n/**\n * Represents credentials from a JSON file on disk.\n * If the credentials expire, the SDK can {refresh} the credentials\n * from the file.\n *\n * The format of the file should be similar to the options passed to\n * {AWS.Config}:\n *\n * ```javascript\n * {accessKeyId: 'akid', secretAccessKey: 'secret', sessionToken: 'optional'}\n * ```\n *\n * @example Loading credentials from disk\n *   var creds = new AWS.FileSystemCredentials('./configuration.json');\n *   creds.accessKeyId == 'AKID'\n *\n * @!attribute filename\n *   @readonly\n *   @return [String] the path to the JSON file on disk containing the\n *     credentials.\n * @!macro nobrowser\n */\nAWS.FileSystemCredentials = AWS.util.inherit(AWS.Credentials, {\n\n  /**\n   * @overload AWS.FileSystemCredentials(filename)\n   *   Creates a new FileSystemCredentials object from a filename\n   *\n   *   @param filename [String] the path on disk to the JSON file to load.\n   */\n  constructor: function FileSystemCredentials(filename) {\n    AWS.Credentials.call(this);\n    this.filename = filename;\n    this.get(function() {});\n  },\n\n  /**\n   * Loads the credentials from the {filename} on disk.\n   *\n   * @callback callback function(err)\n   *   Called after the JSON file on disk is read and parsed. When this callback\n   *   is called with no error, it means that the credentials information\n   *   has been loaded into the object (as the `accessKeyId`, `secretAccessKey`,\n   *   and `sessionToken` properties).\n   *   @param err [Error] if an error occurred, this value will be filled\n   * @see get\n   */\n  refresh: function refresh(callback) {\n    if (!callback) callback = AWS.util.fn.callback;\n    try {\n      var creds = JSON.parse(AWS.util.readFileSync(this.filename));\n      AWS.Credentials.call(this, creds);\n      if (!this.accessKeyId || !this.secretAccessKey) {\n        throw AWS.util.error(\n          new Error('Credentials not set in ' + this.filename),\n        { code: 'FileSystemCredentialsProviderFailure' }\n        );\n      }\n      this.expired = false;\n      callback();\n    } catch (err) {\n      callback(err);\n    }\n  }\n\n});\n","var AWS = require('../core');\nvar proc = require('child_process');\nvar iniLoader = AWS.util.iniLoader;\n\n/**\n * Represents credentials loaded from shared credentials file\n * (defaulting to ~/.aws/credentials or defined by the\n * `AWS_SHARED_CREDENTIALS_FILE` environment variable).\n *\n * ## Using process credentials\n *\n * The credentials file can specify a credential provider that executes\n * a given process and attempts to read its stdout to recieve a JSON payload\n * containing the credentials:\n *\n *     [default]\n *     credential_process = /usr/bin/credential_proc\n *\n * Automatically handles refreshing credentials if an Expiration time is\n * provided in the credentials payload. Credentials supplied in the same profile\n * will take precedence over the credential_process.\n *\n * Sourcing credentials from an external process can potentially be dangerous,\n * so proceed with caution. Other credential providers should be preferred if\n * at all possible. If using this option, you should make sure that the shared\n * credentials file is as locked down as possible using security best practices\n * for your operating system.\n *\n * ## Using custom profiles\n *\n * The SDK supports loading credentials for separate profiles. This can be done\n * in two ways:\n *\n * 1. Set the `AWS_PROFILE` environment variable in your process prior to\n *    loading the SDK.\n * 2. Directly load the AWS.ProcessCredentials provider:\n *\n * ```javascript\n * var creds = new AWS.ProcessCredentials({profile: 'myprofile'});\n * AWS.config.credentials = creds;\n * ```\n *\n * @!macro nobrowser\n */\nAWS.ProcessCredentials = AWS.util.inherit(AWS.Credentials, {\n  /**\n   * Creates a new ProcessCredentials object.\n   *\n   * @param options [map] a set of options\n   * @option options profile [String] (AWS_PROFILE env var or 'default')\n   *   the name of the profile to load.\n   * @option options filename [String] ('~/.aws/credentials' or defined by\n   *   AWS_SHARED_CREDENTIALS_FILE process env var)\n   *   the filename to use when loading credentials.\n   * @option options callback [Function] (err) Credentials are eagerly loaded\n   *   by the constructor. When the callback is called with no error, the\n   *   credentials have been loaded successfully.\n   */\n  constructor: function ProcessCredentials(options) {\n    AWS.Credentials.call(this);\n\n    options = options || {};\n\n    this.filename = options.filename;\n    this.profile = options.profile || process.env.AWS_PROFILE || AWS.util.defaultProfile;\n    this.get(options.callback || AWS.util.fn.noop);\n  },\n\n  /**\n   * @api private\n   */\n  load: function load(callback) {\n    var self = this;\n    try {\n      var profiles = {};\n      var profilesFromConfig = {};\n      if (process.env[AWS.util.configOptInEnv]) {\n        var profilesFromConfig = iniLoader.loadFrom({\n          isConfig: true,\n          filename: process.env[AWS.util.sharedConfigFileEnv]\n        });\n      }\n      var profilesFromCreds = iniLoader.loadFrom({\n        filename: this.filename ||\n          (process.env[AWS.util.configOptInEnv] && process.env[AWS.util.sharedCredentialsFileEnv])\n      });\n      for (var i = 0, profileNames = Object.keys(profilesFromCreds); i < profileNames.length; i++) {\n        profiles[profileNames[i]] = profilesFromCreds[profileNames[i]];\n      }\n      // load after profilesFromCreds to prefer profilesFromConfig\n      for (var i = 0, profileNames = Object.keys(profilesFromConfig); i < profileNames.length; i++) {\n        profiles[profileNames[i]] = profilesFromConfig[profileNames[i]];\n      }\n      var profile = profiles[this.profile] || {};\n\n      if (Object.keys(profile).length === 0) {\n        throw AWS.util.error(\n          new Error('Profile ' + this.profile + ' not found'),\n          { code: 'ProcessCredentialsProviderFailure' }\n        );\n      }\n\n      if (profile['credential_process']) {\n        this.loadViaCredentialProcess(profile, function(err, data) {\n          if (err) {\n            callback(err, null);\n          } else {\n            self.expired = false;\n            self.accessKeyId = data.AccessKeyId;\n            self.secretAccessKey = data.SecretAccessKey;\n            self.sessionToken = data.SessionToken;\n            if (data.Expiration) {\n              self.expireTime = new Date(data.Expiration);\n            }\n            callback(null);\n          }\n        });\n      } else {\n        throw AWS.util.error(\n          new Error('Profile ' + this.profile + ' did not include credential process'),\n          { code: 'ProcessCredentialsProviderFailure' }\n        );\n      }\n    } catch (err) {\n      callback(err);\n    }\n  },\n\n  /**\n  * Executes the credential_process and retrieves\n  * credentials from the output\n  * @api private\n  * @param profile [map] credentials profile\n  * @throws ProcessCredentialsProviderFailure\n  */\n  loadViaCredentialProcess: function loadViaCredentialProcess(profile, callback) {\n    proc.exec(profile['credential_process'], function(err, stdOut, stdErr) {\n      if (err) {\n        callback(AWS.util.error(\n          new Error('credential_process returned error'),\n          { code: 'ProcessCredentialsProviderFailure'}\n        ), null);\n      } else {\n        try {\n          var credData = JSON.parse(stdOut);\n          if (credData.Expiration) {\n            var currentTime = AWS.util.date.getDate();\n            var expireTime = new Date(credData.Expiration);\n            if (expireTime < currentTime) {\n              throw Error('credential_process returned expired credentials');\n            }\n          }\n\n          if (credData.Version !== 1) {\n            throw Error('credential_process does not return Version == 1');\n          }\n          callback(null, credData);\n        } catch (err) {\n          callback(AWS.util.error(\n            new Error(err.message),\n            { code: 'ProcessCredentialsProviderFailure'}\n          ), null);\n        }\n      }\n    });\n  },\n\n  /**\n   * Loads the credentials from the credential process\n   *\n   * @callback callback function(err)\n   *   Called after the credential process has been executed. When this\n   *   callback is called with no error, it means that the credentials\n   *   information has been loaded into the object (as the `accessKeyId`,\n   *   `secretAccessKey`, and `sessionToken` properties).\n   *   @param err [Error] if an error occurred, this value will be filled\n   * @see get\n   */\n  refresh: function refresh(callback) {\n    iniLoader.clearCachedFiles();\n    this.coalesceRefresh(callback || AWS.util.fn.callback);\n  }\n});\n","var AWS = require('../core'),\n  ENV_RELATIVE_URI = 'AWS_CONTAINER_CREDENTIALS_RELATIVE_URI',\n  ENV_FULL_URI = 'AWS_CONTAINER_CREDENTIALS_FULL_URI',\n  ENV_AUTH_TOKEN = 'AWS_CONTAINER_AUTHORIZATION_TOKEN',\n  FULL_URI_UNRESTRICTED_PROTOCOLS = ['https:'],\n  FULL_URI_ALLOWED_PROTOCOLS = ['http:', 'https:'],\n  FULL_URI_ALLOWED_HOSTNAMES = ['localhost', '127.0.0.1'],\n  RELATIVE_URI_HOST = '169.254.170.2';\n\n/**\n * Represents credentials received from specified URI.\n *\n * This class will request refreshable credentials from the relative URI\n * specified by the AWS_CONTAINER_CREDENTIALS_RELATIVE_URI or the\n * AWS_CONTAINER_CREDENTIALS_FULL_URI environment variable. If valid credentials\n * are returned in the response, these will be used with zero configuration.\n *\n * This credentials class will by default timeout after 1 second of inactivity\n * and retry 3 times.\n * If your requests to the relative URI are timing out, you can increase\n * the value by configuring them directly:\n *\n * ```javascript\n * AWS.config.credentials = new AWS.RemoteCredentials({\n *   httpOptions: { timeout: 5000 }, // 5 second timeout\n *   maxRetries: 10, // retry 10 times\n *   retryDelayOptions: { base: 200 } // see AWS.Config for information\n * });\n * ```\n *\n * @see AWS.Config.retryDelayOptions\n *\n * @!macro nobrowser\n */\nAWS.RemoteCredentials = AWS.util.inherit(AWS.Credentials, {\n  constructor: function RemoteCredentials(options) {\n    AWS.Credentials.call(this);\n    options = options ? AWS.util.copy(options) : {};\n    if (!options.httpOptions) options.httpOptions = {};\n    options.httpOptions = AWS.util.merge(\n      this.httpOptions, options.httpOptions);\n    AWS.util.update(this, options);\n  },\n\n  /**\n   * @api private\n   */\n  httpOptions: { timeout: 1000 },\n\n  /**\n   * @api private\n   */\n  maxRetries: 3,\n\n  /**\n   * @api private\n   */\n  isConfiguredForEcsCredentials: function isConfiguredForEcsCredentials() {\n    return Boolean(\n        process &&\n        process.env &&\n        (process.env[ENV_RELATIVE_URI] || process.env[ENV_FULL_URI])\n    );\n  },\n\n  /**\n   * @api private\n   */\n  getECSFullUri: function getECSFullUri() {\n    if (process && process.env) {\n      var relative = process.env[ENV_RELATIVE_URI],\n          full = process.env[ENV_FULL_URI];\n      if (relative) {\n        return 'http://' + RELATIVE_URI_HOST + relative;\n      } else if (full) {\n        var parsed = AWS.util.urlParse(full);\n        if (FULL_URI_ALLOWED_PROTOCOLS.indexOf(parsed.protocol) < 0) {\n          throw AWS.util.error(\n            new Error('Unsupported protocol:  AWS.RemoteCredentials supports '\n              + FULL_URI_ALLOWED_PROTOCOLS.join(',') + ' only; '\n              + parsed.protocol + ' requested.'),\n            { code: 'ECSCredentialsProviderFailure' }\n          );\n        }\n\n        if (FULL_URI_UNRESTRICTED_PROTOCOLS.indexOf(parsed.protocol) < 0 &&\n            FULL_URI_ALLOWED_HOSTNAMES.indexOf(parsed.hostname) < 0) {\n          throw AWS.util.error(\n            new Error('Unsupported hostname: AWS.RemoteCredentials only supports '\n              + FULL_URI_ALLOWED_HOSTNAMES.join(',') + ' for ' + parsed.protocol + '; '\n              + parsed.protocol + '//' + parsed.hostname + ' requested.'),\n            { code: 'ECSCredentialsProviderFailure' }\n          );\n        }\n\n        return full;\n      } else {\n        throw AWS.util.error(\n          new Error('Variable ' + ENV_RELATIVE_URI + ' or ' + ENV_FULL_URI +\n            ' must be set to use AWS.RemoteCredentials.'),\n          { code: 'ECSCredentialsProviderFailure' }\n        );\n      }\n    } else {\n      throw AWS.util.error(\n        new Error('No process info available'),\n        { code: 'ECSCredentialsProviderFailure' }\n      );\n    }\n  },\n\n  /**\n   * @api private\n   */\n  getECSAuthToken: function getECSAuthToken() {\n    if (process && process.env && process.env[ENV_FULL_URI]) {\n      return process.env[ENV_AUTH_TOKEN];\n    }\n  },\n\n  /**\n   * @api private\n   */\n  credsFormatIsValid: function credsFormatIsValid(credData) {\n    return (!!credData.accessKeyId && !!credData.secretAccessKey &&\n      !!credData.sessionToken && !!credData.expireTime);\n  },\n\n  /**\n   * @api private\n   */\n  formatCreds: function formatCreds(credData) {\n    if (!!credData.credentials) {\n      credData = credData.credentials;\n    }\n\n    return {\n      expired: false,\n      accessKeyId: credData.accessKeyId || credData.AccessKeyId,\n      secretAccessKey: credData.secretAccessKey || credData.SecretAccessKey,\n      sessionToken: credData.sessionToken || credData.Token,\n      expireTime: new Date(credData.expiration || credData.Expiration)\n    };\n  },\n\n  /**\n   * @api private\n   */\n  request: function request(url, callback) {\n    var httpRequest = new AWS.HttpRequest(url);\n    httpRequest.method = 'GET';\n    httpRequest.headers.Accept = 'application/json';\n    var token = this.getECSAuthToken();\n    if (token) {\n      httpRequest.headers.Authorization = token;\n    }\n    AWS.util.handleRequestWithRetries(httpRequest, this, callback);\n  },\n\n  /**\n   * Loads the credentials from the relative URI specified by container\n   *\n   * @callback callback function(err)\n   *   Called when the request to the relative URI responds (or fails). When\n   *   this callback is called with no error, it means that the credentials\n   *   information has been loaded into the object (as the `accessKeyId`,\n   *   `secretAccessKey`, `sessionToken`, and `expireTime` properties).\n   *   @param err [Error] if an error occurred, this value will be filled\n   * @see get\n   */\n  refresh: function refresh(callback) {\n    this.coalesceRefresh(callback || AWS.util.fn.callback);\n  },\n\n  /**\n   * @api private\n   */\n  load: function load(callback) {\n    var self = this;\n    var fullUri;\n\n    try {\n      fullUri = this.getECSFullUri();\n    } catch (err) {\n      callback(err);\n      return;\n    }\n\n    this.request(fullUri, function(err, data) {\n      if (!err) {\n        try {\n          data = JSON.parse(data);\n          var creds = self.formatCreds(data);\n          if (!self.credsFormatIsValid(creds)) {\n            throw AWS.util.error(\n              new Error('Response data is not in valid format'),\n              { code: 'ECSCredentialsProviderFailure' }\n            );\n          }\n          AWS.util.update(self, creds);\n        } catch (dataError) {\n          err = dataError;\n        }\n      }\n      callback(err, creds);\n    });\n  }\n});\n","var AWS = require('../core');\nvar STS = require('../../clients/sts');\n\n/**\n * Represents credentials retrieved from STS SAML support.\n *\n * By default this provider gets credentials using the\n * {AWS.STS.assumeRoleWithSAML} service operation. This operation\n * requires a `RoleArn` containing the ARN of the IAM trust policy for the\n * application for which credentials will be given, as well as a `PrincipalArn`\n * representing the ARN for the SAML identity provider. In addition, the\n * `SAMLAssertion` must be set to the token provided by the identity\n * provider. See {constructor} for an example on creating a credentials\n * object with proper `RoleArn`, `PrincipalArn`, and `SAMLAssertion` values.\n *\n * ## Refreshing Credentials from Identity Service\n *\n * In addition to AWS credentials expiring after a given amount of time, the\n * login token from the identity provider will also expire. Once this token\n * expires, it will not be usable to refresh AWS credentials, and another\n * token will be needed. The SDK does not manage refreshing of the token value,\n * but this can be done through a \"refresh token\" supported by most identity\n * providers. Consult the documentation for the identity provider for refreshing\n * tokens. Once the refreshed token is acquired, you should make sure to update\n * this new token in the credentials object's {params} property. The following\n * code will update the SAMLAssertion, assuming you have retrieved an updated\n * token from the identity provider:\n *\n * ```javascript\n * AWS.config.credentials.params.SAMLAssertion = updatedToken;\n * ```\n *\n * Future calls to `credentials.refresh()` will now use the new token.\n *\n * @!attribute params\n *   @return [map] the map of params passed to\n *     {AWS.STS.assumeRoleWithSAML}. To update the token, set the\n *     `params.SAMLAssertion` property.\n */\nAWS.SAMLCredentials = AWS.util.inherit(AWS.Credentials, {\n  /**\n   * Creates a new credentials object.\n   * @param (see AWS.STS.assumeRoleWithSAML)\n   * @example Creating a new credentials object\n   *   AWS.config.credentials = new AWS.SAMLCredentials({\n   *     RoleArn: 'arn:aws:iam::1234567890:role/SAMLRole',\n   *     PrincipalArn: 'arn:aws:iam::1234567890:role/SAMLPrincipal',\n   *     SAMLAssertion: 'base64-token', // base64-encoded token from IdP\n   *   });\n   * @see AWS.STS.assumeRoleWithSAML\n   */\n  constructor: function SAMLCredentials(params) {\n    AWS.Credentials.call(this);\n    this.expired = true;\n    this.params = params;\n  },\n\n  /**\n   * Refreshes credentials using {AWS.STS.assumeRoleWithSAML}\n   *\n   * @callback callback function(err)\n   *   Called when the STS service responds (or fails). When\n   *   this callback is called with no error, it means that the credentials\n   *   information has been loaded into the object (as the `accessKeyId`,\n   *   `secretAccessKey`, and `sessionToken` properties).\n   *   @param err [Error] if an error occurred, this value will be filled\n   * @see get\n   */\n  refresh: function refresh(callback) {\n    this.coalesceRefresh(callback || AWS.util.fn.callback);\n  },\n\n  /**\n   * @api private\n   */\n  load: function load(callback) {\n    var self = this;\n    self.createClients();\n    self.service.assumeRoleWithSAML(function (err, data) {\n      if (!err) {\n        self.service.credentialsFrom(data, self);\n      }\n      callback(err);\n    });\n  },\n\n  /**\n   * @api private\n   */\n  createClients: function() {\n    this.service = this.service || new STS({params: this.params});\n  }\n\n});\n","var AWS = require('../core');\nvar STS = require('../../clients/sts');\nvar iniLoader = AWS.util.iniLoader;\n\n/**\n * Represents credentials loaded from shared credentials file\n * (defaulting to ~/.aws/credentials or defined by the\n * `AWS_SHARED_CREDENTIALS_FILE` environment variable).\n *\n * ## Using the shared credentials file\n *\n * This provider is checked by default in the Node.js environment. To use the\n * credentials file provider, simply add your access and secret keys to the\n * ~/.aws/credentials file in the following format:\n *\n *     [default]\n *     aws_access_key_id = AKID...\n *     aws_secret_access_key = YOUR_SECRET_KEY\n *\n * ## Using custom profiles\n *\n * The SDK supports loading credentials for separate profiles. This can be done\n * in two ways:\n *\n * 1. Set the `AWS_PROFILE` environment variable in your process prior to\n *    loading the SDK.\n * 2. Directly load the AWS.SharedIniFileCredentials provider:\n *\n * ```javascript\n * var creds = new AWS.SharedIniFileCredentials({profile: 'myprofile'});\n * AWS.config.credentials = creds;\n * ```\n *\n * @!macro nobrowser\n */\nAWS.SharedIniFileCredentials = AWS.util.inherit(AWS.Credentials, {\n  /**\n   * Creates a new SharedIniFileCredentials object.\n   *\n   * @param options [map] a set of options\n   * @option options profile [String] (AWS_PROFILE env var or 'default')\n   *   the name of the profile to load.\n   * @option options filename [String] ('~/.aws/credentials' or defined by\n   *   AWS_SHARED_CREDENTIALS_FILE process env var)\n   *   the filename to use when loading credentials.\n   * @option options disableAssumeRole [Boolean] (false) True to disable\n   *   support for profiles that assume an IAM role. If true, and an assume\n   *   role profile is selected, an error is raised.\n   * @option options preferStaticCredentials [Boolean] (false) True to\n   *   prefer static credentials to role_arn if both are present.\n   * @option options tokenCodeFn [Function] (null) Function to provide\n   *   STS Assume Role TokenCode, if mfa_serial is provided for profile in ini\n   *   file. Function is called with value of mfa_serial and callback, and\n   *   should provide the TokenCode or an error to the callback in the format\n   *   callback(err, token)\n   * @option options callback [Function] (err) Credentials are eagerly loaded\n   *   by the constructor. When the callback is called with no error, the\n   *   credentials have been loaded successfully.\n   * @option options httpOptions [map] A set of options to pass to the low-level\n   *   HTTP request. Currently supported options are:\n   *   * **proxy** [String] &mdash; the URL to proxy requests through\n   *   * **agent** [http.Agent, https.Agent] &mdash; the Agent object to perform\n   *     HTTP requests with. Used for connection pooling. Defaults to the global\n   *     agent (`http.globalAgent`) for non-SSL connections. Note that for\n   *     SSL connections, a special Agent object is used in order to enable\n   *     peer certificate verification. This feature is only available in the\n   *     Node.js environment.\n   *   * **connectTimeout** [Integer] &mdash; Sets the socket to timeout after\n   *     failing to establish a connection with the server after\n   *     `connectTimeout` milliseconds. This timeout has no effect once a socket\n   *     connection has been established.\n   *   * **timeout** [Integer] &mdash; Sets the socket to timeout after timeout\n   *     milliseconds of inactivity on the socket. Defaults to two minutes\n   *     (120000).\n   */\n  constructor: function SharedIniFileCredentials(options) {\n    AWS.Credentials.call(this);\n\n    options = options || {};\n\n    this.filename = options.filename;\n    this.profile = options.profile || process.env.AWS_PROFILE || AWS.util.defaultProfile;\n    this.disableAssumeRole = Boolean(options.disableAssumeRole);\n    this.preferStaticCredentials = Boolean(options.preferStaticCredentials);\n    this.tokenCodeFn = options.tokenCodeFn || null;\n    this.httpOptions = options.httpOptions || null;\n    this.get(options.callback || AWS.util.fn.noop);\n  },\n\n  /**\n   * @api private\n   */\n  load: function load(callback) {\n    var self = this;\n    try {\n      var profiles = {};\n      var profilesFromConfig = {};\n      if (process.env[AWS.util.configOptInEnv]) {\n        var profilesFromConfig = iniLoader.loadFrom({\n          isConfig: true,\n          filename: process.env[AWS.util.sharedConfigFileEnv]\n        });\n      }\n      var profilesFromCreds = iniLoader.loadFrom({\n        filename: this.filename ||\n          (process.env[AWS.util.configOptInEnv] && process.env[AWS.util.sharedCredentialsFileEnv])\n      });\n      for (var i = 0, profileNames = Object.keys(profilesFromConfig); i < profileNames.length; i++) {\n        profiles[profileNames[i]] = profilesFromConfig[profileNames[i]];\n      }\n      for (var i = 0, profileNames = Object.keys(profilesFromCreds); i < profileNames.length; i++) {\n        profiles[profileNames[i]] = profilesFromCreds[profileNames[i]];\n      }\n      var profile = profiles[this.profile] || {};\n\n      if (Object.keys(profile).length === 0) {\n        throw AWS.util.error(\n          new Error('Profile ' + this.profile + ' not found'),\n          { code: 'SharedIniFileCredentialsProviderFailure' }\n        );\n      }\n\n      /*\n      In the CLI, the presence of both a role_arn and static credentials have\n      different meanings depending on how many profiles have been visited. For\n      the first profile processed, role_arn takes precedence over any static\n      credentials, but for all subsequent profiles, static credentials are\n      used if present, and only in their absence will the profile's\n      source_profile and role_arn keys be used to load another set of\n      credentials. This var is intended to yield compatible behaviour in this\n      sdk.\n      */\n      var preferStaticCredentialsToRoleArn = Boolean(\n        this.preferStaticCredentials\n        && profile['aws_access_key_id']\n        && profile['aws_secret_access_key']\n      );\n\n      if (profile['role_arn'] && !preferStaticCredentialsToRoleArn) {\n        this.loadRoleProfile(profiles, profile, function(err, data) {\n          if (err) {\n            callback(err);\n          } else {\n            self.expired = false;\n            self.accessKeyId = data.Credentials.AccessKeyId;\n            self.secretAccessKey = data.Credentials.SecretAccessKey;\n            self.sessionToken = data.Credentials.SessionToken;\n            self.expireTime = data.Credentials.Expiration;\n            callback(null);\n          }\n        });\n        return;\n      }\n\n      this.accessKeyId = profile['aws_access_key_id'];\n      this.secretAccessKey = profile['aws_secret_access_key'];\n      this.sessionToken = profile['aws_session_token'];\n\n      if (!this.accessKeyId || !this.secretAccessKey) {\n        throw AWS.util.error(\n          new Error('Credentials not set for profile ' + this.profile),\n          { code: 'SharedIniFileCredentialsProviderFailure' }\n        );\n      }\n      this.expired = false;\n      callback(null);\n    } catch (err) {\n      callback(err);\n    }\n  },\n\n  /**\n   * Loads the credentials from the shared credentials file\n   *\n   * @callback callback function(err)\n   *   Called after the shared INI file on disk is read and parsed. When this\n   *   callback is called with no error, it means that the credentials\n   *   information has been loaded into the object (as the `accessKeyId`,\n   *   `secretAccessKey`, and `sessionToken` properties).\n   *   @param err [Error] if an error occurred, this value will be filled\n   * @see get\n   */\n  refresh: function refresh(callback) {\n    iniLoader.clearCachedFiles();\n    this.coalesceRefresh(\n      callback || AWS.util.fn.callback,\n      this.disableAssumeRole\n    );\n  },\n\n  /**\n   * @api private\n   */\n  loadRoleProfile: function loadRoleProfile(creds, roleProfile, callback) {\n    if (this.disableAssumeRole) {\n      throw AWS.util.error(\n        new Error('Role assumption profiles are disabled. ' +\n                  'Failed to load profile ' + this.profile +\n                  ' from ' + creds.filename),\n        { code: 'SharedIniFileCredentialsProviderFailure' }\n      );\n    }\n\n    var self = this;\n    var roleArn = roleProfile['role_arn'];\n    var roleSessionName = roleProfile['role_session_name'];\n    var externalId = roleProfile['external_id'];\n    var mfaSerial = roleProfile['mfa_serial'];\n    var sourceProfileName = roleProfile['source_profile'];\n\n    if (!sourceProfileName) {\n      throw AWS.util.error(\n        new Error('source_profile is not set using profile ' + this.profile),\n        { code: 'SharedIniFileCredentialsProviderFailure' }\n      );\n    }\n\n    var sourceProfileExistanceTest = creds[sourceProfileName];\n\n    if (typeof sourceProfileExistanceTest !== 'object') {\n      throw AWS.util.error(\n        new Error('source_profile ' + sourceProfileName + ' using profile '\n          + this.profile + ' does not exist'),\n        { code: 'SharedIniFileCredentialsProviderFailure' }\n      );\n    }\n\n    var sourceCredentials = new AWS.SharedIniFileCredentials(\n      AWS.util.merge(this.options || {}, {\n        profile: sourceProfileName,\n        preferStaticCredentials: true\n      })\n    );\n\n    this.roleArn = roleArn;\n    var sts = new STS({\n      credentials: sourceCredentials,\n      httpOptions: this.httpOptions\n    });\n\n    var roleParams = {\n      RoleArn: roleArn,\n      RoleSessionName: roleSessionName || 'aws-sdk-js-' + Date.now()\n    };\n\n    if (externalId) {\n      roleParams.ExternalId = externalId;\n    }\n\n    if (mfaSerial && self.tokenCodeFn) {\n      roleParams.SerialNumber = mfaSerial;\n      self.tokenCodeFn(mfaSerial, function(err, token) {\n        if (err) {\n          var message;\n          if (err instanceof Error) {\n            message = err.message;\n          } else {\n            message = err;\n          }\n          callback(\n            AWS.util.error(\n              new Error('Error fetching MFA token: ' + message),\n              { code: 'SharedIniFileCredentialsProviderFailure' }\n            ));\n          return;\n        }\n\n        roleParams.TokenCode = token;\n        sts.assumeRole(roleParams, callback);\n      });\n      return;\n    }\n    sts.assumeRole(roleParams, callback);\n  }\n});\n","var AWS = require('../core');\nvar STS = require('../../clients/sts');\n\n/**\n * Represents temporary credentials retrieved from {AWS.STS}. Without any\n * extra parameters, credentials will be fetched from the\n * {AWS.STS.getSessionToken} operation. If an IAM role is provided, the\n * {AWS.STS.assumeRole} operation will be used to fetch credentials for the\n * role instead.\n *\n * @note AWS.TemporaryCredentials is deprecated, but remains available for\n *   backwards compatibility. {AWS.ChainableTemporaryCredentials} is the\n *   preferred class for temporary credentials.\n *\n * To setup temporary credentials, configure a set of master credentials\n * using the standard credentials providers (environment, EC2 instance metadata,\n * or from the filesystem), then set the global credentials to a new\n * temporary credentials object:\n *\n * ```javascript\n * // Note that environment credentials are loaded by default,\n * // the following line is shown for clarity:\n * AWS.config.credentials = new AWS.EnvironmentCredentials('AWS');\n *\n * // Now set temporary credentials seeded from the master credentials\n * AWS.config.credentials = new AWS.TemporaryCredentials();\n *\n * // subsequent requests will now use temporary credentials from AWS STS.\n * new AWS.S3().listBucket(function(err, data) { ... });\n * ```\n *\n * @!attribute masterCredentials\n *   @return [AWS.Credentials] the master (non-temporary) credentials used to\n *     get and refresh temporary credentials from AWS STS.\n * @note (see constructor)\n */\nAWS.TemporaryCredentials = AWS.util.inherit(AWS.Credentials, {\n  /**\n   * Creates a new temporary credentials object.\n   *\n   * @note In order to create temporary credentials, you first need to have\n   *   \"master\" credentials configured in {AWS.Config.credentials}. These\n   *   master credentials are necessary to retrieve the temporary credentials,\n   *   as well as refresh the credentials when they expire.\n   * @param params [map] a map of options that are passed to the\n   *   {AWS.STS.assumeRole} or {AWS.STS.getSessionToken} operations.\n   *   If a `RoleArn` parameter is passed in, credentials will be based on the\n   *   IAM role.\n   * @param masterCredentials [AWS.Credentials] the master (non-temporary) credentials\n   *  used to get and refresh temporary credentials from AWS STS.\n   * @example Creating a new credentials object for generic temporary credentials\n   *   AWS.config.credentials = new AWS.TemporaryCredentials();\n   * @example Creating a new credentials object for an IAM role\n   *   AWS.config.credentials = new AWS.TemporaryCredentials({\n   *     RoleArn: 'arn:aws:iam::1234567890:role/TemporaryCredentials',\n   *   });\n   * @see AWS.STS.assumeRole\n   * @see AWS.STS.getSessionToken\n   */\n  constructor: function TemporaryCredentials(params, masterCredentials) {\n    AWS.Credentials.call(this);\n    this.loadMasterCredentials(masterCredentials);\n    this.expired = true;\n\n    this.params = params || {};\n    if (this.params.RoleArn) {\n      this.params.RoleSessionName =\n        this.params.RoleSessionName || 'temporary-credentials';\n    }\n  },\n\n  /**\n   * Refreshes credentials using {AWS.STS.assumeRole} or\n   * {AWS.STS.getSessionToken}, depending on whether an IAM role ARN was passed\n   * to the credentials {constructor}.\n   *\n   * @callback callback function(err)\n   *   Called when the STS service responds (or fails). When\n   *   this callback is called with no error, it means that the credentials\n   *   information has been loaded into the object (as the `accessKeyId`,\n   *   `secretAccessKey`, and `sessionToken` properties).\n   *   @param err [Error] if an error occurred, this value will be filled\n   * @see get\n   */\n  refresh: function refresh (callback) {\n    this.coalesceRefresh(callback || AWS.util.fn.callback);\n  },\n\n  /**\n   * @api private\n   */\n  load: function load (callback) {\n    var self = this;\n    self.createClients();\n    self.masterCredentials.get(function () {\n      self.service.config.credentials = self.masterCredentials;\n      var operation = self.params.RoleArn ?\n        self.service.assumeRole : self.service.getSessionToken;\n      operation.call(self.service, function (err, data) {\n        if (!err) {\n          self.service.credentialsFrom(data, self);\n        }\n        callback(err);\n      });\n    });\n  },\n\n  /**\n   * @api private\n   */\n  loadMasterCredentials: function loadMasterCredentials (masterCredentials) {\n    this.masterCredentials = masterCredentials || AWS.config.credentials;\n    while (this.masterCredentials.masterCredentials) {\n      this.masterCredentials = this.masterCredentials.masterCredentials;\n    }\n\n    if (typeof this.masterCredentials.get !== 'function') {\n      this.masterCredentials = new AWS.Credentials(this.masterCredentials);\n    }\n  },\n\n  /**\n   * @api private\n   */\n  createClients: function () {\n    this.service = this.service || new STS({params: this.params});\n  }\n\n});\n","var AWS = require('../core');\nvar STS = require('../../clients/sts');\n\n/**\n * Represents credentials retrieved from STS Web Identity Federation support.\n *\n * By default this provider gets credentials using the\n * {AWS.STS.assumeRoleWithWebIdentity} service operation. This operation\n * requires a `RoleArn` containing the ARN of the IAM trust policy for the\n * application for which credentials will be given. In addition, the\n * `WebIdentityToken` must be set to the token provided by the identity\n * provider. See {constructor} for an example on creating a credentials\n * object with proper `RoleArn` and `WebIdentityToken` values.\n *\n * ## Refreshing Credentials from Identity Service\n *\n * In addition to AWS credentials expiring after a given amount of time, the\n * login token from the identity provider will also expire. Once this token\n * expires, it will not be usable to refresh AWS credentials, and another\n * token will be needed. The SDK does not manage refreshing of the token value,\n * but this can be done through a \"refresh token\" supported by most identity\n * providers. Consult the documentation for the identity provider for refreshing\n * tokens. Once the refreshed token is acquired, you should make sure to update\n * this new token in the credentials object's {params} property. The following\n * code will update the WebIdentityToken, assuming you have retrieved an updated\n * token from the identity provider:\n *\n * ```javascript\n * AWS.config.credentials.params.WebIdentityToken = updatedToken;\n * ```\n *\n * Future calls to `credentials.refresh()` will now use the new token.\n *\n * @!attribute params\n *   @return [map] the map of params passed to\n *     {AWS.STS.assumeRoleWithWebIdentity}. To update the token, set the\n *     `params.WebIdentityToken` property.\n * @!attribute data\n *   @return [map] the raw data response from the call to\n *     {AWS.STS.assumeRoleWithWebIdentity}. Use this if you want to get\n *     access to other properties from the response.\n */\nAWS.WebIdentityCredentials = AWS.util.inherit(AWS.Credentials, {\n  /**\n   * Creates a new credentials object.\n   * @param (see AWS.STS.assumeRoleWithWebIdentity)\n   * @example Creating a new credentials object\n   *   AWS.config.credentials = new AWS.WebIdentityCredentials({\n   *     RoleArn: 'arn:aws:iam::1234567890:role/WebIdentity',\n   *     WebIdentityToken: 'ABCDEFGHIJKLMNOP', // token from identity service\n   *     RoleSessionName: 'web' // optional name, defaults to web-identity\n   *   }, {\n   *     // optionally provide configuration to apply to the underlying AWS.STS service client\n   *     // if configuration is not provided, then configuration will be pulled from AWS.config\n   *\n   *     // specify timeout options\n   *     httpOptions: {\n   *       timeout: 100\n   *     }\n   *   });\n   * @see AWS.STS.assumeRoleWithWebIdentity\n   * @see AWS.Config\n   */\n  constructor: function WebIdentityCredentials(params, clientConfig) {\n    AWS.Credentials.call(this);\n    this.expired = true;\n    this.params = params;\n    this.params.RoleSessionName = this.params.RoleSessionName || 'web-identity';\n    this.data = null;\n    this._clientConfig = AWS.util.copy(clientConfig || {});\n  },\n\n  /**\n   * Refreshes credentials using {AWS.STS.assumeRoleWithWebIdentity}\n   *\n   * @callback callback function(err)\n   *   Called when the STS service responds (or fails). When\n   *   this callback is called with no error, it means that the credentials\n   *   information has been loaded into the object (as the `accessKeyId`,\n   *   `secretAccessKey`, and `sessionToken` properties).\n   *   @param err [Error] if an error occurred, this value will be filled\n   * @see get\n   */\n  refresh: function refresh(callback) {\n    this.coalesceRefresh(callback || AWS.util.fn.callback);\n  },\n\n  /**\n   * @api private\n   */\n  load: function load(callback) {\n    var self = this;\n    self.createClients();\n    self.service.assumeRoleWithWebIdentity(function (err, data) {\n      self.data = null;\n      if (!err) {\n        self.data = data;\n        self.service.credentialsFrom(data, self);\n      }\n      callback(err);\n    });\n  },\n\n  /**\n   * @api private\n   */\n  createClients: function() {\n    if (!this.service) {\n      var stsConfig = AWS.util.merge({}, this._clientConfig);\n      stsConfig.params = this.params;\n      this.service = new STS(stsConfig);\n    }\n  }\n\n});\n","var AWS = require('./core');\nvar util = require('./util');\nvar endpointDiscoveryEnabledEnvs = ['AWS_ENABLE_ENDPOINT_DISCOVERY', 'AWS_ENDPOINT_DISCOVERY_ENABLED'];\n\n/**\n * Generate key (except resources and operation part) to index the endpoints in the cache\n * If input shape has endpointdiscoveryid trait then use\n *   accessKey + operation + resources + region + service as cache key\n * If input shape doesn't have endpointdiscoveryid trait then use\n *   accessKey + region + service as cache key\n * @return [map<String,String>] object with keys to index endpoints.\n * @api private\n */\nfunction getCacheKey(request) {\n  var service = request.service;\n  var api = service.api || {};\n  var operations = api.operations;\n  var identifiers = {};\n  if (service.config.region) {\n    identifiers.region = service.config.region;\n  }\n  if (api.serviceId) {\n    identifiers.serviceId = api.serviceId;\n  }\n  if (service.config.credentials.accessKeyId) {\n    identifiers.accessKeyId = service.config.credentials.accessKeyId;\n  }\n  return identifiers;\n}\n\n/**\n * Recursive helper for marshallCustomIdentifiers().\n * Looks for required string input members that have 'endpointdiscoveryid' trait.\n * @api private\n */\nfunction marshallCustomIdentifiersHelper(result, params, shape) {\n  if (!shape || params === undefined || params === null) return;\n  if (shape.type === 'structure' && shape.required && shape.required.length > 0) {\n    util.arrayEach(shape.required, function(name) {\n      var memberShape = shape.members[name];\n      if (memberShape.endpointDiscoveryId === true) {\n        var locationName = memberShape.isLocationName ? memberShape.name : name;\n        result[locationName] = String(params[name]);\n      } else {\n        marshallCustomIdentifiersHelper(result, params[name], memberShape);\n      }\n    });\n  }\n}\n\n/**\n * Get custom identifiers for cache key.\n * Identifies custom identifiers by checking each shape's `endpointDiscoveryId` trait.\n * @param [object] request object\n * @param [object] input shape of the given operation's api\n * @api private\n */\nfunction marshallCustomIdentifiers(request, shape) {\n  var identifiers = {};\n  marshallCustomIdentifiersHelper(identifiers, request.params, shape);\n  return identifiers;\n}\n\n/**\n * Call endpoint discovery operation when it's optional.\n * When endpoint is available in cache then use the cached endpoints. If endpoints\n * are unavailable then use regional endpoints and call endpoint discovery operation\n * asynchronously. This is turned off by default.\n * @param [object] request object\n * @api private\n */\nfunction optionalDiscoverEndpoint(request) {\n  var service = request.service;\n  var api = service.api;\n  var operationModel = api.operations ? api.operations[request.operation] : undefined;\n  var inputShape = operationModel ? operationModel.input : undefined;\n\n  var identifiers = marshallCustomIdentifiers(request, inputShape);\n  var cacheKey = getCacheKey(request);\n  if (Object.keys(identifiers).length > 0) {\n    cacheKey = util.update(cacheKey, identifiers);\n    if (operationModel) cacheKey.operation = operationModel.name;\n  }\n  var endpoints = AWS.endpointCache.get(cacheKey);\n  if (endpoints && endpoints.length === 1 && endpoints[0].Address === '') {\n    //endpoint operation is being made but response not yet received\n    //or endpoint operation just failed in 1 minute\n    return;\n  } else if (endpoints && endpoints.length > 0) {\n    //found endpoint record from cache\n    request.httpRequest.updateEndpoint(endpoints[0].Address);\n  } else {\n    //endpoint record not in cache or outdated. make discovery operation\n    var endpointRequest = service.makeRequest(api.endpointOperation, {\n      Operation: operationModel.name,\n      Identifiers: identifiers,\n    });\n    addApiVersionHeader(endpointRequest);\n    endpointRequest.removeListener('validate', AWS.EventListeners.Core.VALIDATE_PARAMETERS);\n    endpointRequest.removeListener('retry', AWS.EventListeners.Core.RETRY_CHECK);\n    //put in a placeholder for endpoints already requested, prevent\n    //too much in-flight calls\n    AWS.endpointCache.put(cacheKey, [{\n      Address: '',\n      CachePeriodInMinutes: 1\n    }]);\n    endpointRequest.send(function(err, data) {\n      if (data && data.Endpoints) {\n        AWS.endpointCache.put(cacheKey, data.Endpoints);\n      } else if (err) {\n        AWS.endpointCache.put(cacheKey, [{\n          Address: '',\n          CachePeriodInMinutes: 1 //not to make more endpoint operation in next 1 minute\n        }]);\n      }\n    });\n  }\n}\n\nvar requestQueue = {};\n\n/**\n * Call endpoint discovery operation when it's required.\n * When endpoint is available in cache then use cached ones. If endpoints are\n * unavailable then SDK should call endpoint operation then use returned new\n * endpoint for the api call. SDK will automatically attempt to do endpoint\n * discovery. This is turned off by default\n * @param [object] request object\n * @api private\n */\nfunction requiredDiscoverEndpoint(request, done) {\n  var service = request.service;\n  var api = service.api;\n  var operationModel = api.operations ? api.operations[request.operation] : undefined;\n  var inputShape = operationModel ? operationModel.input : undefined;\n\n  var identifiers = marshallCustomIdentifiers(request, inputShape);\n  var cacheKey = getCacheKey(request);\n  if (Object.keys(identifiers).length > 0) {\n    cacheKey = util.update(cacheKey, identifiers);\n    if (operationModel) cacheKey.operation = operationModel.name;\n  }\n  var cacheKeyStr = AWS.EndpointCache.getKeyString(cacheKey);\n  var endpoints = AWS.endpointCache.get(cacheKeyStr); //endpoint cache also accepts string keys\n  if (endpoints && endpoints.length === 1 && endpoints[0].Address === '') {\n    //endpoint operation is being made but response not yet received\n    //push request object to a pending queue\n    if (!requestQueue[cacheKeyStr]) requestQueue[cacheKeyStr] = [];\n    requestQueue[cacheKeyStr].push({request: request, callback: done});\n    return;\n  } else if (endpoints && endpoints.length > 0) {\n    request.httpRequest.updateEndpoint(endpoints[0].Address);\n    done();\n  } else {\n    var endpointRequest = service.makeRequest(api.endpointOperation, {\n      Operation: operationModel.name,\n      Identifiers: identifiers,\n    });\n    endpointRequest.removeListener('validate', AWS.EventListeners.Core.VALIDATE_PARAMETERS);\n    addApiVersionHeader(endpointRequest);\n\n    //put in a placeholder for endpoints already requested, prevent\n    //too much in-flight calls\n    AWS.endpointCache.put(cacheKeyStr, [{\n      Address: '',\n      CachePeriodInMinutes: 60 //long-live cache\n    }]);\n    endpointRequest.send(function(err, data) {\n      if (err) {\n        var errorParams = {\n          code: 'EndpointDiscoveryException',\n          message: 'Request cannot be fulfilled without specifying an endpoint',\n          retryable: false\n        };\n        request.response.error = util.error(err, errorParams);\n        AWS.endpointCache.remove(cacheKey);\n\n        //fail all the pending requests in batch\n        if (requestQueue[cacheKeyStr]) {\n          var pendingRequests = requestQueue[cacheKeyStr];\n          util.arrayEach(pendingRequests, function(requestContext) {\n            requestContext.request.response.error = util.error(err, errorParams);\n            requestContext.callback();\n          });\n          delete requestQueue[cacheKeyStr];\n        }\n      } else if (data) {\n        AWS.endpointCache.put(cacheKeyStr, data.Endpoints);\n        request.httpRequest.updateEndpoint(data.Endpoints[0].Address);\n\n        //update the endpoint for all the pending requests in batch\n        if (requestQueue[cacheKeyStr]) {\n          var pendingRequests = requestQueue[cacheKeyStr];\n          util.arrayEach(pendingRequests, function(requestContext) {\n            requestContext.request.httpRequest.updateEndpoint(data.Endpoints[0].Address);\n            requestContext.callback();\n          });\n          delete requestQueue[cacheKeyStr];\n        }\n      }\n      done();\n    });\n  }\n}\n\n/**\n * add api version header to endpoint operation\n * @api private\n */\nfunction addApiVersionHeader(endpointRequest) {\n  var api = endpointRequest.service.api;\n  var apiVersion = api.apiVersion;\n  if (apiVersion && !endpointRequest.httpRequest.headers['x-amz-api-version']) {\n    endpointRequest.httpRequest.headers['x-amz-api-version'] = apiVersion;\n  }\n}\n\n/**\n * If api call gets invalid endpoint exception, SDK should attempt to remove the invalid\n * endpoint from cache.\n * @api private\n */\nfunction invalidateCachedEndpoints(response) {\n  var error = response.error;\n  var httpResponse = response.httpResponse;\n  if (error &&\n    (error.code === 'InvalidEndpointException' || httpResponse.statusCode === 421)\n  ) {\n    var request = response.request;\n    var operations = request.service.api.operations || {};\n    var inputShape = operations[request.operation] ? operations[request.operation].input : undefined;\n    var identifiers = marshallCustomIdentifiers(request, inputShape);\n    var cacheKey = getCacheKey(request);\n    if (Object.keys(identifiers).length > 0) {\n      cacheKey = util.update(cacheKey, identifiers);\n      if (operations[request.operation]) cacheKey.operation = operations[request.operation].name;\n    }\n    AWS.endpointCache.remove(cacheKey);\n  }\n}\n\n/**\n * If endpoint is explicitly configured, SDK should not do endpoint discovery in anytime.\n * @param [object] client Service client object.\n * @api private\n */\nfunction hasCustomEndpoint(client) {\n  //if set endpoint is set for specific client, enable endpoint discovery will raise an error.\n  if (client._originalConfig && client._originalConfig.endpoint && client._originalConfig.endpointDiscoveryEnabled === true) {\n    throw util.error(new Error(), {\n      code: 'ConfigurationException',\n      message: 'Custom endpoint is supplied; endpointDiscoveryEnabled must not be true.'\n    });\n  };\n  var svcConfig = AWS.config[client.serviceIdentifier] || {};\n  return Boolean(AWS.config.endpoint || svcConfig.endpoint || (client._originalConfig && client._originalConfig.endpoint));\n}\n\n/**\n * @api private\n */\nfunction isFalsy(value) {\n  return ['false', '0'].indexOf(value) >= 0;\n}\n\n/**\n * If endpoint discovery should perform for this request when endpoint discovery is optional.\n * SDK performs config resolution in order like below:\n * 1. If turned on client configuration(default to off) then turn on endpoint discovery.\n * 2. If turned on in env AWS_ENABLE_ENDPOINT_DISCOVERY then turn on endpoint discovery.\n * 3. If turned on in shared ini config file with key 'endpoint_discovery_enabled', then\n *   turn on endpoint discovery.\n * @param [object] request request object.\n * @api private\n */\nfunction isEndpointDiscoveryApplicable(request) {\n  var service = request.service || {};\n  if (service.config.endpointDiscoveryEnabled === true) return true;\n\n  //shared ini file is only available in Node\n  //not to check env in browser\n  if (util.isBrowser()) return false;\n\n  for (var i = 0; i < endpointDiscoveryEnabledEnvs.length; i++) {\n    var env = endpointDiscoveryEnabledEnvs[i];\n    if (Object.prototype.hasOwnProperty.call(process.env, env)) {\n      if (process.env[env] === '' || process.env[env] === undefined) {\n        throw util.error(new Error(), {\n          code: 'ConfigurationException',\n          message: 'environmental variable ' + env + ' cannot be set to nothing'\n        });\n      }\n      if (!isFalsy(process.env[env])) return true;\n    }\n  }\n\n  var configFile = {};\n  try {\n    configFile = AWS.util.iniLoader ? AWS.util.iniLoader.loadFrom({\n      isConfig: true,\n      filename: process.env[AWS.util.sharedConfigFileEnv]\n    }) : {};\n  } catch (e) {}\n  var sharedFileConfig = configFile[\n    process.env.AWS_PROFILE || AWS.util.defaultProfile\n  ] || {};\n  if (Object.prototype.hasOwnProperty.call(sharedFileConfig, 'endpoint_discovery_enabled')) {\n    if (sharedFileConfig.endpoint_discovery_enabled === undefined) {\n      throw util.error(new Error(), {\n        code: 'ConfigurationException',\n        message: 'config file entry \\'endpoint_discovery_enabled\\' cannot be set to nothing'\n      });\n    }\n    if (!isFalsy(sharedFileConfig.endpoint_discovery_enabled)) return true;\n  }\n  return false;\n}\n\n/**\n * attach endpoint discovery logic to request object\n * @param [object] request\n * @api private\n */\nfunction discoverEndpoint(request, done) {\n  var service = request.service || {};\n  if (hasCustomEndpoint(service) || request.isPresigned()) return done();\n\n  if (!isEndpointDiscoveryApplicable(request)) return done();\n\n  request.httpRequest.appendToUserAgent('endpoint-discovery');\n\n  var operations = service.api.operations || {};\n  var operationModel = operations[request.operation];\n  var isEndpointDiscoveryRequired = operationModel ? operationModel.endpointDiscoveryRequired : 'NULL';\n  switch (isEndpointDiscoveryRequired) {\n    case 'OPTIONAL':\n      optionalDiscoverEndpoint(request);\n      request.addNamedListener('INVALIDATE_CACHED_ENDPOINTS', 'extractError', invalidateCachedEndpoints);\n      done();\n      break;\n    case 'REQUIRED':\n      request.addNamedListener('INVALIDATE_CACHED_ENDPOINTS', 'extractError', invalidateCachedEndpoints);\n      requiredDiscoverEndpoint(request, done);\n      break;\n    case 'NULL':\n    default:\n      done();\n      break;\n  }\n}\n\nmodule.exports = {\n  discoverEndpoint: discoverEndpoint,\n  requiredDiscoverEndpoint: requiredDiscoverEndpoint,\n  optionalDiscoverEndpoint: optionalDiscoverEndpoint,\n  marshallCustomIdentifiers: marshallCustomIdentifiers,\n  getCacheKey: getCacheKey,\n  invalidateCachedEndpoint: invalidateCachedEndpoints,\n};\n","var AWS = require('../core');\nvar util = AWS.util;\nvar typeOf = require('./types').typeOf;\nvar DynamoDBSet = require('./set');\nvar NumberValue = require('./numberValue');\n\nAWS.DynamoDB.Converter = {\n  /**\n   * Convert a JavaScript value to its equivalent DynamoDB AttributeValue type\n   *\n   * @param data [any] The data to convert to a DynamoDB AttributeValue\n   * @param options [map]\n   * @option options convertEmptyValues [Boolean] Whether to automatically\n   *                                              convert empty strings, blobs,\n   *                                              and sets to `null`\n   * @option options wrapNumbers [Boolean]  Whether to return numbers as a\n   *                                        NumberValue object instead of\n   *                                        converting them to native JavaScript\n   *                                        numbers. This allows for the safe\n   *                                        round-trip transport of numbers of\n   *                                        arbitrary size.\n   * @return [map] An object in the Amazon DynamoDB AttributeValue format\n   *\n   * @see AWS.DynamoDB.Converter.marshall AWS.DynamoDB.Converter.marshall to\n   *    convert entire records (rather than individual attributes)\n   */\n  input: function convertInput(data, options) {\n    options = options || {};\n    var type = typeOf(data);\n    if (type === 'Object') {\n      return formatMap(data, options);\n    } else if (type === 'Array') {\n      return formatList(data, options);\n    } else if (type === 'Set') {\n      return formatSet(data, options);\n    } else if (type === 'String') {\n      if (data.length === 0 && options.convertEmptyValues) {\n        return convertInput(null);\n      }\n      return { S: data };\n    } else if (type === 'Number' || type === 'NumberValue') {\n      return { N: data.toString() };\n    } else if (type === 'Binary') {\n      if (data.length === 0 && options.convertEmptyValues) {\n        return convertInput(null);\n      }\n      return { B: data };\n    } else if (type === 'Boolean') {\n      return { BOOL: data };\n    } else if (type === 'null') {\n      return { NULL: true };\n    } else if (type !== 'undefined' && type !== 'Function') {\n      // this value has a custom constructor\n      return formatMap(data, options);\n    }\n  },\n\n  /**\n   * Convert a JavaScript object into a DynamoDB record.\n   *\n   * @param data [any] The data to convert to a DynamoDB record\n   * @param options [map]\n   * @option options convertEmptyValues [Boolean] Whether to automatically\n   *                                              convert empty strings, blobs,\n   *                                              and sets to `null`\n   * @option options wrapNumbers [Boolean]  Whether to return numbers as a\n   *                                        NumberValue object instead of\n   *                                        converting them to native JavaScript\n   *                                        numbers. This allows for the safe\n   *                                        round-trip transport of numbers of\n   *                                        arbitrary size.\n   *\n   * @return [map] An object in the DynamoDB record format.\n   *\n   * @example Convert a JavaScript object into a DynamoDB record\n   *  var marshalled = AWS.DynamoDB.Converter.marshall({\n   *    string: 'foo',\n   *    list: ['fizz', 'buzz', 'pop'],\n   *    map: {\n   *      nestedMap: {\n   *        key: 'value',\n   *      }\n   *    },\n   *    number: 123,\n   *    nullValue: null,\n   *    boolValue: true,\n   *    stringSet: new DynamoDBSet(['foo', 'bar', 'baz'])\n   *  });\n   */\n  marshall: function marshallItem(data, options) {\n    return AWS.DynamoDB.Converter.input(data, options).M;\n  },\n\n  /**\n   * Convert a DynamoDB AttributeValue object to its equivalent JavaScript type.\n   *\n   * @param data [map] An object in the Amazon DynamoDB AttributeValue format\n   * @param options [map]\n   * @option options convertEmptyValues [Boolean] Whether to automatically\n   *                                              convert empty strings, blobs,\n   *                                              and sets to `null`\n   * @option options wrapNumbers [Boolean]  Whether to return numbers as a\n   *                                        NumberValue object instead of\n   *                                        converting them to native JavaScript\n   *                                        numbers. This allows for the safe\n   *                                        round-trip transport of numbers of\n   *                                        arbitrary size.\n   *\n   * @return [Object|Array|String|Number|Boolean|null]\n   *\n   * @see AWS.DynamoDB.Converter.unmarshall AWS.DynamoDB.Converter.unmarshall to\n   *    convert entire records (rather than individual attributes)\n   */\n  output: function convertOutput(data, options) {\n    options = options || {};\n    var list, map, i;\n    for (var type in data) {\n      var values = data[type];\n      if (type === 'M') {\n        map = {};\n        for (var key in values) {\n          map[key] = convertOutput(values[key], options);\n        }\n        return map;\n      } else if (type === 'L') {\n        list = [];\n        for (i = 0; i < values.length; i++) {\n          list.push(convertOutput(values[i], options));\n        }\n        return list;\n      } else if (type === 'SS') {\n        list = [];\n        for (i = 0; i < values.length; i++) {\n          list.push(values[i] + '');\n        }\n        return new DynamoDBSet(list);\n      } else if (type === 'NS') {\n        list = [];\n        for (i = 0; i < values.length; i++) {\n          list.push(convertNumber(values[i], options.wrapNumbers));\n        }\n        return new DynamoDBSet(list);\n      } else if (type === 'BS') {\n        list = [];\n        for (i = 0; i < values.length; i++) {\n          list.push(AWS.util.buffer.toBuffer(values[i]));\n        }\n        return new DynamoDBSet(list);\n      } else if (type === 'S') {\n        return values + '';\n      } else if (type === 'N') {\n        return convertNumber(values, options.wrapNumbers);\n      } else if (type === 'B') {\n        return util.buffer.toBuffer(values);\n      } else if (type === 'BOOL') {\n        return (values === 'true' || values === 'TRUE' || values === true);\n      } else if (type === 'NULL') {\n        return null;\n      }\n    }\n  },\n\n  /**\n   * Convert a DynamoDB record into a JavaScript object.\n   *\n   * @param data [any] The DynamoDB record\n   * @param options [map]\n   * @option options convertEmptyValues [Boolean] Whether to automatically\n   *                                              convert empty strings, blobs,\n   *                                              and sets to `null`\n   * @option options wrapNumbers [Boolean]  Whether to return numbers as a\n   *                                        NumberValue object instead of\n   *                                        converting them to native JavaScript\n   *                                        numbers. This allows for the safe\n   *                                        round-trip transport of numbers of\n   *                                        arbitrary size.\n   *\n   * @return [map] An object whose properties have been converted from\n   *    DynamoDB's AttributeValue format into their corresponding native\n   *    JavaScript types.\n   *\n   * @example Convert a record received from a DynamoDB stream\n   *  var unmarshalled = AWS.DynamoDB.Converter.unmarshall({\n   *    string: {S: 'foo'},\n   *    list: {L: [{S: 'fizz'}, {S: 'buzz'}, {S: 'pop'}]},\n   *    map: {\n   *      M: {\n   *        nestedMap: {\n   *          M: {\n   *            key: {S: 'value'}\n   *          }\n   *        }\n   *      }\n   *    },\n   *    number: {N: '123'},\n   *    nullValue: {NULL: true},\n   *    boolValue: {BOOL: true}\n   *  });\n   */\n  unmarshall: function unmarshall(data, options) {\n    return AWS.DynamoDB.Converter.output({M: data}, options);\n  }\n};\n\n/**\n * @api private\n * @param data [Array]\n * @param options [map]\n */\nfunction formatList(data, options) {\n  var list = {L: []};\n  for (var i = 0; i < data.length; i++) {\n    list['L'].push(AWS.DynamoDB.Converter.input(data[i], options));\n  }\n  return list;\n}\n\n/**\n * @api private\n * @param value [String]\n * @param wrapNumbers [Boolean]\n */\nfunction convertNumber(value, wrapNumbers) {\n  return wrapNumbers ? new NumberValue(value) : Number(value);\n}\n\n/**\n * @api private\n * @param data [map]\n * @param options [map]\n */\nfunction formatMap(data, options) {\n  var map = {M: {}};\n  for (var key in data) {\n    var formatted = AWS.DynamoDB.Converter.input(data[key], options);\n    if (formatted !== void 0) {\n      map['M'][key] = formatted;\n    }\n  }\n  return map;\n}\n\n/**\n * @api private\n */\nfunction formatSet(data, options) {\n  options = options || {};\n  var values = data.values;\n  if (options.convertEmptyValues) {\n    values = filterEmptySetValues(data);\n    if (values.length === 0) {\n      return AWS.DynamoDB.Converter.input(null);\n    }\n  }\n\n  var map = {};\n  switch (data.type) {\n    case 'String': map['SS'] = values; break;\n    case 'Binary': map['BS'] = values; break;\n    case 'Number': map['NS'] = values.map(function (value) {\n      return value.toString();\n    });\n  }\n  return map;\n}\n\n/**\n * @api private\n */\nfunction filterEmptySetValues(set) {\n    var nonEmptyValues = [];\n    var potentiallyEmptyTypes = {\n        String: true,\n        Binary: true,\n        Number: false\n    };\n    if (potentiallyEmptyTypes[set.type]) {\n        for (var i = 0; i < set.values.length; i++) {\n            if (set.values[i].length === 0) {\n                continue;\n            }\n            nonEmptyValues.push(set.values[i]);\n        }\n\n        return nonEmptyValues;\n    }\n\n    return set.values;\n}\n\n/**\n * @api private\n */\nmodule.exports = AWS.DynamoDB.Converter;\n","var AWS = require('../core');\nvar Translator = require('./translator');\nvar DynamoDBSet = require('./set');\n\n/**\n * The document client simplifies working with items in Amazon DynamoDB\n * by abstracting away the notion of attribute values. This abstraction\n * annotates native JavaScript types supplied as input parameters, as well\n * as converts annotated response data to native JavaScript types.\n *\n * ## Marshalling Input and Unmarshalling Response Data\n *\n * The document client affords developers the use of native JavaScript types\n * instead of `AttributeValue`s to simplify the JavaScript development\n * experience with Amazon DynamoDB. JavaScript objects passed in as parameters\n * are marshalled into `AttributeValue` shapes required by Amazon DynamoDB.\n * Responses from DynamoDB are unmarshalled into plain JavaScript objects\n * by the `DocumentClient`. The `DocumentClient`, does not accept\n * `AttributeValue`s in favor of native JavaScript types.\n *\n * |                             JavaScript Type                            | DynamoDB AttributeValue |\n * |:----------------------------------------------------------------------:|-------------------------|\n * | String                                                                 | S                       |\n * | Number                                                                 | N                       |\n * | Boolean                                                                | BOOL                    |\n * | null                                                                   | NULL                    |\n * | Array                                                                  | L                       |\n * | Object                                                                 | M                       |\n * | Buffer, File, Blob, ArrayBuffer, DataView, and JavaScript typed arrays | B                       |\n *\n * ## Support for Sets\n *\n * The `DocumentClient` offers a convenient way to create sets from\n * JavaScript Arrays. The type of set is inferred from the first element\n * in the array. DynamoDB supports string, number, and binary sets. To\n * learn more about supported types see the\n * [Amazon DynamoDB Data Model Documentation](http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DataModel.html)\n * For more information see {AWS.DynamoDB.DocumentClient.createSet}\n *\n */\nAWS.DynamoDB.DocumentClient = AWS.util.inherit({\n\n  /**\n   * Creates a DynamoDB document client with a set of configuration options.\n   *\n   * @option options params [map] An optional map of parameters to bind to every\n   *   request sent by this service object.\n   * @option options service [AWS.DynamoDB] An optional pre-configured instance\n   *  of the AWS.DynamoDB service object to use for requests. The object may\n   *  bound parameters used by the document client.\n   * @option options convertEmptyValues [Boolean] set to true if you would like\n   *  the document client to convert empty values (0-length strings, binary\n   *  buffers, and sets) to be converted to NULL types when persisting to\n   *  DynamoDB.\n   * @see AWS.DynamoDB.constructor\n   *\n   */\n  constructor: function DocumentClient(options) {\n    var self = this;\n    self.options = options || {};\n    self.configure(self.options);\n  },\n\n  /**\n   * @api private\n   */\n  configure: function configure(options) {\n    var self = this;\n    self.service = options.service;\n    self.bindServiceObject(options);\n    self.attrValue = options.attrValue =\n      self.service.api.operations.putItem.input.members.Item.value.shape;\n  },\n\n  /**\n   * @api private\n   */\n  bindServiceObject: function bindServiceObject(options) {\n    var self = this;\n    options = options || {};\n\n    if (!self.service) {\n      self.service = new AWS.DynamoDB(options);\n    } else {\n      var config = AWS.util.copy(self.service.config);\n      self.service = new self.service.constructor.__super__(config);\n      self.service.config.params =\n        AWS.util.merge(self.service.config.params || {}, options.params);\n    }\n  },\n\n  /**\n   * @api private\n   */\n  makeServiceRequest: function(operation, params, callback) {\n    var self = this;\n    var request = self.service[operation](params);\n    self.setupRequest(request);\n    self.setupResponse(request);\n    if (typeof callback === 'function') {\n      request.send(callback);\n    }\n    return request;\n  },\n\n  /**\n   * @api private\n   */\n  serviceClientOperationsMap: {\n    batchGet: 'batchGetItem',\n    batchWrite: 'batchWriteItem',\n    delete: 'deleteItem',\n    get: 'getItem',\n    put: 'putItem',\n    query: 'query',\n    scan: 'scan',\n    update: 'updateItem',\n    transactGet: 'transactGetItems',\n    transactWrite: 'transactWriteItems'\n  },\n\n  /**\n   * Returns the attributes of one or more items from one or more tables\n   * by delegating to `AWS.DynamoDB.batchGetItem()`.\n   *\n   * Supply the same parameters as {AWS.DynamoDB.batchGetItem} with\n   * `AttributeValue`s substituted by native JavaScript types.\n   *\n   * @see AWS.DynamoDB.batchGetItem\n   * @example Get items from multiple tables\n   *  var params = {\n   *    RequestItems: {\n   *      'Table-1': {\n   *        Keys: [\n   *          {\n   *             HashKey: 'haskey',\n   *             NumberRangeKey: 1\n   *          }\n   *        ]\n   *      },\n   *      'Table-2': {\n   *        Keys: [\n   *          { foo: 'bar' },\n   *        ]\n   *      }\n   *    }\n   *  };\n   *\n   *  var documentClient = new AWS.DynamoDB.DocumentClient();\n   *\n   *  documentClient.batchGet(params, function(err, data) {\n   *    if (err) console.log(err);\n   *    else console.log(data);\n   *  });\n   *\n   */\n  batchGet: function(params, callback) {\n    var operation = this.serviceClientOperationsMap['batchGet'];\n    return this.makeServiceRequest(operation, params, callback);\n  },\n\n  /**\n   * Puts or deletes multiple items in one or more tables by delegating\n   * to `AWS.DynamoDB.batchWriteItem()`.\n   *\n   * Supply the same parameters as {AWS.DynamoDB.batchWriteItem} with\n   * `AttributeValue`s substituted by native JavaScript types.\n   *\n   * @see AWS.DynamoDB.batchWriteItem\n   * @example Write to and delete from a table\n   *  var params = {\n   *    RequestItems: {\n   *      'Table-1': [\n   *        {\n   *          DeleteRequest: {\n   *            Key: { HashKey: 'someKey' }\n   *          }\n   *        },\n   *        {\n   *          PutRequest: {\n   *            Item: {\n   *              HashKey: 'anotherKey',\n   *              NumAttribute: 1,\n   *              BoolAttribute: true,\n   *              ListAttribute: [1, 'two', false],\n   *              MapAttribute: { foo: 'bar' }\n   *            }\n   *          }\n   *        }\n   *      ]\n   *    }\n   *  };\n   *\n   *  var documentClient = new AWS.DynamoDB.DocumentClient();\n   *\n   *  documentClient.batchWrite(params, function(err, data) {\n   *    if (err) console.log(err);\n   *    else console.log(data);\n   *  });\n   *\n   */\n  batchWrite: function(params, callback) {\n    var operation = this.serviceClientOperationsMap['batchWrite'];\n    return this.makeServiceRequest(operation, params, callback);\n  },\n\n  /**\n   * Deletes a single item in a table by primary key by delegating to\n   * `AWS.DynamoDB.deleteItem()`\n   *\n   * Supply the same parameters as {AWS.DynamoDB.deleteItem} with\n   * `AttributeValue`s substituted by native JavaScript types.\n   *\n   * @see AWS.DynamoDB.deleteItem\n   * @example Delete an item from a table\n   *  var params = {\n   *    TableName : 'Table',\n   *    Key: {\n   *      HashKey: 'hashkey',\n   *      NumberRangeKey: 1\n   *    }\n   *  };\n   *\n   *  var documentClient = new AWS.DynamoDB.DocumentClient();\n   *\n   *  documentClient.delete(params, function(err, data) {\n   *    if (err) console.log(err);\n   *    else console.log(data);\n   *  });\n   *\n   */\n  delete: function(params, callback) {\n    var operation = this.serviceClientOperationsMap['delete'];\n    return this.makeServiceRequest(operation, params, callback);\n  },\n\n  /**\n   * Returns a set of attributes for the item with the given primary key\n   * by delegating to `AWS.DynamoDB.getItem()`.\n   *\n   * Supply the same parameters as {AWS.DynamoDB.getItem} with\n   * `AttributeValue`s substituted by native JavaScript types.\n   *\n   * @see AWS.DynamoDB.getItem\n   * @example Get an item from a table\n   *  var params = {\n   *    TableName : 'Table',\n   *    Key: {\n   *      HashKey: 'hashkey'\n   *    }\n   *  };\n   *\n   *  var documentClient = new AWS.DynamoDB.DocumentClient();\n   *\n   *  documentClient.get(params, function(err, data) {\n   *    if (err) console.log(err);\n   *    else console.log(data);\n   *  });\n   *\n   */\n  get: function(params, callback) {\n    var operation = this.serviceClientOperationsMap['get'];\n    return this.makeServiceRequest(operation, params, callback);\n  },\n\n  /**\n   * Creates a new item, or replaces an old item with a new item by\n   * delegating to `AWS.DynamoDB.putItem()`.\n   *\n   * Supply the same parameters as {AWS.DynamoDB.putItem} with\n   * `AttributeValue`s substituted by native JavaScript types.\n   *\n   * @see AWS.DynamoDB.putItem\n   * @example Create a new item in a table\n   *  var params = {\n   *    TableName : 'Table',\n   *    Item: {\n   *       HashKey: 'haskey',\n   *       NumAttribute: 1,\n   *       BoolAttribute: true,\n   *       ListAttribute: [1, 'two', false],\n   *       MapAttribute: { foo: 'bar'},\n   *       NullAttribute: null\n   *    }\n   *  };\n   *\n   *  var documentClient = new AWS.DynamoDB.DocumentClient();\n   *\n   *  documentClient.put(params, function(err, data) {\n   *    if (err) console.log(err);\n   *    else console.log(data);\n   *  });\n   *\n   */\n  put: function(params, callback) {\n    var operation = this.serviceClientOperationsMap['put'];\n    return this.makeServiceRequest(operation, params, callback);\n  },\n\n  /**\n   * Edits an existing item's attributes, or adds a new item to the table if\n   * it does not already exist by delegating to `AWS.DynamoDB.updateItem()`.\n   *\n   * Supply the same parameters as {AWS.DynamoDB.updateItem} with\n   * `AttributeValue`s substituted by native JavaScript types.\n   *\n   * @see AWS.DynamoDB.updateItem\n   * @example Update an item with expressions\n   *  var params = {\n   *    TableName: 'Table',\n   *    Key: { HashKey : 'hashkey' },\n   *    UpdateExpression: 'set #a = :x + :y',\n   *    ConditionExpression: '#a < :MAX',\n   *    ExpressionAttributeNames: {'#a' : 'Sum'},\n   *    ExpressionAttributeValues: {\n   *      ':x' : 20,\n   *      ':y' : 45,\n   *      ':MAX' : 100,\n   *    }\n   *  };\n   *\n   *  var documentClient = new AWS.DynamoDB.DocumentClient();\n   *\n   *  documentClient.update(params, function(err, data) {\n   *     if (err) console.log(err);\n   *     else console.log(data);\n   *  });\n   *\n   */\n  update: function(params, callback) {\n    var operation = this.serviceClientOperationsMap['update'];\n    return this.makeServiceRequest(operation, params, callback);\n  },\n\n  /**\n   * Returns one or more items and item attributes by accessing every item\n   * in a table or a secondary index.\n   *\n   * Supply the same parameters as {AWS.DynamoDB.scan} with\n   * `AttributeValue`s substituted by native JavaScript types.\n   *\n   * @see AWS.DynamoDB.scan\n   * @example Scan the table with a filter expression\n   *  var params = {\n   *    TableName : 'Table',\n   *    FilterExpression : 'Year = :this_year',\n   *    ExpressionAttributeValues : {':this_year' : 2015}\n   *  };\n   *\n   *  var documentClient = new AWS.DynamoDB.DocumentClient();\n   *\n   *  documentClient.scan(params, function(err, data) {\n   *     if (err) console.log(err);\n   *     else console.log(data);\n   *  });\n   *\n   */\n  scan: function(params, callback) {\n    var operation = this.serviceClientOperationsMap['scan'];\n    return this.makeServiceRequest(operation, params, callback);\n  },\n\n   /**\n    * Directly access items from a table by primary key or a secondary index.\n    *\n    * Supply the same parameters as {AWS.DynamoDB.query} with\n    * `AttributeValue`s substituted by native JavaScript types.\n    *\n    * @see AWS.DynamoDB.query\n    * @example Query an index\n    *  var params = {\n    *    TableName: 'Table',\n    *    IndexName: 'Index',\n    *    KeyConditionExpression: 'HashKey = :hkey and RangeKey > :rkey',\n    *    ExpressionAttributeValues: {\n    *      ':hkey': 'key',\n    *      ':rkey': 2015\n    *    }\n    *  };\n    *\n    *  var documentClient = new AWS.DynamoDB.DocumentClient();\n    *\n    *  documentClient.query(params, function(err, data) {\n    *     if (err) console.log(err);\n    *     else console.log(data);\n    *  });\n    *\n    */\n  query: function(params, callback) {\n    var operation = this.serviceClientOperationsMap['query'];\n    return this.makeServiceRequest(operation, params, callback);\n  },\n\n  /**\n   * Synchronous write operation that groups up to 10 action requests\n   *\n   * Supply the same parameters as {AWS.DynamoDB.transactWriteItems} with\n   * `AttributeValue`s substituted by native JavaScript types.\n   *\n   * @see AWS.DynamoDB.transactWriteItems\n   * @example Get items from multiple tables\n   *  var params = {\n   *    TransactItems: [{\n   *      Put: {\n   *        TableName : 'Table0',\n   *        Item: {\n   *          HashKey: 'haskey',\n   *          NumAttribute: 1,\n   *          BoolAttribute: true,\n   *          ListAttribute: [1, 'two', false],\n   *          MapAttribute: { foo: 'bar'},\n   *          NullAttribute: null\n   *        }\n   *      }\n   *    }, {\n   *      Update: {\n   *        TableName: 'Table1',\n   *        Key: { HashKey : 'hashkey' },\n   *        UpdateExpression: 'set #a = :x + :y',\n   *        ConditionExpression: '#a < :MAX',\n   *        ExpressionAttributeNames: {'#a' : 'Sum'},\n   *        ExpressionAttributeValues: {\n   *          ':x' : 20,\n   *          ':y' : 45,\n   *          ':MAX' : 100,\n   *        }\n   *      }\n   *    }]\n   *  };\n   *\n   *  documentClient.transactWrite(params, function(err, data) {\n   *    if (err) console.log(err);\n   *    else console.log(data);\n   *  });\n   */\n  transactWrite: function(params, callback) {\n    var operation = this.serviceClientOperationsMap['transactWrite'];\n    return this.makeServiceRequest(operation, params, callback);\n  },\n\n  /**\n   * Atomically retrieves multiple items from one or more tables (but not from indexes)\n   * in a single account and region.\n   *\n   * Supply the same parameters as {AWS.DynamoDB.transactGetItems} with\n   * `AttributeValue`s substituted by native JavaScript types.\n   *\n   * @see AWS.DynamoDB.transactGetItems\n   * @example Get items from multiple tables\n   *  var params = {\n   *    TransactItems: [{\n   *      Get: {\n   *        TableName : 'Table0',\n   *        Key: {\n   *          HashKey: 'hashkey0'\n   *        }\n   *      }\n   *    }, {\n   *      Get: {\n   *        TableName : 'Table1',\n   *        Key: {\n   *          HashKey: 'hashkey1'\n   *        }\n   *      }\n   *    }]\n   *  };\n   *\n   *  documentClient.transactGet(params, function(err, data) {\n   *    if (err) console.log(err);\n   *    else console.log(data);\n   *  });\n   */\n  transactGet: function(params, callback) {\n    var operation = this.serviceClientOperationsMap['transactGet'];\n    return this.makeServiceRequest(operation, params, callback);\n  },\n\n  /**\n   * Creates a set of elements inferring the type of set from\n   * the type of the first element. Amazon DynamoDB currently supports\n   * the number sets, string sets, and binary sets. For more information\n   * about DynamoDB data types see the documentation on the\n   * [Amazon DynamoDB Data Model](http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DataModel.html#DataModel.DataTypes).\n   *\n   * @param list [Array] Collection to represent your DynamoDB Set\n   * @param options [map]\n   *  * **validate** [Boolean] set to true if you want to validate the type\n   *    of each element in the set. Defaults to `false`.\n   * @example Creating a number set\n   *  var documentClient = new AWS.DynamoDB.DocumentClient();\n   *\n   *  var params = {\n   *    Item: {\n   *      hashkey: 'hashkey'\n   *      numbers: documentClient.createSet([1, 2, 3]);\n   *    }\n   *  };\n   *\n   *  documentClient.put(params, function(err, data) {\n   *    if (err) console.log(err);\n   *    else console.log(data);\n   *  });\n   *\n   */\n  createSet: function(list, options) {\n    options = options || {};\n    return new DynamoDBSet(list, options);\n  },\n\n  /**\n   * @api private\n   */\n  getTranslator: function() {\n    return new Translator(this.options);\n  },\n\n  /**\n   * @api private\n   */\n  setupRequest: function setupRequest(request) {\n    var self = this;\n    var translator = self.getTranslator();\n    var operation = request.operation;\n    var inputShape = request.service.api.operations[operation].input;\n    request._events.validate.unshift(function(req) {\n      req.rawParams = AWS.util.copy(req.params);\n      req.params = translator.translateInput(req.rawParams, inputShape);\n    });\n  },\n\n  /**\n   * @api private\n   */\n  setupResponse: function setupResponse(request) {\n    var self = this;\n    var translator = self.getTranslator();\n    var outputShape = self.service.api.operations[request.operation].output;\n    request.on('extractData', function(response) {\n      response.data = translator.translateOutput(response.data, outputShape);\n    });\n\n    var response = request.response;\n    response.nextPage = function(cb) {\n      var resp = this;\n      var req = resp.request;\n      var config;\n      var service = req.service;\n      var operation = req.operation;\n      try {\n        config = service.paginationConfig(operation, true);\n      } catch (e) { resp.error = e; }\n\n      if (!resp.hasNextPage()) {\n        if (cb) cb(resp.error, null);\n        else if (resp.error) throw resp.error;\n        return null;\n      }\n\n      var params = AWS.util.copy(req.rawParams);\n      if (!resp.nextPageTokens) {\n        return cb ? cb(null, null) : null;\n      } else {\n        var inputTokens = config.inputToken;\n        if (typeof inputTokens === 'string') inputTokens = [inputTokens];\n        for (var i = 0; i < inputTokens.length; i++) {\n          params[inputTokens[i]] = resp.nextPageTokens[i];\n        }\n        return self[operation](params, cb);\n      }\n    };\n  }\n\n});\n\n/**\n * @api private\n */\nmodule.exports = AWS.DynamoDB.DocumentClient;\n","var util = require('../core').util;\n\n/**\n * An object recognizable as a numeric value that stores the underlying number\n * as a string.\n *\n * Intended to be a deserialization target for the DynamoDB Document Client when\n * the `wrapNumbers` flag is set. This allows for numeric values that lose\n * precision when converted to JavaScript's `number` type.\n */\nvar DynamoDBNumberValue = util.inherit({\n  constructor: function NumberValue(value) {\n    this.wrapperName = 'NumberValue';\n    this.value = value.toString();\n  },\n\n  /**\n   * Render the underlying value as a number when converting to JSON.\n   */\n  toJSON: function () {\n    return this.toNumber();\n  },\n\n  /**\n   * Convert the underlying value to a JavaScript number.\n   */\n  toNumber: function () {\n    return Number(this.value);\n  },\n\n  /**\n   * Return a string representing the unaltered value provided to the\n   * constructor.\n   */\n  toString: function () {\n    return this.value;\n  }\n});\n\n/**\n * @api private\n */\nmodule.exports = DynamoDBNumberValue;\n","var util = require('../core').util;\nvar typeOf = require('./types').typeOf;\n\n/**\n * @api private\n */\nvar memberTypeToSetType = {\n  'String': 'String',\n  'Number': 'Number',\n  'NumberValue': 'Number',\n  'Binary': 'Binary'\n};\n\n/**\n * @api private\n */\nvar DynamoDBSet = util.inherit({\n\n  constructor: function Set(list, options) {\n    options = options || {};\n    this.wrapperName = 'Set';\n    this.initialize(list, options.validate);\n  },\n\n  initialize: function(list, validate) {\n    var self = this;\n    self.values = [].concat(list);\n    self.detectType();\n    if (validate) {\n      self.validate();\n    }\n  },\n\n  detectType: function() {\n    this.type = memberTypeToSetType[typeOf(this.values[0])];\n    if (!this.type) {\n      throw util.error(new Error(), {\n        code: 'InvalidSetType',\n        message: 'Sets can contain string, number, or binary values'\n      });\n    }\n  },\n\n  validate: function() {\n    var self = this;\n    var length = self.values.length;\n    var values = self.values;\n    for (var i = 0; i < length; i++) {\n      if (memberTypeToSetType[typeOf(values[i])] !== self.type) {\n        throw util.error(new Error(), {\n          code: 'InvalidType',\n          message: self.type + ' Set contains ' + typeOf(values[i]) + ' value'\n        });\n      }\n    }\n  },\n\n  /**\n   * Render the underlying values only when converting to JSON.\n   */\n  toJSON: function() {\n    var self = this;\n    return self.values;\n  }\n\n});\n\n/**\n * @api private\n */\nmodule.exports = DynamoDBSet;\n","var util = require('../core').util;\nvar convert = require('./converter');\n\nvar Translator = function(options) {\n  options = options || {};\n  this.attrValue = options.attrValue;\n  this.convertEmptyValues = Boolean(options.convertEmptyValues);\n  this.wrapNumbers = Boolean(options.wrapNumbers);\n};\n\nTranslator.prototype.translateInput = function(value, shape) {\n  this.mode = 'input';\n  return this.translate(value, shape);\n};\n\nTranslator.prototype.translateOutput = function(value, shape) {\n  this.mode = 'output';\n  return this.translate(value, shape);\n};\n\nTranslator.prototype.translate = function(value, shape) {\n  var self = this;\n  if (!shape || value === undefined) return undefined;\n\n  if (shape.shape === self.attrValue) {\n    return convert[self.mode](value, {\n      convertEmptyValues: self.convertEmptyValues,\n      wrapNumbers: self.wrapNumbers,\n    });\n  }\n  switch (shape.type) {\n    case 'structure': return self.translateStructure(value, shape);\n    case 'map': return self.translateMap(value, shape);\n    case 'list': return self.translateList(value, shape);\n    default: return self.translateScalar(value, shape);\n  }\n};\n\nTranslator.prototype.translateStructure = function(structure, shape) {\n  var self = this;\n  if (structure == null) return undefined;\n\n  var struct = {};\n  util.each(structure, function(name, value) {\n    var memberShape = shape.members[name];\n    if (memberShape) {\n      var result = self.translate(value, memberShape);\n      if (result !== undefined) struct[name] = result;\n    }\n  });\n  return struct;\n};\n\nTranslator.prototype.translateList = function(list, shape) {\n  var self = this;\n  if (list == null) return undefined;\n\n  var out = [];\n  util.arrayEach(list, function(value) {\n    var result = self.translate(value, shape.member);\n    if (result === undefined) out.push(null);\n    else out.push(result);\n  });\n  return out;\n};\n\nTranslator.prototype.translateMap = function(map, shape) {\n  var self = this;\n  if (map == null) return undefined;\n\n  var out = {};\n  util.each(map, function(key, value) {\n    var result = self.translate(value, shape.value);\n    if (result === undefined) out[key] = null;\n    else out[key] = result;\n  });\n  return out;\n};\n\nTranslator.prototype.translateScalar = function(value, shape) {\n  return shape.toType(value);\n};\n\n/**\n * @api private\n */\nmodule.exports = Translator;\n","var util = require('../core').util;\n\nfunction typeOf(data) {\n  if (data === null && typeof data === 'object') {\n    return 'null';\n  } else if (data !== undefined && isBinary(data)) {\n    return 'Binary';\n  } else if (data !== undefined && data.constructor) {\n    return data.wrapperName || util.typeName(data.constructor);\n  } else if (data !== undefined && typeof data === 'object') {\n    // this object is the result of Object.create(null), hence the absence of a\n    // defined constructor\n    return 'Object';\n  } else {\n    return 'undefined';\n  }\n}\n\nfunction isBinary(data) {\n  var types = [\n    'Buffer', 'File', 'Blob', 'ArrayBuffer', 'DataView',\n    'Int8Array', 'Uint8Array', 'Uint8ClampedArray',\n    'Int16Array', 'Uint16Array', 'Int32Array', 'Uint32Array',\n    'Float32Array', 'Float64Array'\n  ];\n  if (util.isNode()) {\n    var Stream = util.stream.Stream;\n    if (util.Buffer.isBuffer(data) || data instanceof Stream) {\n      return true;\n    }\n  }\n\n  for (var i = 0; i < types.length; i++) {\n    if (data !== undefined && data.constructor) {\n      if (util.isType(data, types[i])) return true;\n      if (util.typeName(data.constructor) === types[i]) return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n  typeOf: typeOf,\n  isBinary: isBinary\n};\n","var eventMessageChunker = require('../event-stream/event-message-chunker').eventMessageChunker;\nvar parseEvent = require('./parse-event').parseEvent;\n\nfunction createEventStream(body, parser, model) {\n    var eventMessages = eventMessageChunker(body);\n\n    var events = [];\n\n    for (var i = 0; i < eventMessages.length; i++) {\n        events.push(parseEvent(parser, eventMessages[i], model));\n    }\n\n    return events;\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n    createEventStream: createEventStream\n};\n","var util = require('../core').util;\nvar Transform = require('stream').Transform;\nvar allocBuffer = util.buffer.alloc;\n\n/** @type {Transform} */\nfunction EventMessageChunkerStream(options) {\n    Transform.call(this, options);\n\n    this.currentMessageTotalLength = 0;\n    this.currentMessagePendingLength = 0;\n    /** @type {Buffer} */\n    this.currentMessage = null;\n\n    /** @type {Buffer} */\n    this.messageLengthBuffer = null;\n}\n\nEventMessageChunkerStream.prototype = Object.create(Transform.prototype);\n\n/**\n *\n * @param {Buffer} chunk\n * @param {string} encoding\n * @param {*} callback\n */\nEventMessageChunkerStream.prototype._transform = function(chunk, encoding, callback) {\n    var chunkLength = chunk.length;\n    var currentOffset = 0;\n\n    while (currentOffset < chunkLength) {\n        // create new message if necessary\n        if (!this.currentMessage) {\n            // working on a new message, determine total length\n            var bytesRemaining = chunkLength - currentOffset;\n            // prevent edge case where total length spans 2 chunks\n            if (!this.messageLengthBuffer) {\n                this.messageLengthBuffer = allocBuffer(4);\n            }\n            var numBytesForTotal = Math.min(\n                4 - this.currentMessagePendingLength, // remaining bytes to fill the messageLengthBuffer\n                bytesRemaining // bytes left in chunk\n            );\n\n            chunk.copy(\n                this.messageLengthBuffer,\n                this.currentMessagePendingLength,\n                currentOffset,\n                currentOffset + numBytesForTotal\n            );\n\n            this.currentMessagePendingLength += numBytesForTotal;\n            currentOffset += numBytesForTotal;\n\n            if (this.currentMessagePendingLength < 4) {\n                // not enough information to create the current message\n                break;\n            }\n            this.allocateMessage(this.messageLengthBuffer.readUInt32BE(0));\n            this.messageLengthBuffer = null;\n        }\n\n        // write data into current message\n        var numBytesToWrite = Math.min(\n            this.currentMessageTotalLength - this.currentMessagePendingLength, // number of bytes left to complete message\n            chunkLength - currentOffset // number of bytes left in the original chunk\n        );\n        chunk.copy(\n            this.currentMessage, // target buffer\n            this.currentMessagePendingLength, // target offset\n            currentOffset, // chunk offset\n            currentOffset + numBytesToWrite // chunk end to write\n        );\n        this.currentMessagePendingLength += numBytesToWrite;\n        currentOffset += numBytesToWrite;\n\n        // check if a message is ready to be pushed\n        if (this.currentMessageTotalLength && this.currentMessageTotalLength === this.currentMessagePendingLength) {\n            // push out the message\n            this.push(this.currentMessage);\n            // cleanup\n            this.currentMessage = null;\n            this.currentMessageTotalLength = 0;\n            this.currentMessagePendingLength = 0;\n        }\n    }\n\n    callback();\n};\n\nEventMessageChunkerStream.prototype._flush = function(callback) {\n    if (this.currentMessageTotalLength) {\n        if (this.currentMessageTotalLength === this.currentMessagePendingLength) {\n            callback(null, this.currentMessage);\n        } else {\n            callback(new Error('Truncated event message received.'));\n        }\n    } else {\n        callback();\n    }\n};\n\n/**\n * @param {number} size Size of the message to be allocated.\n * @api private\n */\nEventMessageChunkerStream.prototype.allocateMessage = function(size) {\n    if (typeof size !== 'number') {\n        throw new Error('Attempted to allocate an event message where size was not a number: ' + size);\n    }\n    this.currentMessageTotalLength = size;\n    this.currentMessagePendingLength = 4;\n    this.currentMessage = allocBuffer(size);\n    this.currentMessage.writeUInt32BE(size, 0);\n};\n\n/**\n * @api private\n */\nmodule.exports = {\n    EventMessageChunkerStream: EventMessageChunkerStream\n};\n","/**\n * Takes in a buffer of event messages and splits them into individual messages.\n * @param {Buffer} buffer\n * @api private\n */\nfunction eventMessageChunker(buffer) {\n    /** @type Buffer[] */\n    var messages = [];\n    var offset = 0;\n\n    while (offset < buffer.length) {\n        var totalLength = buffer.readInt32BE(offset);\n\n        // create new buffer for individual message (shares memory with original)\n        var message = buffer.slice(offset, totalLength + offset);\n        // increment offset to it starts at the next message\n        offset += totalLength;\n\n        messages.push(message);\n    }\n\n    return messages;\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n    eventMessageChunker: eventMessageChunker\n};\n","var Transform = require('stream').Transform;\nvar parseEvent = require('./parse-event').parseEvent;\n\n/** @type {Transform} */\nfunction EventUnmarshallerStream(options) {\n    options = options || {};\n    // set output to object mode\n    options.readableObjectMode = true;\n    Transform.call(this, options);\n    this._readableState.objectMode = true;\n\n    this.parser = options.parser;\n    this.eventStreamModel = options.eventStreamModel;\n}\n\nEventUnmarshallerStream.prototype = Object.create(Transform.prototype);\n\n/**\n *\n * @param {Buffer} chunk\n * @param {string} encoding\n * @param {*} callback\n */\nEventUnmarshallerStream.prototype._transform = function(chunk, encoding, callback) {\n    try {\n        var event = parseEvent(this.parser, chunk, this.eventStreamModel);\n        this.push(event);\n        return callback();\n    } catch (err) {\n        callback(err);\n    }\n};\n\n/**\n * @api private\n */\nmodule.exports = {\n    EventUnmarshallerStream: EventUnmarshallerStream\n};\n","var util = require('../core').util;\nvar toBuffer = util.buffer.toBuffer;\n\n/**\n * A lossless representation of a signed, 64-bit integer. Instances of this\n * class may be used in arithmetic expressions as if they were numeric\n * primitives, but the binary representation will be preserved unchanged as the\n * `bytes` property of the object. The bytes should be encoded as big-endian,\n * two's complement integers.\n * @param {Buffer} bytes\n *\n * @api private\n */\nfunction Int64(bytes) {\n    if (bytes.length !== 8) {\n        throw new Error('Int64 buffers must be exactly 8 bytes');\n    }\n    if (!util.Buffer.isBuffer(bytes)) bytes = toBuffer(bytes);\n\n    this.bytes = bytes;\n}\n\n/**\n * @param {number} number\n * @returns {Int64}\n *\n * @api private\n */\nInt64.fromNumber = function(number) {\n    if (number > 9223372036854775807 || number < -9223372036854775808) {\n        throw new Error(\n            number + ' is too large (or, if negative, too small) to represent as an Int64'\n        );\n    }\n\n    var bytes = new Uint8Array(8);\n    for (\n        var i = 7, remaining = Math.abs(Math.round(number));\n        i > -1 && remaining > 0;\n        i--, remaining /= 256\n    ) {\n        bytes[i] = remaining;\n    }\n\n    if (number < 0) {\n        negate(bytes);\n    }\n\n    return new Int64(bytes);\n};\n\n/**\n * @returns {number}\n *\n * @api private\n */\nInt64.prototype.valueOf = function() {\n    var bytes = this.bytes.slice(0);\n    var negative = bytes[0] & 128;\n    if (negative) {\n        negate(bytes);\n    }\n\n    return parseInt(bytes.toString('hex'), 16) * (negative ? -1 : 1);\n};\n\nInt64.prototype.toString = function() {\n    return String(this.valueOf());\n};\n\n/**\n * @param {Buffer} bytes\n *\n * @api private\n */\nfunction negate(bytes) {\n    for (var i = 0; i < 8; i++) {\n        bytes[i] ^= 0xFF;\n    }\n    for (var i = 7; i > -1; i--) {\n        bytes[i]++;\n        if (bytes[i] !== 0) {\n            break;\n        }\n    }\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n    Int64: Int64\n};\n","var parseMessage = require('./parse-message').parseMessage;\n\n/**\n *\n * @param {*} parser\n * @param {Buffer} message\n * @param {*} shape\n * @api private\n */\nfunction parseEvent(parser, message, shape) {\n    var parsedMessage = parseMessage(message);\n\n    // check if message is an event or error\n    var messageType = parsedMessage.headers[':message-type'];\n    if (messageType) {\n        if (messageType.value === 'error') {\n            throw parseError(parsedMessage);\n        } else if (messageType.value !== 'event') {\n            // not sure how to parse non-events/non-errors, ignore for now\n            return;\n        }\n    }\n\n    // determine event type\n    var eventType = parsedMessage.headers[':event-type'];\n    // check that the event type is modeled\n    var eventModel = shape.members[eventType.value];\n    if (!eventModel) {\n        return;\n    }\n\n    var result = {};\n    // check if an event payload exists\n    var eventPayloadMemberName = eventModel.eventPayloadMemberName;\n    if (eventPayloadMemberName) {\n        var payloadShape = eventModel.members[eventPayloadMemberName];\n        // if the shape is binary, return the byte array\n        if (payloadShape.type === 'binary') {\n            result[eventPayloadMemberName] = parsedMessage.body;\n        } else {\n            result[eventPayloadMemberName] = parser.parse(parsedMessage.body.toString(), payloadShape);\n        }\n    }\n\n    // read event headers\n    var eventHeaderNames = eventModel.eventHeaderMemberNames;\n    for (var i = 0; i < eventHeaderNames.length; i++) {\n        var name = eventHeaderNames[i];\n        if (parsedMessage.headers[name]) {\n            // parse the header!\n            result[name] = eventModel.members[name].toType(parsedMessage.headers[name].value);\n        }\n    }\n\n    var output = {};\n    output[eventType.value] = result;\n    return output;\n}\n\nfunction parseError(message) {\n    var errorCode = message.headers[':error-code'];\n    var errorMessage = message.headers[':error-message'];\n    var error = new Error(errorMessage.value || errorMessage);\n    error.code = error.name = errorCode.value || errorCode;\n    return error;\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n    parseEvent: parseEvent\n};\n","var Int64 = require('./int64').Int64;\n\nvar splitMessage = require('./split-message').splitMessage;\n\nvar BOOLEAN_TAG = 'boolean';\nvar BYTE_TAG = 'byte';\nvar SHORT_TAG = 'short';\nvar INT_TAG = 'integer';\nvar LONG_TAG = 'long';\nvar BINARY_TAG = 'binary';\nvar STRING_TAG = 'string';\nvar TIMESTAMP_TAG = 'timestamp';\nvar UUID_TAG = 'uuid';\n\n/**\n * @api private\n *\n * @param {Buffer} headers\n */\nfunction parseHeaders(headers) {\n    var out = {};\n    var position = 0;\n    while (position < headers.length) {\n        var nameLength = headers.readUInt8(position++);\n        var name = headers.slice(position, position + nameLength).toString();\n        position += nameLength;\n        switch (headers.readUInt8(position++)) {\n            case 0 /* boolTrue */:\n                out[name] = {\n                    type: BOOLEAN_TAG,\n                    value: true\n                };\n                break;\n            case 1 /* boolFalse */:\n                out[name] = {\n                    type: BOOLEAN_TAG,\n                    value: false\n                };\n                break;\n            case 2 /* byte */:\n                out[name] = {\n                    type: BYTE_TAG,\n                    value: headers.readInt8(position++)\n                };\n                break;\n            case 3 /* short */:\n                out[name] = {\n                    type: SHORT_TAG,\n                    value: headers.readInt16BE(position)\n                };\n                position += 2;\n                break;\n            case 4 /* integer */:\n                out[name] = {\n                    type: INT_TAG,\n                    value: headers.readInt32BE(position)\n                };\n                position += 4;\n                break;\n            case 5 /* long */:\n                out[name] = {\n                    type: LONG_TAG,\n                    value: new Int64(headers.slice(position, position + 8))\n                };\n                position += 8;\n                break;\n            case 6 /* byteArray */:\n                var binaryLength = headers.readUInt16BE(position);\n                position += 2;\n                out[name] = {\n                    type: BINARY_TAG,\n                    value: headers.slice(position, position + binaryLength)\n                };\n                position += binaryLength;\n                break;\n            case 7 /* string */:\n                var stringLength = headers.readUInt16BE(position);\n                position += 2;\n                out[name] = {\n                    type: STRING_TAG,\n                    value: headers.slice(\n                        position,\n                        position + stringLength\n                    ).toString()\n                };\n                position += stringLength;\n                break;\n            case 8 /* timestamp */:\n                out[name] = {\n                    type: TIMESTAMP_TAG,\n                    value: new Date(\n                        new Int64(headers.slice(position, position + 8))\n                            .valueOf()\n                    )\n                };\n                position += 8;\n                break;\n            case 9 /* uuid */:\n                var uuidChars = headers.slice(position, position + 16)\n                    .toString('hex');\n                position += 16;\n                out[name] = {\n                    type: UUID_TAG,\n                    value: uuidChars.substr(0, 8) + '-' +\n                        uuidChars.substr(8, 4) + '-' +\n                        uuidChars.substr(12, 4) + '-' +\n                        uuidChars.substr(16, 4) + '-' +\n                        uuidChars.substr(20)\n                };\n                break;\n            default:\n                throw new Error('Unrecognized header type tag');\n        }\n    }\n    return out;\n}\n\nfunction parseMessage(message) {\n    var parsed = splitMessage(message);\n    return { headers: parseHeaders(parsed.headers), body: parsed.body };\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n    parseMessage: parseMessage\n};\n","var util = require('../core').util;\nvar toBuffer = util.buffer.toBuffer;\n\n// All prelude components are unsigned, 32-bit integers\nvar PRELUDE_MEMBER_LENGTH = 4;\n// The prelude consists of two components\nvar PRELUDE_LENGTH = PRELUDE_MEMBER_LENGTH * 2;\n// Checksums are always CRC32 hashes.\nvar CHECKSUM_LENGTH = 4;\n// Messages must include a full prelude, a prelude checksum, and a message checksum\nvar MINIMUM_MESSAGE_LENGTH = PRELUDE_LENGTH + CHECKSUM_LENGTH * 2;\n\n/**\n * @api private\n *\n * @param {Buffer} message\n */\nfunction splitMessage(message) {\n    if (!util.Buffer.isBuffer(message)) message = toBuffer(message);\n\n    if (message.length < MINIMUM_MESSAGE_LENGTH) {\n        throw new Error('Provided message too short to accommodate event stream message overhead');\n    }\n\n    if (message.length !== message.readUInt32BE(0)) {\n        throw new Error('Reported message length does not match received message length');\n    }\n\n    var expectedPreludeChecksum = message.readUInt32BE(PRELUDE_LENGTH);\n\n    if (\n        expectedPreludeChecksum !== util.crypto.crc32(\n            message.slice(0, PRELUDE_LENGTH)\n        )\n    ) {\n        throw new Error(\n            'The prelude checksum specified in the message (' +\n            expectedPreludeChecksum +\n            ') does not match the calculated CRC32 checksum.'\n        );\n    }\n\n    var expectedMessageChecksum = message.readUInt32BE(message.length - CHECKSUM_LENGTH);\n\n    if (\n        expectedMessageChecksum !== util.crypto.crc32(\n            message.slice(0, message.length - CHECKSUM_LENGTH)\n        )\n    ) {\n        throw new Error(\n            'The message checksum did not match the expected value of ' +\n                expectedMessageChecksum\n        );\n    }\n\n    var headersStart = PRELUDE_LENGTH + CHECKSUM_LENGTH;\n    var headersEnd = headersStart + message.readUInt32BE(PRELUDE_MEMBER_LENGTH);\n\n    return {\n        headers: message.slice(headersStart, headersEnd),\n        body: message.slice(headersEnd, message.length - CHECKSUM_LENGTH),\n    };\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n    splitMessage: splitMessage\n};\n","/**\n * What is necessary to create an event stream in node?\n *  - http response stream\n *  - parser\n *  - event stream model\n */\n\nvar EventMessageChunkerStream = require('../event-stream/event-message-chunker-stream').EventMessageChunkerStream;\nvar EventUnmarshallerStream = require('../event-stream/event-message-unmarshaller-stream').EventUnmarshallerStream;\n\nfunction createEventStream(stream, parser, model) {\n    var eventStream = new EventUnmarshallerStream({\n        parser: parser,\n        eventStreamModel: model\n    });\n\n    var eventMessageChunker = new EventMessageChunkerStream();\n\n    stream.pipe(\n        eventMessageChunker\n    ).pipe(eventStream);\n\n    stream.on('error', function(err) {\n        eventMessageChunker.emit('error', err);\n    });\n\n    eventMessageChunker.on('error', function(err) {\n        eventStream.emit('error', err);\n    });\n\n    return eventStream;\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n    createEventStream: createEventStream\n};\n","var AWS = require('./core');\nvar SequentialExecutor = require('./sequential_executor');\nvar DISCOVER_ENDPOINT = require('./discover_endpoint').discoverEndpoint;\n/**\n * The namespace used to register global event listeners for request building\n * and sending.\n */\nAWS.EventListeners = {\n  /**\n   * @!attribute VALIDATE_CREDENTIALS\n   *   A request listener that validates whether the request is being\n   *   sent with credentials.\n   *   Handles the {AWS.Request~validate 'validate' Request event}\n   *   @example Sending a request without validating credentials\n   *     var listener = AWS.EventListeners.Core.VALIDATE_CREDENTIALS;\n   *     request.removeListener('validate', listener);\n   *   @readonly\n   *   @return [Function]\n   * @!attribute VALIDATE_REGION\n   *   A request listener that validates whether the region is set\n   *   for a request.\n   *   Handles the {AWS.Request~validate 'validate' Request event}\n   *   @example Sending a request without validating region configuration\n   *     var listener = AWS.EventListeners.Core.VALIDATE_REGION;\n   *     request.removeListener('validate', listener);\n   *   @readonly\n   *   @return [Function]\n   * @!attribute VALIDATE_PARAMETERS\n   *   A request listener that validates input parameters in a request.\n   *   Handles the {AWS.Request~validate 'validate' Request event}\n   *   @example Sending a request without validating parameters\n   *     var listener = AWS.EventListeners.Core.VALIDATE_PARAMETERS;\n   *     request.removeListener('validate', listener);\n   *   @example Disable parameter validation globally\n   *     AWS.EventListeners.Core.removeListener('validate',\n   *       AWS.EventListeners.Core.VALIDATE_REGION);\n   *   @readonly\n   *   @return [Function]\n   * @!attribute SEND\n   *   A request listener that initiates the HTTP connection for a\n   *   request being sent. Handles the {AWS.Request~send 'send' Request event}\n   *   @example Replacing the HTTP handler\n   *     var listener = AWS.EventListeners.Core.SEND;\n   *     request.removeListener('send', listener);\n   *     request.on('send', function(response) {\n   *       customHandler.send(response);\n   *     });\n   *   @return [Function]\n   *   @readonly\n   * @!attribute HTTP_DATA\n   *   A request listener that reads data from the HTTP connection in order\n   *   to build the response data.\n   *   Handles the {AWS.Request~httpData 'httpData' Request event}.\n   *   Remove this handler if you are overriding the 'httpData' event and\n   *   do not want extra data processing and buffering overhead.\n   *   @example Disabling default data processing\n   *     var listener = AWS.EventListeners.Core.HTTP_DATA;\n   *     request.removeListener('httpData', listener);\n   *   @return [Function]\n   *   @readonly\n   */\n  Core: {} /* doc hack */\n};\n\n/**\n * @api private\n */\nfunction getOperationAuthtype(req) {\n  if (!req.service.api.operations) {\n    return '';\n  }\n  var operation = req.service.api.operations[req.operation];\n  return operation ? operation.authtype : '';\n}\n\nAWS.EventListeners = {\n  Core: new SequentialExecutor().addNamedListeners(function(add, addAsync) {\n    addAsync('VALIDATE_CREDENTIALS', 'validate',\n        function VALIDATE_CREDENTIALS(req, done) {\n      if (!req.service.api.signatureVersion) return done(); // none\n      req.service.config.getCredentials(function(err) {\n        if (err) {\n          req.response.error = AWS.util.error(err,\n            {code: 'CredentialsError', message: 'Missing credentials in config'});\n        }\n        done();\n      });\n    });\n\n    add('VALIDATE_REGION', 'validate', function VALIDATE_REGION(req) {\n      if (!req.service.config.region && !req.service.isGlobalEndpoint) {\n        req.response.error = AWS.util.error(new Error(),\n          {code: 'ConfigError', message: 'Missing region in config'});\n      }\n    });\n\n    add('BUILD_IDEMPOTENCY_TOKENS', 'validate', function BUILD_IDEMPOTENCY_TOKENS(req) {\n      if (!req.service.api.operations) {\n        return;\n      }\n      var operation = req.service.api.operations[req.operation];\n      if (!operation) {\n        return;\n      }\n      var idempotentMembers = operation.idempotentMembers;\n      if (!idempotentMembers.length) {\n        return;\n      }\n      // creates a copy of params so user's param object isn't mutated\n      var params = AWS.util.copy(req.params);\n      for (var i = 0, iLen = idempotentMembers.length; i < iLen; i++) {\n        if (!params[idempotentMembers[i]]) {\n          // add the member\n          params[idempotentMembers[i]] = AWS.util.uuid.v4();\n        }\n      }\n      req.params = params;\n    });\n\n    add('VALIDATE_PARAMETERS', 'validate', function VALIDATE_PARAMETERS(req) {\n      if (!req.service.api.operations) {\n        return;\n      }\n      var rules = req.service.api.operations[req.operation].input;\n      var validation = req.service.config.paramValidation;\n      new AWS.ParamValidator(validation).validate(rules, req.params);\n    });\n\n    addAsync('COMPUTE_SHA256', 'afterBuild', function COMPUTE_SHA256(req, done) {\n      req.haltHandlersOnError();\n      if (!req.service.api.operations) {\n        return;\n      }\n      var operation = req.service.api.operations[req.operation];\n      var authtype = operation ? operation.authtype : '';\n      if (!req.service.api.signatureVersion && !authtype) return done(); // none\n      if (req.service.getSignerClass(req) === AWS.Signers.V4) {\n        var body = req.httpRequest.body || '';\n        if (authtype.indexOf('unsigned-body') >= 0) {\n          req.httpRequest.headers['X-Amz-Content-Sha256'] = 'UNSIGNED-PAYLOAD';\n          return done();\n        }\n        AWS.util.computeSha256(body, function(err, sha) {\n          if (err) {\n            done(err);\n          }\n          else {\n            req.httpRequest.headers['X-Amz-Content-Sha256'] = sha;\n            done();\n          }\n        });\n      } else {\n        done();\n      }\n    });\n\n    add('SET_CONTENT_LENGTH', 'afterBuild', function SET_CONTENT_LENGTH(req) {\n      var authtype = getOperationAuthtype(req);\n      var payloadMember = AWS.util.getRequestPayloadShape(req);\n      if (req.httpRequest.headers['Content-Length'] === undefined) {\n        try {\n          var length = AWS.util.string.byteLength(req.httpRequest.body);\n          req.httpRequest.headers['Content-Length'] = length;\n        } catch (err) {\n          if (payloadMember && payloadMember.isStreaming) {\n            if (payloadMember.requiresLength) {\n              //streaming payload requires length(s3, glacier)\n              throw err;\n            } else if (authtype.indexOf('unsigned-body') >= 0) {\n              //unbounded streaming payload(lex, mediastore)\n              req.httpRequest.headers['Transfer-Encoding'] = 'chunked';\n              return;\n            } else {\n              throw err;\n            }\n          }\n          throw err;\n        }\n      }\n    });\n\n    add('SET_HTTP_HOST', 'afterBuild', function SET_HTTP_HOST(req) {\n      req.httpRequest.headers['Host'] = req.httpRequest.endpoint.host;\n    });\n\n    add('RESTART', 'restart', function RESTART() {\n      var err = this.response.error;\n      if (!err || !err.retryable) return;\n\n      this.httpRequest = new AWS.HttpRequest(\n        this.service.endpoint,\n        this.service.region\n      );\n\n      if (this.response.retryCount < this.service.config.maxRetries) {\n        this.response.retryCount++;\n      } else {\n        this.response.error = null;\n      }\n    });\n\n    var addToHead = true;\n    addAsync('DISCOVER_ENDPOINT', 'sign', DISCOVER_ENDPOINT, addToHead);\n\n    addAsync('SIGN', 'sign', function SIGN(req, done) {\n      var service = req.service;\n      var operations = req.service.api.operations || {};\n      var operation = operations[req.operation];\n      var authtype = operation ? operation.authtype : '';\n      if (!service.api.signatureVersion && !authtype) return done(); // none\n\n      service.config.getCredentials(function (err, credentials) {\n        if (err) {\n          req.response.error = err;\n          return done();\n        }\n\n        try {\n          var date = service.getSkewCorrectedDate();\n          var SignerClass = service.getSignerClass(req);\n          var signer = new SignerClass(req.httpRequest,\n            service.api.signingName || service.api.endpointPrefix,\n            {\n              signatureCache: service.config.signatureCache,\n              operation: operation,\n              signatureVersion: service.api.signatureVersion\n            });\n          signer.setServiceClientId(service._clientId);\n\n          // clear old authorization headers\n          delete req.httpRequest.headers['Authorization'];\n          delete req.httpRequest.headers['Date'];\n          delete req.httpRequest.headers['X-Amz-Date'];\n\n          // add new authorization\n          signer.addAuthorization(credentials, date);\n          req.signedAt = date;\n        } catch (e) {\n          req.response.error = e;\n        }\n        done();\n      });\n    });\n\n    add('VALIDATE_RESPONSE', 'validateResponse', function VALIDATE_RESPONSE(resp) {\n      if (this.service.successfulResponse(resp, this)) {\n        resp.data = {};\n        resp.error = null;\n      } else {\n        resp.data = null;\n        resp.error = AWS.util.error(new Error(),\n          {code: 'UnknownError', message: 'An unknown error occurred.'});\n      }\n    });\n\n    addAsync('SEND', 'send', function SEND(resp, done) {\n      resp.httpResponse._abortCallback = done;\n      resp.error = null;\n      resp.data = null;\n\n      function callback(httpResp) {\n        resp.httpResponse.stream = httpResp;\n        var stream = resp.request.httpRequest.stream;\n        var service = resp.request.service;\n        var api = service.api;\n        var operationName = resp.request.operation;\n        var operation = api.operations[operationName] || {};\n\n        httpResp.on('headers', function onHeaders(statusCode, headers, statusMessage) {\n          resp.request.emit(\n            'httpHeaders',\n            [statusCode, headers, resp, statusMessage]\n          );\n\n          if (!resp.httpResponse.streaming) {\n            if (AWS.HttpClient.streamsApiVersion === 2) { // streams2 API check\n              // if we detect event streams, we're going to have to\n              // return the stream immediately\n              if (operation.hasEventOutput && service.successfulResponse(resp)) {\n                // skip reading the IncomingStream\n                resp.request.emit('httpDone');\n                done();\n                return;\n              }\n\n              httpResp.on('readable', function onReadable() {\n                var data = httpResp.read();\n                if (data !== null) {\n                  resp.request.emit('httpData', [data, resp]);\n                }\n              });\n            } else { // legacy streams API\n              httpResp.on('data', function onData(data) {\n                resp.request.emit('httpData', [data, resp]);\n              });\n            }\n          }\n        });\n\n        httpResp.on('end', function onEnd() {\n          if (!stream || !stream.didCallback) {\n            if (AWS.HttpClient.streamsApiVersion === 2 && (operation.hasEventOutput && service.successfulResponse(resp))) {\n              // don't concatenate response chunks when streaming event stream data when response is successful\n              return;\n            }\n            resp.request.emit('httpDone');\n            done();\n          }\n        });\n      }\n\n      function progress(httpResp) {\n        httpResp.on('sendProgress', function onSendProgress(value) {\n          resp.request.emit('httpUploadProgress', [value, resp]);\n        });\n\n        httpResp.on('receiveProgress', function onReceiveProgress(value) {\n          resp.request.emit('httpDownloadProgress', [value, resp]);\n        });\n      }\n\n      function error(err) {\n        if (err.code !== 'RequestAbortedError') {\n          var errCode = err.code === 'TimeoutError' ? err.code : 'NetworkingError';\n          err = AWS.util.error(err, {\n            code: errCode,\n            region: resp.request.httpRequest.region,\n            hostname: resp.request.httpRequest.endpoint.hostname,\n            retryable: true\n          });\n        }\n        resp.error = err;\n        resp.request.emit('httpError', [resp.error, resp], function() {\n          done();\n        });\n      }\n\n      function executeSend() {\n        var http = AWS.HttpClient.getInstance();\n        var httpOptions = resp.request.service.config.httpOptions || {};\n        try {\n          var stream = http.handleRequest(resp.request.httpRequest, httpOptions,\n                                          callback, error);\n          progress(stream);\n        } catch (err) {\n          error(err);\n        }\n      }\n      var timeDiff = (resp.request.service.getSkewCorrectedDate() - this.signedAt) / 1000;\n      if (timeDiff >= 60 * 10) { // if we signed 10min ago, re-sign\n        this.emit('sign', [this], function(err) {\n          if (err) done(err);\n          else executeSend();\n        });\n      } else {\n        executeSend();\n      }\n    });\n\n    add('HTTP_HEADERS', 'httpHeaders',\n        function HTTP_HEADERS(statusCode, headers, resp, statusMessage) {\n      resp.httpResponse.statusCode = statusCode;\n      resp.httpResponse.statusMessage = statusMessage;\n      resp.httpResponse.headers = headers;\n      resp.httpResponse.body = AWS.util.buffer.toBuffer('');\n      resp.httpResponse.buffers = [];\n      resp.httpResponse.numBytes = 0;\n      var dateHeader = headers.date || headers.Date;\n      var service = resp.request.service;\n      if (dateHeader) {\n        var serverTime = Date.parse(dateHeader);\n        if (service.config.correctClockSkew\n            && service.isClockSkewed(serverTime)) {\n          service.applyClockOffset(serverTime);\n        }\n      }\n    });\n\n    add('HTTP_DATA', 'httpData', function HTTP_DATA(chunk, resp) {\n      if (chunk) {\n        if (AWS.util.isNode()) {\n          resp.httpResponse.numBytes += chunk.length;\n\n          var total = resp.httpResponse.headers['content-length'];\n          var progress = { loaded: resp.httpResponse.numBytes, total: total };\n          resp.request.emit('httpDownloadProgress', [progress, resp]);\n        }\n\n        resp.httpResponse.buffers.push(AWS.util.buffer.toBuffer(chunk));\n      }\n    });\n\n    add('HTTP_DONE', 'httpDone', function HTTP_DONE(resp) {\n      // convert buffers array into single buffer\n      if (resp.httpResponse.buffers && resp.httpResponse.buffers.length > 0) {\n        var body = AWS.util.buffer.concat(resp.httpResponse.buffers);\n        resp.httpResponse.body = body;\n      }\n      delete resp.httpResponse.numBytes;\n      delete resp.httpResponse.buffers;\n    });\n\n    add('FINALIZE_ERROR', 'retry', function FINALIZE_ERROR(resp) {\n      if (resp.httpResponse.statusCode) {\n        resp.error.statusCode = resp.httpResponse.statusCode;\n        if (resp.error.retryable === undefined) {\n          resp.error.retryable = this.service.retryableError(resp.error, this);\n        }\n      }\n    });\n\n    add('INVALIDATE_CREDENTIALS', 'retry', function INVALIDATE_CREDENTIALS(resp) {\n      if (!resp.error) return;\n      switch (resp.error.code) {\n        case 'RequestExpired': // EC2 only\n        case 'ExpiredTokenException':\n        case 'ExpiredToken':\n          resp.error.retryable = true;\n          resp.request.service.config.credentials.expired = true;\n      }\n    });\n\n    add('EXPIRED_SIGNATURE', 'retry', function EXPIRED_SIGNATURE(resp) {\n      var err = resp.error;\n      if (!err) return;\n      if (typeof err.code === 'string' && typeof err.message === 'string') {\n        if (err.code.match(/Signature/) && err.message.match(/expired/)) {\n          resp.error.retryable = true;\n        }\n      }\n    });\n\n    add('CLOCK_SKEWED', 'retry', function CLOCK_SKEWED(resp) {\n      if (!resp.error) return;\n      if (this.service.clockSkewError(resp.error)\n          && this.service.config.correctClockSkew) {\n        resp.error.retryable = true;\n      }\n    });\n\n    add('REDIRECT', 'retry', function REDIRECT(resp) {\n      if (resp.error && resp.error.statusCode >= 300 &&\n          resp.error.statusCode < 400 && resp.httpResponse.headers['location']) {\n        this.httpRequest.endpoint =\n          new AWS.Endpoint(resp.httpResponse.headers['location']);\n        this.httpRequest.headers['Host'] = this.httpRequest.endpoint.host;\n        resp.error.redirect = true;\n        resp.error.retryable = true;\n      }\n    });\n\n    add('RETRY_CHECK', 'retry', function RETRY_CHECK(resp) {\n      if (resp.error) {\n        if (resp.error.redirect && resp.redirectCount < resp.maxRedirects) {\n          resp.error.retryDelay = 0;\n        } else if (resp.retryCount < resp.maxRetries) {\n          resp.error.retryDelay = this.service.retryDelays(resp.retryCount) || 0;\n        }\n      }\n    });\n\n    addAsync('RESET_RETRY_STATE', 'afterRetry', function RESET_RETRY_STATE(resp, done) {\n      var delay, willRetry = false;\n\n      if (resp.error) {\n        delay = resp.error.retryDelay || 0;\n        if (resp.error.retryable && resp.retryCount < resp.maxRetries) {\n          resp.retryCount++;\n          willRetry = true;\n        } else if (resp.error.redirect && resp.redirectCount < resp.maxRedirects) {\n          resp.redirectCount++;\n          willRetry = true;\n        }\n      }\n\n      if (willRetry) {\n        resp.error = null;\n        setTimeout(done, delay);\n      } else {\n        done();\n      }\n    });\n  }),\n\n  CorePost: new SequentialExecutor().addNamedListeners(function(add) {\n    add('EXTRACT_REQUEST_ID', 'extractData', AWS.util.extractRequestId);\n    add('EXTRACT_REQUEST_ID', 'extractError', AWS.util.extractRequestId);\n\n    add('ENOTFOUND_ERROR', 'httpError', function ENOTFOUND_ERROR(err) {\n      if (err.code === 'NetworkingError' && err.errno === 'ENOTFOUND') {\n        var message = 'Inaccessible host: `' + err.hostname +\n          '\\'. This service may not be available in the `' + err.region +\n          '\\' region.';\n        this.response.error = AWS.util.error(new Error(message), {\n          code: 'UnknownEndpoint',\n          region: err.region,\n          hostname: err.hostname,\n          retryable: true,\n          originalError: err\n        });\n      }\n    });\n  }),\n\n  Logger: new SequentialExecutor().addNamedListeners(function(add) {\n    add('LOG_REQUEST', 'complete', function LOG_REQUEST(resp) {\n      var req = resp.request;\n      var logger = req.service.config.logger;\n      if (!logger) return;\n      function filterSensitiveLog(inputShape, shape) {\n        if (!shape) {\n          return shape;\n        }\n        switch (inputShape.type) {\n          case 'structure':\n            var struct = {};\n            AWS.util.each(shape, function(subShapeName, subShape) {\n              if (Object.prototype.hasOwnProperty.call(inputShape.members, subShapeName)) {\n                struct[subShapeName] = filterSensitiveLog(inputShape.members[subShapeName], subShape);\n              } else {\n                struct[subShapeName] = subShape;\n              }\n            });\n            return struct;\n          case 'list':\n            var list = [];\n            AWS.util.arrayEach(shape, function(subShape, index) {\n              list.push(filterSensitiveLog(inputShape.member, subShape));\n            });\n            return list;\n          case 'map':\n            var map = {};\n            AWS.util.each(shape, function(key, value) {\n              map[key] = filterSensitiveLog(inputShape.value, value);\n            });\n            return map;\n          default:\n            if (inputShape.isSensitive) {\n              return '***SensitiveInformation***';\n            } else {\n              return shape;\n            }\n        }\n      }\n\n      function buildMessage() {\n        var time = resp.request.service.getSkewCorrectedDate().getTime();\n        var delta = (time - req.startTime.getTime()) / 1000;\n        var ansi = logger.isTTY ? true : false;\n        var status = resp.httpResponse.statusCode;\n        var censoredParams = req.params;\n        if (\n          req.service.api.operations &&\n              req.service.api.operations[req.operation] &&\n              req.service.api.operations[req.operation].input\n        ) {\n          var inputShape = req.service.api.operations[req.operation].input;\n          censoredParams = filterSensitiveLog(inputShape, req.params);\n        }\n        var params = require('util').inspect(censoredParams, true, null);\n        var message = '';\n        if (ansi) message += '\\x1B[33m';\n        message += '[AWS ' + req.service.serviceIdentifier + ' ' + status;\n        message += ' ' + delta.toString() + 's ' + resp.retryCount + ' retries]';\n        if (ansi) message += '\\x1B[0;1m';\n        message += ' ' + AWS.util.string.lowerFirst(req.operation);\n        message += '(' + params + ')';\n        if (ansi) message += '\\x1B[0m';\n        return message;\n      }\n\n      var line = buildMessage();\n      if (typeof logger.log === 'function') {\n        logger.log(line);\n      } else if (typeof logger.write === 'function') {\n        logger.write(line + '\\n');\n      }\n    });\n  }),\n\n  Json: new SequentialExecutor().addNamedListeners(function(add) {\n    var svc = require('./protocol/json');\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n  }),\n\n  Rest: new SequentialExecutor().addNamedListeners(function(add) {\n    var svc = require('./protocol/rest');\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n  }),\n\n  RestJson: new SequentialExecutor().addNamedListeners(function(add) {\n    var svc = require('./protocol/rest_json');\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n  }),\n\n  RestXml: new SequentialExecutor().addNamedListeners(function(add) {\n    var svc = require('./protocol/rest_xml');\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n  }),\n\n  Query: new SequentialExecutor().addNamedListeners(function(add) {\n    var svc = require('./protocol/query');\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n  })\n};\n","var AWS = require('./core');\nvar inherit = AWS.util.inherit;\n\n/**\n * The endpoint that a service will talk to, for example,\n * `'https://ec2.ap-southeast-1.amazonaws.com'`. If\n * you need to override an endpoint for a service, you can\n * set the endpoint on a service by passing the endpoint\n * object with the `endpoint` option key:\n *\n * ```javascript\n * var ep = new AWS.Endpoint('awsproxy.example.com');\n * var s3 = new AWS.S3({endpoint: ep});\n * s3.service.endpoint.hostname == 'awsproxy.example.com'\n * ```\n *\n * Note that if you do not specify a protocol, the protocol will\n * be selected based on your current {AWS.config} configuration.\n *\n * @!attribute protocol\n *   @return [String] the protocol (http or https) of the endpoint\n *     URL\n * @!attribute hostname\n *   @return [String] the host portion of the endpoint, e.g.,\n *     example.com\n * @!attribute host\n *   @return [String] the host portion of the endpoint including\n *     the port, e.g., example.com:80\n * @!attribute port\n *   @return [Integer] the port of the endpoint\n * @!attribute href\n *   @return [String] the full URL of the endpoint\n */\nAWS.Endpoint = inherit({\n\n  /**\n   * @overload Endpoint(endpoint)\n   *   Constructs a new endpoint given an endpoint URL. If the\n   *   URL omits a protocol (http or https), the default protocol\n   *   set in the global {AWS.config} will be used.\n   *   @param endpoint [String] the URL to construct an endpoint from\n   */\n  constructor: function Endpoint(endpoint, config) {\n    AWS.util.hideProperties(this, ['slashes', 'auth', 'hash', 'search', 'query']);\n\n    if (typeof endpoint === 'undefined' || endpoint === null) {\n      throw new Error('Invalid endpoint: ' + endpoint);\n    } else if (typeof endpoint !== 'string') {\n      return AWS.util.copy(endpoint);\n    }\n\n    if (!endpoint.match(/^http/)) {\n      var useSSL = config && config.sslEnabled !== undefined ?\n        config.sslEnabled : AWS.config.sslEnabled;\n      endpoint = (useSSL ? 'https' : 'http') + '://' + endpoint;\n    }\n\n    AWS.util.update(this, AWS.util.urlParse(endpoint));\n\n    // Ensure the port property is set as an integer\n    if (this.port) {\n      this.port = parseInt(this.port, 10);\n    } else {\n      this.port = this.protocol === 'https:' ? 443 : 80;\n    }\n  }\n\n});\n\n/**\n * The low level HTTP request object, encapsulating all HTTP header\n * and body data sent by a service request.\n *\n * @!attribute method\n *   @return [String] the HTTP method of the request\n * @!attribute path\n *   @return [String] the path portion of the URI, e.g.,\n *     \"/list/?start=5&num=10\"\n * @!attribute headers\n *   @return [map<String,String>]\n *     a map of header keys and their respective values\n * @!attribute body\n *   @return [String] the request body payload\n * @!attribute endpoint\n *   @return [AWS.Endpoint] the endpoint for the request\n * @!attribute region\n *   @api private\n *   @return [String] the region, for signing purposes only.\n */\nAWS.HttpRequest = inherit({\n\n  /**\n   * @api private\n   */\n  constructor: function HttpRequest(endpoint, region) {\n    endpoint = new AWS.Endpoint(endpoint);\n    this.method = 'POST';\n    this.path = endpoint.path || '/';\n    this.headers = {};\n    this.body = '';\n    this.endpoint = endpoint;\n    this.region = region;\n    this._userAgent = '';\n    this.setUserAgent();\n  },\n\n  /**\n   * @api private\n   */\n  setUserAgent: function setUserAgent() {\n    this._userAgent = this.headers[this.getUserAgentHeaderName()] = AWS.util.userAgent();\n  },\n\n  getUserAgentHeaderName: function getUserAgentHeaderName() {\n    var prefix = AWS.util.isBrowser() ? 'X-Amz-' : '';\n    return prefix + 'User-Agent';\n  },\n\n  /**\n   * @api private\n   */\n  appendToUserAgent: function appendToUserAgent(agentPartial) {\n    if (typeof agentPartial === 'string' && agentPartial) {\n      this._userAgent += ' ' + agentPartial;\n    }\n    this.headers[this.getUserAgentHeaderName()] = this._userAgent;\n  },\n\n  /**\n   * @api private\n   */\n  getUserAgent: function getUserAgent() {\n    return this._userAgent;\n  },\n\n  /**\n   * @return [String] the part of the {path} excluding the\n   *   query string\n   */\n  pathname: function pathname() {\n    return this.path.split('?', 1)[0];\n  },\n\n  /**\n   * @return [String] the query string portion of the {path}\n   */\n  search: function search() {\n    var query = this.path.split('?', 2)[1];\n    if (query) {\n      query = AWS.util.queryStringParse(query);\n      return AWS.util.queryParamsToString(query);\n    }\n    return '';\n  },\n\n  /**\n   * @api private\n   * update httpRequest endpoint with endpoint string\n   */\n  updateEndpoint: function updateEndpoint(endpointStr) {\n    var newEndpoint = new AWS.Endpoint(endpointStr);\n    this.endpoint = newEndpoint;\n    this.path = newEndpoint.path || '/';\n  }\n});\n\n/**\n * The low level HTTP response object, encapsulating all HTTP header\n * and body data returned from the request.\n *\n * @!attribute statusCode\n *   @return [Integer] the HTTP status code of the response (e.g., 200, 404)\n * @!attribute headers\n *   @return [map<String,String>]\n *      a map of response header keys and their respective values\n * @!attribute body\n *   @return [String] the response body payload\n * @!attribute [r] streaming\n *   @return [Boolean] whether this response is being streamed at a low-level.\n *     Defaults to `false` (buffered reads). Do not modify this manually, use\n *     {createUnbufferedStream} to convert the stream to unbuffered mode\n *     instead.\n */\nAWS.HttpResponse = inherit({\n\n  /**\n   * @api private\n   */\n  constructor: function HttpResponse() {\n    this.statusCode = undefined;\n    this.headers = {};\n    this.body = undefined;\n    this.streaming = false;\n    this.stream = null;\n  },\n\n  /**\n   * Disables buffering on the HTTP response and returns the stream for reading.\n   * @return [Stream, XMLHttpRequest, null] the underlying stream object.\n   *   Use this object to directly read data off of the stream.\n   * @note This object is only available after the {AWS.Request~httpHeaders}\n   *   event has fired. This method must be called prior to\n   *   {AWS.Request~httpData}.\n   * @example Taking control of a stream\n   *   request.on('httpHeaders', function(statusCode, headers) {\n   *     if (statusCode < 300) {\n   *       if (headers.etag === 'xyz') {\n   *         // pipe the stream, disabling buffering\n   *         var stream = this.response.httpResponse.createUnbufferedStream();\n   *         stream.pipe(process.stdout);\n   *       } else { // abort this request and set a better error message\n   *         this.abort();\n   *         this.response.error = new Error('Invalid ETag');\n   *       }\n   *     }\n   *   }).send(console.log);\n   */\n  createUnbufferedStream: function createUnbufferedStream() {\n    this.streaming = true;\n    return this.stream;\n  }\n});\n\n\nAWS.HttpClient = inherit({});\n\n/**\n * @api private\n */\nAWS.HttpClient.getInstance = function getInstance() {\n  if (this.singleton === undefined) {\n    this.singleton = new this();\n  }\n  return this.singleton;\n};\n","var AWS = require('../core');\nvar Stream = AWS.util.stream.Stream;\nvar TransformStream = AWS.util.stream.Transform;\nvar ReadableStream = AWS.util.stream.Readable;\nrequire('../http');\nvar CONNECTION_REUSE_ENV_NAME = 'AWS_NODEJS_CONNECTION_REUSE_ENABLED';\n\n/**\n * @api private\n */\nAWS.NodeHttpClient = AWS.util.inherit({\n  handleRequest: function handleRequest(httpRequest, httpOptions, callback, errCallback) {\n    var self = this;\n    var endpoint = httpRequest.endpoint;\n    var pathPrefix = '';\n    if (!httpOptions) httpOptions = {};\n    if (httpOptions.proxy) {\n      pathPrefix = endpoint.protocol + '//' + endpoint.hostname;\n      if (endpoint.port !== 80 && endpoint.port !== 443) {\n        pathPrefix += ':' + endpoint.port;\n      }\n      endpoint = new AWS.Endpoint(httpOptions.proxy);\n    }\n\n    var useSSL = endpoint.protocol === 'https:';\n    var http = useSSL ? require('https') : require('http');\n    var options = {\n      host: endpoint.hostname,\n      port: endpoint.port,\n      method: httpRequest.method,\n      headers: httpRequest.headers,\n      path: pathPrefix + httpRequest.path\n    };\n\n    if (!httpOptions.agent) {\n      options.agent = this.getAgent(useSSL, {\n        keepAlive: process.env[CONNECTION_REUSE_ENV_NAME] === '1' ? true : false\n      });\n    }\n\n    AWS.util.update(options, httpOptions);\n    delete options.proxy; // proxy isn't an HTTP option\n    delete options.timeout; // timeout isn't an HTTP option\n\n    var stream = http.request(options, function (httpResp) {\n      if (stream.didCallback) return;\n\n      callback(httpResp);\n      httpResp.emit(\n        'headers',\n        httpResp.statusCode,\n        httpResp.headers,\n        httpResp.statusMessage\n      );\n    });\n    httpRequest.stream = stream; // attach stream to httpRequest\n    stream.didCallback = false;\n\n    // connection timeout support\n    if (httpOptions.connectTimeout) {\n      var connectTimeoutId;\n      stream.on('socket', function(socket) {\n        if (socket.connecting) {\n          connectTimeoutId = setTimeout(function connectTimeout() {\n            if (stream.didCallback) return; stream.didCallback = true;\n\n            stream.abort();\n            errCallback(AWS.util.error(\n              new Error('Socket timed out without establishing a connection'),\n              {code: 'TimeoutError'}\n            ));\n          }, httpOptions.connectTimeout);\n          socket.on('connect', function() {\n            clearTimeout(connectTimeoutId);\n            connectTimeoutId = null;\n          });\n        }\n      });\n    }\n\n    // timeout support\n    stream.setTimeout(httpOptions.timeout || 0, function() {\n      if (stream.didCallback) return; stream.didCallback = true;\n\n      var msg = 'Connection timed out after ' + httpOptions.timeout + 'ms';\n      errCallback(AWS.util.error(new Error(msg), {code: 'TimeoutError'}));\n      stream.abort();\n    });\n\n    stream.on('error', function() {\n      if (connectTimeoutId) {\n        clearTimeout(connectTimeoutId);\n        connectTimeoutId = null;\n      }\n      if (stream.didCallback) return; stream.didCallback = true;\n      errCallback.apply(stream, arguments);\n    });\n\n    var expect = httpRequest.headers.Expect || httpRequest.headers.expect;\n    if (expect === '100-continue') {\n      stream.on('continue', function() {\n        self.writeBody(stream, httpRequest);\n      });\n    } else {\n      this.writeBody(stream, httpRequest);\n    }\n\n    return stream;\n  },\n\n  writeBody: function writeBody(stream, httpRequest) {\n    var body = httpRequest.body;\n    var totalBytes = parseInt(httpRequest.headers['Content-Length'], 10);\n\n    if (body instanceof Stream) {\n      // For progress support of streaming content -\n      // pipe the data through a transform stream to emit 'sendProgress' events\n      var progressStream = this.progressStream(stream, totalBytes);\n      if (progressStream) {\n        body.pipe(progressStream).pipe(stream);\n      } else {\n        body.pipe(stream);\n      }\n    } else if (body) {\n      // The provided body is a buffer/string and is already fully available in memory -\n      // For performance it's best to send it as a whole by calling stream.end(body),\n      // Callers expect a 'sendProgress' event which is best emitted once\n      // the http request stream has been fully written and all data flushed.\n      // The use of totalBytes is important over body.length for strings where\n      // length is char length and not byte length.\n      stream.once('finish', function() {\n        stream.emit('sendProgress', {\n          loaded: totalBytes,\n          total: totalBytes\n        });\n      });\n      stream.end(body);\n    } else {\n      // no request body\n      stream.end();\n    }\n  },\n\n  /**\n   * Create the https.Agent or http.Agent according to the request schema.\n   */\n  getAgent: function getAgent(useSSL, agentOptions) {\n    var http = useSSL ? require('https') : require('http');\n    if (useSSL) {\n      if (!AWS.NodeHttpClient.sslAgent) {\n        AWS.NodeHttpClient.sslAgent = new http.Agent(AWS.util.merge({\n          rejectUnauthorized: true\n        }, agentOptions || {}));\n        AWS.NodeHttpClient.sslAgent.setMaxListeners(0);\n\n        // delegate maxSockets to globalAgent, set a default limit of 50 if current value is Infinity.\n        // Users can bypass this default by supplying their own Agent as part of SDK configuration.\n        Object.defineProperty(AWS.NodeHttpClient.sslAgent, 'maxSockets', {\n          enumerable: true,\n          get: function() {\n            var defaultMaxSockets = 50;\n            var globalAgent = http.globalAgent;\n            if (globalAgent && globalAgent.maxSockets !== Infinity && typeof globalAgent.maxSockets === 'number') {\n              return globalAgent.maxSockets;\n            }\n            return defaultMaxSockets;\n          }\n        });\n      }\n      return AWS.NodeHttpClient.sslAgent;\n    } else {\n      if (!AWS.NodeHttpClient.agent) {\n        AWS.NodeHttpClient.agent = new http.Agent(agentOptions);\n      }\n      return AWS.NodeHttpClient.agent;\n    }\n  },\n\n  progressStream: function progressStream(stream, totalBytes) {\n    if (typeof TransformStream === 'undefined') {\n      // for node 0.8 there is no streaming progress\n      return;\n    }\n    var loadedBytes = 0;\n    var reporter = new TransformStream();\n    reporter._transform = function(chunk, encoding, callback) {\n      if (chunk) {\n        loadedBytes += chunk.length;\n        stream.emit('sendProgress', {\n          loaded: loadedBytes,\n          total: totalBytes\n        });\n      }\n      callback(null, chunk);\n    };\n    return reporter;\n  },\n\n  emitter: null\n});\n\n/**\n * @!ignore\n */\n\n/**\n * @api private\n */\nAWS.HttpClient.prototype = AWS.NodeHttpClient.prototype;\n\n/**\n * @api private\n */\nAWS.HttpClient.streamsApiVersion = ReadableStream ? 2 : 1;\n","var util = require('../util');\n\nfunction JsonBuilder() { }\n\nJsonBuilder.prototype.build = function(value, shape) {\n  return JSON.stringify(translate(value, shape));\n};\n\nfunction translate(value, shape) {\n  if (!shape || value === undefined || value === null) return undefined;\n\n  switch (shape.type) {\n    case 'structure': return translateStructure(value, shape);\n    case 'map': return translateMap(value, shape);\n    case 'list': return translateList(value, shape);\n    default: return translateScalar(value, shape);\n  }\n}\n\nfunction translateStructure(structure, shape) {\n  var struct = {};\n  util.each(structure, function(name, value) {\n    var memberShape = shape.members[name];\n    if (memberShape) {\n      if (memberShape.location !== 'body') return;\n      var locationName = memberShape.isLocationName ? memberShape.name : name;\n      var result = translate(value, memberShape);\n      if (result !== undefined) struct[locationName] = result;\n    }\n  });\n  return struct;\n}\n\nfunction translateList(list, shape) {\n  var out = [];\n  util.arrayEach(list, function(value) {\n    var result = translate(value, shape.member);\n    if (result !== undefined) out.push(result);\n  });\n  return out;\n}\n\nfunction translateMap(map, shape) {\n  var out = {};\n  util.each(map, function(key, value) {\n    var result = translate(value, shape.value);\n    if (result !== undefined) out[key] = result;\n  });\n  return out;\n}\n\nfunction translateScalar(value, shape) {\n  return shape.toWireFormat(value);\n}\n\n/**\n * @api private\n */\nmodule.exports = JsonBuilder;\n","var util = require('../util');\n\nfunction JsonParser() { }\n\nJsonParser.prototype.parse = function(value, shape) {\n  return translate(JSON.parse(value), shape);\n};\n\nfunction translate(value, shape) {\n  if (!shape || value === undefined) return undefined;\n\n  switch (shape.type) {\n    case 'structure': return translateStructure(value, shape);\n    case 'map': return translateMap(value, shape);\n    case 'list': return translateList(value, shape);\n    default: return translateScalar(value, shape);\n  }\n}\n\nfunction translateStructure(structure, shape) {\n  if (structure == null) return undefined;\n\n  var struct = {};\n  var shapeMembers = shape.members;\n  util.each(shapeMembers, function(name, memberShape) {\n    var locationName = memberShape.isLocationName ? memberShape.name : name;\n    if (Object.prototype.hasOwnProperty.call(structure, locationName)) {\n      var value = structure[locationName];\n      var result = translate(value, memberShape);\n      if (result !== undefined) struct[name] = result;\n    }\n  });\n  return struct;\n}\n\nfunction translateList(list, shape) {\n  if (list == null) return undefined;\n\n  var out = [];\n  util.arrayEach(list, function(value) {\n    var result = translate(value, shape.member);\n    if (result === undefined) out.push(null);\n    else out.push(result);\n  });\n  return out;\n}\n\nfunction translateMap(map, shape) {\n  if (map == null) return undefined;\n\n  var out = {};\n  util.each(map, function(key, value) {\n    var result = translate(value, shape.value);\n    if (result === undefined) out[key] = null;\n    else out[key] = result;\n  });\n  return out;\n}\n\nfunction translateScalar(value, shape) {\n  return shape.toType(value);\n}\n\n/**\n * @api private\n */\nmodule.exports = JsonParser;\n","var AWS = require('./core');\nrequire('./http');\nvar inherit = AWS.util.inherit;\n\n/**\n * Represents a metadata service available on EC2 instances. Using the\n * {request} method, you can receieve metadata about any available resource\n * on the metadata service.\n *\n * You can disable the use of the IMDS by setting the AWS_EC2_METADATA_DISABLED\n * environment variable to a truthy value.\n *\n * @!attribute [r] httpOptions\n *   @return [map] a map of options to pass to the underlying HTTP request:\n *\n *     * **timeout** (Number) &mdash; a timeout value in milliseconds to wait\n *       before aborting the connection. Set to 0 for no timeout.\n *\n * @!macro nobrowser\n */\nAWS.MetadataService = inherit({\n  /**\n   * @return [String] the hostname of the instance metadata service\n   */\n  host: '169.254.169.254',\n\n  /**\n   * @!ignore\n   */\n\n  /**\n   * Default HTTP options. By default, the metadata service is set to not\n   * timeout on long requests. This means that on non-EC2 machines, this\n   * request will never return. If you are calling this operation from an\n   * environment that may not always run on EC2, set a `timeout` value so\n   * the SDK will abort the request after a given number of milliseconds.\n   */\n  httpOptions: { timeout: 0 },\n\n  /**\n   * Creates a new MetadataService object with a given set of options.\n   *\n   * @option options host [String] the hostname of the instance metadata\n   *   service\n   * @option options httpOptions [map] a map of options to pass to the\n   *   underlying HTTP request:\n   *\n   *   * **timeout** (Number) &mdash; a timeout value in milliseconds to wait\n   *     before aborting the connection. Set to 0 for no timeout.\n   * @option options maxRetries [Integer] the maximum number of retries to\n   *   perform for timeout errors\n   * @option options retryDelayOptions [map] A set of options to configure the\n   *   retry delay on retryable errors. See AWS.Config for details.\n   */\n  constructor: function MetadataService(options) {\n    AWS.util.update(this, options);\n  },\n\n  /**\n   * Sends a request to the instance metadata service for a given resource.\n   *\n   * @param path [String] the path of the resource to get\n   * @callback callback function(err, data)\n   *   Called when a response is available from the service.\n   *   @param err [Error, null] if an error occurred, this value will be set\n   *   @param data [String, null] if the request was successful, the body of\n   *     the response\n   */\n  request: function request(path, callback) {\n    if (process.env[AWS.util.imdsDisabledEnv]) {\n      callback(new Error('EC2 Instance Metadata Service access disabled'));\n      return;\n    }\n\n    path = path || '/';\n    var httpRequest = new AWS.HttpRequest('http://' + this.host + path);\n    httpRequest.method = 'GET';\n    AWS.util.handleRequestWithRetries(httpRequest, this, callback);\n  },\n\n  /**\n  * @api private\n  */\n  loadCredentialsCallbacks: [],\n\n  /**\n   * Loads a set of credentials stored in the instance metadata service\n   *\n   * @api private\n   * @callback callback function(err, credentials)\n   *   Called when credentials are loaded from the resource\n   *   @param err [Error] if an error occurred, this value will be set\n   *   @param credentials [Object] the raw JSON object containing all\n   *     metadata from the credentials resource\n   */\n  loadCredentials: function loadCredentials(callback) {\n    var self = this;\n    var basePath = '/latest/meta-data/iam/security-credentials/';\n    self.loadCredentialsCallbacks.push(callback);\n    if (self.loadCredentialsCallbacks.length > 1) { return; }\n\n    function callbacks(err, creds) {\n      var cb;\n      while ((cb = self.loadCredentialsCallbacks.shift()) !== undefined) {\n        cb(err, creds);\n      }\n    }\n\n    self.request(basePath, function (err, roleName) {\n      if (err) callbacks(err);\n      else {\n        roleName = roleName.split('\\n')[0]; // grab first (and only) role\n        self.request(basePath + roleName, function (credErr, credData) {\n          if (credErr) callbacks(credErr);\n          else {\n            try {\n              var credentials = JSON.parse(credData);\n              callbacks(null, credentials);\n            } catch (parseError) {\n              callbacks(parseError);\n            }\n          }\n        });\n      }\n    });\n  }\n});\n\n/**\n * @api private\n */\nmodule.exports = AWS.MetadataService;\n","var Collection = require('./collection');\nvar Operation = require('./operation');\nvar Shape = require('./shape');\nvar Paginator = require('./paginator');\nvar ResourceWaiter = require('./resource_waiter');\n\nvar util = require('../util');\nvar property = util.property;\nvar memoizedProperty = util.memoizedProperty;\n\nfunction Api(api, options) {\n  var self = this;\n  api = api || {};\n  options = options || {};\n  options.api = this;\n\n  api.metadata = api.metadata || {};\n\n  property(this, 'isApi', true, false);\n  property(this, 'apiVersion', api.metadata.apiVersion);\n  property(this, 'endpointPrefix', api.metadata.endpointPrefix);\n  property(this, 'signingName', api.metadata.signingName);\n  property(this, 'globalEndpoint', api.metadata.globalEndpoint);\n  property(this, 'signatureVersion', api.metadata.signatureVersion);\n  property(this, 'jsonVersion', api.metadata.jsonVersion);\n  property(this, 'targetPrefix', api.metadata.targetPrefix);\n  property(this, 'protocol', api.metadata.protocol);\n  property(this, 'timestampFormat', api.metadata.timestampFormat);\n  property(this, 'xmlNamespaceUri', api.metadata.xmlNamespace);\n  property(this, 'abbreviation', api.metadata.serviceAbbreviation);\n  property(this, 'fullName', api.metadata.serviceFullName);\n  property(this, 'serviceId', api.metadata.serviceId);\n\n  memoizedProperty(this, 'className', function() {\n    var name = api.metadata.serviceAbbreviation || api.metadata.serviceFullName;\n    if (!name) return null;\n\n    name = name.replace(/^Amazon|AWS\\s*|\\(.*|\\s+|\\W+/g, '');\n    if (name === 'ElasticLoadBalancing') name = 'ELB';\n    return name;\n  });\n\n  function addEndpointOperation(name, operation) {\n    if (operation.endpointoperation === true) {\n      property(self, 'endpointOperation', util.string.lowerFirst(name));\n    }\n  }\n\n  property(this, 'operations', new Collection(api.operations, options, function(name, operation) {\n    return new Operation(name, operation, options);\n  }, util.string.lowerFirst, addEndpointOperation));\n\n  property(this, 'shapes', new Collection(api.shapes, options, function(name, shape) {\n    return Shape.create(shape, options);\n  }));\n\n  property(this, 'paginators', new Collection(api.paginators, options, function(name, paginator) {\n    return new Paginator(name, paginator, options);\n  }));\n\n  property(this, 'waiters', new Collection(api.waiters, options, function(name, waiter) {\n    return new ResourceWaiter(name, waiter, options);\n  }, util.string.lowerFirst));\n\n  if (options.documentation) {\n    property(this, 'documentation', api.documentation);\n    property(this, 'documentationUrl', api.documentationUrl);\n  }\n}\n\n/**\n * @api private\n */\nmodule.exports = Api;\n","var memoizedProperty = require('../util').memoizedProperty;\n\nfunction memoize(name, value, factory, nameTr) {\n  memoizedProperty(this, nameTr(name), function() {\n    return factory(name, value);\n  });\n}\n\nfunction Collection(iterable, options, factory, nameTr, callback) {\n  nameTr = nameTr || String;\n  var self = this;\n\n  for (var id in iterable) {\n    if (Object.prototype.hasOwnProperty.call(iterable, id)) {\n      memoize.call(self, id, iterable[id], factory, nameTr);\n      if (callback) callback(id, iterable[id]);\n    }\n  }\n}\n\n/**\n * @api private\n */\nmodule.exports = Collection;\n","var Shape = require('./shape');\n\nvar util = require('../util');\nvar property = util.property;\nvar memoizedProperty = util.memoizedProperty;\n\nfunction Operation(name, operation, options) {\n  var self = this;\n  options = options || {};\n\n  property(this, 'name', operation.name || name);\n  property(this, 'api', options.api, false);\n\n  operation.http = operation.http || {};\n  property(this, 'endpoint', operation.endpoint);\n  property(this, 'httpMethod', operation.http.method || 'POST');\n  property(this, 'httpPath', operation.http.requestUri || '/');\n  property(this, 'authtype', operation.authtype || '');\n  property(\n    this,\n    'endpointDiscoveryRequired',\n    operation.endpointdiscovery ?\n      (operation.endpointdiscovery.required ? 'REQUIRED' : 'OPTIONAL') :\n    'NULL'\n  );\n\n  memoizedProperty(this, 'input', function() {\n    if (!operation.input) {\n      return new Shape.create({type: 'structure'}, options);\n    }\n    return Shape.create(operation.input, options);\n  });\n\n  memoizedProperty(this, 'output', function() {\n    if (!operation.output) {\n      return new Shape.create({type: 'structure'}, options);\n    }\n    return Shape.create(operation.output, options);\n  });\n\n  memoizedProperty(this, 'errors', function() {\n    var list = [];\n    if (!operation.errors) return null;\n\n    for (var i = 0; i < operation.errors.length; i++) {\n      list.push(Shape.create(operation.errors[i], options));\n    }\n\n    return list;\n  });\n\n  memoizedProperty(this, 'paginator', function() {\n    return options.api.paginators[name];\n  });\n\n  if (options.documentation) {\n    property(this, 'documentation', operation.documentation);\n    property(this, 'documentationUrl', operation.documentationUrl);\n  }\n\n  // idempotentMembers only tracks top-level input shapes\n  memoizedProperty(this, 'idempotentMembers', function() {\n    var idempotentMembers = [];\n    var input = self.input;\n    var members = input.members;\n    if (!input.members) {\n      return idempotentMembers;\n    }\n    for (var name in members) {\n      if (!members.hasOwnProperty(name)) {\n        continue;\n      }\n      if (members[name].isIdempotent === true) {\n        idempotentMembers.push(name);\n      }\n    }\n    return idempotentMembers;\n  });\n\n  memoizedProperty(this, 'hasEventOutput', function() {\n    var output = self.output;\n    return hasEventStream(output);\n  });\n}\n\nfunction hasEventStream(topLevelShape) {\n  var members = topLevelShape.members;\n  var payload = topLevelShape.payload;\n\n  if (!topLevelShape.members) {\n    return false;\n  }\n\n  if (payload) {\n    var payloadMember = members[payload];\n    return payloadMember.isEventStream;\n  }\n\n  // check if any member is an event stream\n  for (var name in members) {\n    if (!members.hasOwnProperty(name)) {\n      if (members[name].isEventStream === true) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\n/**\n * @api private\n */\nmodule.exports = Operation;\n","var property = require('../util').property;\n\nfunction Paginator(name, paginator) {\n  property(this, 'inputToken', paginator.input_token);\n  property(this, 'limitKey', paginator.limit_key);\n  property(this, 'moreResults', paginator.more_results);\n  property(this, 'outputToken', paginator.output_token);\n  property(this, 'resultKey', paginator.result_key);\n}\n\n/**\n * @api private\n */\nmodule.exports = Paginator;\n","var util = require('../util');\nvar property = util.property;\n\nfunction ResourceWaiter(name, waiter, options) {\n  options = options || {};\n  property(this, 'name', name);\n  property(this, 'api', options.api, false);\n\n  if (waiter.operation) {\n    property(this, 'operation', util.string.lowerFirst(waiter.operation));\n  }\n\n  var self = this;\n  var keys = [\n    'type',\n    'description',\n    'delay',\n    'maxAttempts',\n    'acceptors'\n  ];\n\n  keys.forEach(function(key) {\n    var value = waiter[key];\n    if (value) {\n      property(self, key, value);\n    }\n  });\n}\n\n/**\n * @api private\n */\nmodule.exports = ResourceWaiter;\n","var Collection = require('./collection');\n\nvar util = require('../util');\n\nfunction property(obj, name, value) {\n  if (value !== null && value !== undefined) {\n    util.property.apply(this, arguments);\n  }\n}\n\nfunction memoizedProperty(obj, name) {\n  if (!obj.constructor.prototype[name]) {\n    util.memoizedProperty.apply(this, arguments);\n  }\n}\n\nfunction Shape(shape, options, memberName) {\n  options = options || {};\n\n  property(this, 'shape', shape.shape);\n  property(this, 'api', options.api, false);\n  property(this, 'type', shape.type);\n  property(this, 'enum', shape.enum);\n  property(this, 'min', shape.min);\n  property(this, 'max', shape.max);\n  property(this, 'pattern', shape.pattern);\n  property(this, 'location', shape.location || this.location || 'body');\n  property(this, 'name', this.name || shape.xmlName || shape.queryName ||\n    shape.locationName || memberName);\n  property(this, 'isStreaming', shape.streaming || this.isStreaming || false);\n  property(this, 'requiresLength', shape.requiresLength, false);\n  property(this, 'isComposite', shape.isComposite || false);\n  property(this, 'isShape', true, false);\n  property(this, 'isQueryName', Boolean(shape.queryName), false);\n  property(this, 'isLocationName', Boolean(shape.locationName), false);\n  property(this, 'isIdempotent', shape.idempotencyToken === true);\n  property(this, 'isJsonValue', shape.jsonvalue === true);\n  property(this, 'isSensitive', shape.sensitive === true || shape.prototype && shape.prototype.sensitive === true);\n  property(this, 'isEventStream', Boolean(shape.eventstream), false);\n  property(this, 'isEvent', Boolean(shape.event), false);\n  property(this, 'isEventPayload', Boolean(shape.eventpayload), false);\n  property(this, 'isEventHeader', Boolean(shape.eventheader), false);\n  property(this, 'isTimestampFormatSet', Boolean(shape.timestampFormat) || shape.prototype && shape.prototype.isTimestampFormatSet === true, false);\n  property(this, 'endpointDiscoveryId', Boolean(shape.endpointdiscoveryid), false);\n  property(this, 'hostLabel', Boolean(shape.hostLabel), false);\n\n  if (options.documentation) {\n    property(this, 'documentation', shape.documentation);\n    property(this, 'documentationUrl', shape.documentationUrl);\n  }\n\n  if (shape.xmlAttribute) {\n    property(this, 'isXmlAttribute', shape.xmlAttribute || false);\n  }\n\n  // type conversion and parsing\n  property(this, 'defaultValue', null);\n  this.toWireFormat = function(value) {\n    if (value === null || value === undefined) return '';\n    return value;\n  };\n  this.toType = function(value) { return value; };\n}\n\n/**\n * @api private\n */\nShape.normalizedTypes = {\n  character: 'string',\n  double: 'float',\n  long: 'integer',\n  short: 'integer',\n  biginteger: 'integer',\n  bigdecimal: 'float',\n  blob: 'binary'\n};\n\n/**\n * @api private\n */\nShape.types = {\n  'structure': StructureShape,\n  'list': ListShape,\n  'map': MapShape,\n  'boolean': BooleanShape,\n  'timestamp': TimestampShape,\n  'float': FloatShape,\n  'integer': IntegerShape,\n  'string': StringShape,\n  'base64': Base64Shape,\n  'binary': BinaryShape\n};\n\nShape.resolve = function resolve(shape, options) {\n  if (shape.shape) {\n    var refShape = options.api.shapes[shape.shape];\n    if (!refShape) {\n      throw new Error('Cannot find shape reference: ' + shape.shape);\n    }\n\n    return refShape;\n  } else {\n    return null;\n  }\n};\n\nShape.create = function create(shape, options, memberName) {\n  if (shape.isShape) return shape;\n\n  var refShape = Shape.resolve(shape, options);\n  if (refShape) {\n    var filteredKeys = Object.keys(shape);\n    if (!options.documentation) {\n      filteredKeys = filteredKeys.filter(function(name) {\n        return !name.match(/documentation/);\n      });\n    }\n\n    // create an inline shape with extra members\n    var InlineShape = function() {\n      refShape.constructor.call(this, shape, options, memberName);\n    };\n    InlineShape.prototype = refShape;\n    return new InlineShape();\n  } else {\n    // set type if not set\n    if (!shape.type) {\n      if (shape.members) shape.type = 'structure';\n      else if (shape.member) shape.type = 'list';\n      else if (shape.key) shape.type = 'map';\n      else shape.type = 'string';\n    }\n\n    // normalize types\n    var origType = shape.type;\n    if (Shape.normalizedTypes[shape.type]) {\n      shape.type = Shape.normalizedTypes[shape.type];\n    }\n\n    if (Shape.types[shape.type]) {\n      return new Shape.types[shape.type](shape, options, memberName);\n    } else {\n      throw new Error('Unrecognized shape type: ' + origType);\n    }\n  }\n};\n\nfunction CompositeShape(shape) {\n  Shape.apply(this, arguments);\n  property(this, 'isComposite', true);\n\n  if (shape.flattened) {\n    property(this, 'flattened', shape.flattened || false);\n  }\n}\n\nfunction StructureShape(shape, options) {\n  var self = this;\n  var requiredMap = null, firstInit = !this.isShape;\n\n  CompositeShape.apply(this, arguments);\n\n  if (firstInit) {\n    property(this, 'defaultValue', function() { return {}; });\n    property(this, 'members', {});\n    property(this, 'memberNames', []);\n    property(this, 'required', []);\n    property(this, 'isRequired', function() { return false; });\n  }\n\n  if (shape.members) {\n    property(this, 'members', new Collection(shape.members, options, function(name, member) {\n      return Shape.create(member, options, name);\n    }));\n    memoizedProperty(this, 'memberNames', function() {\n      return shape.xmlOrder || Object.keys(shape.members);\n    });\n\n    if (shape.event) {\n      memoizedProperty(this, 'eventPayloadMemberName', function() {\n        var members = self.members;\n        var memberNames = self.memberNames;\n        // iterate over members to find ones that are event payloads\n        for (var i = 0, iLen = memberNames.length; i < iLen; i++) {\n          if (members[memberNames[i]].isEventPayload) {\n            return memberNames[i];\n          }\n        }\n      });\n\n      memoizedProperty(this, 'eventHeaderMemberNames', function() {\n        var members = self.members;\n        var memberNames = self.memberNames;\n        var eventHeaderMemberNames = [];\n        // iterate over members to find ones that are event headers\n        for (var i = 0, iLen = memberNames.length; i < iLen; i++) {\n          if (members[memberNames[i]].isEventHeader) {\n            eventHeaderMemberNames.push(memberNames[i]);\n          }\n        }\n        return eventHeaderMemberNames;\n      });\n    }\n  }\n\n  if (shape.required) {\n    property(this, 'required', shape.required);\n    property(this, 'isRequired', function(name) {\n      if (!requiredMap) {\n        requiredMap = {};\n        for (var i = 0; i < shape.required.length; i++) {\n          requiredMap[shape.required[i]] = true;\n        }\n      }\n\n      return requiredMap[name];\n    }, false, true);\n  }\n\n  property(this, 'resultWrapper', shape.resultWrapper || null);\n\n  if (shape.payload) {\n    property(this, 'payload', shape.payload);\n  }\n\n  if (typeof shape.xmlNamespace === 'string') {\n    property(this, 'xmlNamespaceUri', shape.xmlNamespace);\n  } else if (typeof shape.xmlNamespace === 'object') {\n    property(this, 'xmlNamespacePrefix', shape.xmlNamespace.prefix);\n    property(this, 'xmlNamespaceUri', shape.xmlNamespace.uri);\n  }\n}\n\nfunction ListShape(shape, options) {\n  var self = this, firstInit = !this.isShape;\n  CompositeShape.apply(this, arguments);\n\n  if (firstInit) {\n    property(this, 'defaultValue', function() { return []; });\n  }\n\n  if (shape.member) {\n    memoizedProperty(this, 'member', function() {\n      return Shape.create(shape.member, options);\n    });\n  }\n\n  if (this.flattened) {\n    var oldName = this.name;\n    memoizedProperty(this, 'name', function() {\n      return self.member.name || oldName;\n    });\n  }\n}\n\nfunction MapShape(shape, options) {\n  var firstInit = !this.isShape;\n  CompositeShape.apply(this, arguments);\n\n  if (firstInit) {\n    property(this, 'defaultValue', function() { return {}; });\n    property(this, 'key', Shape.create({type: 'string'}, options));\n    property(this, 'value', Shape.create({type: 'string'}, options));\n  }\n\n  if (shape.key) {\n    memoizedProperty(this, 'key', function() {\n      return Shape.create(shape.key, options);\n    });\n  }\n  if (shape.value) {\n    memoizedProperty(this, 'value', function() {\n      return Shape.create(shape.value, options);\n    });\n  }\n}\n\nfunction TimestampShape(shape) {\n  var self = this;\n  Shape.apply(this, arguments);\n\n  if (shape.timestampFormat) {\n    property(this, 'timestampFormat', shape.timestampFormat);\n  } else if (self.isTimestampFormatSet && this.timestampFormat) {\n    property(this, 'timestampFormat', this.timestampFormat);\n  } else if (this.location === 'header') {\n    property(this, 'timestampFormat', 'rfc822');\n  } else if (this.location === 'querystring') {\n    property(this, 'timestampFormat', 'iso8601');\n  } else if (this.api) {\n    switch (this.api.protocol) {\n      case 'json':\n      case 'rest-json':\n        property(this, 'timestampFormat', 'unixTimestamp');\n        break;\n      case 'rest-xml':\n      case 'query':\n      case 'ec2':\n        property(this, 'timestampFormat', 'iso8601');\n        break;\n    }\n  }\n\n  this.toType = function(value) {\n    if (value === null || value === undefined) return null;\n    if (typeof value.toUTCString === 'function') return value;\n    return typeof value === 'string' || typeof value === 'number' ?\n           util.date.parseTimestamp(value) : null;\n  };\n\n  this.toWireFormat = function(value) {\n    return util.date.format(value, self.timestampFormat);\n  };\n}\n\nfunction StringShape() {\n  Shape.apply(this, arguments);\n\n  var nullLessProtocols = ['rest-xml', 'query', 'ec2'];\n  this.toType = function(value) {\n    value = this.api && nullLessProtocols.indexOf(this.api.protocol) > -1 ?\n      value || '' : value;\n    if (this.isJsonValue) {\n      return JSON.parse(value);\n    }\n\n    return value && typeof value.toString === 'function' ?\n      value.toString() : value;\n  };\n\n  this.toWireFormat = function(value) {\n    return this.isJsonValue ? JSON.stringify(value) : value;\n  };\n}\n\nfunction FloatShape() {\n  Shape.apply(this, arguments);\n\n  this.toType = function(value) {\n    if (value === null || value === undefined) return null;\n    return parseFloat(value);\n  };\n  this.toWireFormat = this.toType;\n}\n\nfunction IntegerShape() {\n  Shape.apply(this, arguments);\n\n  this.toType = function(value) {\n    if (value === null || value === undefined) return null;\n    return parseInt(value, 10);\n  };\n  this.toWireFormat = this.toType;\n}\n\nfunction BinaryShape() {\n  Shape.apply(this, arguments);\n  this.toType = function(value) {\n    var buf = util.base64.decode(value);\n    if (this.isSensitive && util.isNode() && typeof util.Buffer.alloc === 'function') {\n  /* Node.js can create a Buffer that is not isolated.\n   * i.e. buf.byteLength !== buf.buffer.byteLength\n   * This means that the sensitive data is accessible to anyone with access to buf.buffer.\n   * If this is the node shared Buffer, then other code within this process _could_ find this secret.\n   * Copy sensitive data to an isolated Buffer and zero the sensitive data.\n   * While this is safe to do here, copying this code somewhere else may produce unexpected results.\n   */\n      var secureBuf = util.Buffer.alloc(buf.length, buf);\n      buf.fill(0);\n      buf = secureBuf;\n    }\n    return buf;\n  };\n  this.toWireFormat = util.base64.encode;\n}\n\nfunction Base64Shape() {\n  BinaryShape.apply(this, arguments);\n}\n\nfunction BooleanShape() {\n  Shape.apply(this, arguments);\n\n  this.toType = function(value) {\n    if (typeof value === 'boolean') return value;\n    if (value === null || value === undefined) return null;\n    return value === 'true';\n  };\n}\n\n/**\n * @api private\n */\nShape.shapes = {\n  StructureShape: StructureShape,\n  ListShape: ListShape,\n  MapShape: MapShape,\n  StringShape: StringShape,\n  BooleanShape: BooleanShape,\n  Base64Shape: Base64Shape\n};\n\n/**\n * @api private\n */\nmodule.exports = Shape;\n","var util = require('./util');\n\nutil.isBrowser = function() { return false; };\nutil.isNode = function() { return true; };\n\n// node.js specific modules\nutil.crypto.lib = require('crypto');\nutil.Buffer = require('buffer').Buffer;\nutil.domain = require('domain');\nutil.stream = require('stream');\nutil.url = require('url');\nutil.querystring = require('querystring');\nutil.environment = 'nodejs';\nutil.createEventStream = util.stream.Readable ?\n  require('./event-stream/streaming-create-event-stream').createEventStream : require('./event-stream/buffered-create-event-stream').createEventStream;\nutil.realClock = require('./realclock/nodeClock');\nutil.clientSideMonitoring = {\n  Publisher: require('./publisher').Publisher,\n  configProvider: require('./publisher/configuration'),\n};\nutil.iniLoader = require('./shared-ini').iniLoader;\n\nvar AWS;\n\n/**\n * @api private\n */\nmodule.exports = AWS = require('./core');\n\nrequire('./credentials');\nrequire('./credentials/credential_provider_chain');\nrequire('./credentials/temporary_credentials');\nrequire('./credentials/chainable_temporary_credentials');\nrequire('./credentials/web_identity_credentials');\nrequire('./credentials/cognito_identity_credentials');\nrequire('./credentials/saml_credentials');\nrequire('./credentials/process_credentials');\n\n// Load the xml2js XML parser\nAWS.XML.Parser = require('./xml/node_parser');\n\n// Load Node HTTP client\nrequire('./http/node');\n\nrequire('./shared-ini/ini-loader');\n\n// Load custom credential providers\nrequire('./credentials/ec2_metadata_credentials');\nrequire('./credentials/remote_credentials');\nrequire('./credentials/ecs_credentials');\nrequire('./credentials/environment_credentials');\nrequire('./credentials/file_system_credentials');\nrequire('./credentials/shared_ini_file_credentials');\nrequire('./credentials/process_credentials');\n\n// Setup default chain providers\n// If this changes, please update documentation for\n// AWS.CredentialProviderChain.defaultProviders in\n// credentials/credential_provider_chain.js\nAWS.CredentialProviderChain.defaultProviders = [\n  function () { return new AWS.EnvironmentCredentials('AWS'); },\n  function () { return new AWS.EnvironmentCredentials('AMAZON'); },\n  function () { return new AWS.SharedIniFileCredentials(); },\n  function () { return new AWS.ECSCredentials(); },\n  function () { return new AWS.ProcessCredentials(); },\n  function () { return new AWS.EC2MetadataCredentials(); }\n];\n\n// Update configuration keys\nAWS.util.update(AWS.Config.prototype.keys, {\n  credentials: function () {\n    var credentials = null;\n    new AWS.CredentialProviderChain([\n      function () { return new AWS.EnvironmentCredentials('AWS'); },\n      function () { return new AWS.EnvironmentCredentials('AMAZON'); },\n      function () { return new AWS.SharedIniFileCredentials({ disableAssumeRole: true }); }\n    ]).resolve(function(err, creds) {\n      if (!err) credentials = creds;\n    });\n    return credentials;\n  },\n  credentialProvider: function() {\n    return new AWS.CredentialProviderChain();\n  },\n  logger: function () {\n    return process.env.AWSJS_DEBUG ? console : null;\n  },\n  region: function() {\n    var env = process.env;\n    var region = env.AWS_REGION || env.AMAZON_REGION;\n    if (env[AWS.util.configOptInEnv]) {\n      var toCheck = [\n        {filename: env[AWS.util.sharedCredentialsFileEnv]},\n        {isConfig: true, filename: env[AWS.util.sharedConfigFileEnv]}\n      ];\n      var iniLoader = AWS.util.iniLoader;\n      while (!region && toCheck.length) {\n        var configFile = iniLoader.loadFrom(toCheck.shift());\n        var profile = configFile[env.AWS_PROFILE || AWS.util.defaultProfile];\n        region = profile && profile.region;\n      }\n    }\n    return region;\n  }\n});\n\n// Reset configuration\nAWS.config = new AWS.Config();\n","var AWS = require('./core');\n\n/**\n * @api private\n */\nAWS.ParamValidator = AWS.util.inherit({\n  /**\n   * Create a new validator object.\n   *\n   * @param validation [Boolean|map] whether input parameters should be\n   *     validated against the operation description before sending the\n   *     request. Pass a map to enable any of the following specific\n   *     validation features:\n   *\n   *     * **min** [Boolean] &mdash; Validates that a value meets the min\n   *       constraint. This is enabled by default when paramValidation is set\n   *       to `true`.\n   *     * **max** [Boolean] &mdash; Validates that a value meets the max\n   *       constraint.\n   *     * **pattern** [Boolean] &mdash; Validates that a string value matches a\n   *       regular expression.\n   *     * **enum** [Boolean] &mdash; Validates that a string value matches one\n   *       of the allowable enum values.\n   */\n  constructor: function ParamValidator(validation) {\n    if (validation === true || validation === undefined) {\n      validation = {'min': true};\n    }\n    this.validation = validation;\n  },\n\n  validate: function validate(shape, params, context) {\n    this.errors = [];\n    this.validateMember(shape, params || {}, context || 'params');\n\n    if (this.errors.length > 1) {\n      var msg = this.errors.join('\\n* ');\n      msg = 'There were ' + this.errors.length +\n        ' validation errors:\\n* ' + msg;\n      throw AWS.util.error(new Error(msg),\n        {code: 'MultipleValidationErrors', errors: this.errors});\n    } else if (this.errors.length === 1) {\n      throw this.errors[0];\n    } else {\n      return true;\n    }\n  },\n\n  fail: function fail(code, message) {\n    this.errors.push(AWS.util.error(new Error(message), {code: code}));\n  },\n\n  validateStructure: function validateStructure(shape, params, context) {\n    this.validateType(params, context, ['object'], 'structure');\n\n    var paramName;\n    for (var i = 0; shape.required && i < shape.required.length; i++) {\n      paramName = shape.required[i];\n      var value = params[paramName];\n      if (value === undefined || value === null) {\n        this.fail('MissingRequiredParameter',\n          'Missing required key \\'' + paramName + '\\' in ' + context);\n      }\n    }\n\n    // validate hash members\n    for (paramName in params) {\n      if (!Object.prototype.hasOwnProperty.call(params, paramName)) continue;\n\n      var paramValue = params[paramName],\n          memberShape = shape.members[paramName];\n\n      if (memberShape !== undefined) {\n        var memberContext = [context, paramName].join('.');\n        this.validateMember(memberShape, paramValue, memberContext);\n      } else {\n        this.fail('UnexpectedParameter',\n          'Unexpected key \\'' + paramName + '\\' found in ' + context);\n      }\n    }\n\n    return true;\n  },\n\n  validateMember: function validateMember(shape, param, context) {\n    switch (shape.type) {\n      case 'structure':\n        return this.validateStructure(shape, param, context);\n      case 'list':\n        return this.validateList(shape, param, context);\n      case 'map':\n        return this.validateMap(shape, param, context);\n      default:\n        return this.validateScalar(shape, param, context);\n    }\n  },\n\n  validateList: function validateList(shape, params, context) {\n    if (this.validateType(params, context, [Array])) {\n      this.validateRange(shape, params.length, context, 'list member count');\n      // validate array members\n      for (var i = 0; i < params.length; i++) {\n        this.validateMember(shape.member, params[i], context + '[' + i + ']');\n      }\n    }\n  },\n\n  validateMap: function validateMap(shape, params, context) {\n    if (this.validateType(params, context, ['object'], 'map')) {\n      // Build up a count of map members to validate range traits.\n      var mapCount = 0;\n      for (var param in params) {\n        if (!Object.prototype.hasOwnProperty.call(params, param)) continue;\n        // Validate any map key trait constraints\n        this.validateMember(shape.key, param,\n                            context + '[key=\\'' + param + '\\']');\n        this.validateMember(shape.value, params[param],\n                            context + '[\\'' + param + '\\']');\n        mapCount++;\n      }\n      this.validateRange(shape, mapCount, context, 'map member count');\n    }\n  },\n\n  validateScalar: function validateScalar(shape, value, context) {\n    switch (shape.type) {\n      case null:\n      case undefined:\n      case 'string':\n        return this.validateString(shape, value, context);\n      case 'base64':\n      case 'binary':\n        return this.validatePayload(value, context);\n      case 'integer':\n      case 'float':\n        return this.validateNumber(shape, value, context);\n      case 'boolean':\n        return this.validateType(value, context, ['boolean']);\n      case 'timestamp':\n        return this.validateType(value, context, [Date,\n          /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?Z$/, 'number'],\n          'Date object, ISO-8601 string, or a UNIX timestamp');\n      default:\n        return this.fail('UnkownType', 'Unhandled type ' +\n                         shape.type + ' for ' + context);\n    }\n  },\n\n  validateString: function validateString(shape, value, context) {\n    var validTypes = ['string'];\n    if (shape.isJsonValue) {\n      validTypes = validTypes.concat(['number', 'object', 'boolean']);\n    }\n    if (value !== null && this.validateType(value, context, validTypes)) {\n      this.validateEnum(shape, value, context);\n      this.validateRange(shape, value.length, context, 'string length');\n      this.validatePattern(shape, value, context);\n      this.validateUri(shape, value, context);\n    }\n  },\n\n  validateUri: function validateUri(shape, value, context) {\n    if (shape['location'] === 'uri') {\n      if (value.length === 0) {\n        this.fail('UriParameterError', 'Expected uri parameter to have length >= 1,'\n          + ' but found \"' + value +'\" for ' + context);\n      }\n    }\n  },\n\n  validatePattern: function validatePattern(shape, value, context) {\n    if (this.validation['pattern'] && shape['pattern'] !== undefined) {\n      if (!(new RegExp(shape['pattern'])).test(value)) {\n        this.fail('PatternMatchError', 'Provided value \"' + value + '\" '\n          + 'does not match regex pattern /' + shape['pattern'] + '/ for '\n          + context);\n      }\n    }\n  },\n\n  validateRange: function validateRange(shape, value, context, descriptor) {\n    if (this.validation['min']) {\n      if (shape['min'] !== undefined && value < shape['min']) {\n        this.fail('MinRangeError', 'Expected ' + descriptor + ' >= '\n          + shape['min'] + ', but found ' + value + ' for ' + context);\n      }\n    }\n    if (this.validation['max']) {\n      if (shape['max'] !== undefined && value > shape['max']) {\n        this.fail('MaxRangeError', 'Expected ' + descriptor + ' <= '\n          + shape['max'] + ', but found ' + value + ' for ' + context);\n      }\n    }\n  },\n\n  validateEnum: function validateRange(shape, value, context) {\n    if (this.validation['enum'] && shape['enum'] !== undefined) {\n      // Fail if the string value is not present in the enum list\n      if (shape['enum'].indexOf(value) === -1) {\n        this.fail('EnumError', 'Found string value of ' + value + ', but '\n          + 'expected ' + shape['enum'].join('|') + ' for ' + context);\n      }\n    }\n  },\n\n  validateType: function validateType(value, context, acceptedTypes, type) {\n    // We will not log an error for null or undefined, but we will return\n    // false so that callers know that the expected type was not strictly met.\n    if (value === null || value === undefined) return false;\n\n    var foundInvalidType = false;\n    for (var i = 0; i < acceptedTypes.length; i++) {\n      if (typeof acceptedTypes[i] === 'string') {\n        if (typeof value === acceptedTypes[i]) return true;\n      } else if (acceptedTypes[i] instanceof RegExp) {\n        if ((value || '').toString().match(acceptedTypes[i])) return true;\n      } else {\n        if (value instanceof acceptedTypes[i]) return true;\n        if (AWS.util.isType(value, acceptedTypes[i])) return true;\n        if (!type && !foundInvalidType) acceptedTypes = acceptedTypes.slice();\n        acceptedTypes[i] = AWS.util.typeName(acceptedTypes[i]);\n      }\n      foundInvalidType = true;\n    }\n\n    var acceptedType = type;\n    if (!acceptedType) {\n      acceptedType = acceptedTypes.join(', ').replace(/,([^,]+)$/, ', or$1');\n    }\n\n    var vowel = acceptedType.match(/^[aeiou]/i) ? 'n' : '';\n    this.fail('InvalidParameterType', 'Expected ' + context + ' to be a' +\n              vowel + ' ' + acceptedType);\n    return false;\n  },\n\n  validateNumber: function validateNumber(shape, value, context) {\n    if (value === null || value === undefined) return;\n    if (typeof value === 'string') {\n      var castedValue = parseFloat(value);\n      if (castedValue.toString() === value) value = castedValue;\n    }\n    if (this.validateType(value, context, ['number'])) {\n      this.validateRange(shape, value, context, 'numeric value');\n    }\n  },\n\n  validatePayload: function validatePayload(value, context) {\n    if (value === null || value === undefined) return;\n    if (typeof value === 'string') return;\n    if (value && typeof value.byteLength === 'number') return; // typed arrays\n    if (AWS.util.isNode()) { // special check for buffer/stream in Node.js\n      var Stream = AWS.util.stream.Stream;\n      if (AWS.util.Buffer.isBuffer(value) || value instanceof Stream) return;\n    } else {\n      if (typeof Blob !== void 0 && value instanceof Blob) return;\n    }\n\n    var types = ['Buffer', 'Stream', 'File', 'Blob', 'ArrayBuffer', 'DataView'];\n    if (value) {\n      for (var i = 0; i < types.length; i++) {\n        if (AWS.util.isType(value, types[i])) return;\n        if (AWS.util.typeName(value.constructor) === types[i]) return;\n      }\n    }\n\n    this.fail('InvalidParameterType', 'Expected ' + context + ' to be a ' +\n      'string, Buffer, Stream, Blob, or typed array object');\n  }\n});\n","var AWS = require('../core');\nvar rest = AWS.Protocol.Rest;\n\n/**\n * A presigner object can be used to generate presigned urls for the Polly service.\n */\nAWS.Polly.Presigner = AWS.util.inherit({\n    /**\n     * Creates a presigner object with a set of configuration options.\n     *\n     * @option options params [map] An optional map of parameters to bind to every\n     *   request sent by this service object.\n     * @option options service [AWS.Polly] An optional pre-configured instance\n     *  of the AWS.Polly service object to use for requests. The object may\n     *  bound parameters used by the presigner.\n     * @see AWS.Polly.constructor\n     */\n    constructor: function Signer(options) {\n        options = options || {};\n        this.options = options;\n        this.service = options.service;\n        this.bindServiceObject(options);\n        this._operations = {};\n    },\n\n    /**\n     * @api private\n     */\n    bindServiceObject: function bindServiceObject(options) {\n        options = options || {};\n        if (!this.service) {\n            this.service = new AWS.Polly(options);\n        } else {\n            var config = AWS.util.copy(this.service.config);\n            this.service = new this.service.constructor.__super__(config);\n            this.service.config.params = AWS.util.merge(this.service.config.params || {}, options.params);\n        }\n    },\n\n    /**\n     * @api private\n     */\n    modifyInputMembers: function modifyInputMembers(input) {\n        // make copies of the input so we don't overwrite the api\n        // need to be careful to copy anything we access/modify\n        var modifiedInput = AWS.util.copy(input);\n        modifiedInput.members = AWS.util.copy(input.members);\n        AWS.util.each(input.members, function(name, member) {\n            modifiedInput.members[name] = AWS.util.copy(member);\n            // update location and locationName\n            if (!member.location || member.location === 'body') {\n                modifiedInput.members[name].location = 'querystring';\n                modifiedInput.members[name].locationName = name;\n            }\n        });\n        return modifiedInput;\n    },\n\n    /**\n     * @api private\n     */\n    convertPostToGet: function convertPostToGet(req) {\n        // convert method\n        req.httpRequest.method = 'GET';\n\n        var operation = req.service.api.operations[req.operation];\n        // get cached operation input first\n        var input = this._operations[req.operation];\n        if (!input) {\n            // modify the original input\n            this._operations[req.operation] = input = this.modifyInputMembers(operation.input);\n        }\n\n        var uri = rest.generateURI(req.httpRequest.endpoint.path, operation.httpPath, input, req.params);\n\n        req.httpRequest.path = uri;\n        req.httpRequest.body = '';\n\n        // don't need these headers on a GET request\n        delete req.httpRequest.headers['Content-Length'];\n        delete req.httpRequest.headers['Content-Type'];\n    },\n\n    /**\n     * @overload getSynthesizeSpeechUrl(params = {}, [expires = 3600], [callback])\n     *   Generate a presigned url for {AWS.Polly.synthesizeSpeech}.\n     *   @note You must ensure that you have static or previously resolved\n     *     credentials if you call this method synchronously (with no callback),\n     *     otherwise it may not properly sign the request. If you cannot guarantee\n     *     this (you are using an asynchronous credential provider, i.e., EC2\n     *     IAM roles), you should always call this method with an asynchronous\n     *     callback.\n     *   @param params [map] parameters to pass to the operation. See the {AWS.Polly.synthesizeSpeech}\n     *     operation for the expected operation parameters.\n     *   @param expires [Integer] (3600) the number of seconds to expire the pre-signed URL operation in.\n     *     Defaults to 1 hour.\n     *   @return [string] if called synchronously (with no callback), returns the signed URL.\n     *   @return [null] nothing is returned if a callback is provided.\n     *   @callback callback function (err, url)\n     *     If a callback is supplied, it is called when a signed URL has been generated.\n     *     @param err [Error] the error object returned from the presigner.\n     *     @param url [String] the signed URL.\n     *   @see AWS.Polly.synthesizeSpeech\n     */\n    getSynthesizeSpeechUrl: function getSynthesizeSpeechUrl(params, expires, callback) {\n        var self = this;\n        var request = this.service.makeRequest('synthesizeSpeech', params);\n        // remove existing build listeners\n        request.removeAllListeners('build');\n        request.on('build', function(req) {\n            self.convertPostToGet(req);\n        });\n        return request.presign(expires, callback);\n    }\n});\n","var util =  require('../util');\nvar AWS = require('../core');\n\n/**\n * Prepend prefix defined by API model to endpoint that's already\n * constructed. This feature does not apply to operations using\n * endpoint discovery and can be disabled.\n * @api private\n */\nfunction populateHostPrefix(request)  {\n  var enabled = request.service.config.hostPrefixEnabled;\n  if (!enabled) return request;\n  var operationModel = request.service.api.operations[request.operation];\n  //don't marshal host prefix when operation has endpoint discovery traits\n  if (hasEndpointDiscover(request)) return request;\n  if (operationModel.endpoint && operationModel.endpoint.hostPrefix) {\n    var hostPrefixNotation = operationModel.endpoint.hostPrefix;\n    var hostPrefix = expandHostPrefix(hostPrefixNotation, request.params, operationModel.input);\n    prependEndpointPrefix(request.httpRequest.endpoint, hostPrefix);\n    validateHostname(request.httpRequest.endpoint.hostname);\n  }\n  return request;\n}\n\n/**\n * @api private\n */\nfunction hasEndpointDiscover(request) {\n  var api = request.service.api;\n  var operationModel = api.operations[request.operation];\n  var isEndpointOperation = api.endpointOperation && (api.endpointOperation === util.string.lowerFirst(operationModel.name));\n  return (operationModel.endpointDiscoveryRequired !== 'NULL' || isEndpointOperation === true);\n}\n\n/**\n * @api private\n */\nfunction expandHostPrefix(hostPrefixNotation, params, shape) {\n  util.each(shape.members, function(name, member) {\n    if (member.hostLabel === true) {\n      if (typeof params[name] !== 'string' || params[name] === '') {\n        throw util.error(new Error(), {\n          message: 'Parameter ' + name + ' should be a non-empty string.',\n          code: 'InvalidParameter'\n        });\n      }\n      var regex = new RegExp('\\\\{' + name + '\\\\}', 'g');\n      hostPrefixNotation = hostPrefixNotation.replace(regex, params[name]);\n    }\n  });\n  return hostPrefixNotation;\n}\n\n/**\n * @api private\n */\nfunction prependEndpointPrefix(endpoint, prefix) {\n  if (endpoint.host) {\n    endpoint.host = prefix + endpoint.host;\n  }\n  if (endpoint.hostname) {\n    endpoint.hostname = prefix + endpoint.hostname;\n  }\n}\n\n/**\n * @api private\n */\nfunction validateHostname(hostname) {\n  var labels = hostname.split('.');\n  //Reference: https://tools.ietf.org/html/rfc1123#section-2\n  var hostPattern = /^[a-zA-Z0-9]{1}$|^[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9]$/;\n  util.arrayEach(labels, function(label) {\n    if (!label.length || label.length < 1 || label.length > 63) {\n      throw util.error(new Error(), {\n        code: 'ValidationError',\n        message: 'Hostname label length should be between 1 to 63 characters, inclusive.'\n      });\n    }\n    if (!hostPattern.test(label)) {\n      throw AWS.util.error(new Error(),\n        {code: 'ValidationError', message: label + ' is not hostname compatible.'});\n    }\n  });\n}\n\nmodule.exports = {\n  populateHostPrefix: populateHostPrefix\n};\n","var util = require('../util');\nvar JsonBuilder = require('../json/builder');\nvar JsonParser = require('../json/parser');\nvar populateHostPrefix = require('./helpers').populateHostPrefix;\n\nfunction buildRequest(req) {\n  var httpRequest = req.httpRequest;\n  var api = req.service.api;\n  var target = api.targetPrefix + '.' + api.operations[req.operation].name;\n  var version = api.jsonVersion || '1.0';\n  var input = api.operations[req.operation].input;\n  var builder = new JsonBuilder();\n\n  if (version === 1) version = '1.0';\n  httpRequest.body = builder.build(req.params || {}, input);\n  httpRequest.headers['Content-Type'] = 'application/x-amz-json-' + version;\n  httpRequest.headers['X-Amz-Target'] = target;\n\n  populateHostPrefix(req);\n}\n\nfunction extractError(resp) {\n  var error = {};\n  var httpResponse = resp.httpResponse;\n\n  error.code = httpResponse.headers['x-amzn-errortype'] || 'UnknownError';\n  if (typeof error.code === 'string') {\n    error.code = error.code.split(':')[0];\n  }\n\n  if (httpResponse.body.length > 0) {\n    try {\n      var e = JSON.parse(httpResponse.body.toString());\n      if (e.__type || e.code) {\n        error.code = (e.__type || e.code).split('#').pop();\n      }\n      if (error.code === 'RequestEntityTooLarge') {\n        error.message = 'Request body must be less than 1 MB';\n      } else {\n        error.message = (e.message || e.Message || null);\n      }\n    } catch (e) {\n      error.statusCode = httpResponse.statusCode;\n      error.message = httpResponse.statusMessage;\n    }\n  } else {\n    error.statusCode = httpResponse.statusCode;\n    error.message = httpResponse.statusCode.toString();\n  }\n\n  resp.error = util.error(new Error(), error);\n}\n\nfunction extractData(resp) {\n  var body = resp.httpResponse.body.toString() || '{}';\n  if (resp.request.service.config.convertResponseTypes === false) {\n    resp.data = JSON.parse(body);\n  } else {\n    var operation = resp.request.service.api.operations[resp.request.operation];\n    var shape = operation.output || {};\n    var parser = new JsonParser();\n    resp.data = parser.parse(body, shape);\n  }\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n  buildRequest: buildRequest,\n  extractError: extractError,\n  extractData: extractData\n};\n","var AWS = require('../core');\nvar util = require('../util');\nvar QueryParamSerializer = require('../query/query_param_serializer');\nvar Shape = require('../model/shape');\nvar populateHostPrefix = require('./helpers').populateHostPrefix;\n\nfunction buildRequest(req) {\n  var operation = req.service.api.operations[req.operation];\n  var httpRequest = req.httpRequest;\n  httpRequest.headers['Content-Type'] =\n    'application/x-www-form-urlencoded; charset=utf-8';\n  httpRequest.params = {\n    Version: req.service.api.apiVersion,\n    Action: operation.name\n  };\n\n  // convert the request parameters into a list of query params,\n  // e.g. Deeply.NestedParam.0.Name=value\n  var builder = new QueryParamSerializer();\n  builder.serialize(req.params, operation.input, function(name, value) {\n    httpRequest.params[name] = value;\n  });\n  httpRequest.body = util.queryParamsToString(httpRequest.params);\n\n  populateHostPrefix(req);\n}\n\nfunction extractError(resp) {\n  var data, body = resp.httpResponse.body.toString();\n  if (body.match('<UnknownOperationException')) {\n    data = {\n      Code: 'UnknownOperation',\n      Message: 'Unknown operation ' + resp.request.operation\n    };\n  } else {\n    try {\n      data = new AWS.XML.Parser().parse(body);\n    } catch (e) {\n      data = {\n        Code: resp.httpResponse.statusCode,\n        Message: resp.httpResponse.statusMessage\n      };\n    }\n  }\n\n  if (data.requestId && !resp.requestId) resp.requestId = data.requestId;\n  if (data.Errors) data = data.Errors;\n  if (data.Error) data = data.Error;\n  if (data.Code) {\n    resp.error = util.error(new Error(), {\n      code: data.Code,\n      message: data.Message\n    });\n  } else {\n    resp.error = util.error(new Error(), {\n      code: resp.httpResponse.statusCode,\n      message: null\n    });\n  }\n}\n\nfunction extractData(resp) {\n  var req = resp.request;\n  var operation = req.service.api.operations[req.operation];\n  var shape = operation.output || {};\n  var origRules = shape;\n\n  if (origRules.resultWrapper) {\n    var tmp = Shape.create({type: 'structure'});\n    tmp.members[origRules.resultWrapper] = shape;\n    tmp.memberNames = [origRules.resultWrapper];\n    util.property(shape, 'name', shape.resultWrapper);\n    shape = tmp;\n  }\n\n  var parser = new AWS.XML.Parser();\n\n  // TODO: Refactor XML Parser to parse RequestId from response.\n  if (shape && shape.members && !shape.members._XAMZRequestId) {\n    var requestIdShape = Shape.create(\n      { type: 'string' },\n      { api: { protocol: 'query' } },\n      'requestId'\n    );\n    shape.members._XAMZRequestId = requestIdShape;\n  }\n\n  var data = parser.parse(resp.httpResponse.body.toString(), shape);\n  resp.requestId = data._XAMZRequestId || data.requestId;\n\n  if (data._XAMZRequestId) delete data._XAMZRequestId;\n\n  if (origRules.resultWrapper) {\n    if (data[origRules.resultWrapper]) {\n      util.update(data, data[origRules.resultWrapper]);\n      delete data[origRules.resultWrapper];\n    }\n  }\n\n  resp.data = data;\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n  buildRequest: buildRequest,\n  extractError: extractError,\n  extractData: extractData\n};\n","var util = require('../util');\nvar populateHostPrefix = require('./helpers').populateHostPrefix;\n\nfunction populateMethod(req) {\n  req.httpRequest.method = req.service.api.operations[req.operation].httpMethod;\n}\n\nfunction generateURI(endpointPath, operationPath, input, params) {\n  var uri = [endpointPath, operationPath].join('/');\n  uri = uri.replace(/\\/+/g, '/');\n\n  var queryString = {}, queryStringSet = false;\n  util.each(input.members, function (name, member) {\n    var paramValue = params[name];\n    if (paramValue === null || paramValue === undefined) return;\n    if (member.location === 'uri') {\n      var regex = new RegExp('\\\\{' + member.name + '(\\\\+)?\\\\}');\n      uri = uri.replace(regex, function(_, plus) {\n        var fn = plus ? util.uriEscapePath : util.uriEscape;\n        return fn(String(paramValue));\n      });\n    } else if (member.location === 'querystring') {\n      queryStringSet = true;\n\n      if (member.type === 'list') {\n        queryString[member.name] = paramValue.map(function(val) {\n          return util.uriEscape(member.member.toWireFormat(val).toString());\n        });\n      } else if (member.type === 'map') {\n        util.each(paramValue, function(key, value) {\n          if (Array.isArray(value)) {\n            queryString[key] = value.map(function(val) {\n              return util.uriEscape(String(val));\n            });\n          } else {\n            queryString[key] = util.uriEscape(String(value));\n          }\n        });\n      } else {\n        queryString[member.name] = util.uriEscape(member.toWireFormat(paramValue).toString());\n      }\n    }\n  });\n\n  if (queryStringSet) {\n    uri += (uri.indexOf('?') >= 0 ? '&' : '?');\n    var parts = [];\n    util.arrayEach(Object.keys(queryString).sort(), function(key) {\n      if (!Array.isArray(queryString[key])) {\n        queryString[key] = [queryString[key]];\n      }\n      for (var i = 0; i < queryString[key].length; i++) {\n        parts.push(util.uriEscape(String(key)) + '=' + queryString[key][i]);\n      }\n    });\n    uri += parts.join('&');\n  }\n\n  return uri;\n}\n\nfunction populateURI(req) {\n  var operation = req.service.api.operations[req.operation];\n  var input = operation.input;\n\n  var uri = generateURI(req.httpRequest.endpoint.path, operation.httpPath, input, req.params);\n  req.httpRequest.path = uri;\n}\n\nfunction populateHeaders(req) {\n  var operation = req.service.api.operations[req.operation];\n  util.each(operation.input.members, function (name, member) {\n    var value = req.params[name];\n    if (value === null || value === undefined) return;\n\n    if (member.location === 'headers' && member.type === 'map') {\n      util.each(value, function(key, memberValue) {\n        req.httpRequest.headers[member.name + key] = memberValue;\n      });\n    } else if (member.location === 'header') {\n      value = member.toWireFormat(value).toString();\n      if (member.isJsonValue) {\n        value = util.base64.encode(value);\n      }\n      req.httpRequest.headers[member.name] = value;\n    }\n  });\n}\n\nfunction buildRequest(req) {\n  populateMethod(req);\n  populateURI(req);\n  populateHeaders(req);\n  populateHostPrefix(req);\n}\n\nfunction extractError() {\n}\n\nfunction extractData(resp) {\n  var req = resp.request;\n  var data = {};\n  var r = resp.httpResponse;\n  var operation = req.service.api.operations[req.operation];\n  var output = operation.output;\n\n  // normalize headers names to lower-cased keys for matching\n  var headers = {};\n  util.each(r.headers, function (k, v) {\n    headers[k.toLowerCase()] = v;\n  });\n\n  util.each(output.members, function(name, member) {\n    var header = (member.name || name).toLowerCase();\n    if (member.location === 'headers' && member.type === 'map') {\n      data[name] = {};\n      var location = member.isLocationName ? member.name : '';\n      var pattern = new RegExp('^' + location + '(.+)', 'i');\n      util.each(r.headers, function (k, v) {\n        var result = k.match(pattern);\n        if (result !== null) {\n          data[name][result[1]] = v;\n        }\n      });\n    } else if (member.location === 'header') {\n      if (headers[header] !== undefined) {\n        var value = member.isJsonValue ?\n          util.base64.decode(headers[header]) :\n          headers[header];\n        data[name] = member.toType(value);\n      }\n    } else if (member.location === 'statusCode') {\n      data[name] = parseInt(r.statusCode, 10);\n    }\n  });\n\n  resp.data = data;\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n  buildRequest: buildRequest,\n  extractError: extractError,\n  extractData: extractData,\n  generateURI: generateURI\n};\n","var util = require('../util');\nvar Rest = require('./rest');\nvar Json = require('./json');\nvar JsonBuilder = require('../json/builder');\nvar JsonParser = require('../json/parser');\n\nfunction populateBody(req) {\n  var builder = new JsonBuilder();\n  var input = req.service.api.operations[req.operation].input;\n\n  if (input.payload) {\n    var params = {};\n    var payloadShape = input.members[input.payload];\n    params = req.params[input.payload];\n    if (params === undefined) return;\n\n    if (payloadShape.type === 'structure') {\n      req.httpRequest.body = builder.build(params, payloadShape);\n      applyContentTypeHeader(req);\n    } else { // non-JSON payload\n      req.httpRequest.body = params;\n      if (payloadShape.type === 'binary' || payloadShape.isStreaming) {\n        applyContentTypeHeader(req, true);\n      }\n    }\n  } else {\n    var body = builder.build(req.params, input);\n    if (body !== '{}' || req.httpRequest.method !== 'GET') { //don't send empty body for GET method\n      req.httpRequest.body = body;\n    }\n    applyContentTypeHeader(req);\n  }\n}\n\nfunction applyContentTypeHeader(req, isBinary) {\n  var operation = req.service.api.operations[req.operation];\n  var input = operation.input;\n\n  if (!req.httpRequest.headers['Content-Type']) {\n    var type = isBinary ? 'binary/octet-stream' : 'application/json';\n    req.httpRequest.headers['Content-Type'] = type;\n  }\n}\n\nfunction buildRequest(req) {\n  Rest.buildRequest(req);\n\n  // never send body payload on HEAD/DELETE\n  if (['HEAD', 'DELETE'].indexOf(req.httpRequest.method) < 0) {\n    populateBody(req);\n  }\n}\n\nfunction extractError(resp) {\n  Json.extractError(resp);\n}\n\nfunction extractData(resp) {\n  Rest.extractData(resp);\n\n  var req = resp.request;\n  var operation = req.service.api.operations[req.operation];\n  var rules = req.service.api.operations[req.operation].output || {};\n  var parser;\n  var hasEventOutput = operation.hasEventOutput;\n\n  if (rules.payload) {\n    var payloadMember = rules.members[rules.payload];\n    var body = resp.httpResponse.body;\n    if (payloadMember.isEventStream) {\n      parser = new JsonParser();\n      resp.data[payload] = util.createEventStream(\n        AWS.HttpClient.streamsApiVersion === 2 ? resp.httpResponse.stream : body,\n        parser,\n        payloadMember\n      );\n    } else if (payloadMember.type === 'structure' || payloadMember.type === 'list') {\n      var parser = new JsonParser();\n      resp.data[rules.payload] = parser.parse(body, payloadMember);\n    } else if (payloadMember.type === 'binary' || payloadMember.isStreaming) {\n      resp.data[rules.payload] = body;\n    } else {\n      resp.data[rules.payload] = payloadMember.toType(body);\n    }\n  } else {\n    var data = resp.data;\n    Json.extractData(resp);\n    resp.data = util.merge(data, resp.data);\n  }\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n  buildRequest: buildRequest,\n  extractError: extractError,\n  extractData: extractData\n};\n","var AWS = require('../core');\nvar util = require('../util');\nvar Rest = require('./rest');\n\nfunction populateBody(req) {\n  var input = req.service.api.operations[req.operation].input;\n  var builder = new AWS.XML.Builder();\n  var params = req.params;\n\n  var payload = input.payload;\n  if (payload) {\n    var payloadMember = input.members[payload];\n    params = params[payload];\n    if (params === undefined) return;\n\n    if (payloadMember.type === 'structure') {\n      var rootElement = payloadMember.name;\n      req.httpRequest.body = builder.toXML(params, payloadMember, rootElement, true);\n    } else { // non-xml payload\n      req.httpRequest.body = params;\n    }\n  } else {\n    req.httpRequest.body = builder.toXML(params, input, input.name ||\n      input.shape || util.string.upperFirst(req.operation) + 'Request');\n  }\n}\n\nfunction buildRequest(req) {\n  Rest.buildRequest(req);\n\n  // never send body payload on GET/HEAD\n  if (['GET', 'HEAD'].indexOf(req.httpRequest.method) < 0) {\n    populateBody(req);\n  }\n}\n\nfunction extractError(resp) {\n  Rest.extractError(resp);\n\n  var data;\n  try {\n    data = new AWS.XML.Parser().parse(resp.httpResponse.body.toString());\n  } catch (e) {\n    data = {\n      Code: resp.httpResponse.statusCode,\n      Message: resp.httpResponse.statusMessage\n    };\n  }\n\n  if (data.Errors) data = data.Errors;\n  if (data.Error) data = data.Error;\n  if (data.Code) {\n    resp.error = util.error(new Error(), {\n      code: data.Code,\n      message: data.Message\n    });\n  } else {\n    resp.error = util.error(new Error(), {\n      code: resp.httpResponse.statusCode,\n      message: null\n    });\n  }\n}\n\nfunction extractData(resp) {\n  Rest.extractData(resp);\n\n  var parser;\n  var req = resp.request;\n  var body = resp.httpResponse.body;\n  var operation = req.service.api.operations[req.operation];\n  var output = operation.output;\n\n  var hasEventOutput = operation.hasEventOutput;\n\n  var payload = output.payload;\n  if (payload) {\n    var payloadMember = output.members[payload];\n    if (payloadMember.isEventStream) {\n      parser = new AWS.XML.Parser();\n      resp.data[payload] = util.createEventStream(\n        AWS.HttpClient.streamsApiVersion === 2 ? resp.httpResponse.stream : resp.httpResponse.body,\n        parser,\n        payloadMember\n      );\n    } else if (payloadMember.type === 'structure') {\n      parser = new AWS.XML.Parser();\n      resp.data[payload] = parser.parse(body.toString(), payloadMember);\n    } else if (payloadMember.type === 'binary' || payloadMember.isStreaming) {\n      resp.data[payload] = body;\n    } else {\n      resp.data[payload] = payloadMember.toType(body);\n    }\n  } else if (body.length > 0) {\n    parser = new AWS.XML.Parser();\n    var data = parser.parse(body.toString(), output);\n    util.update(resp.data, data);\n  }\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n  buildRequest: buildRequest,\n  extractError: extractError,\n  extractData: extractData\n};\n","var AWS = require('../core');\n\n/**\n * Resolve client-side monitoring configuration from either environmental variables\n * or shared config file. Configurations from environmental variables have higher priority\n * than those from shared config file. The resolver will try to read the shared config file\n * no matter whether the AWS_SDK_LOAD_CONFIG variable is set.\n * @api private\n */\nfunction resolveMonitoringConfig() {\n  var config = {\n    port: undefined,\n    clientId: undefined,\n    enabled: undefined,\n    host: undefined\n  };\n  if (fromEnvironment(config) || fromConfigFile(config)) return toJSType(config);\n  return toJSType(config);\n}\n\n/**\n * Resolve configurations from environmental variables.\n * @param {object} client side monitoring config object needs to be resolved\n * @returns {boolean} whether resolving configurations is done\n * @api private\n */\nfunction fromEnvironment(config) {\n  config.port = config.port || process.env.AWS_CSM_PORT;\n  config.enabled = config.enabled || process.env.AWS_CSM_ENABLED;\n  config.clientId = config.clientId || process.env.AWS_CSM_CLIENT_ID;\n  config.host = config.host || process.env.AWS_CSM_HOST;\n  return config.port && config.enabled && config.clientId && config.host ||\n    ['false', '0'].indexOf(config.enabled) >= 0; //no need to read shared config file if explicitely disabled\n}\n\n/**\n * Resolve cofigurations from shared config file with specified role name\n * @param {object} client side monitoring config object needs to be resolved\n * @returns {boolean} whether resolving configurations is done\n * @api private\n */\nfunction fromConfigFile(config) {\n  var sharedFileConfig;\n  try {\n    var configFile = AWS.util.iniLoader.loadFrom({\n      isConfig: true,\n      filename: process.env[AWS.util.sharedConfigFileEnv]\n    });\n    var sharedFileConfig = configFile[\n      process.env.AWS_PROFILE || AWS.util.defaultProfile\n    ];\n  } catch (err) {\n    return false;\n  }\n  if (!sharedFileConfig) return config;\n  config.port = config.port || sharedFileConfig.csm_port;\n  config.enabled = config.enabled || sharedFileConfig.csm_enabled;\n  config.clientId = config.clientId || sharedFileConfig.csm_client_id;\n  config.host = config.host || sharedFileConfig.csm_host;\n  return config.port && config.enabled && config.clientId && config.host;\n}\n\n/**\n * Transfer the resolved configuration value to proper types: port as number, enabled\n * as boolean and clientId as string. The 'enabled' flag is valued to false when set\n * to 'false' or '0'.\n * @param {object} resolved client side monitoring config\n * @api private\n */\nfunction toJSType(config) {\n    //config.XXX is either undefined or string\n  var falsyNotations = ['false', '0', undefined];\n  if (!config.enabled || falsyNotations.indexOf(config.enabled.toLowerCase()) >= 0) {\n    config.enabled = false;\n  } else {\n    config.enabled = true;\n  }\n  config.port = config.port ? parseInt(config.port, 10) : undefined;\n  return config;\n}\n\nmodule.exports = resolveMonitoringConfig;\n","var util = require('../core').util;\nvar dgram = require('dgram');\nvar stringToBuffer = util.buffer.toBuffer;\n\nvar MAX_MESSAGE_SIZE = 1024 * 8; // 8 KB\n\n/**\n * Publishes metrics via udp.\n * @param {object} options Paramters for Publisher constructor\n * @param {number} [options.port = 31000] Port number\n * @param {string} [options.clientId = ''] Client Identifier\n * @param {boolean} [options.enabled = false] enable sending metrics datagram\n * @api private\n */\nfunction Publisher(options) {\n    // handle configuration\n    options = options || {};\n    this.enabled = options.enabled || false;\n    this.port = options.port || 31000;\n    this.clientId = options.clientId || '';\n    this.address = options.host || '127.0.0.1';\n    if (this.clientId.length > 255) {\n        // ClientId has a max length of 255\n        this.clientId = this.clientId.substr(0, 255);\n    }\n    this.messagesInFlight = 0;\n}\n\nPublisher.prototype.fieldsToTrim = {\n    UserAgent: 256,\n    SdkException: 128,\n    SdkExceptionMessage: 512,\n    AwsException: 128,\n    AwsExceptionMessage: 512,\n    FinalSdkException: 128,\n    FinalSdkExceptionMessage: 512,\n    FinalAwsException: 128,\n    FinalAwsExceptionMessage: 512\n\n};\n\n/**\n * Trims fields that have a specified max length.\n * @param {object} event ApiCall or ApiCallAttempt event.\n * @returns {object}\n * @api private\n */\nPublisher.prototype.trimFields = function(event) {\n    var trimmableFields = Object.keys(this.fieldsToTrim);\n    for (var i = 0, iLen = trimmableFields.length; i < iLen; i++) {\n        var field = trimmableFields[i];\n        if (event.hasOwnProperty(field)) {\n            var maxLength = this.fieldsToTrim[field];\n            var value = event[field];\n            if (value && value.length > maxLength) {\n                event[field] = value.substr(0, maxLength);\n            }\n        }\n    }\n    return event;\n};\n\n/**\n * Handles ApiCall and ApiCallAttempt events.\n * @param {Object} event apiCall or apiCallAttempt event.\n * @api private\n */\nPublisher.prototype.eventHandler = function(event) {\n    // set the clientId\n    event.ClientId = this.clientId;\n\n    this.trimFields(event);\n\n    var message = stringToBuffer(JSON.stringify(event));\n    if (!this.enabled || message.length > MAX_MESSAGE_SIZE) {\n        // drop the message if publisher not enabled or it is too large\n        return;\n    }\n\n    this.publishDatagram(message);\n};\n\n/**\n * Publishes message to an agent.\n * @param {Buffer} message JSON message to send to agent.\n * @api private\n */\nPublisher.prototype.publishDatagram = function(message) {\n    var self = this;\n    var client = this.getClient();\n\n    this.messagesInFlight++;\n    this.client.send(message, 0, message.length, this.port, this.address, function(err, bytes) {\n        if (--self.messagesInFlight <= 0) {\n            // destroy existing client so the event loop isn't kept open\n            self.destroyClient();\n        }\n    });\n};\n\n/**\n * Returns an existing udp socket, or creates one if it doesn't already exist.\n * @api private\n */\nPublisher.prototype.getClient = function() {\n    if (!this.client) {\n        this.client = dgram.createSocket('udp4');\n    }\n    return this.client;\n};\n\n/**\n * Destroys the udp socket.\n * @api private\n */\nPublisher.prototype.destroyClient = function() {\n    if (this.client) {\n        this.client.close();\n        this.client = void 0;\n    }\n};\n\nmodule.exports = {\n    Publisher: Publisher\n};\n","var util = require('../util');\n\nfunction QueryParamSerializer() {\n}\n\nQueryParamSerializer.prototype.serialize = function(params, shape, fn) {\n  serializeStructure('', params, shape, fn);\n};\n\nfunction ucfirst(shape) {\n  if (shape.isQueryName || shape.api.protocol !== 'ec2') {\n    return shape.name;\n  } else {\n    return shape.name[0].toUpperCase() + shape.name.substr(1);\n  }\n}\n\nfunction serializeStructure(prefix, struct, rules, fn) {\n  util.each(rules.members, function(name, member) {\n    var value = struct[name];\n    if (value === null || value === undefined) return;\n\n    var memberName = ucfirst(member);\n    memberName = prefix ? prefix + '.' + memberName : memberName;\n    serializeMember(memberName, value, member, fn);\n  });\n}\n\nfunction serializeMap(name, map, rules, fn) {\n  var i = 1;\n  util.each(map, function (key, value) {\n    var prefix = rules.flattened ? '.' : '.entry.';\n    var position = prefix + (i++) + '.';\n    var keyName = position + (rules.key.name || 'key');\n    var valueName = position + (rules.value.name || 'value');\n    serializeMember(name + keyName, key, rules.key, fn);\n    serializeMember(name + valueName, value, rules.value, fn);\n  });\n}\n\nfunction serializeList(name, list, rules, fn) {\n  var memberRules = rules.member || {};\n\n  if (list.length === 0) {\n    fn.call(this, name, null);\n    return;\n  }\n\n  util.arrayEach(list, function (v, n) {\n    var suffix = '.' + (n + 1);\n    if (rules.api.protocol === 'ec2') {\n      // Do nothing for EC2\n      suffix = suffix + ''; // make linter happy\n    } else if (rules.flattened) {\n      if (memberRules.name) {\n        var parts = name.split('.');\n        parts.pop();\n        parts.push(ucfirst(memberRules));\n        name = parts.join('.');\n      }\n    } else {\n      suffix = '.' + (memberRules.name ? memberRules.name : 'member') + suffix;\n    }\n    serializeMember(name + suffix, v, memberRules, fn);\n  });\n}\n\nfunction serializeMember(name, value, rules, fn) {\n  if (value === null || value === undefined) return;\n  if (rules.type === 'structure') {\n    serializeStructure(name, value, rules, fn);\n  } else if (rules.type === 'list') {\n    serializeList(name, value, rules, fn);\n  } else if (rules.type === 'map') {\n    serializeMap(name, value, rules, fn);\n  } else {\n    fn(name, rules.toWireFormat(value).toString());\n  }\n}\n\n/**\n * @api private\n */\nmodule.exports = QueryParamSerializer;\n","var AWS = require('../core');\n\n/**\n * @api private\n */\nvar service = null;\n\n/**\n * @api private\n */\nvar api = {\n    signatureVersion: 'v4',\n    signingName: 'rds-db'\n};\n\n/**\n * @api private\n */\nvar requiredAuthTokenOptions = {\n    region: 'string',\n    hostname: 'string',\n    port: 'number',\n    username: 'string'\n};\n\n/**\n * A signer object can be used to generate an auth token to a database.\n */\nAWS.RDS.Signer = AWS.util.inherit({\n    /**\n     * Creates a signer object can be used to generate an auth token.\n     *\n     * @option options credentials [AWS.Credentials] the AWS credentials\n     *   to sign requests with. Uses the default credential provider chain\n     *   if not specified.\n     * @option options hostname [String] the hostname of the database to connect to.\n     * @option options port [Number] the port number the database is listening on.\n     * @option options region [String] the region the database is located in.\n     * @option options username [String] the username to login as.\n     * @example Passing in options to constructor\n     *   var signer = new AWS.RDS.Signer({\n     *     credentials: new AWS.SharedIniFileCredentials({profile: 'default'}),\n     *     region: 'us-east-1',\n     *     hostname: 'db.us-east-1.rds.amazonaws.com',\n     *     port: 8000,\n     *     username: 'name'\n     *   });\n     */\n    constructor: function Signer(options) {\n        this.options = options || {};\n    },\n\n    /**\n     * @api private\n     * Strips the protocol from a url.\n     */\n    convertUrlToAuthToken: function convertUrlToAuthToken(url) {\n        // we are always using https as the protocol\n        var protocol = 'https://';\n        if (url.indexOf(protocol) === 0) {\n            return url.substring(protocol.length);\n        }\n    },\n\n    /**\n     * @overload getAuthToken(options = {}, [callback])\n     *   Generate an auth token to a database.\n     *   @note You must ensure that you have static or previously resolved\n     *     credentials if you call this method synchronously (with no callback),\n     *     otherwise it may not properly sign the request. If you cannot guarantee\n     *     this (you are using an asynchronous credential provider, i.e., EC2\n     *     IAM roles), you should always call this method with an asynchronous\n     *     callback.\n     *\n     *   @param options [map] The fields to use when generating an auth token.\n     *     Any options specified here will be merged on top of any options passed\n     *     to AWS.RDS.Signer:\n     *\n     *     * **credentials** (AWS.Credentials) &mdash; the AWS credentials\n     *         to sign requests with. Uses the default credential provider chain\n     *         if not specified.\n     *     * **hostname** (String) &mdash; the hostname of the database to connect to.\n     *     * **port** (Number) &mdash; the port number the database is listening on.\n     *     * **region** (String) &mdash; the region the database is located in.\n     *     * **username** (String) &mdash; the username to login as.\n     *   @return [String] if called synchronously (with no callback), returns the\n     *     auth token.\n     *   @return [null] nothing is returned if a callback is provided.\n     *   @callback callback function (err, token)\n     *     If a callback is supplied, it is called when an auth token has been generated.\n     *     @param err [Error] the error object returned from the signer.\n     *     @param token [String] the auth token.\n     *\n     *   @example Generating an auth token synchronously\n     *     var signer = new AWS.RDS.Signer({\n     *       // configure options\n     *       region: 'us-east-1',\n     *       username: 'default',\n     *       hostname: 'db.us-east-1.amazonaws.com',\n     *       port: 8000\n     *     });\n     *     var token = signer.getAuthToken({\n     *       // these options are merged with those defined when creating the signer, overriding in the case of a duplicate option\n     *       // credentials are not specified here or when creating the signer, so default credential provider will be used\n     *       username: 'test' // overriding username\n     *     });\n     *   @example Generating an auth token asynchronously\n     *     var signer = new AWS.RDS.Signer({\n     *       // configure options\n     *       region: 'us-east-1',\n     *       username: 'default',\n     *       hostname: 'db.us-east-1.amazonaws.com',\n     *       port: 8000\n     *     });\n     *     signer.getAuthToken({\n     *       // these options are merged with those defined when creating the signer, overriding in the case of a duplicate option\n     *       // credentials are not specified here or when creating the signer, so default credential provider will be used\n     *       username: 'test' // overriding username\n     *     }, function(err, token) {\n     *       if (err) {\n     *         // handle error\n     *       } else {\n     *         // use token\n     *       }\n     *     });\n     *\n     */\n    getAuthToken: function getAuthToken(options, callback) {\n        if (typeof options === 'function' && callback === undefined) {\n            callback = options;\n            options = {};\n        }\n        var self = this;\n        var hasCallback = typeof callback === 'function';\n        // merge options with existing options\n        options = AWS.util.merge(this.options, options);\n        // validate options\n        var optionsValidation = this.validateAuthTokenOptions(options);\n        if (optionsValidation !== true) {\n            if (hasCallback) {\n                return callback(optionsValidation, null);\n            }\n            throw optionsValidation;\n        }\n\n        // 15 minutes\n        var expires = 900;\n        // create service to generate a request from\n        var serviceOptions = {\n            region: options.region,\n            endpoint: new AWS.Endpoint(options.hostname + ':' + options.port),\n            paramValidation: false,\n            signatureVersion: 'v4'\n        };\n        if (options.credentials) {\n            serviceOptions.credentials = options.credentials;\n        }\n        service = new AWS.Service(serviceOptions);\n        // ensure the SDK is using sigv4 signing (config is not enough)\n        service.api = api;\n\n        var request = service.makeRequest();\n        // add listeners to request to properly build auth token\n        this.modifyRequestForAuthToken(request, options);\n\n        if (hasCallback) {\n            request.presign(expires, function(err, url) {\n                if (url) {\n                    url = self.convertUrlToAuthToken(url);\n                }\n                callback(err, url);\n            });\n        } else {\n            var url = request.presign(expires);\n            return this.convertUrlToAuthToken(url);\n        }\n    },\n\n    /**\n     * @api private\n     * Modifies a request to allow the presigner to generate an auth token.\n     */\n    modifyRequestForAuthToken: function modifyRequestForAuthToken(request, options) {\n        request.on('build', request.buildAsGet);\n        var httpRequest = request.httpRequest;\n        httpRequest.body = AWS.util.queryParamsToString({\n            Action: 'connect',\n            DBUser: options.username\n        });\n    },\n\n    /**\n     * @api private\n     * Validates that the options passed in contain all the keys with values of the correct type that\n     *   are needed to generate an auth token.\n     */\n    validateAuthTokenOptions: function validateAuthTokenOptions(options) {\n        // iterate over all keys in options\n        var message = '';\n        options = options || {};\n        for (var key in requiredAuthTokenOptions) {\n            if (!Object.prototype.hasOwnProperty.call(requiredAuthTokenOptions, key)) {\n                continue;\n            }\n            if (typeof options[key] !== requiredAuthTokenOptions[key]) {\n                message += 'option \\'' + key + '\\' should have been type \\'' + requiredAuthTokenOptions[key] + '\\', was \\'' + typeof options[key] + '\\'.\\n';\n            }\n        }\n        if (message.length) {\n            return AWS.util.error(new Error(), {\n                code: 'InvalidParameter',\n                message: message\n            });\n        }\n        return true;\n    }\n});\n","module.exports = {\n  //provide realtime clock for performance measurement\n  now: function now() {\n    var second = process.hrtime();\n    return second[0] * 1000 + (second[1] / 1000000);\n  }\n};\n","var util = require('./util');\nvar regionConfig = require('./region_config_data.json');\n\nfunction generateRegionPrefix(region) {\n  if (!region) return null;\n\n  var parts = region.split('-');\n  if (parts.length < 3) return null;\n  return parts.slice(0, parts.length - 2).join('-') + '-*';\n}\n\nfunction derivedKeys(service) {\n  var region = service.config.region;\n  var regionPrefix = generateRegionPrefix(region);\n  var endpointPrefix = service.api.endpointPrefix;\n\n  return [\n    [region, endpointPrefix],\n    [regionPrefix, endpointPrefix],\n    [region, '*'],\n    [regionPrefix, '*'],\n    ['*', endpointPrefix],\n    ['*', '*']\n  ].map(function(item) {\n    return item[0] && item[1] ? item.join('/') : null;\n  });\n}\n\nfunction applyConfig(service, config) {\n  util.each(config, function(key, value) {\n    if (key === 'globalEndpoint') return;\n    if (service.config[key] === undefined || service.config[key] === null) {\n      service.config[key] = value;\n    }\n  });\n}\n\nfunction configureEndpoint(service) {\n  var keys = derivedKeys(service);\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!key) continue;\n\n    if (Object.prototype.hasOwnProperty.call(regionConfig.rules, key)) {\n      var config = regionConfig.rules[key];\n      if (typeof config === 'string') {\n        config = regionConfig.patterns[config];\n      }\n\n      // set dualstack endpoint\n      if (service.config.useDualstack && util.isDualstackAvailable(service)) {\n        config = util.copy(config);\n        config.endpoint = '{service}.dualstack.{region}.amazonaws.com';\n      }\n\n      // set global endpoint\n      service.isGlobalEndpoint = !!config.globalEndpoint;\n\n      // signature version\n      if (!config.signatureVersion) config.signatureVersion = 'v4';\n\n      // merge config\n      applyConfig(service, config);\n      return;\n    }\n  }\n}\n\n/**\n * @api private\n */\nmodule.exports = configureEndpoint;\n","var AWS = require('./core');\nvar AcceptorStateMachine = require('./state_machine');\nvar inherit = AWS.util.inherit;\nvar domain = AWS.util.domain;\nvar jmespath = require('jmespath');\n\n/**\n * @api private\n */\nvar hardErrorStates = {success: 1, error: 1, complete: 1};\n\nfunction isTerminalState(machine) {\n  return Object.prototype.hasOwnProperty.call(hardErrorStates, machine._asm.currentState);\n}\n\nvar fsm = new AcceptorStateMachine();\nfsm.setupStates = function() {\n  var transition = function(_, done) {\n    var self = this;\n    self._haltHandlersOnError = false;\n\n    self.emit(self._asm.currentState, function(err) {\n      if (err) {\n        if (isTerminalState(self)) {\n          if (domain && self.domain instanceof domain.Domain) {\n            err.domainEmitter = self;\n            err.domain = self.domain;\n            err.domainThrown = false;\n            self.domain.emit('error', err);\n          } else {\n            throw err;\n          }\n        } else {\n          self.response.error = err;\n          done(err);\n        }\n      } else {\n        done(self.response.error);\n      }\n    });\n\n  };\n\n  this.addState('validate', 'build', 'error', transition);\n  this.addState('build', 'afterBuild', 'restart', transition);\n  this.addState('afterBuild', 'sign', 'restart', transition);\n  this.addState('sign', 'send', 'retry', transition);\n  this.addState('retry', 'afterRetry', 'afterRetry', transition);\n  this.addState('afterRetry', 'sign', 'error', transition);\n  this.addState('send', 'validateResponse', 'retry', transition);\n  this.addState('validateResponse', 'extractData', 'extractError', transition);\n  this.addState('extractError', 'extractData', 'retry', transition);\n  this.addState('extractData', 'success', 'retry', transition);\n  this.addState('restart', 'build', 'error', transition);\n  this.addState('success', 'complete', 'complete', transition);\n  this.addState('error', 'complete', 'complete', transition);\n  this.addState('complete', null, null, transition);\n};\nfsm.setupStates();\n\n/**\n * ## Asynchronous Requests\n *\n * All requests made through the SDK are asynchronous and use a\n * callback interface. Each service method that kicks off a request\n * returns an `AWS.Request` object that you can use to register\n * callbacks.\n *\n * For example, the following service method returns the request\n * object as \"request\", which can be used to register callbacks:\n *\n * ```javascript\n * // request is an AWS.Request object\n * var request = ec2.describeInstances();\n *\n * // register callbacks on request to retrieve response data\n * request.on('success', function(response) {\n *   console.log(response.data);\n * });\n * ```\n *\n * When a request is ready to be sent, the {send} method should\n * be called:\n *\n * ```javascript\n * request.send();\n * ```\n *\n * Since registered callbacks may or may not be idempotent, requests should only\n * be sent once. To perform the same operation multiple times, you will need to\n * create multiple request objects, each with its own registered callbacks.\n *\n * ## Removing Default Listeners for Events\n *\n * Request objects are built with default listeners for the various events,\n * depending on the service type. In some cases, you may want to remove\n * some built-in listeners to customize behaviour. Doing this requires\n * access to the built-in listener functions, which are exposed through\n * the {AWS.EventListeners.Core} namespace. For instance, you may\n * want to customize the HTTP handler used when sending a request. In this\n * case, you can remove the built-in listener associated with the 'send'\n * event, the {AWS.EventListeners.Core.SEND} listener and add your own.\n *\n * ## Multiple Callbacks and Chaining\n *\n * You can register multiple callbacks on any request object. The\n * callbacks can be registered for different events, or all for the\n * same event. In addition, you can chain callback registration, for\n * example:\n *\n * ```javascript\n * request.\n *   on('success', function(response) {\n *     console.log(\"Success!\");\n *   }).\n *   on('error', function(error, response) {\n *     console.log(\"Error!\");\n *   }).\n *   on('complete', function(response) {\n *     console.log(\"Always!\");\n *   }).\n *   send();\n * ```\n *\n * The above example will print either \"Success! Always!\", or \"Error! Always!\",\n * depending on whether the request succeeded or not.\n *\n * @!attribute httpRequest\n *   @readonly\n *   @!group HTTP Properties\n *   @return [AWS.HttpRequest] the raw HTTP request object\n *     containing request headers and body information\n *     sent by the service.\n *\n * @!attribute startTime\n *   @readonly\n *   @!group Operation Properties\n *   @return [Date] the time that the request started\n *\n * @!group Request Building Events\n *\n * @!event validate(request)\n *   Triggered when a request is being validated. Listeners\n *   should throw an error if the request should not be sent.\n *   @param request [Request] the request object being sent\n *   @see AWS.EventListeners.Core.VALIDATE_CREDENTIALS\n *   @see AWS.EventListeners.Core.VALIDATE_REGION\n *   @example Ensuring that a certain parameter is set before sending a request\n *     var req = s3.putObject(params);\n *     req.on('validate', function() {\n *       if (!req.params.Body.match(/^Hello\\s/)) {\n *         throw new Error('Body must start with \"Hello \"');\n *       }\n *     });\n *     req.send(function(err, data) { ... });\n *\n * @!event build(request)\n *   Triggered when the request payload is being built. Listeners\n *   should fill the necessary information to send the request\n *   over HTTP.\n *   @param (see AWS.Request~validate)\n *   @example Add a custom HTTP header to a request\n *     var req = s3.putObject(params);\n *     req.on('build', function() {\n *       req.httpRequest.headers['Custom-Header'] = 'value';\n *     });\n *     req.send(function(err, data) { ... });\n *\n * @!event sign(request)\n *   Triggered when the request is being signed. Listeners should\n *   add the correct authentication headers and/or adjust the body,\n *   depending on the authentication mechanism being used.\n *   @param (see AWS.Request~validate)\n *\n * @!group Request Sending Events\n *\n * @!event send(response)\n *   Triggered when the request is ready to be sent. Listeners\n *   should call the underlying transport layer to initiate\n *   the sending of the request.\n *   @param response [Response] the response object\n *   @context [Request] the request object that was sent\n *   @see AWS.EventListeners.Core.SEND\n *\n * @!event retry(response)\n *   Triggered when a request failed and might need to be retried or redirected.\n *   If the response is retryable, the listener should set the\n *   `response.error.retryable` property to `true`, and optionally set\n *   `response.error.retryDelay` to the millisecond delay for the next attempt.\n *   In the case of a redirect, `response.error.redirect` should be set to\n *   `true` with `retryDelay` set to an optional delay on the next request.\n *\n *   If a listener decides that a request should not be retried,\n *   it should set both `retryable` and `redirect` to false.\n *\n *   Note that a retryable error will be retried at most\n *   {AWS.Config.maxRetries} times (based on the service object's config).\n *   Similarly, a request that is redirected will only redirect at most\n *   {AWS.Config.maxRedirects} times.\n *\n *   @param (see AWS.Request~send)\n *   @context (see AWS.Request~send)\n *   @example Adding a custom retry for a 404 response\n *     request.on('retry', function(response) {\n *       // this resource is not yet available, wait 10 seconds to get it again\n *       if (response.httpResponse.statusCode === 404 && response.error) {\n *         response.error.retryable = true;   // retry this error\n *         response.error.retryDelay = 10000; // wait 10 seconds\n *       }\n *     });\n *\n * @!group Data Parsing Events\n *\n * @!event extractError(response)\n *   Triggered on all non-2xx requests so that listeners can extract\n *   error details from the response body. Listeners to this event\n *   should set the `response.error` property.\n *   @param (see AWS.Request~send)\n *   @context (see AWS.Request~send)\n *\n * @!event extractData(response)\n *   Triggered in successful requests to allow listeners to\n *   de-serialize the response body into `response.data`.\n *   @param (see AWS.Request~send)\n *   @context (see AWS.Request~send)\n *\n * @!group Completion Events\n *\n * @!event success(response)\n *   Triggered when the request completed successfully.\n *   `response.data` will contain the response data and\n *   `response.error` will be null.\n *   @param (see AWS.Request~send)\n *   @context (see AWS.Request~send)\n *\n * @!event error(error, response)\n *   Triggered when an error occurs at any point during the\n *   request. `response.error` will contain details about the error\n *   that occurred. `response.data` will be null.\n *   @param error [Error] the error object containing details about\n *     the error that occurred.\n *   @param (see AWS.Request~send)\n *   @context (see AWS.Request~send)\n *\n * @!event complete(response)\n *   Triggered whenever a request cycle completes. `response.error`\n *   should be checked, since the request may have failed.\n *   @param (see AWS.Request~send)\n *   @context (see AWS.Request~send)\n *\n * @!group HTTP Events\n *\n * @!event httpHeaders(statusCode, headers, response, statusMessage)\n *   Triggered when headers are sent by the remote server\n *   @param statusCode [Integer] the HTTP response code\n *   @param headers [map<String,String>] the response headers\n *   @param (see AWS.Request~send)\n *   @param statusMessage [String] A status message corresponding to the HTTP\n *                                 response code\n *   @context (see AWS.Request~send)\n *\n * @!event httpData(chunk, response)\n *   Triggered when data is sent by the remote server\n *   @param chunk [Buffer] the buffer data containing the next data chunk\n *     from the server\n *   @param (see AWS.Request~send)\n *   @context (see AWS.Request~send)\n *   @see AWS.EventListeners.Core.HTTP_DATA\n *\n * @!event httpUploadProgress(progress, response)\n *   Triggered when the HTTP request has uploaded more data\n *   @param progress [map] An object containing the `loaded` and `total` bytes\n *     of the request.\n *   @param (see AWS.Request~send)\n *   @context (see AWS.Request~send)\n *   @note This event will not be emitted in Node.js 0.8.x.\n *\n * @!event httpDownloadProgress(progress, response)\n *   Triggered when the HTTP request has downloaded more data\n *   @param progress [map] An object containing the `loaded` and `total` bytes\n *     of the request.\n *   @param (see AWS.Request~send)\n *   @context (see AWS.Request~send)\n *   @note This event will not be emitted in Node.js 0.8.x.\n *\n * @!event httpError(error, response)\n *   Triggered when the HTTP request failed\n *   @param error [Error] the error object that was thrown\n *   @param (see AWS.Request~send)\n *   @context (see AWS.Request~send)\n *\n * @!event httpDone(response)\n *   Triggered when the server is finished sending data\n *   @param (see AWS.Request~send)\n *   @context (see AWS.Request~send)\n *\n * @see AWS.Response\n */\nAWS.Request = inherit({\n\n  /**\n   * Creates a request for an operation on a given service with\n   * a set of input parameters.\n   *\n   * @param service [AWS.Service] the service to perform the operation on\n   * @param operation [String] the operation to perform on the service\n   * @param params [Object] parameters to send to the operation.\n   *   See the operation's documentation for the format of the\n   *   parameters.\n   */\n  constructor: function Request(service, operation, params) {\n    var endpoint = service.endpoint;\n    var region = service.config.region;\n    var customUserAgent = service.config.customUserAgent;\n\n    // global endpoints sign as us-east-1\n    if (service.isGlobalEndpoint) region = 'us-east-1';\n\n    this.domain = domain && domain.active;\n    this.service = service;\n    this.operation = operation;\n    this.params = params || {};\n    this.httpRequest = new AWS.HttpRequest(endpoint, region);\n    this.httpRequest.appendToUserAgent(customUserAgent);\n    this.startTime = service.getSkewCorrectedDate();\n\n    this.response = new AWS.Response(this);\n    this._asm = new AcceptorStateMachine(fsm.states, 'validate');\n    this._haltHandlersOnError = false;\n\n    AWS.SequentialExecutor.call(this);\n    this.emit = this.emitEvent;\n  },\n\n  /**\n   * @!group Sending a Request\n   */\n\n  /**\n   * @overload send(callback = null)\n   *   Sends the request object.\n   *\n   *   @callback callback function(err, data)\n   *     If a callback is supplied, it is called when a response is returned\n   *     from the service.\n   *     @context [AWS.Request] the request object being sent.\n   *     @param err [Error] the error object returned from the request.\n   *       Set to `null` if the request is successful.\n   *     @param data [Object] the de-serialized data returned from\n   *       the request. Set to `null` if a request error occurs.\n   *   @example Sending a request with a callback\n   *     request = s3.putObject({Bucket: 'bucket', Key: 'key'});\n   *     request.send(function(err, data) { console.log(err, data); });\n   *   @example Sending a request with no callback (using event handlers)\n   *     request = s3.putObject({Bucket: 'bucket', Key: 'key'});\n   *     request.on('complete', function(response) { ... }); // register a callback\n   *     request.send();\n   */\n  send: function send(callback) {\n    if (callback) {\n      // append to user agent\n      this.httpRequest.appendToUserAgent('callback');\n      this.on('complete', function (resp) {\n        callback.call(resp, resp.error, resp.data);\n      });\n    }\n    this.runTo();\n\n    return this.response;\n  },\n\n  /**\n   * @!method  promise()\n   *   Sends the request and returns a 'thenable' promise.\n   *\n   *   Two callbacks can be provided to the `then` method on the returned promise.\n   *   The first callback will be called if the promise is fulfilled, and the second\n   *   callback will be called if the promise is rejected.\n   *   @callback fulfilledCallback function(data)\n   *     Called if the promise is fulfilled.\n   *     @param data [Object] the de-serialized data returned from the request.\n   *   @callback rejectedCallback function(error)\n   *     Called if the promise is rejected.\n   *     @param error [Error] the error object returned from the request.\n   *   @return [Promise] A promise that represents the state of the request.\n   *   @example Sending a request using promises.\n   *     var request = s3.putObject({Bucket: 'bucket', Key: 'key'});\n   *     var result = request.promise();\n   *     result.then(function(data) { ... }, function(error) { ... });\n   */\n\n  /**\n   * @api private\n   */\n  build: function build(callback) {\n    return this.runTo('send', callback);\n  },\n\n  /**\n   * @api private\n   */\n  runTo: function runTo(state, done) {\n    this._asm.runTo(state, done, this);\n    return this;\n  },\n\n  /**\n   * Aborts a request, emitting the error and complete events.\n   *\n   * @!macro nobrowser\n   * @example Aborting a request after sending\n   *   var params = {\n   *     Bucket: 'bucket', Key: 'key',\n   *     Body: Buffer.alloc(1024 * 1024 * 5) // 5MB payload\n   *   };\n   *   var request = s3.putObject(params);\n   *   request.send(function (err, data) {\n   *     if (err) console.log(\"Error:\", err.code, err.message);\n   *     else console.log(data);\n   *   });\n   *\n   *   // abort request in 1 second\n   *   setTimeout(request.abort.bind(request), 1000);\n   *\n   *   // prints \"Error: RequestAbortedError Request aborted by user\"\n   * @return [AWS.Request] the same request object, for chaining.\n   * @since v1.4.0\n   */\n  abort: function abort() {\n    this.removeAllListeners('validateResponse');\n    this.removeAllListeners('extractError');\n    this.on('validateResponse', function addAbortedError(resp) {\n      resp.error = AWS.util.error(new Error('Request aborted by user'), {\n         code: 'RequestAbortedError', retryable: false\n      });\n    });\n\n    if (this.httpRequest.stream && !this.httpRequest.stream.didCallback) { // abort HTTP stream\n      this.httpRequest.stream.abort();\n      if (this.httpRequest._abortCallback) {\n         this.httpRequest._abortCallback();\n      } else {\n        this.removeAllListeners('send'); // haven't sent yet, so let's not\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Iterates over each page of results given a pageable request, calling\n   * the provided callback with each page of data. After all pages have been\n   * retrieved, the callback is called with `null` data.\n   *\n   * @note This operation can generate multiple requests to a service.\n   * @example Iterating over multiple pages of objects in an S3 bucket\n   *   var pages = 1;\n   *   s3.listObjects().eachPage(function(err, data) {\n   *     if (err) return;\n   *     console.log(\"Page\", pages++);\n   *     console.log(data);\n   *   });\n   * @example Iterating over multiple pages with an asynchronous callback\n   *   s3.listObjects(params).eachPage(function(err, data, done) {\n   *     doSomethingAsyncAndOrExpensive(function() {\n   *       // The next page of results isn't fetched until done is called\n   *       done();\n   *     });\n   *   });\n   * @callback callback function(err, data, [doneCallback])\n   *   Called with each page of resulting data from the request. If the\n   *   optional `doneCallback` is provided in the function, it must be called\n   *   when the callback is complete.\n   *\n   *   @param err [Error] an error object, if an error occurred.\n   *   @param data [Object] a single page of response data. If there is no\n   *     more data, this object will be `null`.\n   *   @param doneCallback [Function] an optional done callback. If this\n   *     argument is defined in the function declaration, it should be called\n   *     when the next page is ready to be retrieved. This is useful for\n   *     controlling serial pagination across asynchronous operations.\n   *   @return [Boolean] if the callback returns `false`, pagination will\n   *     stop.\n   *\n   * @see AWS.Request.eachItem\n   * @see AWS.Response.nextPage\n   * @since v1.4.0\n   */\n  eachPage: function eachPage(callback) {\n    // Make all callbacks async-ish\n    callback = AWS.util.fn.makeAsync(callback, 3);\n\n    function wrappedCallback(response) {\n      callback.call(response, response.error, response.data, function (result) {\n        if (result === false) return;\n\n        if (response.hasNextPage()) {\n          response.nextPage().on('complete', wrappedCallback).send();\n        } else {\n          callback.call(response, null, null, AWS.util.fn.noop);\n        }\n      });\n    }\n\n    this.on('complete', wrappedCallback).send();\n  },\n\n  /**\n   * Enumerates over individual items of a request, paging the responses if\n   * necessary.\n   *\n   * @api experimental\n   * @since v1.4.0\n   */\n  eachItem: function eachItem(callback) {\n    var self = this;\n    function wrappedCallback(err, data) {\n      if (err) return callback(err, null);\n      if (data === null) return callback(null, null);\n\n      var config = self.service.paginationConfig(self.operation);\n      var resultKey = config.resultKey;\n      if (Array.isArray(resultKey)) resultKey = resultKey[0];\n      var items = jmespath.search(data, resultKey);\n      var continueIteration = true;\n      AWS.util.arrayEach(items, function(item) {\n        continueIteration = callback(null, item);\n        if (continueIteration === false) {\n          return AWS.util.abort;\n        }\n      });\n      return continueIteration;\n    }\n\n    this.eachPage(wrappedCallback);\n  },\n\n  /**\n   * @return [Boolean] whether the operation can return multiple pages of\n   *   response data.\n   * @see AWS.Response.eachPage\n   * @since v1.4.0\n   */\n  isPageable: function isPageable() {\n    return this.service.paginationConfig(this.operation) ? true : false;\n  },\n\n  /**\n   * Sends the request and converts the request object into a readable stream\n   * that can be read from or piped into a writable stream.\n   *\n   * @note The data read from a readable stream contains only\n   *   the raw HTTP body contents.\n   * @example Manually reading from a stream\n   *   request.createReadStream().on('data', function(data) {\n   *     console.log(\"Got data:\", data.toString());\n   *   });\n   * @example Piping a request body into a file\n   *   var out = fs.createWriteStream('/path/to/outfile.jpg');\n   *   s3.service.getObject(params).createReadStream().pipe(out);\n   * @return [Stream] the readable stream object that can be piped\n   *   or read from (by registering 'data' event listeners).\n   * @!macro nobrowser\n   */\n  createReadStream: function createReadStream() {\n    var streams = AWS.util.stream;\n    var req = this;\n    var stream = null;\n\n    if (AWS.HttpClient.streamsApiVersion === 2) {\n      stream = new streams.PassThrough();\n      process.nextTick(function() { req.send(); });\n    } else {\n      stream = new streams.Stream();\n      stream.readable = true;\n\n      stream.sent = false;\n      stream.on('newListener', function(event) {\n        if (!stream.sent && event === 'data') {\n          stream.sent = true;\n          process.nextTick(function() { req.send(); });\n        }\n      });\n    }\n\n    this.on('error', function(err) {\n      stream.emit('error', err);\n    });\n\n    this.on('httpHeaders', function streamHeaders(statusCode, headers, resp) {\n      if (statusCode < 300) {\n        req.removeListener('httpData', AWS.EventListeners.Core.HTTP_DATA);\n        req.removeListener('httpError', AWS.EventListeners.Core.HTTP_ERROR);\n        req.on('httpError', function streamHttpError(error) {\n          resp.error = error;\n          resp.error.retryable = false;\n        });\n\n        var shouldCheckContentLength = false;\n        var expectedLen;\n        if (req.httpRequest.method !== 'HEAD') {\n          expectedLen = parseInt(headers['content-length'], 10);\n        }\n        if (expectedLen !== undefined && !isNaN(expectedLen) && expectedLen >= 0) {\n          shouldCheckContentLength = true;\n          var receivedLen = 0;\n        }\n\n        var checkContentLengthAndEmit = function checkContentLengthAndEmit() {\n          if (shouldCheckContentLength && receivedLen !== expectedLen) {\n            stream.emit('error', AWS.util.error(\n              new Error('Stream content length mismatch. Received ' +\n                receivedLen + ' of ' + expectedLen + ' bytes.'),\n              { code: 'StreamContentLengthMismatch' }\n            ));\n          } else if (AWS.HttpClient.streamsApiVersion === 2) {\n            stream.end();\n          } else {\n            stream.emit('end');\n          }\n        };\n\n        var httpStream = resp.httpResponse.createUnbufferedStream();\n\n        if (AWS.HttpClient.streamsApiVersion === 2) {\n          if (shouldCheckContentLength) {\n            var lengthAccumulator = new streams.PassThrough();\n            lengthAccumulator._write = function(chunk) {\n              if (chunk && chunk.length) {\n                receivedLen += chunk.length;\n              }\n              return streams.PassThrough.prototype._write.apply(this, arguments);\n            };\n\n            lengthAccumulator.on('end', checkContentLengthAndEmit);\n            stream.on('error', function(err) {\n              shouldCheckContentLength = false;\n              httpStream.unpipe(lengthAccumulator);\n              lengthAccumulator.emit('end');\n              lengthAccumulator.end();\n            });\n            httpStream.pipe(lengthAccumulator).pipe(stream, { end: false });\n          } else {\n            httpStream.pipe(stream);\n          }\n        } else {\n\n          if (shouldCheckContentLength) {\n            httpStream.on('data', function(arg) {\n              if (arg && arg.length) {\n                receivedLen += arg.length;\n              }\n            });\n          }\n\n          httpStream.on('data', function(arg) {\n            stream.emit('data', arg);\n          });\n          httpStream.on('end', checkContentLengthAndEmit);\n        }\n\n        httpStream.on('error', function(err) {\n          shouldCheckContentLength = false;\n          stream.emit('error', err);\n        });\n      }\n    });\n\n    return stream;\n  },\n\n  /**\n   * @param [Array,Response] args This should be the response object,\n   *   or an array of args to send to the event.\n   * @api private\n   */\n  emitEvent: function emit(eventName, args, done) {\n    if (typeof args === 'function') { done = args; args = null; }\n    if (!done) done = function() { };\n    if (!args) args = this.eventParameters(eventName, this.response);\n\n    var origEmit = AWS.SequentialExecutor.prototype.emit;\n    origEmit.call(this, eventName, args, function (err) {\n      if (err) this.response.error = err;\n      done.call(this, err);\n    });\n  },\n\n  /**\n   * @api private\n   */\n  eventParameters: function eventParameters(eventName) {\n    switch (eventName) {\n      case 'restart':\n      case 'validate':\n      case 'sign':\n      case 'build':\n      case 'afterValidate':\n      case 'afterBuild':\n        return [this];\n      case 'error':\n        return [this.response.error, this.response];\n      default:\n        return [this.response];\n    }\n  },\n\n  /**\n   * @api private\n   */\n  presign: function presign(expires, callback) {\n    if (!callback && typeof expires === 'function') {\n      callback = expires;\n      expires = null;\n    }\n    return new AWS.Signers.Presign().sign(this.toGet(), expires, callback);\n  },\n\n  /**\n   * @api private\n   */\n  isPresigned: function isPresigned() {\n    return Object.prototype.hasOwnProperty.call(this.httpRequest.headers, 'presigned-expires');\n  },\n\n  /**\n   * @api private\n   */\n  toUnauthenticated: function toUnauthenticated() {\n    this._unAuthenticated = true;\n    this.removeListener('validate', AWS.EventListeners.Core.VALIDATE_CREDENTIALS);\n    this.removeListener('sign', AWS.EventListeners.Core.SIGN);\n    return this;\n  },\n\n  /**\n   * @api private\n   */\n  toGet: function toGet() {\n    if (this.service.api.protocol === 'query' ||\n        this.service.api.protocol === 'ec2') {\n      this.removeListener('build', this.buildAsGet);\n      this.addListener('build', this.buildAsGet);\n    }\n    return this;\n  },\n\n  /**\n   * @api private\n   */\n  buildAsGet: function buildAsGet(request) {\n    request.httpRequest.method = 'GET';\n    request.httpRequest.path = request.service.endpoint.path +\n                               '?' + request.httpRequest.body;\n    request.httpRequest.body = '';\n\n    // don't need these headers on a GET request\n    delete request.httpRequest.headers['Content-Length'];\n    delete request.httpRequest.headers['Content-Type'];\n  },\n\n  /**\n   * @api private\n   */\n  haltHandlersOnError: function haltHandlersOnError() {\n    this._haltHandlersOnError = true;\n  }\n});\n\n/**\n * @api private\n */\nAWS.Request.addPromisesToClass = function addPromisesToClass(PromiseDependency) {\n  this.prototype.promise = function promise() {\n    var self = this;\n    // append to user agent\n    this.httpRequest.appendToUserAgent('promise');\n    return new PromiseDependency(function(resolve, reject) {\n      self.on('complete', function(resp) {\n        if (resp.error) {\n          reject(resp.error);\n        } else {\n          // define $response property so that it is not enumberable\n          // this prevents circular reference errors when stringifying the JSON object\n          resolve(Object.defineProperty(\n            resp.data || {},\n            '$response',\n            {value: resp}\n          ));\n        }\n      });\n      self.runTo();\n    });\n  };\n};\n\n/**\n * @api private\n */\nAWS.Request.deletePromisesFromClass = function deletePromisesFromClass() {\n  delete this.prototype.promise;\n};\n\nAWS.util.addPromises(AWS.Request);\n\nAWS.util.mixin(AWS.Request, AWS.SequentialExecutor);\n","/**\n * Copyright 2012-2013 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You\n * may not use this file except in compliance with the License. A copy of\n * the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific\n * language governing permissions and limitations under the License.\n */\n\nvar AWS = require('./core');\nvar inherit = AWS.util.inherit;\nvar jmespath = require('jmespath');\n\n/**\n * @api private\n */\nfunction CHECK_ACCEPTORS(resp) {\n  var waiter = resp.request._waiter;\n  var acceptors = waiter.config.acceptors;\n  var acceptorMatched = false;\n  var state = 'retry';\n\n  acceptors.forEach(function(acceptor) {\n    if (!acceptorMatched) {\n      var matcher = waiter.matchers[acceptor.matcher];\n      if (matcher && matcher(resp, acceptor.expected, acceptor.argument)) {\n        acceptorMatched = true;\n        state = acceptor.state;\n      }\n    }\n  });\n\n  if (!acceptorMatched && resp.error) state = 'failure';\n\n  if (state === 'success') {\n    waiter.setSuccess(resp);\n  } else {\n    waiter.setError(resp, state === 'retry');\n  }\n}\n\n/**\n * @api private\n */\nAWS.ResourceWaiter = inherit({\n  /**\n   * Waits for a given state on a service object\n   * @param service [Service] the service object to wait on\n   * @param state [String] the state (defined in waiter configuration) to wait\n   *   for.\n   * @example Create a waiter for running EC2 instances\n   *   var ec2 = new AWS.EC2;\n   *   var waiter = new AWS.ResourceWaiter(ec2, 'instanceRunning');\n   */\n  constructor: function constructor(service, state) {\n    this.service = service;\n    this.state = state;\n    this.loadWaiterConfig(this.state);\n  },\n\n  service: null,\n\n  state: null,\n\n  config: null,\n\n  matchers: {\n    path: function(resp, expected, argument) {\n      try {\n        var result = jmespath.search(resp.data, argument);\n      } catch (err) {\n        return false;\n      }\n\n      return jmespath.strictDeepEqual(result,expected);\n    },\n\n    pathAll: function(resp, expected, argument) {\n      try {\n        var results = jmespath.search(resp.data, argument);\n      } catch (err) {\n        return false;\n      }\n\n      if (!Array.isArray(results)) results = [results];\n      var numResults = results.length;\n      if (!numResults) return false;\n      for (var ind = 0 ; ind < numResults; ind++) {\n        if (!jmespath.strictDeepEqual(results[ind], expected)) {\n          return false;\n        }\n      }\n      return true;\n    },\n\n    pathAny: function(resp, expected, argument) {\n      try {\n        var results = jmespath.search(resp.data, argument);\n      } catch (err) {\n        return false;\n      }\n\n      if (!Array.isArray(results)) results = [results];\n      var numResults = results.length;\n      for (var ind = 0 ; ind < numResults; ind++) {\n        if (jmespath.strictDeepEqual(results[ind], expected)) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    status: function(resp, expected) {\n      var statusCode = resp.httpResponse.statusCode;\n      return (typeof statusCode === 'number') && (statusCode === expected);\n    },\n\n    error: function(resp, expected) {\n      if (typeof expected === 'string' && resp.error) {\n        return expected === resp.error.code;\n      }\n      // if expected is not string, can be boolean indicating presence of error\n      return expected === !!resp.error;\n    }\n  },\n\n  listeners: new AWS.SequentialExecutor().addNamedListeners(function(add) {\n    add('RETRY_CHECK', 'retry', function(resp) {\n      var waiter = resp.request._waiter;\n      if (resp.error && resp.error.code === 'ResourceNotReady') {\n        resp.error.retryDelay = (waiter.config.delay || 0) * 1000;\n      }\n    });\n\n    add('CHECK_OUTPUT', 'extractData', CHECK_ACCEPTORS);\n\n    add('CHECK_ERROR', 'extractError', CHECK_ACCEPTORS);\n  }),\n\n  /**\n   * @return [AWS.Request]\n   */\n  wait: function wait(params, callback) {\n    if (typeof params === 'function') {\n      callback = params; params = undefined;\n    }\n\n    if (params && params.$waiter) {\n      params = AWS.util.copy(params);\n      if (typeof params.$waiter.delay === 'number') {\n        this.config.delay = params.$waiter.delay;\n      }\n      if (typeof params.$waiter.maxAttempts === 'number') {\n        this.config.maxAttempts = params.$waiter.maxAttempts;\n      }\n      delete params.$waiter;\n    }\n\n    var request = this.service.makeRequest(this.config.operation, params);\n    request._waiter = this;\n    request.response.maxRetries = this.config.maxAttempts;\n    request.addListeners(this.listeners);\n\n    if (callback) request.send(callback);\n    return request;\n  },\n\n  setSuccess: function setSuccess(resp) {\n    resp.error = null;\n    resp.data = resp.data || {};\n    resp.request.removeAllListeners('extractData');\n  },\n\n  setError: function setError(resp, retryable) {\n    resp.data = null;\n    resp.error = AWS.util.error(resp.error || new Error(), {\n      code: 'ResourceNotReady',\n      message: 'Resource is not in the state ' + this.state,\n      retryable: retryable\n    });\n  },\n\n  /**\n   * Loads waiter configuration from API configuration\n   *\n   * @api private\n   */\n  loadWaiterConfig: function loadWaiterConfig(state) {\n    if (!this.service.api.waiters[state]) {\n      throw new AWS.util.error(new Error(), {\n        code: 'StateNotFoundError',\n        message: 'State ' + state + ' not found.'\n      });\n    }\n\n    this.config = AWS.util.copy(this.service.api.waiters[state]);\n  }\n});\n","var AWS = require('./core');\nvar inherit = AWS.util.inherit;\nvar jmespath = require('jmespath');\n\n/**\n * This class encapsulates the response information\n * from a service request operation sent through {AWS.Request}.\n * The response object has two main properties for getting information\n * back from a request:\n *\n * ## The `data` property\n *\n * The `response.data` property contains the serialized object data\n * retrieved from the service request. For instance, for an\n * Amazon DynamoDB `listTables` method call, the response data might\n * look like:\n *\n * ```\n * > resp.data\n * { TableNames:\n *    [ 'table1', 'table2', ... ] }\n * ```\n *\n * The `data` property can be null if an error occurs (see below).\n *\n * ## The `error` property\n *\n * In the event of a service error (or transfer error), the\n * `response.error` property will be filled with the given\n * error data in the form:\n *\n * ```\n * { code: 'SHORT_UNIQUE_ERROR_CODE',\n *   message: 'Some human readable error message' }\n * ```\n *\n * In the case of an error, the `data` property will be `null`.\n * Note that if you handle events that can be in a failure state,\n * you should always check whether `response.error` is set\n * before attempting to access the `response.data` property.\n *\n * @!attribute data\n *   @readonly\n *   @!group Data Properties\n *   @note Inside of a {AWS.Request~httpData} event, this\n *     property contains a single raw packet instead of the\n *     full de-serialized service response.\n *   @return [Object] the de-serialized response data\n *     from the service.\n *\n * @!attribute error\n *   An structure containing information about a service\n *   or networking error.\n *   @readonly\n *   @!group Data Properties\n *   @note This attribute is only filled if a service or\n *     networking error occurs.\n *   @return [Error]\n *     * code [String] a unique short code representing the\n *       error that was emitted.\n *     * message [String] a longer human readable error message\n *     * retryable [Boolean] whether the error message is\n *       retryable.\n *     * statusCode [Numeric] in the case of a request that reached the service,\n *       this value contains the response status code.\n *     * time [Date] the date time object when the error occurred.\n *     * hostname [String] set when a networking error occurs to easily\n *       identify the endpoint of the request.\n *     * region [String] set when a networking error occurs to easily\n *       identify the region of the request.\n *\n * @!attribute requestId\n *   @readonly\n *   @!group Data Properties\n *   @return [String] the unique request ID associated with the response.\n *     Log this value when debugging requests for AWS support.\n *\n * @!attribute retryCount\n *   @readonly\n *   @!group Operation Properties\n *   @return [Integer] the number of retries that were\n *     attempted before the request was completed.\n *\n * @!attribute redirectCount\n *   @readonly\n *   @!group Operation Properties\n *   @return [Integer] the number of redirects that were\n *     followed before the request was completed.\n *\n * @!attribute httpResponse\n *   @readonly\n *   @!group HTTP Properties\n *   @return [AWS.HttpResponse] the raw HTTP response object\n *     containing the response headers and body information\n *     from the server.\n *\n * @see AWS.Request\n */\nAWS.Response = inherit({\n\n  /**\n   * @api private\n   */\n  constructor: function Response(request) {\n    this.request = request;\n    this.data = null;\n    this.error = null;\n    this.retryCount = 0;\n    this.redirectCount = 0;\n    this.httpResponse = new AWS.HttpResponse();\n    if (request) {\n      this.maxRetries = request.service.numRetries();\n      this.maxRedirects = request.service.config.maxRedirects;\n    }\n  },\n\n  /**\n   * Creates a new request for the next page of response data, calling the\n   * callback with the page data if a callback is provided.\n   *\n   * @callback callback function(err, data)\n   *   Called when a page of data is returned from the next request.\n   *\n   *   @param err [Error] an error object, if an error occurred in the request\n   *   @param data [Object] the next page of data, or null, if there are no\n   *     more pages left.\n   * @return [AWS.Request] the request object for the next page of data\n   * @return [null] if no callback is provided and there are no pages left\n   *   to retrieve.\n   * @since v1.4.0\n   */\n  nextPage: function nextPage(callback) {\n    var config;\n    var service = this.request.service;\n    var operation = this.request.operation;\n    try {\n      config = service.paginationConfig(operation, true);\n    } catch (e) { this.error = e; }\n\n    if (!this.hasNextPage()) {\n      if (callback) callback(this.error, null);\n      else if (this.error) throw this.error;\n      return null;\n    }\n\n    var params = AWS.util.copy(this.request.params);\n    if (!this.nextPageTokens) {\n      return callback ? callback(null, null) : null;\n    } else {\n      var inputTokens = config.inputToken;\n      if (typeof inputTokens === 'string') inputTokens = [inputTokens];\n      for (var i = 0; i < inputTokens.length; i++) {\n        params[inputTokens[i]] = this.nextPageTokens[i];\n      }\n      return service.makeRequest(this.request.operation, params, callback);\n    }\n  },\n\n  /**\n   * @return [Boolean] whether more pages of data can be returned by further\n   *   requests\n   * @since v1.4.0\n   */\n  hasNextPage: function hasNextPage() {\n    this.cacheNextPageTokens();\n    if (this.nextPageTokens) return true;\n    if (this.nextPageTokens === undefined) return undefined;\n    else return false;\n  },\n\n  /**\n   * @api private\n   */\n  cacheNextPageTokens: function cacheNextPageTokens() {\n    if (Object.prototype.hasOwnProperty.call(this, 'nextPageTokens')) return this.nextPageTokens;\n    this.nextPageTokens = undefined;\n\n    var config = this.request.service.paginationConfig(this.request.operation);\n    if (!config) return this.nextPageTokens;\n\n    this.nextPageTokens = null;\n    if (config.moreResults) {\n      if (!jmespath.search(this.data, config.moreResults)) {\n        return this.nextPageTokens;\n      }\n    }\n\n    var exprs = config.outputToken;\n    if (typeof exprs === 'string') exprs = [exprs];\n    AWS.util.arrayEach.call(this, exprs, function (expr) {\n      var output = jmespath.search(this.data, expr);\n      if (output) {\n        this.nextPageTokens = this.nextPageTokens || [];\n        this.nextPageTokens.push(output);\n      }\n    });\n\n    return this.nextPageTokens;\n  }\n\n});\n","var AWS = require('../core');\nvar byteLength = AWS.util.string.byteLength;\nvar Buffer = AWS.util.Buffer;\n\n/**\n * The managed uploader allows for easy and efficient uploading of buffers,\n * blobs, or streams, using a configurable amount of concurrency to perform\n * multipart uploads where possible. This abstraction also enables uploading\n * streams of unknown size due to the use of multipart uploads.\n *\n * To construct a managed upload object, see the {constructor} function.\n *\n * ## Tracking upload progress\n *\n * The managed upload object can also track progress by attaching an\n * 'httpUploadProgress' listener to the upload manager. This event is similar\n * to {AWS.Request~httpUploadProgress} but groups all concurrent upload progress\n * into a single event. See {AWS.S3.ManagedUpload~httpUploadProgress} for more\n * information.\n *\n * ## Handling Multipart Cleanup\n *\n * By default, this class will automatically clean up any multipart uploads\n * when an individual part upload fails. This behavior can be disabled in order\n * to manually handle failures by setting the `leavePartsOnError` configuration\n * option to `true` when initializing the upload object.\n *\n * @!event httpUploadProgress(progress)\n *   Triggered when the uploader has uploaded more data.\n *   @note The `total` property may not be set if the stream being uploaded has\n *     not yet finished chunking. In this case the `total` will be undefined\n *     until the total stream size is known.\n *   @note This event will not be emitted in Node.js 0.8.x.\n *   @param progress [map] An object containing the `loaded` and `total` bytes\n *     of the request and the `key` of the S3 object. Note that `total` may be undefined until the payload\n *     size is known.\n *   @context (see AWS.Request~send)\n */\nAWS.S3.ManagedUpload = AWS.util.inherit({\n  /**\n   * Creates a managed upload object with a set of configuration options.\n   *\n   * @note A \"Body\" parameter is required to be set prior to calling {send}.\n   * @note In Node.js, sending \"Body\" as {https://nodejs.org/dist/latest/docs/api/stream.html#stream_object_mode object-mode stream}\n   *   may result in upload hangs. Using buffer stream is preferable.\n   * @option options params [map] a map of parameters to pass to the upload\n   *   requests. The \"Body\" parameter is required to be specified either on\n   *   the service or in the params option.\n   * @note ContentMD5 should not be provided when using the managed upload object.\n   *   Instead, setting \"computeChecksums\" to true will enable automatic ContentMD5 generation\n   *   by the managed upload object.\n   * @option options queueSize [Number] (4) the size of the concurrent queue\n   *   manager to upload parts in parallel. Set to 1 for synchronous uploading\n   *   of parts. Note that the uploader will buffer at most queueSize * partSize\n   *   bytes into memory at any given time.\n   * @option options partSize [Number] (5mb) the size in bytes for each\n   *   individual part to be uploaded. Adjust the part size to ensure the number\n   *   of parts does not exceed {maxTotalParts}. See {minPartSize} for the\n   *   minimum allowed part size.\n   * @option options leavePartsOnError [Boolean] (false) whether to abort the\n   *   multipart upload if an error occurs. Set to true if you want to handle\n   *   failures manually.\n   * @option options service [AWS.S3] an optional S3 service object to use for\n   *   requests. This object might have bound parameters used by the uploader.\n   * @option options tags [Array<map>] The tags to apply to the uploaded object.\n   *   Each tag should have a `Key` and `Value` keys.\n   * @example Creating a default uploader for a stream object\n   *   var upload = new AWS.S3.ManagedUpload({\n   *     params: {Bucket: 'bucket', Key: 'key', Body: stream}\n   *   });\n   * @example Creating an uploader with concurrency of 1 and partSize of 10mb\n   *   var upload = new AWS.S3.ManagedUpload({\n   *     partSize: 10 * 1024 * 1024, queueSize: 1,\n   *     params: {Bucket: 'bucket', Key: 'key', Body: stream}\n   *   });\n   * @example Creating an uploader with tags\n   *   var upload = new AWS.S3.ManagedUpload({\n   *     params: {Bucket: 'bucket', Key: 'key', Body: stream},\n   *     tags: [{Key: 'tag1', Value: 'value1'}, {Key: 'tag2', Value: 'value2'}]\n   *   });\n   * @see send\n   */\n  constructor: function ManagedUpload(options) {\n    var self = this;\n    AWS.SequentialExecutor.call(self);\n    self.body = null;\n    self.sliceFn = null;\n    self.callback = null;\n    self.parts = {};\n    self.completeInfo = [];\n    self.fillQueue = function() {\n      self.callback(new Error('Unsupported body payload ' + typeof self.body));\n    };\n\n    self.configure(options);\n  },\n\n  /**\n   * @api private\n   */\n  configure: function configure(options) {\n    options = options || {};\n    this.partSize = this.minPartSize;\n\n    if (options.queueSize) this.queueSize = options.queueSize;\n    if (options.partSize) this.partSize = options.partSize;\n    if (options.leavePartsOnError) this.leavePartsOnError = true;\n    if (options.tags) {\n      if (!Array.isArray(options.tags)) {\n        throw new Error('Tags must be specified as an array; ' +\n          typeof options.tags + ' provided.');\n      }\n      this.tags = options.tags;\n    }\n\n    if (this.partSize < this.minPartSize) {\n      throw new Error('partSize must be greater than ' +\n                      this.minPartSize);\n    }\n\n    this.service = options.service;\n    this.bindServiceObject(options.params);\n    this.validateBody();\n    this.adjustTotalBytes();\n  },\n\n  /**\n   * @api private\n   */\n  leavePartsOnError: false,\n\n  /**\n   * @api private\n   */\n  queueSize: 4,\n\n  /**\n   * @api private\n   */\n  partSize: null,\n\n  /**\n   * @readonly\n   * @return [Number] the minimum number of bytes for an individual part\n   *   upload.\n   */\n  minPartSize: 1024 * 1024 * 5,\n\n  /**\n   * @readonly\n   * @return [Number] the maximum allowed number of parts in a multipart upload.\n   */\n  maxTotalParts: 10000,\n\n  /**\n   * Initiates the managed upload for the payload.\n   *\n   * @callback callback function(err, data)\n   *   @param err [Error] an error or null if no error occurred.\n   *   @param data [map] The response data from the successful upload:\n   *     * `Location` (String) the URL of the uploaded object\n   *     * `ETag` (String) the ETag of the uploaded object\n   *     * `Bucket` (String) the bucket to which the object was uploaded\n   *     * `Key` (String) the key to which the object was uploaded\n   * @example Sending a managed upload object\n   *   var params = {Bucket: 'bucket', Key: 'key', Body: stream};\n   *   var upload = new AWS.S3.ManagedUpload({params: params});\n   *   upload.send(function(err, data) {\n   *     console.log(err, data);\n   *   });\n   */\n  send: function(callback) {\n    var self = this;\n    self.failed = false;\n    self.callback = callback || function(err) { if (err) throw err; };\n\n    var runFill = true;\n    if (self.sliceFn) {\n      self.fillQueue = self.fillBuffer;\n    } else if (AWS.util.isNode()) {\n      var Stream = AWS.util.stream.Stream;\n      if (self.body instanceof Stream) {\n        runFill = false;\n        self.fillQueue = self.fillStream;\n        self.partBuffers = [];\n        self.body.\n          on('error', function(err) { self.cleanup(err); }).\n          on('readable', function() { self.fillQueue(); }).\n          on('end', function() {\n            self.isDoneChunking = true;\n            self.numParts = self.totalPartNumbers;\n            self.fillQueue.call(self);\n\n            if (self.isDoneChunking && self.totalPartNumbers >= 1 && self.doneParts === self.numParts) {\n              self.finishMultiPart();\n            }\n          });\n      }\n    }\n\n    if (runFill) self.fillQueue.call(self);\n  },\n\n  /**\n   * @!method  promise()\n   *   Returns a 'thenable' promise.\n   *\n   *   Two callbacks can be provided to the `then` method on the returned promise.\n   *   The first callback will be called if the promise is fulfilled, and the second\n   *   callback will be called if the promise is rejected.\n   *   @callback fulfilledCallback function(data)\n   *     Called if the promise is fulfilled.\n   *     @param data [map] The response data from the successful upload:\n   *       `Location` (String) the URL of the uploaded object\n   *       `ETag` (String) the ETag of the uploaded object\n   *       `Bucket` (String) the bucket to which the object was uploaded\n   *       `Key` (String) the key to which the object was uploaded\n   *   @callback rejectedCallback function(err)\n   *     Called if the promise is rejected.\n   *     @param err [Error] an error or null if no error occurred.\n   *   @return [Promise] A promise that represents the state of the upload request.\n   *   @example Sending an upload request using promises.\n   *     var upload = s3.upload({Bucket: 'bucket', Key: 'key', Body: stream});\n   *     var promise = upload.promise();\n   *     promise.then(function(data) { ... }, function(err) { ... });\n   */\n\n  /**\n   * Aborts a managed upload, including all concurrent upload requests.\n   * @note By default, calling this function will cleanup a multipart upload\n   *   if one was created. To leave the multipart upload around after aborting\n   *   a request, configure `leavePartsOnError` to `true` in the {constructor}.\n   * @note Calling {abort} in the browser environment will not abort any requests\n   *   that are already in flight. If a multipart upload was created, any parts\n   *   not yet uploaded will not be sent, and the multipart upload will be cleaned up.\n   * @example Aborting an upload\n   *   var params = {\n   *     Bucket: 'bucket', Key: 'key',\n   *     Body: Buffer.alloc(1024 * 1024 * 25) // 25MB payload\n   *   };\n   *   var upload = s3.upload(params);\n   *   upload.send(function (err, data) {\n   *     if (err) console.log(\"Error:\", err.code, err.message);\n   *     else console.log(data);\n   *   });\n   *\n   *   // abort request in 1 second\n   *   setTimeout(upload.abort.bind(upload), 1000);\n   */\n  abort: function() {\n    var self = this;\n    //abort putObject request\n    if (self.isDoneChunking === true && self.totalPartNumbers === 1 && self.singlePart) {\n      self.singlePart.abort();\n    } else {\n      self.cleanup(AWS.util.error(new Error('Request aborted by user'), {\n        code: 'RequestAbortedError', retryable: false\n      }));\n    }\n  },\n\n  /**\n   * @api private\n   */\n  validateBody: function validateBody() {\n    var self = this;\n    self.body = self.service.config.params.Body;\n    if (typeof self.body === 'string') {\n      self.body = AWS.util.buffer.toBuffer(self.body);\n    } else if (!self.body) {\n      throw new Error('params.Body is required');\n    }\n    self.sliceFn = AWS.util.arraySliceFn(self.body);\n  },\n\n  /**\n   * @api private\n   */\n  bindServiceObject: function bindServiceObject(params) {\n    params = params || {};\n    var self = this;\n    // bind parameters to new service object\n    if (!self.service) {\n      self.service = new AWS.S3({params: params});\n    } else {\n      var service = self.service;\n      var config = AWS.util.copy(service.config);\n      config.signatureVersion = service.getSignatureVersion();\n      self.service = new service.constructor.__super__(config);\n      self.service.config.params =\n        AWS.util.merge(self.service.config.params || {}, params);\n    }\n  },\n\n  /**\n   * @api private\n   */\n  adjustTotalBytes: function adjustTotalBytes() {\n    var self = this;\n    try { // try to get totalBytes\n      self.totalBytes = byteLength(self.body);\n    } catch (e) { }\n\n    // try to adjust partSize if we know payload length\n    if (self.totalBytes) {\n      var newPartSize = Math.ceil(self.totalBytes / self.maxTotalParts);\n      if (newPartSize > self.partSize) self.partSize = newPartSize;\n    } else {\n      self.totalBytes = undefined;\n    }\n  },\n\n  /**\n   * @api private\n   */\n  isDoneChunking: false,\n\n  /**\n   * @api private\n   */\n  partPos: 0,\n\n  /**\n   * @api private\n   */\n  totalChunkedBytes: 0,\n\n  /**\n   * @api private\n   */\n  totalUploadedBytes: 0,\n\n  /**\n   * @api private\n   */\n  totalBytes: undefined,\n\n  /**\n   * @api private\n   */\n  numParts: 0,\n\n  /**\n   * @api private\n   */\n  totalPartNumbers: 0,\n\n  /**\n   * @api private\n   */\n  activeParts: 0,\n\n  /**\n   * @api private\n   */\n  doneParts: 0,\n\n  /**\n   * @api private\n   */\n  parts: null,\n\n  /**\n   * @api private\n   */\n  completeInfo: null,\n\n  /**\n   * @api private\n   */\n  failed: false,\n\n  /**\n   * @api private\n   */\n  multipartReq: null,\n\n  /**\n   * @api private\n   */\n  partBuffers: null,\n\n  /**\n   * @api private\n   */\n  partBufferLength: 0,\n\n  /**\n   * @api private\n   */\n  fillBuffer: function fillBuffer() {\n    var self = this;\n    var bodyLen = byteLength(self.body);\n\n    if (bodyLen === 0) {\n      self.isDoneChunking = true;\n      self.numParts = 1;\n      self.nextChunk(self.body);\n      return;\n    }\n\n    while (self.activeParts < self.queueSize && self.partPos < bodyLen) {\n      var endPos = Math.min(self.partPos + self.partSize, bodyLen);\n      var buf = self.sliceFn.call(self.body, self.partPos, endPos);\n      self.partPos += self.partSize;\n\n      if (byteLength(buf) < self.partSize || self.partPos === bodyLen) {\n        self.isDoneChunking = true;\n        self.numParts = self.totalPartNumbers + 1;\n      }\n      self.nextChunk(buf);\n    }\n  },\n\n  /**\n   * @api private\n   */\n  fillStream: function fillStream() {\n    var self = this;\n    if (self.activeParts >= self.queueSize) return;\n\n    var buf = self.body.read(self.partSize - self.partBufferLength) ||\n              self.body.read();\n    if (buf) {\n      self.partBuffers.push(buf);\n      self.partBufferLength += buf.length;\n      self.totalChunkedBytes += buf.length;\n    }\n\n    if (self.partBufferLength >= self.partSize) {\n      // if we have single buffer we avoid copyfull concat\n      var pbuf = self.partBuffers.length === 1 ?\n        self.partBuffers[0] : Buffer.concat(self.partBuffers);\n      self.partBuffers = [];\n      self.partBufferLength = 0;\n\n      // if we have more than partSize, push the rest back on the queue\n      if (pbuf.length > self.partSize) {\n        var rest = pbuf.slice(self.partSize);\n        self.partBuffers.push(rest);\n        self.partBufferLength += rest.length;\n        pbuf = pbuf.slice(0, self.partSize);\n      }\n\n      self.nextChunk(pbuf);\n    }\n\n    if (self.isDoneChunking && !self.isDoneSending) {\n      // if we have single buffer we avoid copyfull concat\n      pbuf = self.partBuffers.length === 1 ?\n          self.partBuffers[0] : Buffer.concat(self.partBuffers);\n      self.partBuffers = [];\n      self.partBufferLength = 0;\n      self.totalBytes = self.totalChunkedBytes;\n      self.isDoneSending = true;\n\n      if (self.numParts === 0 || pbuf.length > 0) {\n        self.numParts++;\n        self.nextChunk(pbuf);\n      }\n    }\n\n    self.body.read(0);\n  },\n\n  /**\n   * @api private\n   */\n  nextChunk: function nextChunk(chunk) {\n    var self = this;\n    if (self.failed) return null;\n\n    var partNumber = ++self.totalPartNumbers;\n    if (self.isDoneChunking && partNumber === 1) {\n      var params = {Body: chunk};\n      if (this.tags) {\n        params.Tagging = this.getTaggingHeader();\n      }\n      var req = self.service.putObject(params);\n      req._managedUpload = self;\n      req.on('httpUploadProgress', self.progress).send(self.finishSinglePart);\n      self.singlePart = req; //save the single part request\n      return null;\n    } else if (self.service.config.params.ContentMD5) {\n      var err = AWS.util.error(new Error('The Content-MD5 you specified is invalid for multi-part uploads.'), {\n        code: 'InvalidDigest', retryable: false\n      });\n\n      self.cleanup(err);\n      return null;\n    }\n\n    if (self.completeInfo[partNumber] && self.completeInfo[partNumber].ETag !== null) {\n      return null; // Already uploaded this part.\n    }\n\n    self.activeParts++;\n    if (!self.service.config.params.UploadId) {\n\n      if (!self.multipartReq) { // create multipart\n        self.multipartReq = self.service.createMultipartUpload();\n        self.multipartReq.on('success', function(resp) {\n          self.service.config.params.UploadId = resp.data.UploadId;\n          self.multipartReq = null;\n        });\n        self.queueChunks(chunk, partNumber);\n        self.multipartReq.on('error', function(err) {\n          self.cleanup(err);\n        });\n        self.multipartReq.send();\n      } else {\n        self.queueChunks(chunk, partNumber);\n      }\n    } else { // multipart is created, just send\n      self.uploadPart(chunk, partNumber);\n    }\n  },\n\n  /**\n   * @api private\n   */\n  getTaggingHeader: function getTaggingHeader() {\n    var kvPairStrings = [];\n    for (var i = 0; i < this.tags.length; i++) {\n      kvPairStrings.push(AWS.util.uriEscape(this.tags[i].Key) + '=' +\n        AWS.util.uriEscape(this.tags[i].Value));\n    }\n\n    return kvPairStrings.join('&');\n  },\n\n  /**\n   * @api private\n   */\n  uploadPart: function uploadPart(chunk, partNumber) {\n    var self = this;\n\n    var partParams = {\n      Body: chunk,\n      ContentLength: AWS.util.string.byteLength(chunk),\n      PartNumber: partNumber\n    };\n\n    var partInfo = {ETag: null, PartNumber: partNumber};\n    self.completeInfo[partNumber] = partInfo;\n\n    var req = self.service.uploadPart(partParams);\n    self.parts[partNumber] = req;\n    req._lastUploadedBytes = 0;\n    req._managedUpload = self;\n    req.on('httpUploadProgress', self.progress);\n    req.send(function(err, data) {\n      delete self.parts[partParams.PartNumber];\n      self.activeParts--;\n\n      if (!err && (!data || !data.ETag)) {\n        var message = 'No access to ETag property on response.';\n        if (AWS.util.isBrowser()) {\n          message += ' Check CORS configuration to expose ETag header.';\n        }\n\n        err = AWS.util.error(new Error(message), {\n          code: 'ETagMissing', retryable: false\n        });\n      }\n      if (err) return self.cleanup(err);\n      //prevent sending part being returned twice (https://github.com/aws/aws-sdk-js/issues/2304)\n      if (self.completeInfo[partNumber] && self.completeInfo[partNumber].ETag !== null) return null;\n      partInfo.ETag = data.ETag;\n      self.doneParts++;\n      if (self.isDoneChunking && self.doneParts === self.numParts) {\n        self.finishMultiPart();\n      } else {\n        self.fillQueue.call(self);\n      }\n    });\n  },\n\n  /**\n   * @api private\n   */\n  queueChunks: function queueChunks(chunk, partNumber) {\n    var self = this;\n    self.multipartReq.on('success', function() {\n      self.uploadPart(chunk, partNumber);\n    });\n  },\n\n  /**\n   * @api private\n   */\n  cleanup: function cleanup(err) {\n    var self = this;\n    if (self.failed) return;\n\n    // clean up stream\n    if (typeof self.body.removeAllListeners === 'function' &&\n        typeof self.body.resume === 'function') {\n      self.body.removeAllListeners('readable');\n      self.body.removeAllListeners('end');\n      self.body.resume();\n    }\n\n    // cleanup multipartReq listeners\n    if (self.multipartReq) {\n      self.multipartReq.removeAllListeners('success');\n      self.multipartReq.removeAllListeners('error');\n      self.multipartReq.removeAllListeners('complete');\n      delete self.multipartReq;\n    }\n\n    if (self.service.config.params.UploadId && !self.leavePartsOnError) {\n      self.service.abortMultipartUpload().send();\n    } else if (self.leavePartsOnError) {\n      self.isDoneChunking = false;\n    }\n\n    AWS.util.each(self.parts, function(partNumber, part) {\n      part.removeAllListeners('complete');\n      part.abort();\n    });\n\n    self.activeParts = 0;\n    self.partPos = 0;\n    self.numParts = 0;\n    self.totalPartNumbers = 0;\n    self.parts = {};\n    self.failed = true;\n    self.callback(err);\n  },\n\n  /**\n   * @api private\n   */\n  finishMultiPart: function finishMultiPart() {\n    var self = this;\n    var completeParams = { MultipartUpload: { Parts: self.completeInfo.slice(1) } };\n    self.service.completeMultipartUpload(completeParams, function(err, data) {\n      if (err) {\n        return self.cleanup(err);\n      }\n\n      if (data && typeof data.Location === 'string') {\n        data.Location = data.Location.replace(/%2F/g, '/');\n      }\n\n      if (Array.isArray(self.tags)) {\n        for (var i = 0; i < self.tags.length; i++) {\n          self.tags[i].Value = String(self.tags[i].Value);\n        }\n        self.service.putObjectTagging(\n          {Tagging: {TagSet: self.tags}},\n          function(e, d) {\n            if (e) {\n              self.callback(e);\n            } else {\n              self.callback(e, data);\n            }\n          }\n        );\n      } else {\n        self.callback(err, data);\n      }\n    });\n  },\n\n  /**\n   * @api private\n   */\n  finishSinglePart: function finishSinglePart(err, data) {\n    var upload = this.request._managedUpload;\n    var httpReq = this.request.httpRequest;\n    var endpoint = httpReq.endpoint;\n    if (err) return upload.callback(err);\n    data.Location =\n      [endpoint.protocol, '//', endpoint.host, httpReq.path].join('');\n    data.key = this.request.params.Key; // will stay undocumented\n    data.Key = this.request.params.Key;\n    data.Bucket = this.request.params.Bucket;\n    upload.callback(err, data);\n  },\n\n  /**\n   * @api private\n   */\n  progress: function progress(info) {\n    var upload = this._managedUpload;\n    if (this.operation === 'putObject') {\n      info.part = 1;\n      info.key = this.params.Key;\n    } else {\n      upload.totalUploadedBytes += info.loaded - this._lastUploadedBytes;\n      this._lastUploadedBytes = info.loaded;\n      info = {\n        loaded: upload.totalUploadedBytes,\n        total: upload.totalBytes,\n        part: this.params.PartNumber,\n        key: this.params.Key\n      };\n    }\n    upload.emit('httpUploadProgress', [info]);\n  }\n});\n\nAWS.util.mixin(AWS.S3.ManagedUpload, AWS.SequentialExecutor);\n\n/**\n * @api private\n */\nAWS.S3.ManagedUpload.addPromisesToClass = function addPromisesToClass(PromiseDependency) {\n  this.prototype.promise = AWS.util.promisifyMethod('send', PromiseDependency);\n};\n\n/**\n * @api private\n */\nAWS.S3.ManagedUpload.deletePromisesFromClass = function deletePromisesFromClass() {\n  delete this.prototype.promise;\n};\n\nAWS.util.addPromises(AWS.S3.ManagedUpload);\n\n/**\n * @api private\n */\nmodule.exports = AWS.S3.ManagedUpload;\n","var AWS = require('./core');\n\n/**\n * @api private\n * @!method on(eventName, callback)\n *   Registers an event listener callback for the event given by `eventName`.\n *   Parameters passed to the callback function depend on the individual event\n *   being triggered. See the event documentation for those parameters.\n *\n *   @param eventName [String] the event name to register the listener for\n *   @param callback [Function] the listener callback function\n *   @param toHead [Boolean] attach the listener callback to the head of callback array if set to true.\n *     Default to be false.\n *   @return [AWS.SequentialExecutor] the same object for chaining\n */\nAWS.SequentialExecutor = AWS.util.inherit({\n\n  constructor: function SequentialExecutor() {\n    this._events = {};\n  },\n\n  /**\n   * @api private\n   */\n  listeners: function listeners(eventName) {\n    return this._events[eventName] ? this._events[eventName].slice(0) : [];\n  },\n\n  on: function on(eventName, listener, toHead) {\n    if (this._events[eventName]) {\n      toHead ?\n        this._events[eventName].unshift(listener) :\n        this._events[eventName].push(listener);\n    } else {\n      this._events[eventName] = [listener];\n    }\n    return this;\n  },\n\n  onAsync: function onAsync(eventName, listener, toHead) {\n    listener._isAsync = true;\n    return this.on(eventName, listener, toHead);\n  },\n\n  removeListener: function removeListener(eventName, listener) {\n    var listeners = this._events[eventName];\n    if (listeners) {\n      var length = listeners.length;\n      var position = -1;\n      for (var i = 0; i < length; ++i) {\n        if (listeners[i] === listener) {\n          position = i;\n        }\n      }\n      if (position > -1) {\n        listeners.splice(position, 1);\n      }\n    }\n    return this;\n  },\n\n  removeAllListeners: function removeAllListeners(eventName) {\n    if (eventName) {\n      delete this._events[eventName];\n    } else {\n      this._events = {};\n    }\n    return this;\n  },\n\n  /**\n   * @api private\n   */\n  emit: function emit(eventName, eventArgs, doneCallback) {\n    if (!doneCallback) doneCallback = function() { };\n    var listeners = this.listeners(eventName);\n    var count = listeners.length;\n    this.callListeners(listeners, eventArgs, doneCallback);\n    return count > 0;\n  },\n\n  /**\n   * @api private\n   */\n  callListeners: function callListeners(listeners, args, doneCallback, prevError) {\n    var self = this;\n    var error = prevError || null;\n\n    function callNextListener(err) {\n      if (err) {\n        error = AWS.util.error(error || new Error(), err);\n        if (self._haltHandlersOnError) {\n          return doneCallback.call(self, error);\n        }\n      }\n      self.callListeners(listeners, args, doneCallback, error);\n    }\n\n    while (listeners.length > 0) {\n      var listener = listeners.shift();\n      if (listener._isAsync) { // asynchronous listener\n        listener.apply(self, args.concat([callNextListener]));\n        return; // stop here, callNextListener will continue\n      } else { // synchronous listener\n        try {\n          listener.apply(self, args);\n        } catch (err) {\n          error = AWS.util.error(error || new Error(), err);\n        }\n        if (error && self._haltHandlersOnError) {\n          doneCallback.call(self, error);\n          return;\n        }\n      }\n    }\n    doneCallback.call(self, error);\n  },\n\n  /**\n   * Adds or copies a set of listeners from another list of\n   * listeners or SequentialExecutor object.\n   *\n   * @param listeners [map<String,Array<Function>>, AWS.SequentialExecutor]\n   *   a list of events and callbacks, or an event emitter object\n   *   containing listeners to add to this emitter object.\n   * @return [AWS.SequentialExecutor] the emitter object, for chaining.\n   * @example Adding listeners from a map of listeners\n   *   emitter.addListeners({\n   *     event1: [function() { ... }, function() { ... }],\n   *     event2: [function() { ... }]\n   *   });\n   *   emitter.emit('event1'); // emitter has event1\n   *   emitter.emit('event2'); // emitter has event2\n   * @example Adding listeners from another emitter object\n   *   var emitter1 = new AWS.SequentialExecutor();\n   *   emitter1.on('event1', function() { ... });\n   *   emitter1.on('event2', function() { ... });\n   *   var emitter2 = new AWS.SequentialExecutor();\n   *   emitter2.addListeners(emitter1);\n   *   emitter2.emit('event1'); // emitter2 has event1\n   *   emitter2.emit('event2'); // emitter2 has event2\n   */\n  addListeners: function addListeners(listeners) {\n    var self = this;\n\n    // extract listeners if parameter is an SequentialExecutor object\n    if (listeners._events) listeners = listeners._events;\n\n    AWS.util.each(listeners, function(event, callbacks) {\n      if (typeof callbacks === 'function') callbacks = [callbacks];\n      AWS.util.arrayEach(callbacks, function(callback) {\n        self.on(event, callback);\n      });\n    });\n\n    return self;\n  },\n\n  /**\n   * Registers an event with {on} and saves the callback handle function\n   * as a property on the emitter object using a given `name`.\n   *\n   * @param name [String] the property name to set on this object containing\n   *   the callback function handle so that the listener can be removed in\n   *   the future.\n   * @param (see on)\n   * @return (see on)\n   * @example Adding a named listener DATA_CALLBACK\n   *   var listener = function() { doSomething(); };\n   *   emitter.addNamedListener('DATA_CALLBACK', 'data', listener);\n   *\n   *   // the following prints: true\n   *   console.log(emitter.DATA_CALLBACK == listener);\n   */\n  addNamedListener: function addNamedListener(name, eventName, callback, toHead) {\n    this[name] = callback;\n    this.addListener(eventName, callback, toHead);\n    return this;\n  },\n\n  /**\n   * @api private\n   */\n  addNamedAsyncListener: function addNamedAsyncListener(name, eventName, callback, toHead) {\n    callback._isAsync = true;\n    return this.addNamedListener(name, eventName, callback, toHead);\n  },\n\n  /**\n   * Helper method to add a set of named listeners using\n   * {addNamedListener}. The callback contains a parameter\n   * with a handle to the `addNamedListener` method.\n   *\n   * @callback callback function(add)\n   *   The callback function is called immediately in order to provide\n   *   the `add` function to the block. This simplifies the addition of\n   *   a large group of named listeners.\n   *   @param add [Function] the {addNamedListener} function to call\n   *     when registering listeners.\n   * @example Adding a set of named listeners\n   *   emitter.addNamedListeners(function(add) {\n   *     add('DATA_CALLBACK', 'data', function() { ... });\n   *     add('OTHER', 'otherEvent', function() { ... });\n   *     add('LAST', 'lastEvent', function() { ... });\n   *   });\n   *\n   *   // these properties are now set:\n   *   emitter.DATA_CALLBACK;\n   *   emitter.OTHER;\n   *   emitter.LAST;\n   */\n  addNamedListeners: function addNamedListeners(callback) {\n    var self = this;\n    callback(\n      function() {\n        self.addNamedListener.apply(self, arguments);\n      },\n      function() {\n        self.addNamedAsyncListener.apply(self, arguments);\n      }\n    );\n    return this;\n  }\n});\n\n/**\n * {on} is the prefered method.\n * @api private\n */\nAWS.SequentialExecutor.prototype.addListener = AWS.SequentialExecutor.prototype.on;\n\n/**\n * @api private\n */\nmodule.exports = AWS.SequentialExecutor;\n","var AWS = require('./core');\nvar Api = require('./model/api');\nvar regionConfig = require('./region_config');\n\nvar inherit = AWS.util.inherit;\nvar clientCount = 0;\n\n/**\n * The service class representing an AWS service.\n *\n * @class_abstract This class is an abstract class.\n *\n * @!attribute apiVersions\n *   @return [Array<String>] the list of API versions supported by this service.\n *   @readonly\n */\nAWS.Service = inherit({\n  /**\n   * Create a new service object with a configuration object\n   *\n   * @param config [map] a map of configuration options\n   */\n  constructor: function Service(config) {\n    if (!this.loadServiceClass) {\n      throw AWS.util.error(new Error(),\n        'Service must be constructed with `new\\' operator');\n    }\n    var ServiceClass = this.loadServiceClass(config || {});\n    if (ServiceClass) {\n      var originalConfig = AWS.util.copy(config);\n      var svc = new ServiceClass(config);\n      Object.defineProperty(svc, '_originalConfig', {\n        get: function() { return originalConfig; },\n        enumerable: false,\n        configurable: true\n      });\n      svc._clientId = ++clientCount;\n      return svc;\n    }\n    this.initialize(config);\n  },\n\n  /**\n   * @api private\n   */\n  initialize: function initialize(config) {\n    var svcConfig = AWS.config[this.serviceIdentifier];\n    this.config = new AWS.Config(AWS.config);\n    if (svcConfig) this.config.update(svcConfig, true);\n    if (config) this.config.update(config, true);\n\n    this.validateService();\n    if (!this.config.endpoint) regionConfig(this);\n\n    this.config.endpoint = this.endpointFromTemplate(this.config.endpoint);\n    this.setEndpoint(this.config.endpoint);\n    //enable attaching listeners to service client\n    AWS.SequentialExecutor.call(this);\n    AWS.Service.addDefaultMonitoringListeners(this);\n    if ((this.config.clientSideMonitoring || AWS.Service._clientSideMonitoring) && this.publisher) {\n      var publisher = this.publisher;\n      this.addNamedListener('PUBLISH_API_CALL', 'apiCall', function PUBLISH_API_CALL(event) {\n        process.nextTick(function() {publisher.eventHandler(event);});\n      });\n      this.addNamedListener('PUBLISH_API_ATTEMPT', 'apiCallAttempt', function PUBLISH_API_ATTEMPT(event) {\n        process.nextTick(function() {publisher.eventHandler(event);});\n      });\n    }\n  },\n\n  /**\n   * @api private\n   */\n  validateService: function validateService() {\n  },\n\n  /**\n   * @api private\n   */\n  loadServiceClass: function loadServiceClass(serviceConfig) {\n    var config = serviceConfig;\n    if (!AWS.util.isEmpty(this.api)) {\n      return null;\n    } else if (config.apiConfig) {\n      return AWS.Service.defineServiceApi(this.constructor, config.apiConfig);\n    } else if (!this.constructor.services) {\n      return null;\n    } else {\n      config = new AWS.Config(AWS.config);\n      config.update(serviceConfig, true);\n      var version = config.apiVersions[this.constructor.serviceIdentifier];\n      version = version || config.apiVersion;\n      return this.getLatestServiceClass(version);\n    }\n  },\n\n  /**\n   * @api private\n   */\n  getLatestServiceClass: function getLatestServiceClass(version) {\n    version = this.getLatestServiceVersion(version);\n    if (this.constructor.services[version] === null) {\n      AWS.Service.defineServiceApi(this.constructor, version);\n    }\n\n    return this.constructor.services[version];\n  },\n\n  /**\n   * @api private\n   */\n  getLatestServiceVersion: function getLatestServiceVersion(version) {\n    if (!this.constructor.services || this.constructor.services.length === 0) {\n      throw new Error('No services defined on ' +\n                      this.constructor.serviceIdentifier);\n    }\n\n    if (!version) {\n      version = 'latest';\n    } else if (AWS.util.isType(version, Date)) {\n      version = AWS.util.date.iso8601(version).split('T')[0];\n    }\n\n    if (Object.hasOwnProperty(this.constructor.services, version)) {\n      return version;\n    }\n\n    var keys = Object.keys(this.constructor.services).sort();\n    var selectedVersion = null;\n    for (var i = keys.length - 1; i >= 0; i--) {\n      // versions that end in \"*\" are not available on disk and can be\n      // skipped, so do not choose these as selectedVersions\n      if (keys[i][keys[i].length - 1] !== '*') {\n        selectedVersion = keys[i];\n      }\n      if (keys[i].substr(0, 10) <= version) {\n        return selectedVersion;\n      }\n    }\n\n    throw new Error('Could not find ' + this.constructor.serviceIdentifier +\n                    ' API to satisfy version constraint `' + version + '\\'');\n  },\n\n  /**\n   * @api private\n   */\n  api: {},\n\n  /**\n   * @api private\n   */\n  defaultRetryCount: 3,\n\n  /**\n   * @api private\n   */\n  customizeRequests: function customizeRequests(callback) {\n    if (!callback) {\n      this.customRequestHandler = null;\n    } else if (typeof callback === 'function') {\n      this.customRequestHandler = callback;\n    } else {\n      throw new Error('Invalid callback type \\'' + typeof callback + '\\' provided in customizeRequests');\n    }\n  },\n\n  /**\n   * Calls an operation on a service with the given input parameters.\n   *\n   * @param operation [String] the name of the operation to call on the service.\n   * @param params [map] a map of input options for the operation\n   * @callback callback function(err, data)\n   *   If a callback is supplied, it is called when a response is returned\n   *   from the service.\n   *   @param err [Error] the error object returned from the request.\n   *     Set to `null` if the request is successful.\n   *   @param data [Object] the de-serialized data returned from\n   *     the request. Set to `null` if a request error occurs.\n   */\n  makeRequest: function makeRequest(operation, params, callback) {\n    if (typeof params === 'function') {\n      callback = params;\n      params = null;\n    }\n\n    params = params || {};\n    if (this.config.params) { // copy only toplevel bound params\n      var rules = this.api.operations[operation];\n      if (rules) {\n        params = AWS.util.copy(params);\n        AWS.util.each(this.config.params, function(key, value) {\n          if (rules.input.members[key]) {\n            if (params[key] === undefined || params[key] === null) {\n              params[key] = value;\n            }\n          }\n        });\n      }\n    }\n\n    var request = new AWS.Request(this, operation, params);\n    this.addAllRequestListeners(request);\n    this.attachMonitoringEmitter(request);\n    if (callback) request.send(callback);\n    return request;\n  },\n\n  /**\n   * Calls an operation on a service with the given input parameters, without\n   * any authentication data. This method is useful for \"public\" API operations.\n   *\n   * @param operation [String] the name of the operation to call on the service.\n   * @param params [map] a map of input options for the operation\n   * @callback callback function(err, data)\n   *   If a callback is supplied, it is called when a response is returned\n   *   from the service.\n   *   @param err [Error] the error object returned from the request.\n   *     Set to `null` if the request is successful.\n   *   @param data [Object] the de-serialized data returned from\n   *     the request. Set to `null` if a request error occurs.\n   */\n  makeUnauthenticatedRequest: function makeUnauthenticatedRequest(operation, params, callback) {\n    if (typeof params === 'function') {\n      callback = params;\n      params = {};\n    }\n\n    var request = this.makeRequest(operation, params).toUnauthenticated();\n    return callback ? request.send(callback) : request;\n  },\n\n  /**\n   * Waits for a given state\n   *\n   * @param state [String] the state on the service to wait for\n   * @param params [map] a map of parameters to pass with each request\n   * @option params $waiter [map] a map of configuration options for the waiter\n   * @option params $waiter.delay [Number] The number of seconds to wait between\n   *                                       requests\n   * @option params $waiter.maxAttempts [Number] The maximum number of requests\n   *                                             to send while waiting\n   * @callback callback function(err, data)\n   *   If a callback is supplied, it is called when a response is returned\n   *   from the service.\n   *   @param err [Error] the error object returned from the request.\n   *     Set to `null` if the request is successful.\n   *   @param data [Object] the de-serialized data returned from\n   *     the request. Set to `null` if a request error occurs.\n   */\n  waitFor: function waitFor(state, params, callback) {\n    var waiter = new AWS.ResourceWaiter(this, state);\n    return waiter.wait(params, callback);\n  },\n\n  /**\n   * @api private\n   */\n  addAllRequestListeners: function addAllRequestListeners(request) {\n    var list = [AWS.events, AWS.EventListeners.Core, this.serviceInterface(),\n                AWS.EventListeners.CorePost];\n    for (var i = 0; i < list.length; i++) {\n      if (list[i]) request.addListeners(list[i]);\n    }\n\n    // disable parameter validation\n    if (!this.config.paramValidation) {\n      request.removeListener('validate',\n        AWS.EventListeners.Core.VALIDATE_PARAMETERS);\n    }\n\n    if (this.config.logger) { // add logging events\n      request.addListeners(AWS.EventListeners.Logger);\n    }\n\n    this.setupRequestListeners(request);\n    // call prototype's customRequestHandler\n    if (typeof this.constructor.prototype.customRequestHandler === 'function') {\n      this.constructor.prototype.customRequestHandler(request);\n    }\n    // call instance's customRequestHandler\n    if (Object.prototype.hasOwnProperty.call(this, 'customRequestHandler') && typeof this.customRequestHandler === 'function') {\n      this.customRequestHandler(request);\n    }\n  },\n\n  /**\n   * Event recording metrics for a whole API call.\n   * @returns {object} a subset of api call metrics\n   * @api private\n   */\n  apiCallEvent: function apiCallEvent(request) {\n    var api = request.service.api.operations[request.operation];\n    var monitoringEvent = {\n      Type: 'ApiCall',\n      Api: api ? api.name : request.operation,\n      Version: 1,\n      Service: request.service.api.serviceId || request.service.api.endpointPrefix,\n      Region: request.httpRequest.region,\n      MaxRetriesExceeded: 0,\n      UserAgent: request.httpRequest.getUserAgent(),\n    };\n    var response = request.response;\n    if (response.httpResponse.statusCode) {\n      monitoringEvent.FinalHttpStatusCode = response.httpResponse.statusCode;\n    }\n    if (response.error) {\n      var error = response.error;\n      var statusCode = response.httpResponse.statusCode;\n      if (statusCode > 299) {\n        if (error.code) monitoringEvent.FinalAwsException = error.code;\n        if (error.message) monitoringEvent.FinalAwsExceptionMessage = error.message;\n      } else {\n        if (error.code || error.name) monitoringEvent.FinalSdkException = error.code || error.name;\n        if (error.message) monitoringEvent.FinalSdkExceptionMessage = error.message;\n      }\n    }\n    return monitoringEvent;\n  },\n\n  /**\n   * Event recording metrics for an API call attempt.\n   * @returns {object} a subset of api call attempt metrics\n   * @api private\n   */\n  apiAttemptEvent: function apiAttemptEvent(request) {\n    var api = request.service.api.operations[request.operation];\n    var monitoringEvent = {\n      Type: 'ApiCallAttempt',\n      Api: api ? api.name : request.operation,\n      Version: 1,\n      Service: request.service.api.serviceId || request.service.api.endpointPrefix,\n      Fqdn: request.httpRequest.endpoint.hostname,\n      UserAgent: request.httpRequest.getUserAgent(),\n    };\n    var response = request.response;\n    if (response.httpResponse.statusCode) {\n      monitoringEvent.HttpStatusCode = response.httpResponse.statusCode;\n    }\n    if (\n      !request._unAuthenticated &&\n      request.service.config.credentials &&\n      request.service.config.credentials.accessKeyId\n    ) {\n      monitoringEvent.AccessKey = request.service.config.credentials.accessKeyId;\n    }\n    if (!response.httpResponse.headers) return monitoringEvent;\n    if (request.httpRequest.headers['x-amz-security-token']) {\n      monitoringEvent.SessionToken = request.httpRequest.headers['x-amz-security-token'];\n    }\n    if (response.httpResponse.headers['x-amzn-requestid']) {\n      monitoringEvent.XAmznRequestId = response.httpResponse.headers['x-amzn-requestid'];\n    }\n    if (response.httpResponse.headers['x-amz-request-id']) {\n      monitoringEvent.XAmzRequestId = response.httpResponse.headers['x-amz-request-id'];\n    }\n    if (response.httpResponse.headers['x-amz-id-2']) {\n      monitoringEvent.XAmzId2 = response.httpResponse.headers['x-amz-id-2'];\n    }\n    return monitoringEvent;\n  },\n\n  /**\n   * Add metrics of failed request.\n   * @api private\n   */\n  attemptFailEvent: function attemptFailEvent(request) {\n    var monitoringEvent = this.apiAttemptEvent(request);\n    var response = request.response;\n    var error = response.error;\n    if (response.httpResponse.statusCode > 299 ) {\n      if (error.code) monitoringEvent.AwsException = error.code;\n      if (error.message) monitoringEvent.AwsExceptionMessage = error.message;\n    } else {\n      if (error.code || error.name) monitoringEvent.SdkException = error.code || error.name;\n      if (error.message) monitoringEvent.SdkExceptionMessage = error.message;\n    }\n    return monitoringEvent;\n  },\n\n  /**\n   * Attach listeners to request object to fetch metrics of each request\n   * and emit data object through \\'ApiCall\\' and \\'ApiCallAttempt\\' events.\n   * @api private\n   */\n  attachMonitoringEmitter: function attachMonitoringEmitter(request) {\n    var attemptTimestamp; //timestamp marking the beginning of a request attempt\n    var attemptStartRealTime; //Start time of request attempt. Used to calculating attemptLatency\n    var attemptLatency; //latency from request sent out to http response reaching SDK\n    var callStartRealTime; //Start time of API call. Used to calculating API call latency\n    var attemptCount = 0; //request.retryCount is not reliable here\n    var region; //region cache region for each attempt since it can be updated in plase (e.g. s3)\n    var callTimestamp; //timestamp when the request is created\n    var self = this;\n    var addToHead = true;\n\n    request.on('validate', function () {\n      callStartRealTime = AWS.util.realClock.now();\n      callTimestamp = Date.now();\n    }, addToHead);\n    request.on('sign', function () {\n      attemptStartRealTime = AWS.util.realClock.now();\n      attemptTimestamp = Date.now();\n      region = request.httpRequest.region;\n      attemptCount++;\n    }, addToHead);\n    request.on('validateResponse', function() {\n      attemptLatency = Math.round(AWS.util.realClock.now() - attemptStartRealTime);\n    });\n    request.addNamedListener('API_CALL_ATTEMPT', 'success', function API_CALL_ATTEMPT() {\n      var apiAttemptEvent = self.apiAttemptEvent(request);\n      apiAttemptEvent.Timestamp = attemptTimestamp;\n      apiAttemptEvent.AttemptLatency = attemptLatency >= 0 ? attemptLatency : 0;\n      apiAttemptEvent.Region = region;\n      self.emit('apiCallAttempt', [apiAttemptEvent]);\n    });\n    request.addNamedListener('API_CALL_ATTEMPT_RETRY', 'retry', function API_CALL_ATTEMPT_RETRY() {\n      var apiAttemptEvent = self.attemptFailEvent(request);\n      apiAttemptEvent.Timestamp = attemptTimestamp;\n      //attemptLatency may not be available if fail before response\n      attemptLatency = attemptLatency ||\n        Math.round(AWS.util.realClock.now() - attemptStartRealTime);\n      apiAttemptEvent.AttemptLatency = attemptLatency >= 0 ? attemptLatency : 0;\n      apiAttemptEvent.Region = region;\n      self.emit('apiCallAttempt', [apiAttemptEvent]);\n    });\n    request.addNamedListener('API_CALL', 'complete', function API_CALL() {\n      var apiCallEvent = self.apiCallEvent(request);\n      apiCallEvent.AttemptCount = attemptCount;\n      if (apiCallEvent.AttemptCount <= 0) return;\n      apiCallEvent.Timestamp = callTimestamp;\n      var latency = Math.round(AWS.util.realClock.now() - callStartRealTime);\n      apiCallEvent.Latency = latency >= 0 ? latency : 0;\n      var response = request.response;\n      if (\n        typeof response.retryCount === 'number' &&\n        typeof response.maxRetries === 'number' &&\n        (response.retryCount >= response.maxRetries)\n      ) {\n        apiCallEvent.MaxRetriesExceeded = 1;\n      }\n      self.emit('apiCall', [apiCallEvent]);\n    });\n  },\n\n  /**\n   * Override this method to setup any custom request listeners for each\n   * new request to the service.\n   *\n   * @method_abstract This is an abstract method.\n   */\n  setupRequestListeners: function setupRequestListeners(request) {\n  },\n\n  /**\n   * Gets the signer class for a given request\n   * @api private\n   */\n  getSignerClass: function getSignerClass(request) {\n    var version;\n    // get operation authtype if present\n    var operation = null;\n    var authtype = '';\n    if (request) {\n      var operations = request.service.api.operations || {};\n      operation = operations[request.operation] || null;\n      authtype = operation ? operation.authtype : '';\n    }\n    if (this.config.signatureVersion) {\n      version = this.config.signatureVersion;\n    } else if (authtype === 'v4' || authtype === 'v4-unsigned-body') {\n      version = 'v4';\n    } else {\n      version = this.api.signatureVersion;\n    }\n    return AWS.Signers.RequestSigner.getVersion(version);\n  },\n\n  /**\n   * @api private\n   */\n  serviceInterface: function serviceInterface() {\n    switch (this.api.protocol) {\n      case 'ec2': return AWS.EventListeners.Query;\n      case 'query': return AWS.EventListeners.Query;\n      case 'json': return AWS.EventListeners.Json;\n      case 'rest-json': return AWS.EventListeners.RestJson;\n      case 'rest-xml': return AWS.EventListeners.RestXml;\n    }\n    if (this.api.protocol) {\n      throw new Error('Invalid service `protocol\\' ' +\n        this.api.protocol + ' in API config');\n    }\n  },\n\n  /**\n   * @api private\n   */\n  successfulResponse: function successfulResponse(resp) {\n    return resp.httpResponse.statusCode < 300;\n  },\n\n  /**\n   * How many times a failed request should be retried before giving up.\n   * the defaultRetryCount can be overriden by service classes.\n   *\n   * @api private\n   */\n  numRetries: function numRetries() {\n    if (this.config.maxRetries !== undefined) {\n      return this.config.maxRetries;\n    } else {\n      return this.defaultRetryCount;\n    }\n  },\n\n  /**\n   * @api private\n   */\n  retryDelays: function retryDelays(retryCount) {\n    return AWS.util.calculateRetryDelay(retryCount, this.config.retryDelayOptions);\n  },\n\n  /**\n   * @api private\n   */\n  retryableError: function retryableError(error) {\n    if (this.timeoutError(error)) return true;\n    if (this.networkingError(error)) return true;\n    if (this.expiredCredentialsError(error)) return true;\n    if (this.throttledError(error)) return true;\n    if (error.statusCode >= 500) return true;\n    return false;\n  },\n\n  /**\n   * @api private\n   */\n  networkingError: function networkingError(error) {\n    return error.code === 'NetworkingError';\n  },\n\n  /**\n   * @api private\n   */\n  timeoutError: function timeoutError(error) {\n    return error.code === 'TimeoutError';\n  },\n\n  /**\n   * @api private\n   */\n  expiredCredentialsError: function expiredCredentialsError(error) {\n    // TODO : this only handles *one* of the expired credential codes\n    return (error.code === 'ExpiredTokenException');\n  },\n\n  /**\n   * @api private\n   */\n  clockSkewError: function clockSkewError(error) {\n    switch (error.code) {\n      case 'RequestTimeTooSkewed':\n      case 'RequestExpired':\n      case 'InvalidSignatureException':\n      case 'SignatureDoesNotMatch':\n      case 'AuthFailure':\n      case 'RequestInTheFuture':\n        return true;\n      default: return false;\n    }\n  },\n\n  /**\n   * @api private\n   */\n  getSkewCorrectedDate: function getSkewCorrectedDate() {\n    return new Date(Date.now() + this.config.systemClockOffset);\n  },\n\n  /**\n   * @api private\n   */\n  applyClockOffset: function applyClockOffset(newServerTime) {\n    if (newServerTime) {\n      this.config.systemClockOffset = newServerTime - Date.now();\n    }\n  },\n\n  /**\n   * @api private\n   */\n  isClockSkewed: function isClockSkewed(newServerTime) {\n    if (newServerTime) {\n      return Math.abs(this.getSkewCorrectedDate().getTime() - newServerTime) >= 30000;\n    }\n  },\n\n  /**\n   * @api private\n   */\n  throttledError: function throttledError(error) {\n    // this logic varies between services\n    switch (error.code) {\n      case 'ProvisionedThroughputExceededException':\n      case 'Throttling':\n      case 'ThrottlingException':\n      case 'RequestLimitExceeded':\n      case 'RequestThrottled':\n      case 'RequestThrottledException':\n      case 'TooManyRequestsException':\n      case 'TransactionInProgressException': //dynamodb\n        return true;\n      default:\n        return false;\n    }\n  },\n\n  /**\n   * @api private\n   */\n  endpointFromTemplate: function endpointFromTemplate(endpoint) {\n    if (typeof endpoint !== 'string') return endpoint;\n\n    var e = endpoint;\n    e = e.replace(/\\{service\\}/g, this.api.endpointPrefix);\n    e = e.replace(/\\{region\\}/g, this.config.region);\n    e = e.replace(/\\{scheme\\}/g, this.config.sslEnabled ? 'https' : 'http');\n    return e;\n  },\n\n  /**\n   * @api private\n   */\n  setEndpoint: function setEndpoint(endpoint) {\n    this.endpoint = new AWS.Endpoint(endpoint, this.config);\n  },\n\n  /**\n   * @api private\n   */\n  paginationConfig: function paginationConfig(operation, throwException) {\n    var paginator = this.api.operations[operation].paginator;\n    if (!paginator) {\n      if (throwException) {\n        var e = new Error();\n        throw AWS.util.error(e, 'No pagination configuration for ' + operation);\n      }\n      return null;\n    }\n\n    return paginator;\n  }\n});\n\nAWS.util.update(AWS.Service, {\n\n  /**\n   * Adds one method for each operation described in the api configuration\n   *\n   * @api private\n   */\n  defineMethods: function defineMethods(svc) {\n    AWS.util.each(svc.prototype.api.operations, function iterator(method) {\n      if (svc.prototype[method]) return;\n      var operation = svc.prototype.api.operations[method];\n      if (operation.authtype === 'none') {\n        svc.prototype[method] = function (params, callback) {\n          return this.makeUnauthenticatedRequest(method, params, callback);\n        };\n      } else {\n        svc.prototype[method] = function (params, callback) {\n          return this.makeRequest(method, params, callback);\n        };\n      }\n    });\n  },\n\n  /**\n   * Defines a new Service class using a service identifier and list of versions\n   * including an optional set of features (functions) to apply to the class\n   * prototype.\n   *\n   * @param serviceIdentifier [String] the identifier for the service\n   * @param versions [Array<String>] a list of versions that work with this\n   *   service\n   * @param features [Object] an object to attach to the prototype\n   * @return [Class<Service>] the service class defined by this function.\n   */\n  defineService: function defineService(serviceIdentifier, versions, features) {\n    AWS.Service._serviceMap[serviceIdentifier] = true;\n    if (!Array.isArray(versions)) {\n      features = versions;\n      versions = [];\n    }\n\n    var svc = inherit(AWS.Service, features || {});\n\n    if (typeof serviceIdentifier === 'string') {\n      AWS.Service.addVersions(svc, versions);\n\n      var identifier = svc.serviceIdentifier || serviceIdentifier;\n      svc.serviceIdentifier = identifier;\n    } else { // defineService called with an API\n      svc.prototype.api = serviceIdentifier;\n      AWS.Service.defineMethods(svc);\n    }\n    AWS.SequentialExecutor.call(this.prototype);\n    //util.clientSideMonitoring is only available in node\n    if (!this.prototype.publisher && AWS.util.clientSideMonitoring) {\n      var Publisher = AWS.util.clientSideMonitoring.Publisher;\n      var configProvider = AWS.util.clientSideMonitoring.configProvider;\n      var publisherConfig = configProvider();\n      this.prototype.publisher = new Publisher(publisherConfig);\n      if (publisherConfig.enabled) {\n        //if csm is enabled in environment, SDK should send all metrics\n        AWS.Service._clientSideMonitoring = true;\n      }\n    }\n    AWS.SequentialExecutor.call(svc.prototype);\n    AWS.Service.addDefaultMonitoringListeners(svc.prototype);\n    return svc;\n  },\n\n  /**\n   * @api private\n   */\n  addVersions: function addVersions(svc, versions) {\n    if (!Array.isArray(versions)) versions = [versions];\n\n    svc.services = svc.services || {};\n    for (var i = 0; i < versions.length; i++) {\n      if (svc.services[versions[i]] === undefined) {\n        svc.services[versions[i]] = null;\n      }\n    }\n\n    svc.apiVersions = Object.keys(svc.services).sort();\n  },\n\n  /**\n   * @api private\n   */\n  defineServiceApi: function defineServiceApi(superclass, version, apiConfig) {\n    var svc = inherit(superclass, {\n      serviceIdentifier: superclass.serviceIdentifier\n    });\n\n    function setApi(api) {\n      if (api.isApi) {\n        svc.prototype.api = api;\n      } else {\n        svc.prototype.api = new Api(api);\n      }\n    }\n\n    if (typeof version === 'string') {\n      if (apiConfig) {\n        setApi(apiConfig);\n      } else {\n        try {\n          setApi(AWS.apiLoader(superclass.serviceIdentifier, version));\n        } catch (err) {\n          throw AWS.util.error(err, {\n            message: 'Could not find API configuration ' +\n              superclass.serviceIdentifier + '-' + version\n          });\n        }\n      }\n      if (!Object.prototype.hasOwnProperty.call(superclass.services, version)) {\n        superclass.apiVersions = superclass.apiVersions.concat(version).sort();\n      }\n      superclass.services[version] = svc;\n    } else {\n      setApi(version);\n    }\n\n    AWS.Service.defineMethods(svc);\n    return svc;\n  },\n\n  /**\n   * @api private\n   */\n  hasService: function(identifier) {\n    return Object.prototype.hasOwnProperty.call(AWS.Service._serviceMap, identifier);\n  },\n\n  /**\n   * @param attachOn attach default monitoring listeners to object\n   *\n   * Each monitoring event should be emitted from service client to service constructor prototype and then\n   * to global service prototype like bubbling up. These default monitoring events listener will transfer\n   * the monitoring events to the upper layer.\n   * @api private\n   */\n  addDefaultMonitoringListeners: function addDefaultMonitoringListeners(attachOn) {\n    attachOn.addNamedListener('MONITOR_EVENTS_BUBBLE', 'apiCallAttempt', function EVENTS_BUBBLE(event) {\n      var baseClass = Object.getPrototypeOf(attachOn);\n      if (baseClass._events) baseClass.emit('apiCallAttempt', [event]);\n    });\n    attachOn.addNamedListener('CALL_EVENTS_BUBBLE', 'apiCall', function CALL_EVENTS_BUBBLE(event) {\n      var baseClass = Object.getPrototypeOf(attachOn);\n      if (baseClass._events) baseClass.emit('apiCall', [event]);\n    });\n  },\n\n  /**\n   * @api private\n   */\n  _serviceMap: {}\n});\n\nAWS.util.mixin(AWS.Service, AWS.SequentialExecutor);\n\n/**\n * @api private\n */\nmodule.exports = AWS.Service;\n","var AWS = require('../core');\n\nAWS.util.update(AWS.APIGateway.prototype, {\n/**\n * Sets the Accept header to application/json.\n *\n * @api private\n */\n  setAcceptHeader: function setAcceptHeader(req) {\n    var httpRequest = req.httpRequest;\n    if (!httpRequest.headers.Accept) {\n      httpRequest.headers['Accept'] = 'application/json';\n    }\n  },\n\n  /**\n   * @api private\n   */\n  setupRequestListeners: function setupRequestListeners(request) {\n    request.addListener('build', this.setAcceptHeader);\n    if (request.operation === 'getExport') {\n      var params = request.params || {};\n      if (params.exportType === 'swagger') {\n        request.addListener('extractData', AWS.util.convertPayloadToString);\n      }\n    }\n  }\n});\n\n","var AWS = require('../core');\n\n// pull in CloudFront signer\nrequire('../cloudfront/signer');\n\nAWS.util.update(AWS.CloudFront.prototype, {\n\n  setupRequestListeners: function setupRequestListeners(request) {\n    request.addListener('extractData', AWS.util.hoistPayloadMember);\n  }\n\n});\n","var AWS = require('../core');\n\n/**\n * Constructs a service interface object. Each API operation is exposed as a\n * function on service.\n *\n * ### Sending a Request Using CloudSearchDomain\n *\n * ```javascript\n * var csd = new AWS.CloudSearchDomain({endpoint: 'my.host.tld'});\n * csd.search(params, function (err, data) {\n *   if (err) console.log(err, err.stack); // an error occurred\n *   else     console.log(data);           // successful response\n * });\n * ```\n *\n * ### Locking the API Version\n *\n * In order to ensure that the CloudSearchDomain object uses this specific API,\n * you can construct the object by passing the `apiVersion` option to the\n * constructor:\n *\n * ```javascript\n * var csd = new AWS.CloudSearchDomain({\n *   endpoint: 'my.host.tld',\n *   apiVersion: '2013-01-01'\n * });\n * ```\n *\n * You can also set the API version globally in `AWS.config.apiVersions` using\n * the **cloudsearchdomain** service identifier:\n *\n * ```javascript\n * AWS.config.apiVersions = {\n *   cloudsearchdomain: '2013-01-01',\n *   // other service API versions\n * };\n *\n * var csd = new AWS.CloudSearchDomain({endpoint: 'my.host.tld'});\n * ```\n *\n * @note You *must* provide an `endpoint` configuration parameter when\n *   constructing this service. See {constructor} for more information.\n *\n * @!method constructor(options = {})\n *   Constructs a service object. This object has one method for each\n *   API operation.\n *\n *   @example Constructing a CloudSearchDomain object\n *     var csd = new AWS.CloudSearchDomain({endpoint: 'my.host.tld'});\n *   @note You *must* provide an `endpoint` when constructing this service.\n *   @option (see AWS.Config.constructor)\n *\n * @service cloudsearchdomain\n * @version 2013-01-01\n */\nAWS.util.update(AWS.CloudSearchDomain.prototype, {\n  /**\n   * @api private\n   */\n  validateService: function validateService() {\n    if (!this.config.endpoint || this.config.endpoint.indexOf('{') >= 0) {\n      var msg = 'AWS.CloudSearchDomain requires an explicit ' +\n                '`endpoint\\' configuration option.';\n      throw AWS.util.error(new Error(),\n        {name: 'InvalidEndpoint', message: msg});\n    }\n  },\n\n  /**\n   * @api private\n   */\n  setupRequestListeners: function setupRequestListeners(request) {\n    request.removeListener('validate',\n      AWS.EventListeners.Core.VALIDATE_CREDENTIALS\n    );\n    request.onAsync('validate', this.validateCredentials);\n    request.addListener('validate', this.updateRegion);\n    if (request.operation === 'search') {\n      request.addListener('build', this.convertGetToPost);\n    }\n  },\n\n  /**\n   * @api private\n   */\n  validateCredentials: function(req, done) {\n    if (!req.service.api.signatureVersion) return done(); // none\n    req.service.config.getCredentials(function(err) {\n      if (err) {\n        req.removeListener('sign', AWS.EventListeners.Core.SIGN);\n      }\n      done();\n    });\n  },\n\n  /**\n   * @api private\n   */\n  convertGetToPost: function(request) {\n    var httpRequest = request.httpRequest;\n    // convert queries to POST to avoid length restrictions\n    var path = httpRequest.path.split('?');\n    httpRequest.method = 'POST';\n    httpRequest.path = path[0];\n    httpRequest.body = path[1];\n    httpRequest.headers['Content-Length'] = httpRequest.body.length;\n    httpRequest.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n  },\n\n  /**\n   * @api private\n   */\n  updateRegion: function updateRegion(request) {\n    var endpoint = request.httpRequest.endpoint.hostname;\n    var zones = endpoint.split('.');\n    request.httpRequest.region = zones[1] || request.httpRequest.region;\n  }\n\n});\n","var AWS = require('../core');\n\nAWS.util.update(AWS.CognitoIdentity.prototype, {\n  getOpenIdToken: function getOpenIdToken(params, callback) {\n    return this.makeUnauthenticatedRequest('getOpenIdToken', params, callback);\n  },\n\n  getId: function getId(params, callback) {\n    return this.makeUnauthenticatedRequest('getId', params, callback);\n  },\n\n  getCredentialsForIdentity: function getCredentialsForIdentity(params, callback) {\n    return this.makeUnauthenticatedRequest('getCredentialsForIdentity', params, callback);\n  }\n});\n","var AWS = require('../core');\nrequire('../dynamodb/document_client');\n\nAWS.util.update(AWS.DynamoDB.prototype, {\n  /**\n   * @api private\n   */\n  setupRequestListeners: function setupRequestListeners(request) {\n    if (request.service.config.dynamoDbCrc32) {\n      request.removeListener('extractData', AWS.EventListeners.Json.EXTRACT_DATA);\n      request.addListener('extractData', this.checkCrc32);\n      request.addListener('extractData', AWS.EventListeners.Json.EXTRACT_DATA);\n    }\n  },\n\n  /**\n   * @api private\n   */\n  checkCrc32: function checkCrc32(resp) {\n    if (!resp.httpResponse.streaming && !resp.request.service.crc32IsValid(resp)) {\n      resp.data = null;\n      resp.error = AWS.util.error(new Error(), {\n        code: 'CRC32CheckFailed',\n        message: 'CRC32 integrity check failed',\n        retryable: true\n      });\n      resp.request.haltHandlersOnError();\n      throw (resp.error);\n    }\n  },\n\n  /**\n   * @api private\n   */\n  crc32IsValid: function crc32IsValid(resp) {\n    var crc = resp.httpResponse.headers['x-amz-crc32'];\n    if (!crc) return true; // no (valid) CRC32 header\n    return parseInt(crc, 10) === AWS.util.crypto.crc32(resp.httpResponse.body);\n  },\n\n  /**\n   * @api private\n   */\n  defaultRetryCount: 10,\n\n  /**\n   * @api private\n   */\n  retryDelays: function retryDelays(retryCount) {\n    var retryDelayOptions = AWS.util.copy(this.config.retryDelayOptions);\n\n    if (typeof retryDelayOptions.base !== 'number') {\n        retryDelayOptions.base = 50; // default for dynamodb\n    }\n    var delay = AWS.util.calculateRetryDelay(retryCount, retryDelayOptions);\n    return delay;\n  }\n});\n","var AWS = require('../core');\n\nAWS.util.update(AWS.EC2.prototype, {\n  /**\n   * @api private\n   */\n  setupRequestListeners: function setupRequestListeners(request) {\n    request.removeListener('extractError', AWS.EventListeners.Query.EXTRACT_ERROR);\n    request.addListener('extractError', this.extractError);\n\n    if (request.operation === 'copySnapshot') {\n      request.onAsync('validate', this.buildCopySnapshotPresignedUrl);\n    }\n  },\n\n  /**\n   * @api private\n   */\n  buildCopySnapshotPresignedUrl: function buildCopySnapshotPresignedUrl(req, done) {\n    if (req.params.PresignedUrl || req._subRequest) {\n      return done();\n    }\n\n    req.params = AWS.util.copy(req.params);\n    req.params.DestinationRegion = req.service.config.region;\n\n    var config = AWS.util.copy(req.service.config);\n    delete config.endpoint;\n    config.region = req.params.SourceRegion;\n    var svc = new req.service.constructor(config);\n    var newReq = svc[req.operation](req.params);\n    newReq._subRequest = true;\n    newReq.presign(function(err, url) {\n      if (err) done(err);\n      else {\n        req.params.PresignedUrl = url;\n        done();\n      }\n    });\n  },\n\n  /**\n   * @api private\n   */\n  extractError: function extractError(resp) {\n    // EC2 nests the error code and message deeper than other AWS Query services.\n    var httpResponse = resp.httpResponse;\n    var data = new AWS.XML.Parser().parse(httpResponse.body.toString() || '');\n    if (data.Errors) {\n      resp.error = AWS.util.error(new Error(), {\n        code: data.Errors.Error.Code,\n        message: data.Errors.Error.Message\n      });\n    } else {\n      resp.error = AWS.util.error(new Error(), {\n        code: httpResponse.statusCode,\n        message: null\n      });\n    }\n    resp.error.requestId = data.RequestID || null;\n  }\n});\n","var AWS = require('../core');\n\nAWS.util.update(AWS.Glacier.prototype, {\n  /**\n   * @api private\n   */\n  setupRequestListeners: function setupRequestListeners(request) {\n    if (Array.isArray(request._events.validate)) {\n      request._events.validate.unshift(this.validateAccountId);\n    } else {\n      request.on('validate', this.validateAccountId);\n    }\n    request.removeListener('afterBuild',\n      AWS.EventListeners.Core.COMPUTE_SHA256);\n    request.on('build', this.addGlacierApiVersion);\n    request.on('build', this.addTreeHashHeaders);\n  },\n\n  /**\n   * @api private\n   */\n  validateAccountId: function validateAccountId(request) {\n    if (request.params.accountId !== undefined) return;\n    request.params = AWS.util.copy(request.params);\n    request.params.accountId = '-';\n  },\n\n  /**\n   * @api private\n   */\n  addGlacierApiVersion: function addGlacierApiVersion(request) {\n    var version = request.service.api.apiVersion;\n    request.httpRequest.headers['x-amz-glacier-version'] = version;\n  },\n\n  /**\n   * @api private\n   */\n  addTreeHashHeaders: function addTreeHashHeaders(request) {\n    if (request.params.body === undefined) return;\n\n    var hashes = request.service.computeChecksums(request.params.body);\n    request.httpRequest.headers['X-Amz-Content-Sha256'] = hashes.linearHash;\n\n    if (!request.httpRequest.headers['x-amz-sha256-tree-hash']) {\n      request.httpRequest.headers['x-amz-sha256-tree-hash'] = hashes.treeHash;\n    }\n  },\n\n  /**\n   * @!group Computing Checksums\n   */\n\n  /**\n   * Computes the SHA-256 linear and tree hash checksums for a given\n   * block of Buffer data. Pass the tree hash of the computed checksums\n   * as the checksum input to the {completeMultipartUpload} when performing\n   * a multi-part upload.\n   *\n   * @example Calculate checksum of 5.5MB data chunk\n   *   var glacier = new AWS.Glacier();\n   *   var data = Buffer.alloc(5.5 * 1024 * 1024);\n   *   data.fill('0'); // fill with zeros\n   *   var results = glacier.computeChecksums(data);\n   *   // Result: { linearHash: '68aff0c5a9...', treeHash: '154e26c78f...' }\n   * @param data [Buffer, String] data to calculate the checksum for\n   * @return [map<linearHash:String,treeHash:String>] a map containing\n   *   the linearHash and treeHash properties representing hex based digests\n   *   of the respective checksums.\n   * @see completeMultipartUpload\n   */\n  computeChecksums: function computeChecksums(data) {\n    if (!AWS.util.Buffer.isBuffer(data)) data = AWS.util.buffer.toBuffer(data);\n\n    var mb = 1024 * 1024;\n    var hashes = [];\n    var hash = AWS.util.crypto.createHash('sha256');\n\n    // build leaf nodes in 1mb chunks\n    for (var i = 0; i < data.length; i += mb) {\n      var chunk = data.slice(i, Math.min(i + mb, data.length));\n      hash.update(chunk);\n      hashes.push(AWS.util.crypto.sha256(chunk));\n    }\n\n    return {\n      linearHash: hash.digest('hex'),\n      treeHash: this.buildHashTree(hashes)\n    };\n  },\n\n  /**\n   * @api private\n   */\n  buildHashTree: function buildHashTree(hashes) {\n    // merge leaf nodes\n    while (hashes.length > 1) {\n      var tmpHashes = [];\n      for (var i = 0; i < hashes.length; i += 2) {\n        if (hashes[i + 1]) {\n          var tmpHash = AWS.util.buffer.alloc(64);\n          tmpHash.write(hashes[i], 0, 32, 'binary');\n          tmpHash.write(hashes[i + 1], 32, 32, 'binary');\n          tmpHashes.push(AWS.util.crypto.sha256(tmpHash));\n        } else {\n          tmpHashes.push(hashes[i]);\n        }\n      }\n      hashes = tmpHashes;\n    }\n\n    return AWS.util.crypto.toHex(hashes[0]);\n  }\n});\n","var AWS = require('../core');\n\n/**\n * @api private\n */\nvar blobPayloadOutputOps = [\n  'deleteThingShadow',\n  'getThingShadow',\n  'updateThingShadow'\n];\n\n/**\n * Constructs a service interface object. Each API operation is exposed as a\n * function on service.\n *\n * ### Sending a Request Using IotData\n *\n * ```javascript\n * var iotdata = new AWS.IotData({endpoint: 'my.host.tld'});\n * iotdata.getThingShadow(params, function (err, data) {\n *   if (err) console.log(err, err.stack); // an error occurred\n *   else     console.log(data);           // successful response\n * });\n * ```\n *\n * ### Locking the API Version\n *\n * In order to ensure that the IotData object uses this specific API,\n * you can construct the object by passing the `apiVersion` option to the\n * constructor:\n *\n * ```javascript\n * var iotdata = new AWS.IotData({\n *   endpoint: 'my.host.tld',\n *   apiVersion: '2015-05-28'\n * });\n * ```\n *\n * You can also set the API version globally in `AWS.config.apiVersions` using\n * the **iotdata** service identifier:\n *\n * ```javascript\n * AWS.config.apiVersions = {\n *   iotdata: '2015-05-28',\n *   // other service API versions\n * };\n *\n * var iotdata = new AWS.IotData({endpoint: 'my.host.tld'});\n * ```\n *\n * @note You *must* provide an `endpoint` configuration parameter when\n *   constructing this service. See {constructor} for more information.\n *\n * @!method constructor(options = {})\n *   Constructs a service object. This object has one method for each\n *   API operation.\n *\n *   @example Constructing a IotData object\n *     var iotdata = new AWS.IotData({endpoint: 'my.host.tld'});\n *   @note You *must* provide an `endpoint` when constructing this service.\n *   @option (see AWS.Config.constructor)\n *\n * @service iotdata\n * @version 2015-05-28\n */\nAWS.util.update(AWS.IotData.prototype, {\n    /**\n     * @api private\n     */\n    validateService: function validateService() {\n        if (!this.config.endpoint || this.config.endpoint.indexOf('{') >= 0) {\n            var msg = 'AWS.IotData requires an explicit ' +\n                '`endpoint\\' configuration option.';\n            throw AWS.util.error(new Error(),\n                {name: 'InvalidEndpoint', message: msg});\n        }\n    },\n\n    /**\n     * @api private\n     */\n    setupRequestListeners: function setupRequestListeners(request) {\n        request.addListener('validateResponse', this.validateResponseBody);\n        if (blobPayloadOutputOps.indexOf(request.operation) > -1) {\n            request.addListener('extractData', AWS.util.convertPayloadToString);\n        }\n    },\n\n    /**\n     * @api private\n     */\n    validateResponseBody: function validateResponseBody(resp) {\n        var body = resp.httpResponse.body.toString() || '{}';\n        var bodyCheck = body.trim();\n        if (!bodyCheck || bodyCheck.charAt(0) !== '{') {\n            resp.httpResponse.body = '';\n        }\n    }\n\n});\n","var AWS = require('../core');\n\nAWS.util.update(AWS.Lambda.prototype, {\n  /**\n   * @api private\n   */\n  setupRequestListeners: function setupRequestListeners(request) {\n    if (request.operation === 'invoke') {\n      request.addListener('extractData', AWS.util.convertPayloadToString);\n    }\n  }\n});\n\n","var AWS = require('../core');\n\nAWS.util.update(AWS.MachineLearning.prototype, {\n  /**\n   * @api private\n   */\n  setupRequestListeners: function setupRequestListeners(request) {\n    if (request.operation === 'predict') {\n      request.addListener('build', this.buildEndpoint);\n    }\n  },\n\n  /**\n   * Updates request endpoint from PredictEndpoint\n   * @api private\n   */\n  buildEndpoint: function buildEndpoint(request) {\n    var url = request.params.PredictEndpoint;\n    if (url) {\n      request.httpRequest.endpoint = new AWS.Endpoint(url);\n    }\n  }\n\n});\n","require('../polly/presigner');\n","var AWS = require('../core');\nrequire('../rds/signer');\n /**\n  * @api private\n  */\n var crossRegionOperations = ['copyDBSnapshot', 'createDBInstanceReadReplica', 'createDBCluster', 'copyDBClusterSnapshot'];\n\n AWS.util.update(AWS.RDS.prototype, {\n   /**\n    * @api private\n    */\n   setupRequestListeners: function setupRequestListeners(request) {\n     if (crossRegionOperations.indexOf(request.operation) !== -1 &&\n         request.params.SourceRegion) {\n       request.params = AWS.util.copy(request.params);\n       if (request.params.PreSignedUrl ||\n           request.params.SourceRegion === this.config.region) {\n         delete request.params.SourceRegion;\n       } else {\n         var doesParamValidation = !!this.config.paramValidation;\n         // remove the validate parameters listener so we can re-add it after we build the URL\n         if (doesParamValidation) {\n           request.removeListener('validate', AWS.EventListeners.Core.VALIDATE_PARAMETERS);\n         }\n         request.onAsync('validate', this.buildCrossRegionPresignedUrl);\n         if (doesParamValidation) {\n           request.addListener('validate', AWS.EventListeners.Core.VALIDATE_PARAMETERS);\n         }\n       }\n     }\n   },\n\n   /**\n    * @api private\n    */\n   buildCrossRegionPresignedUrl: function buildCrossRegionPresignedUrl(req, done) {\n     var config = AWS.util.copy(req.service.config);\n     config.region = req.params.SourceRegion;\n     delete req.params.SourceRegion;\n     delete config.endpoint;\n     // relevant params for the operation will already be in req.params\n     delete config.params;\n     config.signatureVersion = 'v4';\n     var destinationRegion = req.service.config.region;\n\n     var svc = new req.service.constructor(config);\n     var newReq = svc[req.operation](AWS.util.copy(req.params));\n     newReq.on('build', function addDestinationRegionParam(request) {\n       var httpRequest = request.httpRequest;\n       httpRequest.params.DestinationRegion = destinationRegion;\n       httpRequest.body = AWS.util.queryParamsToString(httpRequest.params);\n     });\n     newReq.presign(function(err, url) {\n       if (err) done(err);\n       else {\n         req.params.PreSignedUrl = url;\n         done();\n       }\n     });\n   }\n });\n","var AWS = require('../core');\n\nAWS.util.update(AWS.Route53.prototype, {\n  /**\n   * @api private\n   */\n  setupRequestListeners: function setupRequestListeners(request) {\n    request.on('build', this.sanitizeUrl);\n  },\n\n  /**\n   * @api private\n   */\n  sanitizeUrl: function sanitizeUrl(request) {\n    var path = request.httpRequest.path;\n    request.httpRequest.path = path.replace(/\\/%2F\\w+%2F/, '/');\n  },\n\n  /**\n   * @return [Boolean] whether the error can be retried\n   * @api private\n   */\n  retryableError: function retryableError(error) {\n    if (error.code === 'PriorRequestNotComplete' &&\n        error.statusCode === 400) {\n      return true;\n    } else {\n      var _super = AWS.Service.prototype.retryableError;\n      return _super.call(this, error);\n    }\n  }\n});\n","var AWS = require('../core');\nvar v4Credentials = require('../signers/v4_credentials');\n\n// Pull in managed upload extension\nrequire('../s3/managed_upload');\n\n/**\n * @api private\n */\nvar operationsWith200StatusCodeError = {\n  'completeMultipartUpload': true,\n  'copyObject': true,\n  'uploadPartCopy': true\n};\n\n/**\n * @api private\n */\n var regionRedirectErrorCodes = [\n  'AuthorizationHeaderMalformed', // non-head operations on virtual-hosted global bucket endpoints\n  'BadRequest', // head operations on virtual-hosted global bucket endpoints\n  'PermanentRedirect', // non-head operations on path-style or regional endpoints\n  301 // head operations on path-style or regional endpoints\n ];\n\nAWS.util.update(AWS.S3.prototype, {\n  /**\n   * @api private\n   */\n  getSignatureVersion: function getSignatureVersion(request) {\n    var defaultApiVersion = this.api.signatureVersion;\n    var userDefinedVersion = this._originalConfig ? this._originalConfig.signatureVersion : null;\n    var regionDefinedVersion = this.config.signatureVersion;\n    var isPresigned = request ? request.isPresigned() : false;\n    /*\n      1) User defined version specified:\n        a) always return user defined version\n      2) No user defined version specified:\n        a) default to lowest version the region supports\n        b) If using presigned urls, default to lowest version the region supports\n    */\n    if (userDefinedVersion) {\n      userDefinedVersion = userDefinedVersion === 'v2' ? 's3' : userDefinedVersion;\n      return userDefinedVersion;\n    }\n    if (isPresigned !== true) {\n      defaultApiVersion = 'v4';\n    } else if (regionDefinedVersion) {\n      defaultApiVersion = regionDefinedVersion;\n    }\n    return defaultApiVersion;\n  },\n\n  /**\n   * @api private\n   */\n  getSignerClass: function getSignerClass(request) {\n    var signatureVersion = this.getSignatureVersion(request);\n    return AWS.Signers.RequestSigner.getVersion(signatureVersion);\n  },\n\n  /**\n   * @api private\n   */\n  validateService: function validateService() {\n    var msg;\n    var messages = [];\n\n    // default to us-east-1 when no region is provided\n    if (!this.config.region) this.config.region = 'us-east-1';\n\n    if (!this.config.endpoint && this.config.s3BucketEndpoint) {\n      messages.push('An endpoint must be provided when configuring ' +\n                    '`s3BucketEndpoint` to true.');\n    }\n    if (messages.length === 1) {\n      msg = messages[0];\n    } else if (messages.length > 1) {\n      msg = 'Multiple configuration errors:\\n' + messages.join('\\n');\n    }\n    if (msg) {\n      throw AWS.util.error(new Error(),\n        {name: 'InvalidEndpoint', message: msg});\n    }\n  },\n\n  /**\n   * @api private\n   */\n  shouldDisableBodySigning: function shouldDisableBodySigning(request) {\n    var signerClass = this.getSignerClass();\n    if (this.config.s3DisableBodySigning === true && signerClass === AWS.Signers.V4\n        && request.httpRequest.endpoint.protocol === 'https:') {\n      return true;\n    }\n    return false;\n  },\n\n  /**\n   * @api private\n   */\n  setupRequestListeners: function setupRequestListeners(request) {\n    var prependListener = true;\n    request.addListener('validate', this.validateScheme);\n    request.addListener('validate', this.validateBucketEndpoint);\n    request.addListener('validate', this.correctBucketRegionFromCache);\n    request.addListener('validate', this.validateBucketName, prependListener);\n\n    request.addListener('build', this.addContentType);\n    request.addListener('build', this.populateURI);\n    request.addListener('build', this.computeContentMd5);\n    request.addListener('build', this.computeSseCustomerKeyMd5);\n    request.addListener('afterBuild', this.addExpect100Continue);\n    request.removeListener('validate',\n      AWS.EventListeners.Core.VALIDATE_REGION);\n    request.addListener('extractError', this.extractError);\n    request.onAsync('extractError', this.requestBucketRegion);\n    request.addListener('extractData', this.extractData);\n    request.addListener('extractData', AWS.util.hoistPayloadMember);\n    request.addListener('beforePresign', this.prepareSignedUrl);\n    if (AWS.util.isBrowser()) {\n      request.onAsync('retry', this.reqRegionForNetworkingError);\n    }\n    if (this.shouldDisableBodySigning(request))  {\n      request.removeListener('afterBuild', AWS.EventListeners.Core.COMPUTE_SHA256);\n      request.addListener('afterBuild', this.disableBodySigning);\n    }\n  },\n\n  /**\n   * @api private\n   */\n  validateScheme: function(req) {\n    var params = req.params,\n        scheme = req.httpRequest.endpoint.protocol,\n        sensitive = params.SSECustomerKey || params.CopySourceSSECustomerKey;\n    if (sensitive && scheme !== 'https:') {\n      var msg = 'Cannot send SSE keys over HTTP. Set \\'sslEnabled\\'' +\n        'to \\'true\\' in your configuration';\n      throw AWS.util.error(new Error(),\n        { code: 'ConfigError', message: msg });\n    }\n  },\n\n  /**\n   * @api private\n   */\n  validateBucketEndpoint: function(req) {\n    if (!req.params.Bucket && req.service.config.s3BucketEndpoint) {\n      var msg = 'Cannot send requests to root API with `s3BucketEndpoint` set.';\n      throw AWS.util.error(new Error(),\n        { code: 'ConfigError', message: msg });\n    }\n  },\n\n  /**\n   * @api private\n   */\n  validateBucketName: function validateBucketName(req) {\n    var service = req.service;\n    var signatureVersion = service.getSignatureVersion(req);\n    var bucket = req.params && req.params.Bucket;\n    var key = req.params && req.params.Key;\n    var slashIndex = bucket && bucket.indexOf('/');\n    if (bucket && slashIndex >= 0) {\n      if (typeof key === 'string' && slashIndex > 0) {\n        req.params = AWS.util.copy(req.params);\n        // Need to include trailing slash to match sigv2 behavior\n        var prefix = bucket.substr(slashIndex + 1) || '';\n        req.params.Key = prefix + '/' + key;\n        req.params.Bucket = bucket.substr(0, slashIndex);\n      } else if (signatureVersion === 'v4') {\n        var msg = 'Bucket names cannot contain forward slashes. Bucket: ' + bucket;\n        throw AWS.util.error(new Error(),\n          { code: 'InvalidBucket', message: msg });\n      }\n    }\n  },\n\n  /**\n   * @api private\n   */\n  isValidAccelerateOperation: function isValidAccelerateOperation(operation) {\n    var invalidOperations = [\n      'createBucket',\n      'deleteBucket',\n      'listBuckets'\n    ];\n    return invalidOperations.indexOf(operation) === -1;\n  },\n\n\n  /**\n   * S3 prefers dns-compatible bucket names to be moved from the uri path\n   * to the hostname as a sub-domain.  This is not possible, even for dns-compat\n   * buckets when using SSL and the bucket name contains a dot ('.').  The\n   * ssl wildcard certificate is only 1-level deep.\n   *\n   * @api private\n   */\n  populateURI: function populateURI(req) {\n    var httpRequest = req.httpRequest;\n    var b = req.params.Bucket;\n    var service = req.service;\n    var endpoint = httpRequest.endpoint;\n    if (b) {\n      if (!service.pathStyleBucketName(b)) {\n        if (service.config.useAccelerateEndpoint && service.isValidAccelerateOperation(req.operation)) {\n          if (service.config.useDualstack) {\n            endpoint.hostname = b + '.s3-accelerate.dualstack.amazonaws.com';\n          } else {\n            endpoint.hostname = b + '.s3-accelerate.amazonaws.com';\n          }\n        } else if (!service.config.s3BucketEndpoint) {\n          endpoint.hostname =\n            b + '.' + endpoint.hostname;\n        }\n\n        var port = endpoint.port;\n        if (port !== 80 && port !== 443) {\n          endpoint.host = endpoint.hostname + ':' +\n            endpoint.port;\n        } else {\n          endpoint.host = endpoint.hostname;\n        }\n\n        httpRequest.virtualHostedBucket = b; // needed for signing the request\n        service.removeVirtualHostedBucketFromPath(req);\n      }\n    }\n  },\n\n  /**\n   * Takes the bucket name out of the path if bucket is virtual-hosted\n   *\n   * @api private\n   */\n  removeVirtualHostedBucketFromPath: function removeVirtualHostedBucketFromPath(req) {\n    var httpRequest = req.httpRequest;\n    var bucket = httpRequest.virtualHostedBucket;\n    if (bucket && httpRequest.path) {\n      if (req.params && req.params.Key) {\n        var encodedS3Key = '/' + AWS.util.uriEscapePath(req.params.Key);\n        if (httpRequest.path.indexOf(encodedS3Key) === 0 && (httpRequest.path.length === encodedS3Key.length || httpRequest.path[encodedS3Key.length] === '?')) {\n          //path only contains key or path contains only key and querystring\n          return;\n        }\n      }\n      httpRequest.path = httpRequest.path.replace(new RegExp('/' + bucket), '');\n      if (httpRequest.path[0] !== '/') {\n        httpRequest.path = '/' + httpRequest.path;\n      }\n    }\n  },\n\n  /**\n   * Adds Expect: 100-continue header if payload is greater-or-equal 1MB\n   * @api private\n   */\n  addExpect100Continue: function addExpect100Continue(req) {\n    var len = req.httpRequest.headers['Content-Length'];\n    if (AWS.util.isNode() && (len >= 1024 * 1024 || req.params.Body instanceof AWS.util.stream.Stream)) {\n      req.httpRequest.headers['Expect'] = '100-continue';\n    }\n  },\n\n  /**\n   * Adds a default content type if none is supplied.\n   *\n   * @api private\n   */\n  addContentType: function addContentType(req) {\n    var httpRequest = req.httpRequest;\n    if (httpRequest.method === 'GET' || httpRequest.method === 'HEAD') {\n      // Content-Type is not set in GET/HEAD requests\n      delete httpRequest.headers['Content-Type'];\n      return;\n    }\n\n    if (!httpRequest.headers['Content-Type']) { // always have a Content-Type\n      httpRequest.headers['Content-Type'] = 'application/octet-stream';\n    }\n\n    var contentType = httpRequest.headers['Content-Type'];\n    if (AWS.util.isBrowser()) {\n      if (typeof httpRequest.body === 'string' && !contentType.match(/;\\s*charset=/)) {\n        var charset = '; charset=UTF-8';\n        httpRequest.headers['Content-Type'] += charset;\n      } else {\n        var replaceFn = function(_, prefix, charsetName) {\n          return prefix + charsetName.toUpperCase();\n        };\n\n        httpRequest.headers['Content-Type'] =\n          contentType.replace(/(;\\s*charset=)(.+)$/, replaceFn);\n      }\n    }\n  },\n\n  /**\n   * @api private\n   */\n  computableChecksumOperations: {\n    putBucketCors: true,\n    putBucketLifecycle: true,\n    putBucketLifecycleConfiguration: true,\n    putBucketTagging: true,\n    deleteObjects: true,\n    putBucketReplication: true,\n    putObjectLegalHold: true,\n    putObjectRetention: true,\n    putObjectLockConfiguration: true\n  },\n\n  /**\n   * Checks whether checksums should be computed for the request.\n   * If the request requires checksums to be computed, this will always\n   * return true, otherwise it depends on whether {AWS.Config.computeChecksums}\n   * is set.\n   *\n   * @param req [AWS.Request] the request to check against\n   * @return [Boolean] whether to compute checksums for a request.\n   * @api private\n   */\n  willComputeChecksums: function willComputeChecksums(req) {\n    if (this.computableChecksumOperations[req.operation]) return true;\n    if (!this.config.computeChecksums) return false;\n\n    // TODO: compute checksums for Stream objects\n    if (!AWS.util.Buffer.isBuffer(req.httpRequest.body) &&\n        typeof req.httpRequest.body !== 'string') {\n      return false;\n    }\n\n    var rules = req.service.api.operations[req.operation].input.members;\n\n    // Sha256 signing disabled, and not a presigned url\n    if (req.service.shouldDisableBodySigning(req) && !Object.prototype.hasOwnProperty.call(req.httpRequest.headers, 'presigned-expires')) {\n      if (rules.ContentMD5 && !req.params.ContentMD5) {\n        return true;\n      }\n    }\n\n    // V4 signer uses SHA256 signatures so only compute MD5 if it is required\n    if (req.service.getSignerClass(req) === AWS.Signers.V4) {\n      if (rules.ContentMD5 && !rules.ContentMD5.required) return false;\n    }\n\n    if (rules.ContentMD5 && !req.params.ContentMD5) return true;\n  },\n\n  /**\n   * A listener that computes the Content-MD5 and sets it in the header.\n   * @see AWS.S3.willComputeChecksums\n   * @api private\n   */\n  computeContentMd5: function computeContentMd5(req) {\n    if (req.service.willComputeChecksums(req)) {\n      var md5 = AWS.util.crypto.md5(req.httpRequest.body, 'base64');\n      req.httpRequest.headers['Content-MD5'] = md5;\n    }\n  },\n\n  /**\n   * @api private\n   */\n  computeSseCustomerKeyMd5: function computeSseCustomerKeyMd5(req) {\n    var keys = {\n      SSECustomerKey: 'x-amz-server-side-encryption-customer-key-MD5',\n      CopySourceSSECustomerKey: 'x-amz-copy-source-server-side-encryption-customer-key-MD5'\n    };\n    AWS.util.each(keys, function(key, header) {\n      if (req.params[key]) {\n        var value = AWS.util.crypto.md5(req.params[key], 'base64');\n        req.httpRequest.headers[header] = value;\n      }\n    });\n  },\n\n  /**\n   * Returns true if the bucket name should be left in the URI path for\n   * a request to S3.  This function takes into account the current\n   * endpoint protocol (e.g. http or https).\n   *\n   * @api private\n   */\n  pathStyleBucketName: function pathStyleBucketName(bucketName) {\n    // user can force path style requests via the configuration\n    if (this.config.s3ForcePathStyle) return true;\n    if (this.config.s3BucketEndpoint) return false;\n\n    if (this.dnsCompatibleBucketName(bucketName)) {\n      return (this.config.sslEnabled && bucketName.match(/\\./)) ? true : false;\n    } else {\n      return true; // not dns compatible names must always use path style\n    }\n  },\n\n  /**\n   * Returns true if the bucket name is DNS compatible.  Buckets created\n   * outside of the classic region MUST be DNS compatible.\n   *\n   * @api private\n   */\n  dnsCompatibleBucketName: function dnsCompatibleBucketName(bucketName) {\n    var b = bucketName;\n    var domain = new RegExp(/^[a-z0-9][a-z0-9\\.\\-]{1,61}[a-z0-9]$/);\n    var ipAddress = new RegExp(/(\\d+\\.){3}\\d+/);\n    var dots = new RegExp(/\\.\\./);\n    return (b.match(domain) && !b.match(ipAddress) && !b.match(dots)) ? true : false;\n  },\n\n  /**\n   * @return [Boolean] whether response contains an error\n   * @api private\n   */\n  successfulResponse: function successfulResponse(resp) {\n    var req = resp.request;\n    var httpResponse = resp.httpResponse;\n    if (operationsWith200StatusCodeError[req.operation] &&\n        httpResponse.body.toString().match('<Error>')) {\n      return false;\n    } else {\n      return httpResponse.statusCode < 300;\n    }\n  },\n\n  /**\n   * @return [Boolean] whether the error can be retried\n   * @api private\n   */\n  retryableError: function retryableError(error, request) {\n    if (operationsWith200StatusCodeError[request.operation] &&\n        error.statusCode === 200) {\n      return true;\n    } else if (request._requestRegionForBucket &&\n        request.service.bucketRegionCache[request._requestRegionForBucket]) {\n      return false;\n    } else if (error && error.code === 'RequestTimeout') {\n      return true;\n    } else if (error &&\n        regionRedirectErrorCodes.indexOf(error.code) != -1 &&\n        error.region && error.region != request.httpRequest.region) {\n      request.httpRequest.region = error.region;\n      if (error.statusCode === 301) {\n        request.service.updateReqBucketRegion(request);\n      }\n      return true;\n    } else {\n      var _super = AWS.Service.prototype.retryableError;\n      return _super.call(this, error, request);\n    }\n  },\n\n  /**\n   * Updates httpRequest with region. If region is not provided, then\n   * the httpRequest will be updated based on httpRequest.region\n   *\n   * @api private\n   */\n  updateReqBucketRegion: function updateReqBucketRegion(request, region) {\n    var httpRequest = request.httpRequest;\n    if (typeof region === 'string' && region.length) {\n      httpRequest.region = region;\n    }\n    if (!httpRequest.endpoint.host.match(/s3(?!-accelerate).*\\.amazonaws\\.com$/)) {\n      return;\n    }\n    var service = request.service;\n    var s3Config = service.config;\n    var s3BucketEndpoint = s3Config.s3BucketEndpoint;\n    if (s3BucketEndpoint) {\n      delete s3Config.s3BucketEndpoint;\n    }\n    var newConfig = AWS.util.copy(s3Config);\n    delete newConfig.endpoint;\n    newConfig.region = httpRequest.region;\n\n    httpRequest.endpoint = (new AWS.S3(newConfig)).endpoint;\n    service.populateURI(request);\n    s3Config.s3BucketEndpoint = s3BucketEndpoint;\n    httpRequest.headers.Host = httpRequest.endpoint.host;\n\n    if (request._asm.currentState === 'validate') {\n      request.removeListener('build', service.populateURI);\n      request.addListener('build', service.removeVirtualHostedBucketFromPath);\n    }\n  },\n\n  /**\n   * Provides a specialized parser for getBucketLocation -- all other\n   * operations are parsed by the super class.\n   *\n   * @api private\n   */\n  extractData: function extractData(resp) {\n    var req = resp.request;\n    if (req.operation === 'getBucketLocation') {\n      var match = resp.httpResponse.body.toString().match(/>(.+)<\\/Location/);\n      delete resp.data['_'];\n      if (match) {\n        resp.data.LocationConstraint = match[1];\n      } else {\n        resp.data.LocationConstraint = '';\n      }\n    }\n    var bucket = req.params.Bucket || null;\n    if (req.operation === 'deleteBucket' && typeof bucket === 'string' && !resp.error) {\n      req.service.clearBucketRegionCache(bucket);\n    } else {\n      var headers = resp.httpResponse.headers || {};\n      var region = headers['x-amz-bucket-region'] || null;\n      if (!region && req.operation === 'createBucket' && !resp.error) {\n        var createBucketConfiguration = req.params.CreateBucketConfiguration;\n        if (!createBucketConfiguration) {\n          region = 'us-east-1';\n        } else if (createBucketConfiguration.LocationConstraint === 'EU') {\n          region = 'eu-west-1';\n        } else {\n          region = createBucketConfiguration.LocationConstraint;\n        }\n      }\n      if (region) {\n          if (bucket && region !== req.service.bucketRegionCache[bucket]) {\n            req.service.bucketRegionCache[bucket] = region;\n          }\n      }\n    }\n    req.service.extractRequestIds(resp);\n  },\n\n  /**\n   * Extracts an error object from the http response.\n   *\n   * @api private\n   */\n  extractError: function extractError(resp) {\n    var codes = {\n      304: 'NotModified',\n      403: 'Forbidden',\n      400: 'BadRequest',\n      404: 'NotFound'\n    };\n\n    var req = resp.request;\n    var code = resp.httpResponse.statusCode;\n    var body = resp.httpResponse.body || '';\n\n    var headers = resp.httpResponse.headers || {};\n    var region = headers['x-amz-bucket-region'] || null;\n    var bucket = req.params.Bucket || null;\n    var bucketRegionCache = req.service.bucketRegionCache;\n    if (region && bucket && region !== bucketRegionCache[bucket]) {\n      bucketRegionCache[bucket] = region;\n    }\n\n    var cachedRegion;\n    if (codes[code] && body.length === 0) {\n      if (bucket && !region) {\n        cachedRegion = bucketRegionCache[bucket] || null;\n        if (cachedRegion !== req.httpRequest.region) {\n          region = cachedRegion;\n        }\n      }\n      resp.error = AWS.util.error(new Error(), {\n        code: codes[code],\n        message: null,\n        region: region\n      });\n    } else {\n      var data = new AWS.XML.Parser().parse(body.toString());\n\n      if (data.Region && !region) {\n        region = data.Region;\n        if (bucket && region !== bucketRegionCache[bucket]) {\n          bucketRegionCache[bucket] = region;\n        }\n      } else if (bucket && !region && !data.Region) {\n        cachedRegion = bucketRegionCache[bucket] || null;\n        if (cachedRegion !== req.httpRequest.region) {\n          region = cachedRegion;\n        }\n      }\n\n      resp.error = AWS.util.error(new Error(), {\n        code: data.Code || code,\n        message: data.Message || null,\n        region: region\n      });\n    }\n    req.service.extractRequestIds(resp);\n  },\n\n  /**\n   * If region was not obtained synchronously, then send async request\n   * to get bucket region for errors resulting from wrong region.\n   *\n   * @api private\n   */\n  requestBucketRegion: function requestBucketRegion(resp, done) {\n    var error = resp.error;\n    var req = resp.request;\n    var bucket = req.params.Bucket || null;\n\n    if (!error || !bucket || error.region || req.operation === 'listObjects' ||\n        (AWS.util.isNode() && req.operation === 'headBucket') ||\n        (error.statusCode === 400 && req.operation !== 'headObject') ||\n        regionRedirectErrorCodes.indexOf(error.code) === -1) {\n      return done();\n    }\n    var reqOperation = AWS.util.isNode() ? 'headBucket' : 'listObjects';\n    var reqParams = {Bucket: bucket};\n    if (reqOperation === 'listObjects') reqParams.MaxKeys = 0;\n    var regionReq = req.service[reqOperation](reqParams);\n    regionReq._requestRegionForBucket = bucket;\n    regionReq.send(function() {\n      var region = req.service.bucketRegionCache[bucket] || null;\n      error.region = region;\n      done();\n    });\n  },\n\n   /**\n   * For browser only. If NetworkingError received, will attempt to obtain\n   * the bucket region.\n   *\n   * @api private\n   */\n   reqRegionForNetworkingError: function reqRegionForNetworkingError(resp, done) {\n    if (!AWS.util.isBrowser()) {\n      return done();\n    }\n    var error = resp.error;\n    var request = resp.request;\n    var bucket = request.params.Bucket;\n    if (!error || error.code !== 'NetworkingError' || !bucket ||\n        request.httpRequest.region === 'us-east-1') {\n      return done();\n    }\n    var service = request.service;\n    var bucketRegionCache = service.bucketRegionCache;\n    var cachedRegion = bucketRegionCache[bucket] || null;\n\n    if (cachedRegion && cachedRegion !== request.httpRequest.region) {\n      service.updateReqBucketRegion(request, cachedRegion);\n      done();\n    } else if (!service.dnsCompatibleBucketName(bucket)) {\n      service.updateReqBucketRegion(request, 'us-east-1');\n      if (bucketRegionCache[bucket] !== 'us-east-1') {\n        bucketRegionCache[bucket] = 'us-east-1';\n      }\n      done();\n    } else if (request.httpRequest.virtualHostedBucket) {\n      var getRegionReq = service.listObjects({Bucket: bucket, MaxKeys: 0});\n      service.updateReqBucketRegion(getRegionReq, 'us-east-1');\n      getRegionReq._requestRegionForBucket = bucket;\n\n      getRegionReq.send(function() {\n        var region = service.bucketRegionCache[bucket] || null;\n        if (region && region !== request.httpRequest.region) {\n          service.updateReqBucketRegion(request, region);\n        }\n        done();\n      });\n    } else {\n      // DNS-compatible path-style\n      // (s3ForcePathStyle or bucket name with dot over https)\n      // Cannot obtain region information for this case\n      done();\n    }\n   },\n\n  /**\n   * Cache for bucket region.\n   *\n   * @api private\n   */\n   bucketRegionCache: {},\n\n  /**\n   * Clears bucket region cache.\n   *\n   * @api private\n   */\n   clearBucketRegionCache: function(buckets) {\n    var bucketRegionCache = this.bucketRegionCache;\n    if (!buckets) {\n      buckets = Object.keys(bucketRegionCache);\n    } else if (typeof buckets === 'string') {\n      buckets = [buckets];\n    }\n    for (var i = 0; i < buckets.length; i++) {\n      delete bucketRegionCache[buckets[i]];\n    }\n    return bucketRegionCache;\n   },\n\n   /**\n    * Corrects request region if bucket's cached region is different\n    *\n    * @api private\n    */\n  correctBucketRegionFromCache: function correctBucketRegionFromCache(req) {\n    var bucket = req.params.Bucket || null;\n    if (bucket) {\n      var service = req.service;\n      var requestRegion = req.httpRequest.region;\n      var cachedRegion = service.bucketRegionCache[bucket];\n      if (cachedRegion && cachedRegion !== requestRegion) {\n        service.updateReqBucketRegion(req, cachedRegion);\n      }\n    }\n  },\n\n  /**\n   * Extracts S3 specific request ids from the http response.\n   *\n   * @api private\n   */\n  extractRequestIds: function extractRequestIds(resp) {\n    var extendedRequestId = resp.httpResponse.headers ? resp.httpResponse.headers['x-amz-id-2'] : null;\n    var cfId = resp.httpResponse.headers ? resp.httpResponse.headers['x-amz-cf-id'] : null;\n    resp.extendedRequestId = extendedRequestId;\n    resp.cfId = cfId;\n\n    if (resp.error) {\n      resp.error.requestId = resp.requestId || null;\n      resp.error.extendedRequestId = extendedRequestId;\n      resp.error.cfId = cfId;\n    }\n  },\n\n  /**\n   * Get a pre-signed URL for a given operation name.\n   *\n   * @note You must ensure that you have static or previously resolved\n   *   credentials if you call this method synchronously (with no callback),\n   *   otherwise it may not properly sign the request. If you cannot guarantee\n   *   this (you are using an asynchronous credential provider, i.e., EC2\n   *   IAM roles), you should always call this method with an asynchronous\n   *   callback.\n   * @note Not all operation parameters are supported when using pre-signed\n   *   URLs. Certain parameters, such as `SSECustomerKey`, `ACL`, `Expires`,\n   *   `ContentLength`, or `Tagging` must be provided as headers when sending a\n   *   request. If you are using pre-signed URLs to upload from a browser and\n   *   need to use these fields, see {createPresignedPost}.\n   * @note The default signer allows altering the request by adding corresponding\n   *   headers to set some parameters (e.g. Range) and these added parameters\n   *   won't be signed. You must use signatureVersion v4 to to include these\n   *   parameters in the signed portion of the URL and enforce exact matching\n   *   between headers and signed params in the URL.\n   * @note This operation cannot be used with a promise. See note above regarding\n   *   asynchronous credentials and use with a callback.\n   * @param operation [String] the name of the operation to call\n   * @param params [map] parameters to pass to the operation. See the given\n   *   operation for the expected operation parameters. In addition, you can\n   *   also pass the \"Expires\" parameter to inform S3 how long the URL should\n   *   work for.\n   * @option params Expires [Integer] (900) the number of seconds to expire\n   *   the pre-signed URL operation in. Defaults to 15 minutes.\n   * @param callback [Function] if a callback is provided, this function will\n   *   pass the URL as the second parameter (after the error parameter) to\n   *   the callback function.\n   * @return [String] if called synchronously (with no callback), returns the\n   *   signed URL.\n   * @return [null] nothing is returned if a callback is provided.\n   * @example Pre-signing a getObject operation (synchronously)\n   *   var params = {Bucket: 'bucket', Key: 'key'};\n   *   var url = s3.getSignedUrl('getObject', params);\n   *   console.log('The URL is', url);\n   * @example Pre-signing a putObject (asynchronously)\n   *   var params = {Bucket: 'bucket', Key: 'key'};\n   *   s3.getSignedUrl('putObject', params, function (err, url) {\n   *     console.log('The URL is', url);\n   *   });\n   * @example Pre-signing a putObject operation with a specific payload\n   *   var params = {Bucket: 'bucket', Key: 'key', Body: 'body'};\n   *   var url = s3.getSignedUrl('putObject', params);\n   *   console.log('The URL is', url);\n   * @example Passing in a 1-minute expiry time for a pre-signed URL\n   *   var params = {Bucket: 'bucket', Key: 'key', Expires: 60};\n   *   var url = s3.getSignedUrl('getObject', params);\n   *   console.log('The URL is', url); // expires in 60 seconds\n   */\n  getSignedUrl: function getSignedUrl(operation, params, callback) {\n    params = AWS.util.copy(params || {});\n    var expires = params.Expires || 900;\n\n    if (typeof expires !== 'number') {\n      throw AWS.util.error(new Error(),\n        { code: 'InvalidParameterException', message: 'The expiration must be a number, received ' + typeof expires });\n    }\n\n    delete params.Expires; // we can't validate this\n    var request = this.makeRequest(operation, params);\n\n    if (callback) {\n      AWS.util.defer(function() {\n        request.presign(expires, callback);\n      });\n    } else {\n      return request.presign(expires, callback);\n    }\n  },\n\n\n  /**\n   * Get a pre-signed POST policy to support uploading to S3 directly from an\n   * HTML form.\n   *\n   * @param params [map]\n   * @option params Bucket [String]     The bucket to which the post should be\n   *                                    uploaded\n   * @option params Expires [Integer]   (3600) The number of seconds for which\n   *                                    the presigned policy should be valid.\n   * @option params Conditions [Array]  An array of conditions that must be met\n   *                                    for the presigned policy to allow the\n   *                                    upload. This can include required tags,\n   *                                    the accepted range for content lengths,\n   *                                    etc.\n   * @see http://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-HTTPPOSTConstructPolicy.html\n   * @option params Fields [map]        Fields to include in the form. All\n   *                                    values passed in as fields will be\n   *                                    signed as exact match conditions.\n   * @param callback [Function]\n   *\n   * @note All fields passed in when creating presigned post data will be signed\n   *   as exact match conditions. Any fields that will be interpolated by S3\n   *   must be added to the fields hash after signing, and an appropriate\n   *   condition for such fields must be explicitly added to the Conditions\n   *   array passed to this function before signing.\n   *\n   * @example Presiging post data with a known key\n   *   var params = {\n   *     Bucket: 'bucket',\n   *     Fields: {\n   *       key: 'key'\n   *     }\n   *   };\n   *   s3.createPresignedPost(params, function(err, data) {\n   *     if (err) {\n   *       console.error('Presigning post data encountered an error', err);\n   *     } else {\n   *       console.log('The post data is', data);\n   *     }\n   *   });\n   *\n   * @example Presigning post data with an interpolated key\n   *   var params = {\n   *     Bucket: 'bucket',\n   *     Conditions: [\n   *       ['starts-with', '$key', 'path/to/uploads/']\n   *     ]\n   *   };\n   *   s3.createPresignedPost(params, function(err, data) {\n   *     if (err) {\n   *       console.error('Presigning post data encountered an error', err);\n   *     } else {\n   *       data.Fields.key = 'path/to/uploads/${filename}';\n   *       console.log('The post data is', data);\n   *     }\n   *   });\n   *\n   * @note You must ensure that you have static or previously resolved\n   *   credentials if you call this method synchronously (with no callback),\n   *   otherwise it may not properly sign the request. If you cannot guarantee\n   *   this (you are using an asynchronous credential provider, i.e., EC2\n   *   IAM roles), you should always call this method with an asynchronous\n   *   callback.\n   *\n   * @return [map]  If called synchronously (with no callback), returns a hash\n   *                with the url to set as the form action and a hash of fields\n   *                to include in the form.\n   * @return [null] Nothing is returned if a callback is provided.\n   *\n   * @callback callback function (err, data)\n   *  @param err [Error] the error object returned from the policy signer\n   *  @param data [map] The data necessary to construct an HTML form\n   *  @param data.url [String] The URL to use as the action of the form\n   *  @param data.fields [map] A hash of fields that must be included in the\n   *                           form for the upload to succeed. This hash will\n   *                           include the signed POST policy, your access key\n   *                           ID and security token (if present), etc. These\n   *                           may be safely included as input elements of type\n   *                           'hidden.'\n   */\n  createPresignedPost: function createPresignedPost(params, callback) {\n    if (typeof params === 'function' && callback === undefined) {\n      callback = params;\n      params = null;\n    }\n\n    params = AWS.util.copy(params || {});\n    var boundParams = this.config.params || {};\n    var bucket = params.Bucket || boundParams.Bucket,\n      self = this,\n      config = this.config,\n      endpoint = AWS.util.copy(this.endpoint);\n    if (!config.s3BucketEndpoint) {\n      endpoint.pathname = '/' + bucket;\n    }\n\n    function finalizePost() {\n      return {\n        url: AWS.util.urlFormat(endpoint),\n        fields: self.preparePostFields(\n          config.credentials,\n          config.region,\n          bucket,\n          params.Fields,\n          params.Conditions,\n          params.Expires\n        )\n      };\n    }\n\n    if (callback) {\n      config.getCredentials(function (err) {\n        if (err) {\n          callback(err);\n        }\n\n        callback(null, finalizePost());\n      });\n    } else {\n      return finalizePost();\n    }\n  },\n\n  /**\n   * @api private\n   */\n  preparePostFields: function preparePostFields(\n    credentials,\n    region,\n    bucket,\n    fields,\n    conditions,\n    expiresInSeconds\n  ) {\n    var now = this.getSkewCorrectedDate();\n    if (!credentials || !region || !bucket) {\n      throw new Error('Unable to create a POST object policy without a bucket,'\n        + ' region, and credentials');\n    }\n    fields = AWS.util.copy(fields || {});\n    conditions = (conditions || []).slice(0);\n    expiresInSeconds = expiresInSeconds || 3600;\n\n    var signingDate = AWS.util.date.iso8601(now).replace(/[:\\-]|\\.\\d{3}/g, '');\n    var shortDate = signingDate.substr(0, 8);\n    var scope = v4Credentials.createScope(shortDate, region, 's3');\n    var credential = credentials.accessKeyId + '/' + scope;\n\n    fields['bucket'] = bucket;\n    fields['X-Amz-Algorithm'] = 'AWS4-HMAC-SHA256';\n    fields['X-Amz-Credential'] = credential;\n    fields['X-Amz-Date'] = signingDate;\n    if (credentials.sessionToken) {\n      fields['X-Amz-Security-Token'] = credentials.sessionToken;\n    }\n    for (var field in fields) {\n      if (fields.hasOwnProperty(field)) {\n        var condition = {};\n        condition[field] = fields[field];\n        conditions.push(condition);\n      }\n    }\n\n    fields.Policy = this.preparePostPolicy(\n      new Date(now.valueOf() + expiresInSeconds * 1000),\n      conditions\n    );\n    fields['X-Amz-Signature'] = AWS.util.crypto.hmac(\n      v4Credentials.getSigningKey(credentials, shortDate, region, 's3', true),\n      fields.Policy,\n      'hex'\n    );\n\n    return fields;\n  },\n\n  /**\n   * @api private\n   */\n  preparePostPolicy: function preparePostPolicy(expiration, conditions) {\n    return AWS.util.base64.encode(JSON.stringify({\n      expiration: AWS.util.date.iso8601(expiration),\n      conditions: conditions\n    }));\n  },\n\n  /**\n   * @api private\n   */\n  prepareSignedUrl: function prepareSignedUrl(request) {\n    request.addListener('validate', request.service.noPresignedContentLength);\n    request.removeListener('build', request.service.addContentType);\n    if (!request.params.Body) {\n      // no Content-MD5/SHA-256 if body is not provided\n      request.removeListener('build', request.service.computeContentMd5);\n    } else {\n      request.addListener('afterBuild', AWS.EventListeners.Core.COMPUTE_SHA256);\n    }\n  },\n\n  /**\n   * @api private\n   * @param request\n   */\n  disableBodySigning: function disableBodySigning(request) {\n    var headers = request.httpRequest.headers;\n    // Add the header to anything that isn't a presigned url, unless that presigned url had a body defined\n    if (!Object.prototype.hasOwnProperty.call(headers, 'presigned-expires')) {\n      headers['X-Amz-Content-Sha256'] = 'UNSIGNED-PAYLOAD';\n    }\n  },\n\n  /**\n   * @api private\n   */\n  noPresignedContentLength: function noPresignedContentLength(request) {\n    if (request.params.ContentLength !== undefined) {\n      throw AWS.util.error(new Error(), {code: 'UnexpectedParameter',\n        message: 'ContentLength is not supported in pre-signed URLs.'});\n    }\n  },\n\n  createBucket: function createBucket(params, callback) {\n    // When creating a bucket *outside* the classic region, the location\n    // constraint must be set for the bucket and it must match the endpoint.\n    // This chunk of code will set the location constraint param based\n    // on the region (when possible), but it will not override a passed-in\n    // location constraint.\n    if (typeof params === 'function' || !params) {\n      callback = callback || params;\n      params = {};\n    }\n    var hostname = this.endpoint.hostname;\n    if (hostname !== this.api.globalEndpoint && !params.CreateBucketConfiguration) {\n      params.CreateBucketConfiguration = { LocationConstraint: this.config.region };\n    }\n    return this.makeRequest('createBucket', params, callback);\n  },\n\n  /**\n   * @see AWS.S3.ManagedUpload\n   * @overload upload(params = {}, [options], [callback])\n   *   Uploads an arbitrarily sized buffer, blob, or stream, using intelligent\n   *   concurrent handling of parts if the payload is large enough. You can\n   *   configure the concurrent queue size by setting `options`. Note that this\n   *   is the only operation for which the SDK can retry requests with stream\n   *   bodies.\n   *\n   *   @param (see AWS.S3.putObject)\n   *   @option (see AWS.S3.ManagedUpload.constructor)\n   *   @return [AWS.S3.ManagedUpload] the managed upload object that can call\n   *     `send()` or track progress.\n   *   @example Uploading a stream object\n   *     var params = {Bucket: 'bucket', Key: 'key', Body: stream};\n   *     s3.upload(params, function(err, data) {\n   *       console.log(err, data);\n   *     });\n   *   @example Uploading a stream with concurrency of 1 and partSize of 10mb\n   *     var params = {Bucket: 'bucket', Key: 'key', Body: stream};\n   *     var options = {partSize: 10 * 1024 * 1024, queueSize: 1};\n   *     s3.upload(params, options, function(err, data) {\n   *       console.log(err, data);\n   *     });\n   * @callback callback function(err, data)\n   *   @param err [Error] an error or null if no error occurred.\n   *   @param data [map] The response data from the successful upload:\n   *   @param data.Location [String] the URL of the uploaded object\n   *   @param data.ETag [String] the ETag of the uploaded object\n   *   @param data.Bucket [String]  the bucket to which the object was uploaded\n   *   @param data.Key [String] the key to which the object was uploaded\n   */\n  upload: function upload(params, options, callback) {\n    if (typeof options === 'function' && callback === undefined) {\n      callback = options;\n      options = null;\n    }\n\n    options = options || {};\n    options = AWS.util.merge(options || {}, {service: this, params: params});\n\n    var uploader = new AWS.S3.ManagedUpload(options);\n    if (typeof callback === 'function') uploader.send(callback);\n    return uploader;\n  }\n});\n","var AWS = require('../core');\n\nAWS.util.update(AWS.S3Control.prototype, {\n  /**\n   * @api private\n   */\n  setupRequestListeners: function setupRequestListeners(request) {\n    request.addListener('afterBuild', this.prependAccountId);\n    request.addListener('extractError', this.extractHostId);\n    request.addListener('extractData', this.extractHostId);\n    request.addListener('validate', this.validateAccountId);\n  },\n\n  /**\n   * @api private\n   */\n  prependAccountId: function(request) {\n    var api = request.service.api;\n    var operationModel = api.operations[request.operation];\n    var inputModel = operationModel.input;\n    var params = request.params;\n    if (inputModel.members.AccountId && params.AccountId) {\n      //customization needed\n      var accountId = params.AccountId;\n      var endpoint = request.httpRequest.endpoint;\n      var newHostname = String(accountId) + '.' + endpoint.hostname;\n      endpoint.hostname = newHostname;\n      request.httpRequest.headers.Host = newHostname;\n      delete request.httpRequest.headers['x-amz-account-id'];\n    }\n  },\n\n  /**\n   * @api private\n   */\n  extractHostId: function(response) {\n    var hostId = response.httpResponse.headers ? response.httpResponse.headers['x-amz-id-2'] : null;\n    response.extendedRequestId = hostId;\n    if (response.error) {\n      response.error.extendedRequestId = hostId;\n    }\n  },\n\n  /**\n   * @api private\n   */\n  validateAccountId: function(request) {\n    var params = request.params;\n    if (!Object.prototype.hasOwnProperty.call(params, 'AccountId')) return;\n    var accountId = params.AccountId;\n    //validate type\n    if (typeof accountId !== 'string') {\n      throw AWS.util.error(\n        new Error(),\n        {code: 'ValidationError', message: 'AccountId must be a string.'}\n      );\n    }\n    //validate length\n    if (accountId.length < 1 || accountId.length > 63) {\n      throw AWS.util.error(\n        new Error(),\n        {code: 'ValidationError', message: 'AccountId length should be between 1 to 63 characters, inclusive.'}\n      );\n    }\n    //validate pattern\n    var hostPattern = /^[a-zA-Z0-9]{1}$|^[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9]$/;\n    if (!hostPattern.test(accountId)) {\n      throw AWS.util.error(new Error(),\n        {code: 'ValidationError', message: 'AccountId should be hostname compatible. AccountId: ' + accountId});\n    }\n  }\n});\n","var AWS = require('../core');\n\nAWS.util.update(AWS.SQS.prototype, {\n  /**\n   * @api private\n   */\n  setupRequestListeners: function setupRequestListeners(request) {\n    request.addListener('build', this.buildEndpoint);\n\n    if (request.service.config.computeChecksums) {\n      if (request.operation === 'sendMessage') {\n        request.addListener('extractData', this.verifySendMessageChecksum);\n      } else if (request.operation === 'sendMessageBatch') {\n        request.addListener('extractData', this.verifySendMessageBatchChecksum);\n      } else if (request.operation === 'receiveMessage') {\n        request.addListener('extractData', this.verifyReceiveMessageChecksum);\n      }\n    }\n  },\n\n  /**\n   * @api private\n   */\n  verifySendMessageChecksum: function verifySendMessageChecksum(response) {\n    if (!response.data) return;\n\n    var md5 = response.data.MD5OfMessageBody;\n    var body = this.params.MessageBody;\n    var calculatedMd5 = this.service.calculateChecksum(body);\n    if (calculatedMd5 !== md5) {\n      var msg = 'Got \"' + response.data.MD5OfMessageBody +\n        '\", expecting \"' + calculatedMd5 + '\".';\n      this.service.throwInvalidChecksumError(response,\n        [response.data.MessageId], msg);\n    }\n  },\n\n  /**\n   * @api private\n   */\n  verifySendMessageBatchChecksum: function verifySendMessageBatchChecksum(response) {\n    if (!response.data) return;\n\n    var service = this.service;\n    var entries = {};\n    var errors = [];\n    var messageIds = [];\n    AWS.util.arrayEach(response.data.Successful, function (entry) {\n      entries[entry.Id] = entry;\n    });\n    AWS.util.arrayEach(this.params.Entries, function (entry) {\n      if (entries[entry.Id]) {\n        var md5 = entries[entry.Id].MD5OfMessageBody;\n        var body = entry.MessageBody;\n        if (!service.isChecksumValid(md5, body)) {\n          errors.push(entry.Id);\n          messageIds.push(entries[entry.Id].MessageId);\n        }\n      }\n    });\n\n    if (errors.length > 0) {\n      service.throwInvalidChecksumError(response, messageIds,\n        'Invalid messages: ' + errors.join(', '));\n    }\n  },\n\n  /**\n   * @api private\n   */\n  verifyReceiveMessageChecksum: function verifyReceiveMessageChecksum(response) {\n    if (!response.data) return;\n\n    var service = this.service;\n    var messageIds = [];\n    AWS.util.arrayEach(response.data.Messages, function(message) {\n      var md5 = message.MD5OfBody;\n      var body = message.Body;\n      if (!service.isChecksumValid(md5, body)) {\n        messageIds.push(message.MessageId);\n      }\n    });\n\n    if (messageIds.length > 0) {\n      service.throwInvalidChecksumError(response, messageIds,\n        'Invalid messages: ' + messageIds.join(', '));\n    }\n  },\n\n  /**\n   * @api private\n   */\n  throwInvalidChecksumError: function throwInvalidChecksumError(response, ids, message) {\n    response.error = AWS.util.error(new Error(), {\n      retryable: true,\n      code: 'InvalidChecksum',\n      messageIds: ids,\n      message: response.request.operation +\n               ' returned an invalid MD5 response. ' + message\n    });\n  },\n\n  /**\n   * @api private\n   */\n  isChecksumValid: function isChecksumValid(checksum, data) {\n    return this.calculateChecksum(data) === checksum;\n  },\n\n  /**\n   * @api private\n   */\n  calculateChecksum: function calculateChecksum(data) {\n    return AWS.util.crypto.md5(data, 'hex');\n  },\n\n  /**\n   * @api private\n   */\n  buildEndpoint: function buildEndpoint(request) {\n    var url = request.httpRequest.params.QueueUrl;\n    if (url) {\n      request.httpRequest.endpoint = new AWS.Endpoint(url);\n\n      // signature version 4 requires the region name to be set,\n      // sqs queue urls contain the region name\n      var matches = request.httpRequest.endpoint.host.match(/^sqs\\.(.+?)\\./);\n      if (matches) request.httpRequest.region = matches[1];\n    }\n  }\n});\n","var AWS = require('../core');\n\nAWS.util.update(AWS.STS.prototype, {\n  /**\n   * @overload credentialsFrom(data, credentials = null)\n   *   Creates a credentials object from STS response data containing\n   *   credentials information. Useful for quickly setting AWS credentials.\n   *\n   *   @note This is a low-level utility function. If you want to load temporary\n   *     credentials into your process for subsequent requests to AWS resources,\n   *     you should use {AWS.TemporaryCredentials} instead.\n   *   @param data [map] data retrieved from a call to {getFederatedToken},\n   *     {getSessionToken}, {assumeRole}, or {assumeRoleWithWebIdentity}.\n   *   @param credentials [AWS.Credentials] an optional credentials object to\n   *     fill instead of creating a new object. Useful when modifying an\n   *     existing credentials object from a refresh call.\n   *   @return [AWS.TemporaryCredentials] the set of temporary credentials\n   *     loaded from a raw STS operation response.\n   *   @example Using credentialsFrom to load global AWS credentials\n   *     var sts = new AWS.STS();\n   *     sts.getSessionToken(function (err, data) {\n   *       if (err) console.log(\"Error getting credentials\");\n   *       else {\n   *         AWS.config.credentials = sts.credentialsFrom(data);\n   *       }\n   *     });\n   *   @see AWS.TemporaryCredentials\n   */\n  credentialsFrom: function credentialsFrom(data, credentials) {\n    if (!data) return null;\n    if (!credentials) credentials = new AWS.TemporaryCredentials();\n    credentials.expired = false;\n    credentials.accessKeyId = data.Credentials.AccessKeyId;\n    credentials.secretAccessKey = data.Credentials.SecretAccessKey;\n    credentials.sessionToken = data.Credentials.SessionToken;\n    credentials.expireTime = data.Credentials.Expiration;\n    return credentials;\n  },\n\n  assumeRoleWithWebIdentity: function assumeRoleWithWebIdentity(params, callback) {\n    return this.makeUnauthenticatedRequest('assumeRoleWithWebIdentity', params, callback);\n  },\n\n  assumeRoleWithSAML: function assumeRoleWithSAML(params, callback) {\n    return this.makeUnauthenticatedRequest('assumeRoleWithSAML', params, callback);\n  }\n});\n","var AWS = require('../core');\n\nAWS.util.hideProperties(AWS, ['SimpleWorkflow']);\n\n/**\n * @constant\n * @readonly\n * Backwards compatibility for access to the {AWS.SWF} service class.\n */\nAWS.SimpleWorkflow = AWS.SWF;\n","var IniLoader = require('./ini-loader').IniLoader;\n/**\n * Singleton object to load specified config/credentials files.\n * It will cache all the files ever loaded;\n */\nmodule.exports.iniLoader = new IniLoader();\n","var AWS = require('../core');\nvar os = require('os');\nvar path = require('path');\n\nfunction parseFile(filename, isConfig) {\n    var content = AWS.util.ini.parse(AWS.util.readFileSync(filename));\n    var tmpContent = {};\n    Object.keys(content).forEach(function(profileName) {\n      var profileContent = content[profileName];\n      profileName = isConfig ? profileName.replace(/^profile\\s/, '') : profileName;\n      Object.defineProperty(tmpContent, profileName, {\n        value: profileContent,\n        enumerable: true\n      });\n    });\n    return tmpContent;\n}\n\n/**\n * Ini file loader class the same as that used in the SDK. It loads and\n * parses config and credentials files in .ini format and cache the content\n * to assure files are only read once.\n * Note that calling operations on the instance instantiated from this class\n * won't affect the behavior of SDK since SDK uses an internal singleton of\n * this class.\n * @!macro nobrowser\n */\nAWS.IniLoader = AWS.util.inherit({\n  constructor: function IniLoader() {\n    this.resolvedProfiles = {};\n  },\n\n  /** Remove all cached files. Used after config files are updated. */\n  clearCachedFiles: function clearCachedFiles() {\n    this.resolvedProfiles = {};\n  },\n\n/**\n * Load configurations from config/credentials files and cache them\n * for later use. If no file is specified it will try to load default\n * files.\n * @param options [map] information describing the file\n * @option options filename [String] ('~/.aws/credentials' or defined by\n *   AWS_SHARED_CREDENTIALS_FILE process env var or '~/.aws/config' if\n *   isConfig is set to true)\n *   path to the file to be read.\n * @option options isConfig [Boolean] (false) True to read config file.\n * @return [map<String,String>] object containing contents from file in key-value\n *   pairs.\n */\n  loadFrom: function loadFrom(options) {\n    options = options || {};\n    var isConfig = options.isConfig === true;\n    var filename = options.filename || this.getDefaultFilePath(isConfig);\n    if (!this.resolvedProfiles[filename]) {\n      var fileContent = this.parseFile(filename, isConfig);\n      Object.defineProperty(this.resolvedProfiles, filename, { value: fileContent });\n    }\n    return this.resolvedProfiles[filename];\n  },\n\n  /**\n   * @api private\n   */\n  parseFile: parseFile,\n\n  /**\n   * @api private\n   */\n  getDefaultFilePath: function getDefaultFilePath(isConfig) {\n    return path.join(\n      this.getHomeDir(),\n      '.aws',\n      isConfig ? 'config' : 'credentials'\n    );\n  },\n\n  /**\n   * @api private\n   */\n  getHomeDir: function getHomeDir() {\n    var env = process.env;\n    var home = env.HOME ||\n      env.USERPROFILE ||\n      (env.HOMEPATH ? ((env.HOMEDRIVE || 'C:/') + env.HOMEPATH) : null);\n\n    if (home) {\n      return home;\n    }\n\n    if (typeof os.homedir === 'function') {\n      return os.homedir();\n    }\n\n    throw AWS.util.error(\n      new Error('Cannot load credentials, HOME path not set')\n    );\n  }\n});\n\nvar IniLoader = AWS.IniLoader;\n\nmodule.exports = {\n  IniLoader: IniLoader,\n  parseFile: parseFile,\n};\n","var AWS = require('../core');\nvar inherit = AWS.util.inherit;\n\n/**\n * @api private\n */\nvar expiresHeader = 'presigned-expires';\n\n/**\n * @api private\n */\nfunction signedUrlBuilder(request) {\n  var expires = request.httpRequest.headers[expiresHeader];\n  var signerClass = request.service.getSignerClass(request);\n\n  delete request.httpRequest.headers['User-Agent'];\n  delete request.httpRequest.headers['X-Amz-User-Agent'];\n\n  if (signerClass === AWS.Signers.V4) {\n    if (expires > 604800) { // one week expiry is invalid\n      var message = 'Presigning does not support expiry time greater ' +\n                    'than a week with SigV4 signing.';\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidExpiryTime', message: message, retryable: false\n      });\n    }\n    request.httpRequest.headers[expiresHeader] = expires;\n  } else if (signerClass === AWS.Signers.S3) {\n    var now = request.service ? request.service.getSkewCorrectedDate() : AWS.util.date.getDate();\n    request.httpRequest.headers[expiresHeader] = parseInt(\n      AWS.util.date.unixTimestamp(now) + expires, 10).toString();\n  } else {\n    throw AWS.util.error(new Error(), {\n      message: 'Presigning only supports S3 or SigV4 signing.',\n      code: 'UnsupportedSigner', retryable: false\n    });\n  }\n}\n\n/**\n * @api private\n */\nfunction signedUrlSigner(request) {\n  var endpoint = request.httpRequest.endpoint;\n  var parsedUrl = AWS.util.urlParse(request.httpRequest.path);\n  var queryParams = {};\n\n  if (parsedUrl.search) {\n    queryParams = AWS.util.queryStringParse(parsedUrl.search.substr(1));\n  }\n\n  var auth = request.httpRequest.headers['Authorization'].split(' ');\n  if (auth[0] === 'AWS') {\n    auth = auth[1].split(':');\n    queryParams['AWSAccessKeyId'] = auth[0];\n    queryParams['Signature'] = auth[1];\n\n    AWS.util.each(request.httpRequest.headers, function (key, value) {\n      if (key === expiresHeader) key = 'Expires';\n      if (key.indexOf('x-amz-meta-') === 0) {\n        // Delete existing, potentially not normalized key\n        delete queryParams[key];\n        key = key.toLowerCase();\n      }\n      queryParams[key] = value;\n    });\n    delete request.httpRequest.headers[expiresHeader];\n    delete queryParams['Authorization'];\n    delete queryParams['Host'];\n  } else if (auth[0] === 'AWS4-HMAC-SHA256') { // SigV4 signing\n    auth.shift();\n    var rest = auth.join(' ');\n    var signature = rest.match(/Signature=(.*?)(?:,|\\s|\\r?\\n|$)/)[1];\n    queryParams['X-Amz-Signature'] = signature;\n    delete queryParams['Expires'];\n  }\n\n  // build URL\n  endpoint.pathname = parsedUrl.pathname;\n  endpoint.search = AWS.util.queryParamsToString(queryParams);\n}\n\n/**\n * @api private\n */\nAWS.Signers.Presign = inherit({\n  /**\n   * @api private\n   */\n  sign: function sign(request, expireTime, callback) {\n    request.httpRequest.headers[expiresHeader] = expireTime || 3600;\n    request.on('build', signedUrlBuilder);\n    request.on('sign', signedUrlSigner);\n    request.removeListener('afterBuild',\n      AWS.EventListeners.Core.SET_CONTENT_LENGTH);\n    request.removeListener('afterBuild',\n      AWS.EventListeners.Core.COMPUTE_SHA256);\n\n    request.emit('beforePresign', [request]);\n\n    if (callback) {\n      request.build(function() {\n        if (this.response.error) callback(this.response.error);\n        else {\n          callback(null, AWS.util.urlFormat(request.httpRequest.endpoint));\n        }\n      });\n    } else {\n      request.build();\n      if (request.response.error) throw request.response.error;\n      return AWS.util.urlFormat(request.httpRequest.endpoint);\n    }\n  }\n});\n\n/**\n * @api private\n */\nmodule.exports = AWS.Signers.Presign;\n","var AWS = require('../core');\n\nvar inherit = AWS.util.inherit;\n\n/**\n * @api private\n */\nAWS.Signers.RequestSigner = inherit({\n  constructor: function RequestSigner(request) {\n    this.request = request;\n  },\n\n  setServiceClientId: function setServiceClientId(id) {\n    this.serviceClientId = id;\n  },\n\n  getServiceClientId: function getServiceClientId() {\n    return this.serviceClientId;\n  }\n});\n\nAWS.Signers.RequestSigner.getVersion = function getVersion(version) {\n  switch (version) {\n    case 'v2': return AWS.Signers.V2;\n    case 'v3': return AWS.Signers.V3;\n    case 's3v4': return AWS.Signers.V4;\n    case 'v4': return AWS.Signers.V4;\n    case 's3': return AWS.Signers.S3;\n    case 'v3https': return AWS.Signers.V3Https;\n  }\n  throw new Error('Unknown signing version ' + version);\n};\n\nrequire('./v2');\nrequire('./v3');\nrequire('./v3https');\nrequire('./v4');\nrequire('./s3');\nrequire('./presign');\n","var AWS = require('../core');\nvar inherit = AWS.util.inherit;\n\n/**\n * @api private\n */\nAWS.Signers.S3 = inherit(AWS.Signers.RequestSigner, {\n  /**\n   * When building the stringToSign, these sub resource params should be\n   * part of the canonical resource string with their NON-decoded values\n   */\n  subResources: {\n    'acl': 1,\n    'accelerate': 1,\n    'analytics': 1,\n    'cors': 1,\n    'lifecycle': 1,\n    'delete': 1,\n    'inventory': 1,\n    'location': 1,\n    'logging': 1,\n    'metrics': 1,\n    'notification': 1,\n    'partNumber': 1,\n    'policy': 1,\n    'requestPayment': 1,\n    'replication': 1,\n    'restore': 1,\n    'tagging': 1,\n    'torrent': 1,\n    'uploadId': 1,\n    'uploads': 1,\n    'versionId': 1,\n    'versioning': 1,\n    'versions': 1,\n    'website': 1\n  },\n\n  // when building the stringToSign, these querystring params should be\n  // part of the canonical resource string with their NON-encoded values\n  responseHeaders: {\n    'response-content-type': 1,\n    'response-content-language': 1,\n    'response-expires': 1,\n    'response-cache-control': 1,\n    'response-content-disposition': 1,\n    'response-content-encoding': 1\n  },\n\n  addAuthorization: function addAuthorization(credentials, date) {\n    if (!this.request.headers['presigned-expires']) {\n      this.request.headers['X-Amz-Date'] = AWS.util.date.rfc822(date);\n    }\n\n    if (credentials.sessionToken) {\n      // presigned URLs require this header to be lowercased\n      this.request.headers['x-amz-security-token'] = credentials.sessionToken;\n    }\n\n    var signature = this.sign(credentials.secretAccessKey, this.stringToSign());\n    var auth = 'AWS ' + credentials.accessKeyId + ':' + signature;\n\n    this.request.headers['Authorization'] = auth;\n  },\n\n  stringToSign: function stringToSign() {\n    var r = this.request;\n\n    var parts = [];\n    parts.push(r.method);\n    parts.push(r.headers['Content-MD5'] || '');\n    parts.push(r.headers['Content-Type'] || '');\n\n    // This is the \"Date\" header, but we use X-Amz-Date.\n    // The S3 signing mechanism requires us to pass an empty\n    // string for this Date header regardless.\n    parts.push(r.headers['presigned-expires'] || '');\n\n    var headers = this.canonicalizedAmzHeaders();\n    if (headers) parts.push(headers);\n    parts.push(this.canonicalizedResource());\n\n    return parts.join('\\n');\n\n  },\n\n  canonicalizedAmzHeaders: function canonicalizedAmzHeaders() {\n\n    var amzHeaders = [];\n\n    AWS.util.each(this.request.headers, function (name) {\n      if (name.match(/^x-amz-/i))\n        amzHeaders.push(name);\n    });\n\n    amzHeaders.sort(function (a, b) {\n      return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n    });\n\n    var parts = [];\n    AWS.util.arrayEach.call(this, amzHeaders, function (name) {\n      parts.push(name.toLowerCase() + ':' + String(this.request.headers[name]));\n    });\n\n    return parts.join('\\n');\n\n  },\n\n  canonicalizedResource: function canonicalizedResource() {\n\n    var r = this.request;\n\n    var parts = r.path.split('?');\n    var path = parts[0];\n    var querystring = parts[1];\n\n    var resource = '';\n\n    if (r.virtualHostedBucket)\n      resource += '/' + r.virtualHostedBucket;\n\n    resource += path;\n\n    if (querystring) {\n\n      // collect a list of sub resources and query params that need to be signed\n      var resources = [];\n\n      AWS.util.arrayEach.call(this, querystring.split('&'), function (param) {\n        var name = param.split('=')[0];\n        var value = param.split('=')[1];\n        if (this.subResources[name] || this.responseHeaders[name]) {\n          var subresource = { name: name };\n          if (value !== undefined) {\n            if (this.subResources[name]) {\n              subresource.value = value;\n            } else {\n              subresource.value = decodeURIComponent(value);\n            }\n          }\n          resources.push(subresource);\n        }\n      });\n\n      resources.sort(function (a, b) { return a.name < b.name ? -1 : 1; });\n\n      if (resources.length) {\n\n        querystring = [];\n        AWS.util.arrayEach(resources, function (res) {\n          if (res.value === undefined) {\n            querystring.push(res.name);\n          } else {\n            querystring.push(res.name + '=' + res.value);\n          }\n        });\n\n        resource += '?' + querystring.join('&');\n      }\n\n    }\n\n    return resource;\n\n  },\n\n  sign: function sign(secret, string) {\n    return AWS.util.crypto.hmac(secret, string, 'base64', 'sha1');\n  }\n});\n\n/**\n * @api private\n */\nmodule.exports = AWS.Signers.S3;\n","var AWS = require('../core');\nvar inherit = AWS.util.inherit;\n\n/**\n * @api private\n */\nAWS.Signers.V2 = inherit(AWS.Signers.RequestSigner, {\n  addAuthorization: function addAuthorization(credentials, date) {\n\n    if (!date) date = AWS.util.date.getDate();\n\n    var r = this.request;\n\n    r.params.Timestamp = AWS.util.date.iso8601(date);\n    r.params.SignatureVersion = '2';\n    r.params.SignatureMethod = 'HmacSHA256';\n    r.params.AWSAccessKeyId = credentials.accessKeyId;\n\n    if (credentials.sessionToken) {\n      r.params.SecurityToken = credentials.sessionToken;\n    }\n\n    delete r.params.Signature; // delete old Signature for re-signing\n    r.params.Signature = this.signature(credentials);\n\n    r.body = AWS.util.queryParamsToString(r.params);\n    r.headers['Content-Length'] = r.body.length;\n  },\n\n  signature: function signature(credentials) {\n    return AWS.util.crypto.hmac(credentials.secretAccessKey, this.stringToSign(), 'base64');\n  },\n\n  stringToSign: function stringToSign() {\n    var parts = [];\n    parts.push(this.request.method);\n    parts.push(this.request.endpoint.host.toLowerCase());\n    parts.push(this.request.pathname());\n    parts.push(AWS.util.queryParamsToString(this.request.params));\n    return parts.join('\\n');\n  }\n\n});\n\n/**\n * @api private\n */\nmodule.exports = AWS.Signers.V2;\n","var AWS = require('../core');\nvar inherit = AWS.util.inherit;\n\n/**\n * @api private\n */\nAWS.Signers.V3 = inherit(AWS.Signers.RequestSigner, {\n  addAuthorization: function addAuthorization(credentials, date) {\n\n    var datetime = AWS.util.date.rfc822(date);\n\n    this.request.headers['X-Amz-Date'] = datetime;\n\n    if (credentials.sessionToken) {\n      this.request.headers['x-amz-security-token'] = credentials.sessionToken;\n    }\n\n    this.request.headers['X-Amzn-Authorization'] =\n      this.authorization(credentials, datetime);\n\n  },\n\n  authorization: function authorization(credentials) {\n    return 'AWS3 ' +\n      'AWSAccessKeyId=' + credentials.accessKeyId + ',' +\n      'Algorithm=HmacSHA256,' +\n      'SignedHeaders=' + this.signedHeaders() + ',' +\n      'Signature=' + this.signature(credentials);\n  },\n\n  signedHeaders: function signedHeaders() {\n    var headers = [];\n    AWS.util.arrayEach(this.headersToSign(), function iterator(h) {\n      headers.push(h.toLowerCase());\n    });\n    return headers.sort().join(';');\n  },\n\n  canonicalHeaders: function canonicalHeaders() {\n    var headers = this.request.headers;\n    var parts = [];\n    AWS.util.arrayEach(this.headersToSign(), function iterator(h) {\n      parts.push(h.toLowerCase().trim() + ':' + String(headers[h]).trim());\n    });\n    return parts.sort().join('\\n') + '\\n';\n  },\n\n  headersToSign: function headersToSign() {\n    var headers = [];\n    AWS.util.each(this.request.headers, function iterator(k) {\n      if (k === 'Host' || k === 'Content-Encoding' || k.match(/^X-Amz/i)) {\n        headers.push(k);\n      }\n    });\n    return headers;\n  },\n\n  signature: function signature(credentials) {\n    return AWS.util.crypto.hmac(credentials.secretAccessKey, this.stringToSign(), 'base64');\n  },\n\n  stringToSign: function stringToSign() {\n    var parts = [];\n    parts.push(this.request.method);\n    parts.push('/');\n    parts.push('');\n    parts.push(this.canonicalHeaders());\n    parts.push(this.request.body);\n    return AWS.util.crypto.sha256(parts.join('\\n'));\n  }\n\n});\n\n/**\n * @api private\n */\nmodule.exports = AWS.Signers.V3;\n","var AWS = require('../core');\nvar inherit = AWS.util.inherit;\n\nrequire('./v3');\n\n/**\n * @api private\n */\nAWS.Signers.V3Https = inherit(AWS.Signers.V3, {\n  authorization: function authorization(credentials) {\n    return 'AWS3-HTTPS ' +\n      'AWSAccessKeyId=' + credentials.accessKeyId + ',' +\n      'Algorithm=HmacSHA256,' +\n      'Signature=' + this.signature(credentials);\n  },\n\n  stringToSign: function stringToSign() {\n    return this.request.headers['X-Amz-Date'];\n  }\n});\n\n/**\n * @api private\n */\nmodule.exports = AWS.Signers.V3Https;\n","var AWS = require('../core');\nvar v4Credentials = require('./v4_credentials');\nvar inherit = AWS.util.inherit;\n\n/**\n * @api private\n */\nvar expiresHeader = 'presigned-expires';\n\n/**\n * @api private\n */\nAWS.Signers.V4 = inherit(AWS.Signers.RequestSigner, {\n  constructor: function V4(request, serviceName, options) {\n    AWS.Signers.RequestSigner.call(this, request);\n    this.serviceName = serviceName;\n    options = options || {};\n    this.signatureCache = typeof options.signatureCache === 'boolean' ? options.signatureCache : true;\n    this.operation = options.operation;\n    this.signatureVersion = options.signatureVersion;\n  },\n\n  algorithm: 'AWS4-HMAC-SHA256',\n\n  addAuthorization: function addAuthorization(credentials, date) {\n    var datetime = AWS.util.date.iso8601(date).replace(/[:\\-]|\\.\\d{3}/g, '');\n\n    if (this.isPresigned()) {\n      this.updateForPresigned(credentials, datetime);\n    } else {\n      this.addHeaders(credentials, datetime);\n    }\n\n    this.request.headers['Authorization'] =\n      this.authorization(credentials, datetime);\n  },\n\n  addHeaders: function addHeaders(credentials, datetime) {\n    this.request.headers['X-Amz-Date'] = datetime;\n    if (credentials.sessionToken) {\n      this.request.headers['x-amz-security-token'] = credentials.sessionToken;\n    }\n  },\n\n  updateForPresigned: function updateForPresigned(credentials, datetime) {\n    var credString = this.credentialString(datetime);\n    var qs = {\n      'X-Amz-Date': datetime,\n      'X-Amz-Algorithm': this.algorithm,\n      'X-Amz-Credential': credentials.accessKeyId + '/' + credString,\n      'X-Amz-Expires': this.request.headers[expiresHeader],\n      'X-Amz-SignedHeaders': this.signedHeaders()\n    };\n\n    if (credentials.sessionToken) {\n      qs['X-Amz-Security-Token'] = credentials.sessionToken;\n    }\n\n    if (this.request.headers['Content-Type']) {\n      qs['Content-Type'] = this.request.headers['Content-Type'];\n    }\n    if (this.request.headers['Content-MD5']) {\n      qs['Content-MD5'] = this.request.headers['Content-MD5'];\n    }\n    if (this.request.headers['Cache-Control']) {\n      qs['Cache-Control'] = this.request.headers['Cache-Control'];\n    }\n\n    // need to pull in any other X-Amz-* headers\n    AWS.util.each.call(this, this.request.headers, function(key, value) {\n      if (key === expiresHeader) return;\n      if (this.isSignableHeader(key)) {\n        var lowerKey = key.toLowerCase();\n        // Metadata should be normalized\n        if (lowerKey.indexOf('x-amz-meta-') === 0) {\n          qs[lowerKey] = value;\n        } else if (lowerKey.indexOf('x-amz-') === 0) {\n          qs[key] = value;\n        }\n      }\n    });\n\n    var sep = this.request.path.indexOf('?') >= 0 ? '&' : '?';\n    this.request.path += sep + AWS.util.queryParamsToString(qs);\n  },\n\n  authorization: function authorization(credentials, datetime) {\n    var parts = [];\n    var credString = this.credentialString(datetime);\n    parts.push(this.algorithm + ' Credential=' +\n      credentials.accessKeyId + '/' + credString);\n    parts.push('SignedHeaders=' + this.signedHeaders());\n    parts.push('Signature=' + this.signature(credentials, datetime));\n    return parts.join(', ');\n  },\n\n  signature: function signature(credentials, datetime) {\n    var signingKey = v4Credentials.getSigningKey(\n      credentials,\n      datetime.substr(0, 8),\n      this.request.region,\n      this.serviceName,\n      this.signatureCache\n    );\n    return AWS.util.crypto.hmac(signingKey, this.stringToSign(datetime), 'hex');\n  },\n\n  stringToSign: function stringToSign(datetime) {\n    var parts = [];\n    parts.push('AWS4-HMAC-SHA256');\n    parts.push(datetime);\n    parts.push(this.credentialString(datetime));\n    parts.push(this.hexEncodedHash(this.canonicalString()));\n    return parts.join('\\n');\n  },\n\n  canonicalString: function canonicalString() {\n    var parts = [], pathname = this.request.pathname();\n    if (this.serviceName !== 's3' && this.signatureVersion !== 's3v4') pathname = AWS.util.uriEscapePath(pathname);\n\n    parts.push(this.request.method);\n    parts.push(pathname);\n    parts.push(this.request.search());\n    parts.push(this.canonicalHeaders() + '\\n');\n    parts.push(this.signedHeaders());\n    parts.push(this.hexEncodedBodyHash());\n    return parts.join('\\n');\n  },\n\n  canonicalHeaders: function canonicalHeaders() {\n    var headers = [];\n    AWS.util.each.call(this, this.request.headers, function (key, item) {\n      headers.push([key, item]);\n    });\n    headers.sort(function (a, b) {\n      return a[0].toLowerCase() < b[0].toLowerCase() ? -1 : 1;\n    });\n    var parts = [];\n    AWS.util.arrayEach.call(this, headers, function (item) {\n      var key = item[0].toLowerCase();\n      if (this.isSignableHeader(key)) {\n        var value = item[1];\n        if (typeof value === 'undefined' || value === null || typeof value.toString !== 'function') {\n          throw AWS.util.error(new Error('Header ' + key + ' contains invalid value'), {\n            code: 'InvalidHeader'\n          });\n        }\n        parts.push(key + ':' +\n          this.canonicalHeaderValues(value.toString()));\n      }\n    });\n    return parts.join('\\n');\n  },\n\n  canonicalHeaderValues: function canonicalHeaderValues(values) {\n    return values.replace(/\\s+/g, ' ').replace(/^\\s+|\\s+$/g, '');\n  },\n\n  signedHeaders: function signedHeaders() {\n    var keys = [];\n    AWS.util.each.call(this, this.request.headers, function (key) {\n      key = key.toLowerCase();\n      if (this.isSignableHeader(key)) keys.push(key);\n    });\n    return keys.sort().join(';');\n  },\n\n  credentialString: function credentialString(datetime) {\n    return v4Credentials.createScope(\n      datetime.substr(0, 8),\n      this.request.region,\n      this.serviceName\n    );\n  },\n\n  hexEncodedHash: function hash(string) {\n    return AWS.util.crypto.sha256(string, 'hex');\n  },\n\n  hexEncodedBodyHash: function hexEncodedBodyHash() {\n    var request = this.request;\n    if (this.isPresigned() && this.serviceName === 's3' && !request.body) {\n      return 'UNSIGNED-PAYLOAD';\n    } else if (request.headers['X-Amz-Content-Sha256']) {\n      return request.headers['X-Amz-Content-Sha256'];\n    } else {\n      return this.hexEncodedHash(this.request.body || '');\n    }\n  },\n\n  unsignableHeaders: [\n    'authorization',\n    'content-type',\n    'content-length',\n    'user-agent',\n    expiresHeader,\n    'expect',\n    'x-amzn-trace-id'\n  ],\n\n  isSignableHeader: function isSignableHeader(key) {\n    if (key.toLowerCase().indexOf('x-amz-') === 0) return true;\n    return this.unsignableHeaders.indexOf(key) < 0;\n  },\n\n  isPresigned: function isPresigned() {\n    return this.request.headers[expiresHeader] ? true : false;\n  }\n\n});\n\n/**\n * @api private\n */\nmodule.exports = AWS.Signers.V4;\n","var AWS = require('../core');\n\n/**\n * @api private\n */\nvar cachedSecret = {};\n\n/**\n * @api private\n */\nvar cacheQueue = [];\n\n/**\n * @api private\n */\nvar maxCacheEntries = 50;\n\n/**\n * @api private\n */\nvar v4Identifier = 'aws4_request';\n\n/**\n * @api private\n */\nmodule.exports = {\n  /**\n   * @api private\n   *\n   * @param date [String]\n   * @param region [String]\n   * @param serviceName [String]\n   * @return [String]\n   */\n  createScope: function createScope(date, region, serviceName) {\n    return [\n      date.substr(0, 8),\n      region,\n      serviceName,\n      v4Identifier\n    ].join('/');\n  },\n\n  /**\n   * @api private\n   *\n   * @param credentials [Credentials]\n   * @param date [String]\n   * @param region [String]\n   * @param service [String]\n   * @param shouldCache [Boolean]\n   * @return [String]\n   */\n  getSigningKey: function getSigningKey(\n    credentials,\n    date,\n    region,\n    service,\n    shouldCache\n  ) {\n    var credsIdentifier = AWS.util.crypto\n      .hmac(credentials.secretAccessKey, credentials.accessKeyId, 'base64');\n    var cacheKey = [credsIdentifier, date, region, service].join('_');\n    shouldCache = shouldCache !== false;\n    if (shouldCache && (cacheKey in cachedSecret)) {\n      return cachedSecret[cacheKey];\n    }\n\n    var kDate = AWS.util.crypto.hmac(\n      'AWS4' + credentials.secretAccessKey,\n      date,\n      'buffer'\n    );\n    var kRegion = AWS.util.crypto.hmac(kDate, region, 'buffer');\n    var kService = AWS.util.crypto.hmac(kRegion, service, 'buffer');\n\n    var signingKey = AWS.util.crypto.hmac(kService, v4Identifier, 'buffer');\n    if (shouldCache) {\n      cachedSecret[cacheKey] = signingKey;\n      cacheQueue.push(cacheKey);\n      if (cacheQueue.length > maxCacheEntries) {\n        // remove the oldest entry (not the least recently used)\n        delete cachedSecret[cacheQueue.shift()];\n      }\n    }\n\n    return signingKey;\n  },\n\n  /**\n   * @api private\n   *\n   * Empties the derived signing key cache. Made available for testing purposes\n   * only.\n   */\n  emptyCache: function emptyCache() {\n    cachedSecret = {};\n    cacheQueue = [];\n  }\n};\n","function AcceptorStateMachine(states, state) {\n  this.currentState = state || null;\n  this.states = states || {};\n}\n\nAcceptorStateMachine.prototype.runTo = function runTo(finalState, done, bindObject, inputError) {\n  if (typeof finalState === 'function') {\n    inputError = bindObject; bindObject = done;\n    done = finalState; finalState = null;\n  }\n\n  var self = this;\n  var state = self.states[self.currentState];\n  state.fn.call(bindObject || self, inputError, function(err) {\n    if (err) {\n      if (state.fail) self.currentState = state.fail;\n      else return done ? done.call(bindObject, err) : null;\n    } else {\n      if (state.accept) self.currentState = state.accept;\n      else return done ? done.call(bindObject) : null;\n    }\n    if (self.currentState === finalState) {\n      return done ? done.call(bindObject, err) : null;\n    }\n\n    self.runTo(finalState, done, bindObject, err);\n  });\n};\n\nAcceptorStateMachine.prototype.addState = function addState(name, acceptState, failState, fn) {\n  if (typeof acceptState === 'function') {\n    fn = acceptState; acceptState = null; failState = null;\n  } else if (typeof failState === 'function') {\n    fn = failState; failState = null;\n  }\n\n  if (!this.currentState) this.currentState = name;\n  this.states[name] = { accept: acceptState, fail: failState, fn: fn };\n  return this;\n};\n\n/**\n * @api private\n */\nmodule.exports = AcceptorStateMachine;\n","/* eslint guard-for-in:0 */\nvar AWS;\n\n/**\n * A set of utility methods for use with the AWS SDK.\n *\n * @!attribute abort\n *   Return this value from an iterator function {each} or {arrayEach}\n *   to break out of the iteration.\n *   @example Breaking out of an iterator function\n *     AWS.util.each({a: 1, b: 2, c: 3}, function(key, value) {\n *       if (key == 'b') return AWS.util.abort;\n *     });\n *   @see each\n *   @see arrayEach\n * @api private\n */\nvar util = {\n  environment: 'nodejs',\n  engine: function engine() {\n    if (util.isBrowser() && typeof navigator !== 'undefined') {\n      return navigator.userAgent;\n    } else {\n      var engine = process.platform + '/' + process.version;\n      if (process.env.AWS_EXECUTION_ENV) {\n        engine += ' exec-env/' + process.env.AWS_EXECUTION_ENV;\n      }\n      return engine;\n    }\n  },\n\n  userAgent: function userAgent() {\n    var name = util.environment;\n    var agent = 'aws-sdk-' + name + '/' + require('./core').VERSION;\n    if (name === 'nodejs') agent += ' ' + util.engine();\n    return agent;\n  },\n\n  uriEscape: function uriEscape(string) {\n    var output = encodeURIComponent(string);\n    output = output.replace(/[^A-Za-z0-9_.~\\-%]+/g, escape);\n\n    // AWS percent-encodes some extra non-standard characters in a URI\n    output = output.replace(/[*]/g, function(ch) {\n      return '%' + ch.charCodeAt(0).toString(16).toUpperCase();\n    });\n\n    return output;\n  },\n\n  uriEscapePath: function uriEscapePath(string) {\n    var parts = [];\n    util.arrayEach(string.split('/'), function (part) {\n      parts.push(util.uriEscape(part));\n    });\n    return parts.join('/');\n  },\n\n  urlParse: function urlParse(url) {\n    return util.url.parse(url);\n  },\n\n  urlFormat: function urlFormat(url) {\n    return util.url.format(url);\n  },\n\n  queryStringParse: function queryStringParse(qs) {\n    return util.querystring.parse(qs);\n  },\n\n  queryParamsToString: function queryParamsToString(params) {\n    var items = [];\n    var escape = util.uriEscape;\n    var sortedKeys = Object.keys(params).sort();\n\n    util.arrayEach(sortedKeys, function(name) {\n      var value = params[name];\n      var ename = escape(name);\n      var result = ename + '=';\n      if (Array.isArray(value)) {\n        var vals = [];\n        util.arrayEach(value, function(item) { vals.push(escape(item)); });\n        result = ename + '=' + vals.sort().join('&' + ename + '=');\n      } else if (value !== undefined && value !== null) {\n        result = ename + '=' + escape(value);\n      }\n      items.push(result);\n    });\n\n    return items.join('&');\n  },\n\n  readFileSync: function readFileSync(path) {\n    if (util.isBrowser()) return null;\n    return require('fs').readFileSync(path, 'utf-8');\n  },\n\n  base64: {\n    encode: function encode64(string) {\n      if (typeof string === 'number') {\n        throw util.error(new Error('Cannot base64 encode number ' + string));\n      }\n      if (string === null || typeof string === 'undefined') {\n        return string;\n      }\n      var buf = util.buffer.toBuffer(string);\n      return buf.toString('base64');\n    },\n\n    decode: function decode64(string) {\n      if (typeof string === 'number') {\n        throw util.error(new Error('Cannot base64 decode number ' + string));\n      }\n      if (string === null || typeof string === 'undefined') {\n        return string;\n      }\n      return util.buffer.toBuffer(string, 'base64');\n    }\n\n  },\n\n  buffer: {\n    /**\n     * Buffer constructor for Node buffer and buffer pollyfill\n     */\n    toBuffer: function(data, encoding) {\n      return (typeof util.Buffer.from === 'function' && util.Buffer.from !== Uint8Array.from) ?\n        util.Buffer.from(data, encoding) : new util.Buffer(data, encoding);\n    },\n\n    alloc: function(size, fill, encoding) {\n      if (typeof size !== 'number') {\n        throw new Error('size passed to alloc must be a number.');\n      }\n      if (typeof util.Buffer.alloc === 'function') {\n        return util.Buffer.alloc(size, fill, encoding);\n      } else {\n        var buf = new util.Buffer(size);\n        if (fill !== undefined && typeof buf.fill === 'function') {\n          buf.fill(fill, undefined, undefined, encoding);\n        }\n        return buf;\n      }\n    },\n\n    toStream: function toStream(buffer) {\n      if (!util.Buffer.isBuffer(buffer)) buffer =  util.buffer.toBuffer(buffer);\n\n      var readable = new (util.stream.Readable)();\n      var pos = 0;\n      readable._read = function(size) {\n        if (pos >= buffer.length) return readable.push(null);\n\n        var end = pos + size;\n        if (end > buffer.length) end = buffer.length;\n        readable.push(buffer.slice(pos, end));\n        pos = end;\n      };\n\n      return readable;\n    },\n\n    /**\n     * Concatenates a list of Buffer objects.\n     */\n    concat: function(buffers) {\n      var length = 0,\n          offset = 0,\n          buffer = null, i;\n\n      for (i = 0; i < buffers.length; i++) {\n        length += buffers[i].length;\n      }\n\n      buffer = util.buffer.alloc(length);\n\n      for (i = 0; i < buffers.length; i++) {\n        buffers[i].copy(buffer, offset);\n        offset += buffers[i].length;\n      }\n\n      return buffer;\n    }\n  },\n\n  string: {\n    byteLength: function byteLength(string) {\n      if (string === null || string === undefined) return 0;\n      if (typeof string === 'string') string = util.buffer.toBuffer(string);\n\n      if (typeof string.byteLength === 'number') {\n        return string.byteLength;\n      } else if (typeof string.length === 'number') {\n        return string.length;\n      } else if (typeof string.size === 'number') {\n        return string.size;\n      } else if (typeof string.path === 'string') {\n        return require('fs').lstatSync(string.path).size;\n      } else {\n        throw util.error(new Error('Cannot determine length of ' + string),\n          { object: string });\n      }\n    },\n\n    upperFirst: function upperFirst(string) {\n      return string[0].toUpperCase() + string.substr(1);\n    },\n\n    lowerFirst: function lowerFirst(string) {\n      return string[0].toLowerCase() + string.substr(1);\n    }\n  },\n\n  ini: {\n    parse: function string(ini) {\n      var currentSection, map = {};\n      util.arrayEach(ini.split(/\\r?\\n/), function(line) {\n        line = line.split(/(^|\\s)[;#]/)[0]; // remove comments\n        var section = line.match(/^\\s*\\[([^\\[\\]]+)\\]\\s*$/);\n        if (section) {\n          currentSection = section[1];\n        } else if (currentSection) {\n          var item = line.match(/^\\s*(.+?)\\s*=\\s*(.+?)\\s*$/);\n          if (item) {\n            map[currentSection] = map[currentSection] || {};\n            map[currentSection][item[1]] = item[2];\n          }\n        }\n      });\n\n      return map;\n    }\n  },\n\n  fn: {\n    noop: function() {},\n    callback: function (err) { if (err) throw err; },\n\n    /**\n     * Turn a synchronous function into as \"async\" function by making it call\n     * a callback. The underlying function is called with all but the last argument,\n     * which is treated as the callback. The callback is passed passed a first argument\n     * of null on success to mimick standard node callbacks.\n     */\n    makeAsync: function makeAsync(fn, expectedArgs) {\n      if (expectedArgs && expectedArgs <= fn.length) {\n        return fn;\n      }\n\n      return function() {\n        var args = Array.prototype.slice.call(arguments, 0);\n        var callback = args.pop();\n        var result = fn.apply(null, args);\n        callback(result);\n      };\n    }\n  },\n\n  /**\n   * Date and time utility functions.\n   */\n  date: {\n\n    /**\n     * @return [Date] the current JavaScript date object. Since all\n     *   AWS services rely on this date object, you can override\n     *   this function to provide a special time value to AWS service\n     *   requests.\n     */\n    getDate: function getDate() {\n      if (!AWS) AWS = require('./core');\n      if (AWS.config.systemClockOffset) { // use offset when non-zero\n        return new Date(new Date().getTime() + AWS.config.systemClockOffset);\n      } else {\n        return new Date();\n      }\n    },\n\n    /**\n     * @return [String] the date in ISO-8601 format\n     */\n    iso8601: function iso8601(date) {\n      if (date === undefined) { date = util.date.getDate(); }\n      return date.toISOString().replace(/\\.\\d{3}Z$/, 'Z');\n    },\n\n    /**\n     * @return [String] the date in RFC 822 format\n     */\n    rfc822: function rfc822(date) {\n      if (date === undefined) { date = util.date.getDate(); }\n      return date.toUTCString();\n    },\n\n    /**\n     * @return [Integer] the UNIX timestamp value for the current time\n     */\n    unixTimestamp: function unixTimestamp(date) {\n      if (date === undefined) { date = util.date.getDate(); }\n      return date.getTime() / 1000;\n    },\n\n    /**\n     * @param [String,number,Date] date\n     * @return [Date]\n     */\n    from: function format(date) {\n      if (typeof date === 'number') {\n        return new Date(date * 1000); // unix timestamp\n      } else {\n        return new Date(date);\n      }\n    },\n\n    /**\n     * Given a Date or date-like value, this function formats the\n     * date into a string of the requested value.\n     * @param [String,number,Date] date\n     * @param [String] formatter Valid formats are:\n     #   * 'iso8601'\n     #   * 'rfc822'\n     #   * 'unixTimestamp'\n     * @return [String]\n     */\n    format: function format(date, formatter) {\n      if (!formatter) formatter = 'iso8601';\n      return util.date[formatter](util.date.from(date));\n    },\n\n    parseTimestamp: function parseTimestamp(value) {\n      if (typeof value === 'number') { // unix timestamp (number)\n        return new Date(value * 1000);\n      } else if (value.match(/^\\d+$/)) { // unix timestamp\n        return new Date(value * 1000);\n      } else if (value.match(/^\\d{4}/)) { // iso8601\n        return new Date(value);\n      } else if (value.match(/^\\w{3},/)) { // rfc822\n        return new Date(value);\n      } else {\n        throw util.error(\n          new Error('unhandled timestamp format: ' + value),\n          {code: 'TimestampParserError'});\n      }\n    }\n\n  },\n\n  crypto: {\n    crc32Table: [\n     0x00000000, 0x77073096, 0xEE0E612C, 0x990951BA, 0x076DC419,\n     0x706AF48F, 0xE963A535, 0x9E6495A3, 0x0EDB8832, 0x79DCB8A4,\n     0xE0D5E91E, 0x97D2D988, 0x09B64C2B, 0x7EB17CBD, 0xE7B82D07,\n     0x90BF1D91, 0x1DB71064, 0x6AB020F2, 0xF3B97148, 0x84BE41DE,\n     0x1ADAD47D, 0x6DDDE4EB, 0xF4D4B551, 0x83D385C7, 0x136C9856,\n     0x646BA8C0, 0xFD62F97A, 0x8A65C9EC, 0x14015C4F, 0x63066CD9,\n     0xFA0F3D63, 0x8D080DF5, 0x3B6E20C8, 0x4C69105E, 0xD56041E4,\n     0xA2677172, 0x3C03E4D1, 0x4B04D447, 0xD20D85FD, 0xA50AB56B,\n     0x35B5A8FA, 0x42B2986C, 0xDBBBC9D6, 0xACBCF940, 0x32D86CE3,\n     0x45DF5C75, 0xDCD60DCF, 0xABD13D59, 0x26D930AC, 0x51DE003A,\n     0xC8D75180, 0xBFD06116, 0x21B4F4B5, 0x56B3C423, 0xCFBA9599,\n     0xB8BDA50F, 0x2802B89E, 0x5F058808, 0xC60CD9B2, 0xB10BE924,\n     0x2F6F7C87, 0x58684C11, 0xC1611DAB, 0xB6662D3D, 0x76DC4190,\n     0x01DB7106, 0x98D220BC, 0xEFD5102A, 0x71B18589, 0x06B6B51F,\n     0x9FBFE4A5, 0xE8B8D433, 0x7807C9A2, 0x0F00F934, 0x9609A88E,\n     0xE10E9818, 0x7F6A0DBB, 0x086D3D2D, 0x91646C97, 0xE6635C01,\n     0x6B6B51F4, 0x1C6C6162, 0x856530D8, 0xF262004E, 0x6C0695ED,\n     0x1B01A57B, 0x8208F4C1, 0xF50FC457, 0x65B0D9C6, 0x12B7E950,\n     0x8BBEB8EA, 0xFCB9887C, 0x62DD1DDF, 0x15DA2D49, 0x8CD37CF3,\n     0xFBD44C65, 0x4DB26158, 0x3AB551CE, 0xA3BC0074, 0xD4BB30E2,\n     0x4ADFA541, 0x3DD895D7, 0xA4D1C46D, 0xD3D6F4FB, 0x4369E96A,\n     0x346ED9FC, 0xAD678846, 0xDA60B8D0, 0x44042D73, 0x33031DE5,\n     0xAA0A4C5F, 0xDD0D7CC9, 0x5005713C, 0x270241AA, 0xBE0B1010,\n     0xC90C2086, 0x5768B525, 0x206F85B3, 0xB966D409, 0xCE61E49F,\n     0x5EDEF90E, 0x29D9C998, 0xB0D09822, 0xC7D7A8B4, 0x59B33D17,\n     0x2EB40D81, 0xB7BD5C3B, 0xC0BA6CAD, 0xEDB88320, 0x9ABFB3B6,\n     0x03B6E20C, 0x74B1D29A, 0xEAD54739, 0x9DD277AF, 0x04DB2615,\n     0x73DC1683, 0xE3630B12, 0x94643B84, 0x0D6D6A3E, 0x7A6A5AA8,\n     0xE40ECF0B, 0x9309FF9D, 0x0A00AE27, 0x7D079EB1, 0xF00F9344,\n     0x8708A3D2, 0x1E01F268, 0x6906C2FE, 0xF762575D, 0x806567CB,\n     0x196C3671, 0x6E6B06E7, 0xFED41B76, 0x89D32BE0, 0x10DA7A5A,\n     0x67DD4ACC, 0xF9B9DF6F, 0x8EBEEFF9, 0x17B7BE43, 0x60B08ED5,\n     0xD6D6A3E8, 0xA1D1937E, 0x38D8C2C4, 0x4FDFF252, 0xD1BB67F1,\n     0xA6BC5767, 0x3FB506DD, 0x48B2364B, 0xD80D2BDA, 0xAF0A1B4C,\n     0x36034AF6, 0x41047A60, 0xDF60EFC3, 0xA867DF55, 0x316E8EEF,\n     0x4669BE79, 0xCB61B38C, 0xBC66831A, 0x256FD2A0, 0x5268E236,\n     0xCC0C7795, 0xBB0B4703, 0x220216B9, 0x5505262F, 0xC5BA3BBE,\n     0xB2BD0B28, 0x2BB45A92, 0x5CB36A04, 0xC2D7FFA7, 0xB5D0CF31,\n     0x2CD99E8B, 0x5BDEAE1D, 0x9B64C2B0, 0xEC63F226, 0x756AA39C,\n     0x026D930A, 0x9C0906A9, 0xEB0E363F, 0x72076785, 0x05005713,\n     0x95BF4A82, 0xE2B87A14, 0x7BB12BAE, 0x0CB61B38, 0x92D28E9B,\n     0xE5D5BE0D, 0x7CDCEFB7, 0x0BDBDF21, 0x86D3D2D4, 0xF1D4E242,\n     0x68DDB3F8, 0x1FDA836E, 0x81BE16CD, 0xF6B9265B, 0x6FB077E1,\n     0x18B74777, 0x88085AE6, 0xFF0F6A70, 0x66063BCA, 0x11010B5C,\n     0x8F659EFF, 0xF862AE69, 0x616BFFD3, 0x166CCF45, 0xA00AE278,\n     0xD70DD2EE, 0x4E048354, 0x3903B3C2, 0xA7672661, 0xD06016F7,\n     0x4969474D, 0x3E6E77DB, 0xAED16A4A, 0xD9D65ADC, 0x40DF0B66,\n     0x37D83BF0, 0xA9BCAE53, 0xDEBB9EC5, 0x47B2CF7F, 0x30B5FFE9,\n     0xBDBDF21C, 0xCABAC28A, 0x53B39330, 0x24B4A3A6, 0xBAD03605,\n     0xCDD70693, 0x54DE5729, 0x23D967BF, 0xB3667A2E, 0xC4614AB8,\n     0x5D681B02, 0x2A6F2B94, 0xB40BBE37, 0xC30C8EA1, 0x5A05DF1B,\n     0x2D02EF8D],\n\n    crc32: function crc32(data) {\n      var tbl = util.crypto.crc32Table;\n      var crc = 0 ^ -1;\n\n      if (typeof data === 'string') {\n        data = util.buffer.toBuffer(data);\n      }\n\n      for (var i = 0; i < data.length; i++) {\n        var code = data.readUInt8(i);\n        crc = (crc >>> 8) ^ tbl[(crc ^ code) & 0xFF];\n      }\n      return (crc ^ -1) >>> 0;\n    },\n\n    hmac: function hmac(key, string, digest, fn) {\n      if (!digest) digest = 'binary';\n      if (digest === 'buffer') { digest = undefined; }\n      if (!fn) fn = 'sha256';\n      if (typeof string === 'string') string = util.buffer.toBuffer(string);\n      return util.crypto.lib.createHmac(fn, key).update(string).digest(digest);\n    },\n\n    md5: function md5(data, digest, callback) {\n      return util.crypto.hash('md5', data, digest, callback);\n    },\n\n    sha256: function sha256(data, digest, callback) {\n      return util.crypto.hash('sha256', data, digest, callback);\n    },\n\n    hash: function(algorithm, data, digest, callback) {\n      var hash = util.crypto.createHash(algorithm);\n      if (!digest) { digest = 'binary'; }\n      if (digest === 'buffer') { digest = undefined; }\n      if (typeof data === 'string') data = util.buffer.toBuffer(data);\n      var sliceFn = util.arraySliceFn(data);\n      var isBuffer = util.Buffer.isBuffer(data);\n      //Identifying objects with an ArrayBuffer as buffers\n      if (util.isBrowser() && typeof ArrayBuffer !== 'undefined' && data && data.buffer instanceof ArrayBuffer) isBuffer = true;\n\n      if (callback && typeof data === 'object' &&\n          typeof data.on === 'function' && !isBuffer) {\n        data.on('data', function(chunk) { hash.update(chunk); });\n        data.on('error', function(err) { callback(err); });\n        data.on('end', function() { callback(null, hash.digest(digest)); });\n      } else if (callback && sliceFn && !isBuffer &&\n                 typeof FileReader !== 'undefined') {\n        // this might be a File/Blob\n        var index = 0, size = 1024 * 512;\n        var reader = new FileReader();\n        reader.onerror = function() {\n          callback(new Error('Failed to read data.'));\n        };\n        reader.onload = function() {\n          var buf = new util.Buffer(new Uint8Array(reader.result));\n          hash.update(buf);\n          index += buf.length;\n          reader._continueReading();\n        };\n        reader._continueReading = function() {\n          if (index >= data.size) {\n            callback(null, hash.digest(digest));\n            return;\n          }\n\n          var back = index + size;\n          if (back > data.size) back = data.size;\n          reader.readAsArrayBuffer(sliceFn.call(data, index, back));\n        };\n\n        reader._continueReading();\n      } else {\n        if (util.isBrowser() && typeof data === 'object' && !isBuffer) {\n          data = new util.Buffer(new Uint8Array(data));\n        }\n        var out = hash.update(data).digest(digest);\n        if (callback) callback(null, out);\n        return out;\n      }\n    },\n\n    toHex: function toHex(data) {\n      var out = [];\n      for (var i = 0; i < data.length; i++) {\n        out.push(('0' + data.charCodeAt(i).toString(16)).substr(-2, 2));\n      }\n      return out.join('');\n    },\n\n    createHash: function createHash(algorithm) {\n      return util.crypto.lib.createHash(algorithm);\n    }\n\n  },\n\n  /** @!ignore */\n\n  /* Abort constant */\n  abort: {},\n\n  each: function each(object, iterFunction) {\n    for (var key in object) {\n      if (Object.prototype.hasOwnProperty.call(object, key)) {\n        var ret = iterFunction.call(this, key, object[key]);\n        if (ret === util.abort) break;\n      }\n    }\n  },\n\n  arrayEach: function arrayEach(array, iterFunction) {\n    for (var idx in array) {\n      if (Object.prototype.hasOwnProperty.call(array, idx)) {\n        var ret = iterFunction.call(this, array[idx], parseInt(idx, 10));\n        if (ret === util.abort) break;\n      }\n    }\n  },\n\n  update: function update(obj1, obj2) {\n    util.each(obj2, function iterator(key, item) {\n      obj1[key] = item;\n    });\n    return obj1;\n  },\n\n  merge: function merge(obj1, obj2) {\n    return util.update(util.copy(obj1), obj2);\n  },\n\n  copy: function copy(object) {\n    if (object === null || object === undefined) return object;\n    var dupe = {};\n    // jshint forin:false\n    for (var key in object) {\n      dupe[key] = object[key];\n    }\n    return dupe;\n  },\n\n  isEmpty: function isEmpty(obj) {\n    for (var prop in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n        return false;\n      }\n    }\n    return true;\n  },\n\n  arraySliceFn: function arraySliceFn(obj) {\n    var fn = obj.slice || obj.webkitSlice || obj.mozSlice;\n    return typeof fn === 'function' ? fn : null;\n  },\n\n  isType: function isType(obj, type) {\n    // handle cross-\"frame\" objects\n    if (typeof type === 'function') type = util.typeName(type);\n    return Object.prototype.toString.call(obj) === '[object ' + type + ']';\n  },\n\n  typeName: function typeName(type) {\n    if (Object.prototype.hasOwnProperty.call(type, 'name')) return type.name;\n    var str = type.toString();\n    var match = str.match(/^\\s*function (.+)\\(/);\n    return match ? match[1] : str;\n  },\n\n  error: function error(err, options) {\n    var originalError = null;\n    if (typeof err.message === 'string' && err.message !== '') {\n      if (typeof options === 'string' || (options && options.message)) {\n        originalError = util.copy(err);\n        originalError.message = err.message;\n      }\n    }\n    err.message = err.message || null;\n\n    if (typeof options === 'string') {\n      err.message = options;\n    } else if (typeof options === 'object' && options !== null) {\n      util.update(err, options);\n      if (options.message)\n        err.message = options.message;\n      if (options.code || options.name)\n        err.code = options.code || options.name;\n      if (options.stack)\n        err.stack = options.stack;\n    }\n\n    if (typeof Object.defineProperty === 'function') {\n      Object.defineProperty(err, 'name', {writable: true, enumerable: false});\n      Object.defineProperty(err, 'message', {enumerable: true});\n    }\n\n    err.name = options && options.name || err.name || err.code || 'Error';\n    err.time = new Date();\n\n    if (originalError) err.originalError = originalError;\n\n    return err;\n  },\n\n  /**\n   * @api private\n   */\n  inherit: function inherit(klass, features) {\n    var newObject = null;\n    if (features === undefined) {\n      features = klass;\n      klass = Object;\n      newObject = {};\n    } else {\n      var ctor = function ConstructorWrapper() {};\n      ctor.prototype = klass.prototype;\n      newObject = new ctor();\n    }\n\n    // constructor not supplied, create pass-through ctor\n    if (features.constructor === Object) {\n      features.constructor = function() {\n        if (klass !== Object) {\n          return klass.apply(this, arguments);\n        }\n      };\n    }\n\n    features.constructor.prototype = newObject;\n    util.update(features.constructor.prototype, features);\n    features.constructor.__super__ = klass;\n    return features.constructor;\n  },\n\n  /**\n   * @api private\n   */\n  mixin: function mixin() {\n    var klass = arguments[0];\n    for (var i = 1; i < arguments.length; i++) {\n      // jshint forin:false\n      for (var prop in arguments[i].prototype) {\n        var fn = arguments[i].prototype[prop];\n        if (prop !== 'constructor') {\n          klass.prototype[prop] = fn;\n        }\n      }\n    }\n    return klass;\n  },\n\n  /**\n   * @api private\n   */\n  hideProperties: function hideProperties(obj, props) {\n    if (typeof Object.defineProperty !== 'function') return;\n\n    util.arrayEach(props, function (key) {\n      Object.defineProperty(obj, key, {\n        enumerable: false, writable: true, configurable: true });\n    });\n  },\n\n  /**\n   * @api private\n   */\n  property: function property(obj, name, value, enumerable, isValue) {\n    var opts = {\n      configurable: true,\n      enumerable: enumerable !== undefined ? enumerable : true\n    };\n    if (typeof value === 'function' && !isValue) {\n      opts.get = value;\n    }\n    else {\n      opts.value = value; opts.writable = true;\n    }\n\n    Object.defineProperty(obj, name, opts);\n  },\n\n  /**\n   * @api private\n   */\n  memoizedProperty: function memoizedProperty(obj, name, get, enumerable) {\n    var cachedValue = null;\n\n    // build enumerable attribute for each value with lazy accessor.\n    util.property(obj, name, function() {\n      if (cachedValue === null) {\n        cachedValue = get();\n      }\n      return cachedValue;\n    }, enumerable);\n  },\n\n  /**\n   * TODO Remove in major version revision\n   * This backfill populates response data without the\n   * top-level payload name.\n   *\n   * @api private\n   */\n  hoistPayloadMember: function hoistPayloadMember(resp) {\n    var req = resp.request;\n    var operationName = req.operation;\n    var operation = req.service.api.operations[operationName];\n    var output = operation.output;\n    if (output.payload && !operation.hasEventOutput) {\n      var payloadMember = output.members[output.payload];\n      var responsePayload = resp.data[output.payload];\n      if (payloadMember.type === 'structure') {\n        util.each(responsePayload, function(key, value) {\n          util.property(resp.data, key, value, false);\n        });\n      }\n    }\n  },\n\n  /**\n   * Compute SHA-256 checksums of streams\n   *\n   * @api private\n   */\n  computeSha256: function computeSha256(body, done) {\n    if (util.isNode()) {\n      var Stream = util.stream.Stream;\n      var fs = require('fs');\n      if (typeof Stream === 'function' && body instanceof Stream) {\n        if (typeof body.path === 'string') { // assume file object\n          var settings = {};\n          if (typeof body.start === 'number') {\n            settings.start = body.start;\n          }\n          if (typeof body.end === 'number') {\n            settings.end = body.end;\n          }\n          body = fs.createReadStream(body.path, settings);\n        } else { // TODO support other stream types\n          return done(new Error('Non-file stream objects are ' +\n                                'not supported with SigV4'));\n        }\n      }\n    }\n\n    util.crypto.sha256(body, 'hex', function(err, sha) {\n      if (err) done(err);\n      else done(null, sha);\n    });\n  },\n\n  /**\n   * @api private\n   */\n  isClockSkewed: function isClockSkewed(serverTime) {\n    if (serverTime) {\n      util.property(AWS.config, 'isClockSkewed',\n        Math.abs(new Date().getTime() - serverTime) >= 300000, false);\n      return AWS.config.isClockSkewed;\n    }\n  },\n\n  applyClockOffset: function applyClockOffset(serverTime) {\n    if (serverTime)\n      AWS.config.systemClockOffset = serverTime - new Date().getTime();\n  },\n\n  /**\n   * @api private\n   */\n  extractRequestId: function extractRequestId(resp) {\n    var requestId = resp.httpResponse.headers['x-amz-request-id'] ||\n                     resp.httpResponse.headers['x-amzn-requestid'];\n\n    if (!requestId && resp.data && resp.data.ResponseMetadata) {\n      requestId = resp.data.ResponseMetadata.RequestId;\n    }\n\n    if (requestId) {\n      resp.requestId = requestId;\n    }\n\n    if (resp.error) {\n      resp.error.requestId = requestId;\n    }\n  },\n\n  /**\n   * @api private\n   */\n  addPromises: function addPromises(constructors, PromiseDependency) {\n    var deletePromises = false;\n    if (PromiseDependency === undefined && AWS && AWS.config) {\n      PromiseDependency = AWS.config.getPromisesDependency();\n    }\n    if (PromiseDependency === undefined && typeof Promise !== 'undefined') {\n      PromiseDependency = Promise;\n    }\n    if (typeof PromiseDependency !== 'function') deletePromises = true;\n    if (!Array.isArray(constructors)) constructors = [constructors];\n\n    for (var ind = 0; ind < constructors.length; ind++) {\n      var constructor = constructors[ind];\n      if (deletePromises) {\n        if (constructor.deletePromisesFromClass) {\n          constructor.deletePromisesFromClass();\n        }\n      } else if (constructor.addPromisesToClass) {\n        constructor.addPromisesToClass(PromiseDependency);\n      }\n    }\n  },\n\n  /**\n   * @api private\n   */\n  promisifyMethod: function promisifyMethod(methodName, PromiseDependency) {\n    return function promise() {\n      var self = this;\n      return new PromiseDependency(function(resolve, reject) {\n        self[methodName](function(err, data) {\n          if (err) {\n            reject(err);\n          } else {\n            resolve(data);\n          }\n        });\n      });\n    };\n  },\n\n  /**\n   * @api private\n   */\n  isDualstackAvailable: function isDualstackAvailable(service) {\n    if (!service) return false;\n    var metadata = require('../apis/metadata.json');\n    if (typeof service !== 'string') service = service.serviceIdentifier;\n    if (typeof service !== 'string' || !metadata.hasOwnProperty(service)) return false;\n    return !!metadata[service].dualstackAvailable;\n  },\n\n  /**\n   * @api private\n   */\n  calculateRetryDelay: function calculateRetryDelay(retryCount, retryDelayOptions) {\n    if (!retryDelayOptions) retryDelayOptions = {};\n    var customBackoff = retryDelayOptions.customBackoff || null;\n    if (typeof customBackoff === 'function') {\n      return customBackoff(retryCount);\n    }\n    var base = typeof retryDelayOptions.base === 'number' ? retryDelayOptions.base : 100;\n    var delay = Math.random() * (Math.pow(2, retryCount) * base);\n    return delay;\n  },\n\n  /**\n   * @api private\n   */\n  handleRequestWithRetries: function handleRequestWithRetries(httpRequest, options, cb) {\n    if (!options) options = {};\n    var http = AWS.HttpClient.getInstance();\n    var httpOptions = options.httpOptions || {};\n    var retryCount = 0;\n\n    var errCallback = function(err) {\n      var maxRetries = options.maxRetries || 0;\n      if (err && err.code === 'TimeoutError') err.retryable = true;\n      if (err && err.retryable && retryCount < maxRetries) {\n        retryCount++;\n        var delay = util.calculateRetryDelay(retryCount, options.retryDelayOptions);\n        setTimeout(sendRequest, delay + (err.retryAfter || 0));\n      } else {\n        cb(err);\n      }\n    };\n\n    var sendRequest = function() {\n      var data = '';\n      http.handleRequest(httpRequest, httpOptions, function(httpResponse) {\n        httpResponse.on('data', function(chunk) { data += chunk.toString(); });\n        httpResponse.on('end', function() {\n          var statusCode = httpResponse.statusCode;\n          if (statusCode < 300) {\n            cb(null, data);\n          } else {\n            var retryAfter = parseInt(httpResponse.headers['retry-after'], 10) * 1000 || 0;\n            var err = util.error(new Error(),\n              { retryable: statusCode >= 500 || statusCode === 429 }\n            );\n            if (retryAfter && err.retryable) err.retryAfter = retryAfter;\n            errCallback(err);\n          }\n        });\n      }, errCallback);\n    };\n\n    AWS.util.defer(sendRequest);\n  },\n\n  /**\n   * @api private\n   */\n  uuid: {\n    v4: function uuidV4() {\n      return require('uuid').v4();\n    }\n  },\n\n  /**\n   * @api private\n   */\n  convertPayloadToString: function convertPayloadToString(resp) {\n    var req = resp.request;\n    var operation = req.operation;\n    var rules = req.service.api.operations[operation].output || {};\n    if (rules.payload && resp.data[rules.payload]) {\n      resp.data[rules.payload] = resp.data[rules.payload].toString();\n    }\n  },\n\n  /**\n   * @api private\n   */\n  defer: function defer(callback) {\n    if (typeof process === 'object' && typeof process.nextTick === 'function') {\n      process.nextTick(callback);\n    } else if (typeof setImmediate === 'function') {\n      setImmediate(callback);\n    } else {\n      setTimeout(callback, 0);\n    }\n  },\n\n  /**\n   * @api private\n   */\n  getRequestPayloadShape: function getRequestPayloadShape(req) {\n    var operations = req.service.api.operations;\n    if (!operations) return undefined;\n    var operation = (operations || {})[req.operation];\n    if (!operation || !operation.input || !operation.input.payload) return undefined;\n    return operation.input.members[operation.input.payload];\n  },\n\n  /**\n   * @api private\n   */\n  defaultProfile: 'default',\n\n  /**\n   * @api private\n   */\n  configOptInEnv: 'AWS_SDK_LOAD_CONFIG',\n\n  /**\n   * @api private\n   */\n  sharedCredentialsFileEnv: 'AWS_SHARED_CREDENTIALS_FILE',\n\n  /**\n   * @api private\n   */\n  sharedConfigFileEnv: 'AWS_CONFIG_FILE',\n\n  /**\n   * @api private\n   */\n  imdsDisabledEnv: 'AWS_EC2_METADATA_DISABLED'\n};\n\n/**\n * @api private\n */\nmodule.exports = util;\n","var util = require('../util');\nvar XmlNode = require('./xml-node').XmlNode;\nvar XmlText = require('./xml-text').XmlText;\n\nfunction XmlBuilder() { }\n\nXmlBuilder.prototype.toXML = function(params, shape, rootElement, noEmpty) {\n  var xml = new XmlNode(rootElement);\n  applyNamespaces(xml, shape, true);\n  serialize(xml, params, shape);\n  return xml.children.length > 0 || noEmpty ? xml.toString() : '';\n};\n\nfunction serialize(xml, value, shape) {\n  switch (shape.type) {\n    case 'structure': return serializeStructure(xml, value, shape);\n    case 'map': return serializeMap(xml, value, shape);\n    case 'list': return serializeList(xml, value, shape);\n    default: return serializeScalar(xml, value, shape);\n  }\n}\n\nfunction serializeStructure(xml, params, shape) {\n  util.arrayEach(shape.memberNames, function(memberName) {\n    var memberShape = shape.members[memberName];\n    if (memberShape.location !== 'body') return;\n\n    var value = params[memberName];\n    var name = memberShape.name;\n    if (value !== undefined && value !== null) {\n      if (memberShape.isXmlAttribute) {\n        xml.addAttribute(name, value);\n      } else if (memberShape.flattened) {\n        serialize(xml, value, memberShape);\n      } else {\n        var element = new XmlNode(name);\n        xml.addChildNode(element);\n        applyNamespaces(element, memberShape);\n        serialize(element, value, memberShape);\n      }\n    }\n  });\n}\n\nfunction serializeMap(xml, map, shape) {\n  var xmlKey = shape.key.name || 'key';\n  var xmlValue = shape.value.name || 'value';\n\n  util.each(map, function(key, value) {\n    var entry = new XmlNode(shape.flattened ? shape.name : 'entry');\n    xml.addChildNode(entry);\n\n    var entryKey = new XmlNode(xmlKey);\n    var entryValue = new XmlNode(xmlValue);\n    entry.addChildNode(entryKey);\n    entry.addChildNode(entryValue);\n\n    serialize(entryKey, key, shape.key);\n    serialize(entryValue, value, shape.value);\n  });\n}\n\nfunction serializeList(xml, list, shape) {\n  if (shape.flattened) {\n    util.arrayEach(list, function(value) {\n      var name = shape.member.name || shape.name;\n      var element = new XmlNode(name);\n      xml.addChildNode(element);\n      serialize(element, value, shape.member);\n    });\n  } else {\n    util.arrayEach(list, function(value) {\n      var name = shape.member.name || 'member';\n      var element = new XmlNode(name);\n      xml.addChildNode(element);\n      serialize(element, value, shape.member);\n    });\n  }\n}\n\nfunction serializeScalar(xml, value, shape) {\n  xml.addChildNode(\n    new XmlText(shape.toWireFormat(value))\n  );\n}\n\nfunction applyNamespaces(xml, shape, isRoot) {\n  var uri, prefix = 'xmlns';\n  if (shape.xmlNamespaceUri) {\n    uri = shape.xmlNamespaceUri;\n    if (shape.xmlNamespacePrefix) prefix += ':' + shape.xmlNamespacePrefix;\n  } else if (isRoot && shape.api.xmlNamespaceUri) {\n    uri = shape.api.xmlNamespaceUri;\n  }\n\n  if (uri) xml.addAttribute(prefix, uri);\n}\n\n/**\n * @api private\n */\nmodule.exports = XmlBuilder;\n","/**\n * Escapes characters that can not be in an XML attribute.\n */\nfunction escapeAttribute(value) {\n    return value.replace(/&/g, '&amp;').replace(/'/g, '&apos;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n    escapeAttribute: escapeAttribute\n};\n","/**\n * Escapes characters that can not be in an XML element.\n */\nfunction escapeElement(value) {\n    return value.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n    escapeElement: escapeElement\n};\n","var AWS = require('../core');\nvar util = AWS.util;\nvar Shape = AWS.Model.Shape;\n\nvar xml2js = require('xml2js');\n\n/**\n * @api private\n */\nvar options = {  // options passed to xml2js parser\n  explicitCharkey: false, // undocumented\n  trim: false,            // trim the leading/trailing whitespace from text nodes\n  normalize: false,       // trim interior whitespace inside text nodes\n  explicitRoot: false,    // return the root node in the resulting object?\n  emptyTag: null,         // the default value for empty nodes\n  explicitArray: true,    // always put child nodes in an array\n  ignoreAttrs: false,     // ignore attributes, only create text nodes\n  mergeAttrs: false,      // merge attributes and child elements\n  validator: null         // a callable validator\n};\n\nfunction NodeXmlParser() { }\n\nNodeXmlParser.prototype.parse = function(xml, shape) {\n  shape = shape || {};\n\n  var result = null;\n  var error = null;\n\n  var parser = new xml2js.Parser(options);\n  parser.parseString(xml, function (e, r) {\n    error = e;\n    result = r;\n  });\n\n  if (result) {\n    var data = parseXml(result, shape);\n    if (result.ResponseMetadata) {\n      data.ResponseMetadata = parseXml(result.ResponseMetadata[0], {});\n    }\n    return data;\n  } else if (error) {\n    throw util.error(error, {code: 'XMLParserError', retryable: true});\n  } else { // empty xml document\n    return parseXml({}, shape);\n  }\n};\n\nfunction parseXml(xml, shape) {\n  switch (shape.type) {\n    case 'structure': return parseStructure(xml, shape);\n    case 'map': return parseMap(xml, shape);\n    case 'list': return parseList(xml, shape);\n    case undefined: case null: return parseUnknown(xml);\n    default: return parseScalar(xml, shape);\n  }\n}\n\nfunction parseStructure(xml, shape) {\n  var data = {};\n  if (xml === null) return data;\n\n  util.each(shape.members, function(memberName, memberShape) {\n    var xmlName = memberShape.name;\n    if (Object.prototype.hasOwnProperty.call(xml, xmlName) && Array.isArray(xml[xmlName])) {\n      var xmlChild = xml[xmlName];\n      if (!memberShape.flattened) xmlChild = xmlChild[0];\n\n      data[memberName] = parseXml(xmlChild, memberShape);\n    } else if (memberShape.isXmlAttribute &&\n               xml.$ && Object.prototype.hasOwnProperty.call(xml.$, xmlName)) {\n      data[memberName] = parseScalar(xml.$[xmlName], memberShape);\n    } else if (memberShape.type === 'list') {\n      data[memberName] = memberShape.defaultValue;\n    }\n  });\n\n  return data;\n}\n\nfunction parseMap(xml, shape) {\n  var data = {};\n  if (xml === null) return data;\n\n  var xmlKey = shape.key.name || 'key';\n  var xmlValue = shape.value.name || 'value';\n  var iterable = shape.flattened ? xml : xml.entry;\n\n  if (Array.isArray(iterable)) {\n    util.arrayEach(iterable, function(child) {\n      data[child[xmlKey][0]] = parseXml(child[xmlValue][0], shape.value);\n    });\n  }\n\n  return data;\n}\n\nfunction parseList(xml, shape) {\n  var data = [];\n  var name = shape.member.name || 'member';\n  if (shape.flattened) {\n    util.arrayEach(xml, function(xmlChild) {\n      data.push(parseXml(xmlChild, shape.member));\n    });\n  } else if (xml && Array.isArray(xml[name])) {\n    util.arrayEach(xml[name], function(child) {\n      data.push(parseXml(child, shape.member));\n    });\n  }\n\n  return data;\n}\n\nfunction parseScalar(text, shape) {\n  if (text && text.$ && text.$.encoding === 'base64') {\n    shape = new Shape.create({type: text.$.encoding});\n  }\n  if (text && text._) text = text._;\n\n  if (typeof shape.toType === 'function') {\n    return shape.toType(text);\n  } else {\n    return text;\n  }\n}\n\nfunction parseUnknown(xml) {\n  if (xml === undefined || xml === null) return '';\n  if (typeof xml === 'string') return xml;\n\n  // parse a list\n  if (Array.isArray(xml)) {\n    var arr = [];\n    for (i = 0; i < xml.length; i++) {\n      arr.push(parseXml(xml[i], {}));\n    }\n    return arr;\n  }\n\n  // empty object\n  var keys = Object.keys(xml), i;\n  if (keys.length === 0 || keys === ['$']) {\n    return {};\n  }\n\n  // object, parse as structure\n  var data = {};\n  for (i = 0; i < keys.length; i++) {\n    var key = keys[i], value = xml[key];\n    if (key === '$') continue;\n    if (value.length > 1) { // this member is a list\n      data[key] = parseList(value, {member: {}});\n    } else { // this member is a single item\n      data[key] = parseXml(value[0], {});\n    }\n  }\n  return data;\n}\n\n/**\n * @api private\n */\nmodule.exports = NodeXmlParser;\n","var escapeAttribute = require('./escape-attribute').escapeAttribute;\n\n/**\n * Represents an XML node.\n * @api private\n */\nfunction XmlNode(name, children) {\n    if (children === void 0) { children = []; }\n    this.name = name;\n    this.children = children;\n    this.attributes = {};\n}\nXmlNode.prototype.addAttribute = function (name, value) {\n    this.attributes[name] = value;\n    return this;\n};\nXmlNode.prototype.addChildNode = function (child) {\n    this.children.push(child);\n    return this;\n};\nXmlNode.prototype.removeAttribute = function (name) {\n    delete this.attributes[name];\n    return this;\n};\nXmlNode.prototype.toString = function () {\n    var hasChildren = Boolean(this.children.length);\n    var xmlText = '<' + this.name;\n    // add attributes\n    var attributes = this.attributes;\n    for (var i = 0, attributeNames = Object.keys(attributes); i < attributeNames.length; i++) {\n        var attributeName = attributeNames[i];\n        var attribute = attributes[attributeName];\n        if (typeof attribute !== 'undefined' && attribute !== null) {\n            xmlText += ' ' + attributeName + '=\\\"' + escapeAttribute('' + attribute) + '\\\"';\n        }\n    }\n    return xmlText += !hasChildren ? '/>' : '>' + this.children.map(function (c) { return c.toString(); }).join('') + '</' + this.name + '>';\n};\n\n/**\n * @api private\n */\nmodule.exports = {\n    XmlNode: XmlNode\n};\n","var escapeElement = require('./escape-element').escapeElement;\n\n/**\n * Represents an XML text value.\n * @api private\n */\nfunction XmlText(value) {\n    this.value = value;\n}\n\nXmlText.prototype.toString = function () {\n    return escapeElement('' + this.value);\n};\n\n/**\n * @api private\n */\nmodule.exports = {\n    XmlText: XmlText\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar LRU_1 = require(\"./utils/LRU\");\nvar CACHE_SIZE = 1000;\n/**\n * Inspired node-lru-cache[https://github.com/isaacs/node-lru-cache]\n */\nvar EndpointCache = /** @class */ (function () {\n    function EndpointCache(maxSize) {\n        if (maxSize === void 0) { maxSize = CACHE_SIZE; }\n        this.maxSize = maxSize;\n        this.cache = new LRU_1.LRUCache(maxSize);\n    }\n    ;\n    Object.defineProperty(EndpointCache.prototype, \"size\", {\n        get: function () {\n            return this.cache.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    EndpointCache.prototype.put = function (key, value) {\n      var keyString = typeof key !== 'string' ? EndpointCache.getKeyString(key) : key;\n        var endpointRecord = this.populateValue(value);\n        this.cache.put(keyString, endpointRecord);\n    };\n    EndpointCache.prototype.get = function (key) {\n      var keyString = typeof key !== 'string' ? EndpointCache.getKeyString(key) : key;\n        var now = Date.now();\n        var records = this.cache.get(keyString);\n        if (records) {\n            for (var i = 0; i < records.length; i++) {\n                var record = records[i];\n                if (record.Expire < now) {\n                    this.cache.remove(keyString);\n                    return undefined;\n                }\n            }\n        }\n        return records;\n    };\n    EndpointCache.getKeyString = function (key) {\n        var identifiers = [];\n        var identifierNames = Object.keys(key).sort();\n        for (var i = 0; i < identifierNames.length; i++) {\n            var identifierName = identifierNames[i];\n            if (key[identifierName] === undefined)\n                continue;\n            identifiers.push(key[identifierName]);\n        }\n        return identifiers.join(' ');\n    };\n    EndpointCache.prototype.populateValue = function (endpoints) {\n        var now = Date.now();\n        return endpoints.map(function (endpoint) { return ({\n            Address: endpoint.Address || '',\n            Expire: now + (endpoint.CachePeriodInMinutes || 1) * 60 * 1000\n        }); });\n    };\n    EndpointCache.prototype.empty = function () {\n        this.cache.empty();\n    };\n    EndpointCache.prototype.remove = function (key) {\n      var keyString = typeof key !== 'string' ? EndpointCache.getKeyString(key) : key;\n        this.cache.remove(keyString);\n    };\n    return EndpointCache;\n}());\nexports.EndpointCache = EndpointCache;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar LinkedListNode = /** @class */ (function () {\n    function LinkedListNode(key, value) {\n        this.key = key;\n        this.value = value;\n    }\n    return LinkedListNode;\n}());\nvar LRUCache = /** @class */ (function () {\n    function LRUCache(size) {\n        this.nodeMap = {};\n        this.size = 0;\n        if (typeof size !== 'number' || size < 1) {\n            throw new Error('Cache size can only be positive number');\n        }\n        this.sizeLimit = size;\n    }\n    Object.defineProperty(LRUCache.prototype, \"length\", {\n        get: function () {\n            return this.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LRUCache.prototype.prependToList = function (node) {\n        if (!this.headerNode) {\n            this.tailNode = node;\n        }\n        else {\n            this.headerNode.prev = node;\n            node.next = this.headerNode;\n        }\n        this.headerNode = node;\n        this.size++;\n    };\n    LRUCache.prototype.removeFromTail = function () {\n        if (!this.tailNode) {\n            return undefined;\n        }\n        var node = this.tailNode;\n        var prevNode = node.prev;\n        if (prevNode) {\n            prevNode.next = undefined;\n        }\n        node.prev = undefined;\n        this.tailNode = prevNode;\n        this.size--;\n        return node;\n    };\n    LRUCache.prototype.detachFromList = function (node) {\n        if (this.headerNode === node) {\n            this.headerNode = node.next;\n        }\n        if (this.tailNode === node) {\n            this.tailNode = node.prev;\n        }\n        if (node.prev) {\n            node.prev.next = node.next;\n        }\n        if (node.next) {\n            node.next.prev = node.prev;\n        }\n        node.next = undefined;\n        node.prev = undefined;\n        this.size--;\n    };\n    LRUCache.prototype.get = function (key) {\n        if (this.nodeMap[key]) {\n            var node = this.nodeMap[key];\n            this.detachFromList(node);\n            this.prependToList(node);\n            return node.value;\n        }\n    };\n    LRUCache.prototype.remove = function (key) {\n        if (this.nodeMap[key]) {\n            var node = this.nodeMap[key];\n            this.detachFromList(node);\n            delete this.nodeMap[key];\n        }\n    };\n    LRUCache.prototype.put = function (key, value) {\n        if (this.nodeMap[key]) {\n            this.remove(key);\n        }\n        else if (this.size === this.sizeLimit) {\n            var tailNode = this.removeFromTail();\n            var key_1 = tailNode.key;\n            delete this.nodeMap[key_1];\n        }\n        var newNode = new LinkedListNode(key, value);\n        this.nodeMap[key] = newNode;\n        this.prependToList(newNode);\n    };\n    LRUCache.prototype.empty = function () {\n        var keys = Object.keys(this.nodeMap);\n        for (var i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            var node = this.nodeMap[key];\n            this.detachFromList(node);\n            delete this.nodeMap[key];\n        }\n    };\n    return LRUCache;\n}());\nexports.LRUCache = LRUCache;","(function(exports) {\n  \"use strict\";\n\n  function isArray(obj) {\n    if (obj !== null) {\n      return Object.prototype.toString.call(obj) === \"[object Array]\";\n    } else {\n      return false;\n    }\n  }\n\n  function isObject(obj) {\n    if (obj !== null) {\n      return Object.prototype.toString.call(obj) === \"[object Object]\";\n    } else {\n      return false;\n    }\n  }\n\n  function strictDeepEqual(first, second) {\n    // Check the scalar case first.\n    if (first === second) {\n      return true;\n    }\n\n    // Check if they are the same type.\n    var firstType = Object.prototype.toString.call(first);\n    if (firstType !== Object.prototype.toString.call(second)) {\n      return false;\n    }\n    // We know that first and second have the same type so we can just check the\n    // first type from now on.\n    if (isArray(first) === true) {\n      // Short circuit if they're not the same length;\n      if (first.length !== second.length) {\n        return false;\n      }\n      for (var i = 0; i < first.length; i++) {\n        if (strictDeepEqual(first[i], second[i]) === false) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (isObject(first) === true) {\n      // An object is equal if it has the same key/value pairs.\n      var keysSeen = {};\n      for (var key in first) {\n        if (hasOwnProperty.call(first, key)) {\n          if (strictDeepEqual(first[key], second[key]) === false) {\n            return false;\n          }\n          keysSeen[key] = true;\n        }\n      }\n      // Now check that there aren't any keys in second that weren't\n      // in first.\n      for (var key2 in second) {\n        if (hasOwnProperty.call(second, key2)) {\n          if (keysSeen[key2] !== true) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  function isFalse(obj) {\n    // From the spec:\n    // A false value corresponds to the following values:\n    // Empty list\n    // Empty object\n    // Empty string\n    // False boolean\n    // null value\n\n    // First check the scalar values.\n    if (obj === \"\" || obj === false || obj === null) {\n        return true;\n    } else if (isArray(obj) && obj.length === 0) {\n        // Check for an empty array.\n        return true;\n    } else if (isObject(obj)) {\n        // Check for an empty object.\n        for (var key in obj) {\n            // If there are any keys, then\n            // the object is not empty so the object\n            // is not false.\n            if (obj.hasOwnProperty(key)) {\n              return false;\n            }\n        }\n        return true;\n    } else {\n        return false;\n    }\n  }\n\n  function objValues(obj) {\n    var keys = Object.keys(obj);\n    var values = [];\n    for (var i = 0; i < keys.length; i++) {\n      values.push(obj[keys[i]]);\n    }\n    return values;\n  }\n\n  function merge(a, b) {\n      var merged = {};\n      for (var key in a) {\n          merged[key] = a[key];\n      }\n      for (var key2 in b) {\n          merged[key2] = b[key2];\n      }\n      return merged;\n  }\n\n  var trimLeft;\n  if (typeof String.prototype.trimLeft === \"function\") {\n    trimLeft = function(str) {\n      return str.trimLeft();\n    };\n  } else {\n    trimLeft = function(str) {\n      return str.match(/^\\s*(.*)/)[1];\n    };\n  }\n\n  // Type constants used to define functions.\n  var TYPE_NUMBER = 0;\n  var TYPE_ANY = 1;\n  var TYPE_STRING = 2;\n  var TYPE_ARRAY = 3;\n  var TYPE_OBJECT = 4;\n  var TYPE_BOOLEAN = 5;\n  var TYPE_EXPREF = 6;\n  var TYPE_NULL = 7;\n  var TYPE_ARRAY_NUMBER = 8;\n  var TYPE_ARRAY_STRING = 9;\n\n  var TOK_EOF = \"EOF\";\n  var TOK_UNQUOTEDIDENTIFIER = \"UnquotedIdentifier\";\n  var TOK_QUOTEDIDENTIFIER = \"QuotedIdentifier\";\n  var TOK_RBRACKET = \"Rbracket\";\n  var TOK_RPAREN = \"Rparen\";\n  var TOK_COMMA = \"Comma\";\n  var TOK_COLON = \"Colon\";\n  var TOK_RBRACE = \"Rbrace\";\n  var TOK_NUMBER = \"Number\";\n  var TOK_CURRENT = \"Current\";\n  var TOK_EXPREF = \"Expref\";\n  var TOK_PIPE = \"Pipe\";\n  var TOK_OR = \"Or\";\n  var TOK_AND = \"And\";\n  var TOK_EQ = \"EQ\";\n  var TOK_GT = \"GT\";\n  var TOK_LT = \"LT\";\n  var TOK_GTE = \"GTE\";\n  var TOK_LTE = \"LTE\";\n  var TOK_NE = \"NE\";\n  var TOK_FLATTEN = \"Flatten\";\n  var TOK_STAR = \"Star\";\n  var TOK_FILTER = \"Filter\";\n  var TOK_DOT = \"Dot\";\n  var TOK_NOT = \"Not\";\n  var TOK_LBRACE = \"Lbrace\";\n  var TOK_LBRACKET = \"Lbracket\";\n  var TOK_LPAREN= \"Lparen\";\n  var TOK_LITERAL= \"Literal\";\n\n  // The \"&\", \"[\", \"<\", \">\" tokens\n  // are not in basicToken because\n  // there are two token variants\n  // (\"&&\", \"[?\", \"<=\", \">=\").  This is specially handled\n  // below.\n\n  var basicTokens = {\n    \".\": TOK_DOT,\n    \"*\": TOK_STAR,\n    \",\": TOK_COMMA,\n    \":\": TOK_COLON,\n    \"{\": TOK_LBRACE,\n    \"}\": TOK_RBRACE,\n    \"]\": TOK_RBRACKET,\n    \"(\": TOK_LPAREN,\n    \")\": TOK_RPAREN,\n    \"@\": TOK_CURRENT\n  };\n\n  var operatorStartToken = {\n      \"<\": true,\n      \">\": true,\n      \"=\": true,\n      \"!\": true\n  };\n\n  var skipChars = {\n      \" \": true,\n      \"\\t\": true,\n      \"\\n\": true\n  };\n\n\n  function isAlpha(ch) {\n      return (ch >= \"a\" && ch <= \"z\") ||\n             (ch >= \"A\" && ch <= \"Z\") ||\n             ch === \"_\";\n  }\n\n  function isNum(ch) {\n      return (ch >= \"0\" && ch <= \"9\") ||\n             ch === \"-\";\n  }\n  function isAlphaNum(ch) {\n      return (ch >= \"a\" && ch <= \"z\") ||\n             (ch >= \"A\" && ch <= \"Z\") ||\n             (ch >= \"0\" && ch <= \"9\") ||\n             ch === \"_\";\n  }\n\n  function Lexer() {\n  }\n  Lexer.prototype = {\n      tokenize: function(stream) {\n          var tokens = [];\n          this._current = 0;\n          var start;\n          var identifier;\n          var token;\n          while (this._current < stream.length) {\n              if (isAlpha(stream[this._current])) {\n                  start = this._current;\n                  identifier = this._consumeUnquotedIdentifier(stream);\n                  tokens.push({type: TOK_UNQUOTEDIDENTIFIER,\n                               value: identifier,\n                               start: start});\n              } else if (basicTokens[stream[this._current]] !== undefined) {\n                  tokens.push({type: basicTokens[stream[this._current]],\n                              value: stream[this._current],\n                              start: this._current});\n                  this._current++;\n              } else if (isNum(stream[this._current])) {\n                  token = this._consumeNumber(stream);\n                  tokens.push(token);\n              } else if (stream[this._current] === \"[\") {\n                  // No need to increment this._current.  This happens\n                  // in _consumeLBracket\n                  token = this._consumeLBracket(stream);\n                  tokens.push(token);\n              } else if (stream[this._current] === \"\\\"\") {\n                  start = this._current;\n                  identifier = this._consumeQuotedIdentifier(stream);\n                  tokens.push({type: TOK_QUOTEDIDENTIFIER,\n                               value: identifier,\n                               start: start});\n              } else if (stream[this._current] === \"'\") {\n                  start = this._current;\n                  identifier = this._consumeRawStringLiteral(stream);\n                  tokens.push({type: TOK_LITERAL,\n                               value: identifier,\n                               start: start});\n              } else if (stream[this._current] === \"`\") {\n                  start = this._current;\n                  var literal = this._consumeLiteral(stream);\n                  tokens.push({type: TOK_LITERAL,\n                               value: literal,\n                               start: start});\n              } else if (operatorStartToken[stream[this._current]] !== undefined) {\n                  tokens.push(this._consumeOperator(stream));\n              } else if (skipChars[stream[this._current]] !== undefined) {\n                  // Ignore whitespace.\n                  this._current++;\n              } else if (stream[this._current] === \"&\") {\n                  start = this._current;\n                  this._current++;\n                  if (stream[this._current] === \"&\") {\n                      this._current++;\n                      tokens.push({type: TOK_AND, value: \"&&\", start: start});\n                  } else {\n                      tokens.push({type: TOK_EXPREF, value: \"&\", start: start});\n                  }\n              } else if (stream[this._current] === \"|\") {\n                  start = this._current;\n                  this._current++;\n                  if (stream[this._current] === \"|\") {\n                      this._current++;\n                      tokens.push({type: TOK_OR, value: \"||\", start: start});\n                  } else {\n                      tokens.push({type: TOK_PIPE, value: \"|\", start: start});\n                  }\n              } else {\n                  var error = new Error(\"Unknown character:\" + stream[this._current]);\n                  error.name = \"LexerError\";\n                  throw error;\n              }\n          }\n          return tokens;\n      },\n\n      _consumeUnquotedIdentifier: function(stream) {\n          var start = this._current;\n          this._current++;\n          while (this._current < stream.length && isAlphaNum(stream[this._current])) {\n              this._current++;\n          }\n          return stream.slice(start, this._current);\n      },\n\n      _consumeQuotedIdentifier: function(stream) {\n          var start = this._current;\n          this._current++;\n          var maxLength = stream.length;\n          while (stream[this._current] !== \"\\\"\" && this._current < maxLength) {\n              // You can escape a double quote and you can escape an escape.\n              var current = this._current;\n              if (stream[current] === \"\\\\\" && (stream[current + 1] === \"\\\\\" ||\n                                               stream[current + 1] === \"\\\"\")) {\n                  current += 2;\n              } else {\n                  current++;\n              }\n              this._current = current;\n          }\n          this._current++;\n          return JSON.parse(stream.slice(start, this._current));\n      },\n\n      _consumeRawStringLiteral: function(stream) {\n          var start = this._current;\n          this._current++;\n          var maxLength = stream.length;\n          while (stream[this._current] !== \"'\" && this._current < maxLength) {\n              // You can escape a single quote and you can escape an escape.\n              var current = this._current;\n              if (stream[current] === \"\\\\\" && (stream[current + 1] === \"\\\\\" ||\n                                               stream[current + 1] === \"'\")) {\n                  current += 2;\n              } else {\n                  current++;\n              }\n              this._current = current;\n          }\n          this._current++;\n          var literal = stream.slice(start + 1, this._current - 1);\n          return literal.replace(\"\\\\'\", \"'\");\n      },\n\n      _consumeNumber: function(stream) {\n          var start = this._current;\n          this._current++;\n          var maxLength = stream.length;\n          while (isNum(stream[this._current]) && this._current < maxLength) {\n              this._current++;\n          }\n          var value = parseInt(stream.slice(start, this._current));\n          return {type: TOK_NUMBER, value: value, start: start};\n      },\n\n      _consumeLBracket: function(stream) {\n          var start = this._current;\n          this._current++;\n          if (stream[this._current] === \"?\") {\n              this._current++;\n              return {type: TOK_FILTER, value: \"[?\", start: start};\n          } else if (stream[this._current] === \"]\") {\n              this._current++;\n              return {type: TOK_FLATTEN, value: \"[]\", start: start};\n          } else {\n              return {type: TOK_LBRACKET, value: \"[\", start: start};\n          }\n      },\n\n      _consumeOperator: function(stream) {\n          var start = this._current;\n          var startingChar = stream[start];\n          this._current++;\n          if (startingChar === \"!\") {\n              if (stream[this._current] === \"=\") {\n                  this._current++;\n                  return {type: TOK_NE, value: \"!=\", start: start};\n              } else {\n                return {type: TOK_NOT, value: \"!\", start: start};\n              }\n          } else if (startingChar === \"<\") {\n              if (stream[this._current] === \"=\") {\n                  this._current++;\n                  return {type: TOK_LTE, value: \"<=\", start: start};\n              } else {\n                  return {type: TOK_LT, value: \"<\", start: start};\n              }\n          } else if (startingChar === \">\") {\n              if (stream[this._current] === \"=\") {\n                  this._current++;\n                  return {type: TOK_GTE, value: \">=\", start: start};\n              } else {\n                  return {type: TOK_GT, value: \">\", start: start};\n              }\n          } else if (startingChar === \"=\") {\n              if (stream[this._current] === \"=\") {\n                  this._current++;\n                  return {type: TOK_EQ, value: \"==\", start: start};\n              }\n          }\n      },\n\n      _consumeLiteral: function(stream) {\n          this._current++;\n          var start = this._current;\n          var maxLength = stream.length;\n          var literal;\n          while(stream[this._current] !== \"`\" && this._current < maxLength) {\n              // You can escape a literal char or you can escape the escape.\n              var current = this._current;\n              if (stream[current] === \"\\\\\" && (stream[current + 1] === \"\\\\\" ||\n                                               stream[current + 1] === \"`\")) {\n                  current += 2;\n              } else {\n                  current++;\n              }\n              this._current = current;\n          }\n          var literalString = trimLeft(stream.slice(start, this._current));\n          literalString = literalString.replace(\"\\\\`\", \"`\");\n          if (this._looksLikeJSON(literalString)) {\n              literal = JSON.parse(literalString);\n          } else {\n              // Try to JSON parse it as \"<literal>\"\n              literal = JSON.parse(\"\\\"\" + literalString + \"\\\"\");\n          }\n          // +1 gets us to the ending \"`\", +1 to move on to the next char.\n          this._current++;\n          return literal;\n      },\n\n      _looksLikeJSON: function(literalString) {\n          var startingChars = \"[{\\\"\";\n          var jsonLiterals = [\"true\", \"false\", \"null\"];\n          var numberLooking = \"-0123456789\";\n\n          if (literalString === \"\") {\n              return false;\n          } else if (startingChars.indexOf(literalString[0]) >= 0) {\n              return true;\n          } else if (jsonLiterals.indexOf(literalString) >= 0) {\n              return true;\n          } else if (numberLooking.indexOf(literalString[0]) >= 0) {\n              try {\n                  JSON.parse(literalString);\n                  return true;\n              } catch (ex) {\n                  return false;\n              }\n          } else {\n              return false;\n          }\n      }\n  };\n\n      var bindingPower = {};\n      bindingPower[TOK_EOF] = 0;\n      bindingPower[TOK_UNQUOTEDIDENTIFIER] = 0;\n      bindingPower[TOK_QUOTEDIDENTIFIER] = 0;\n      bindingPower[TOK_RBRACKET] = 0;\n      bindingPower[TOK_RPAREN] = 0;\n      bindingPower[TOK_COMMA] = 0;\n      bindingPower[TOK_RBRACE] = 0;\n      bindingPower[TOK_NUMBER] = 0;\n      bindingPower[TOK_CURRENT] = 0;\n      bindingPower[TOK_EXPREF] = 0;\n      bindingPower[TOK_PIPE] = 1;\n      bindingPower[TOK_OR] = 2;\n      bindingPower[TOK_AND] = 3;\n      bindingPower[TOK_EQ] = 5;\n      bindingPower[TOK_GT] = 5;\n      bindingPower[TOK_LT] = 5;\n      bindingPower[TOK_GTE] = 5;\n      bindingPower[TOK_LTE] = 5;\n      bindingPower[TOK_NE] = 5;\n      bindingPower[TOK_FLATTEN] = 9;\n      bindingPower[TOK_STAR] = 20;\n      bindingPower[TOK_FILTER] = 21;\n      bindingPower[TOK_DOT] = 40;\n      bindingPower[TOK_NOT] = 45;\n      bindingPower[TOK_LBRACE] = 50;\n      bindingPower[TOK_LBRACKET] = 55;\n      bindingPower[TOK_LPAREN] = 60;\n\n  function Parser() {\n  }\n\n  Parser.prototype = {\n      parse: function(expression) {\n          this._loadTokens(expression);\n          this.index = 0;\n          var ast = this.expression(0);\n          if (this._lookahead(0) !== TOK_EOF) {\n              var t = this._lookaheadToken(0);\n              var error = new Error(\n                  \"Unexpected token type: \" + t.type + \", value: \" + t.value);\n              error.name = \"ParserError\";\n              throw error;\n          }\n          return ast;\n      },\n\n      _loadTokens: function(expression) {\n          var lexer = new Lexer();\n          var tokens = lexer.tokenize(expression);\n          tokens.push({type: TOK_EOF, value: \"\", start: expression.length});\n          this.tokens = tokens;\n      },\n\n      expression: function(rbp) {\n          var leftToken = this._lookaheadToken(0);\n          this._advance();\n          var left = this.nud(leftToken);\n          var currentToken = this._lookahead(0);\n          while (rbp < bindingPower[currentToken]) {\n              this._advance();\n              left = this.led(currentToken, left);\n              currentToken = this._lookahead(0);\n          }\n          return left;\n      },\n\n      _lookahead: function(number) {\n          return this.tokens[this.index + number].type;\n      },\n\n      _lookaheadToken: function(number) {\n          return this.tokens[this.index + number];\n      },\n\n      _advance: function() {\n          this.index++;\n      },\n\n      nud: function(token) {\n        var left;\n        var right;\n        var expression;\n        switch (token.type) {\n          case TOK_LITERAL:\n            return {type: \"Literal\", value: token.value};\n          case TOK_UNQUOTEDIDENTIFIER:\n            return {type: \"Field\", name: token.value};\n          case TOK_QUOTEDIDENTIFIER:\n            var node = {type: \"Field\", name: token.value};\n            if (this._lookahead(0) === TOK_LPAREN) {\n                throw new Error(\"Quoted identifier not allowed for function names.\");\n            } else {\n                return node;\n            }\n            break;\n          case TOK_NOT:\n            right = this.expression(bindingPower.Not);\n            return {type: \"NotExpression\", children: [right]};\n          case TOK_STAR:\n            left = {type: \"Identity\"};\n            right = null;\n            if (this._lookahead(0) === TOK_RBRACKET) {\n                // This can happen in a multiselect,\n                // [a, b, *]\n                right = {type: \"Identity\"};\n            } else {\n                right = this._parseProjectionRHS(bindingPower.Star);\n            }\n            return {type: \"ValueProjection\", children: [left, right]};\n          case TOK_FILTER:\n            return this.led(token.type, {type: \"Identity\"});\n          case TOK_LBRACE:\n            return this._parseMultiselectHash();\n          case TOK_FLATTEN:\n            left = {type: TOK_FLATTEN, children: [{type: \"Identity\"}]};\n            right = this._parseProjectionRHS(bindingPower.Flatten);\n            return {type: \"Projection\", children: [left, right]};\n          case TOK_LBRACKET:\n            if (this._lookahead(0) === TOK_NUMBER || this._lookahead(0) === TOK_COLON) {\n                right = this._parseIndexExpression();\n                return this._projectIfSlice({type: \"Identity\"}, right);\n            } else if (this._lookahead(0) === TOK_STAR &&\n                       this._lookahead(1) === TOK_RBRACKET) {\n                this._advance();\n                this._advance();\n                right = this._parseProjectionRHS(bindingPower.Star);\n                return {type: \"Projection\",\n                        children: [{type: \"Identity\"}, right]};\n            } else {\n                return this._parseMultiselectList();\n            }\n            break;\n          case TOK_CURRENT:\n            return {type: TOK_CURRENT};\n          case TOK_EXPREF:\n            expression = this.expression(bindingPower.Expref);\n            return {type: \"ExpressionReference\", children: [expression]};\n          case TOK_LPAREN:\n            var args = [];\n            while (this._lookahead(0) !== TOK_RPAREN) {\n              if (this._lookahead(0) === TOK_CURRENT) {\n                expression = {type: TOK_CURRENT};\n                this._advance();\n              } else {\n                expression = this.expression(0);\n              }\n              args.push(expression);\n            }\n            this._match(TOK_RPAREN);\n            return args[0];\n          default:\n            this._errorToken(token);\n        }\n      },\n\n      led: function(tokenName, left) {\n        var right;\n        switch(tokenName) {\n          case TOK_DOT:\n            var rbp = bindingPower.Dot;\n            if (this._lookahead(0) !== TOK_STAR) {\n                right = this._parseDotRHS(rbp);\n                return {type: \"Subexpression\", children: [left, right]};\n            } else {\n                // Creating a projection.\n                this._advance();\n                right = this._parseProjectionRHS(rbp);\n                return {type: \"ValueProjection\", children: [left, right]};\n            }\n            break;\n          case TOK_PIPE:\n            right = this.expression(bindingPower.Pipe);\n            return {type: TOK_PIPE, children: [left, right]};\n          case TOK_OR:\n            right = this.expression(bindingPower.Or);\n            return {type: \"OrExpression\", children: [left, right]};\n          case TOK_AND:\n            right = this.expression(bindingPower.And);\n            return {type: \"AndExpression\", children: [left, right]};\n          case TOK_LPAREN:\n            var name = left.name;\n            var args = [];\n            var expression, node;\n            while (this._lookahead(0) !== TOK_RPAREN) {\n              if (this._lookahead(0) === TOK_CURRENT) {\n                expression = {type: TOK_CURRENT};\n                this._advance();\n              } else {\n                expression = this.expression(0);\n              }\n              if (this._lookahead(0) === TOK_COMMA) {\n                this._match(TOK_COMMA);\n              }\n              args.push(expression);\n            }\n            this._match(TOK_RPAREN);\n            node = {type: \"Function\", name: name, children: args};\n            return node;\n          case TOK_FILTER:\n            var condition = this.expression(0);\n            this._match(TOK_RBRACKET);\n            if (this._lookahead(0) === TOK_FLATTEN) {\n              right = {type: \"Identity\"};\n            } else {\n              right = this._parseProjectionRHS(bindingPower.Filter);\n            }\n            return {type: \"FilterProjection\", children: [left, right, condition]};\n          case TOK_FLATTEN:\n            var leftNode = {type: TOK_FLATTEN, children: [left]};\n            var rightNode = this._parseProjectionRHS(bindingPower.Flatten);\n            return {type: \"Projection\", children: [leftNode, rightNode]};\n          case TOK_EQ:\n          case TOK_NE:\n          case TOK_GT:\n          case TOK_GTE:\n          case TOK_LT:\n          case TOK_LTE:\n            return this._parseComparator(left, tokenName);\n          case TOK_LBRACKET:\n            var token = this._lookaheadToken(0);\n            if (token.type === TOK_NUMBER || token.type === TOK_COLON) {\n                right = this._parseIndexExpression();\n                return this._projectIfSlice(left, right);\n            } else {\n                this._match(TOK_STAR);\n                this._match(TOK_RBRACKET);\n                right = this._parseProjectionRHS(bindingPower.Star);\n                return {type: \"Projection\", children: [left, right]};\n            }\n            break;\n          default:\n            this._errorToken(this._lookaheadToken(0));\n        }\n      },\n\n      _match: function(tokenType) {\n          if (this._lookahead(0) === tokenType) {\n              this._advance();\n          } else {\n              var t = this._lookaheadToken(0);\n              var error = new Error(\"Expected \" + tokenType + \", got: \" + t.type);\n              error.name = \"ParserError\";\n              throw error;\n          }\n      },\n\n      _errorToken: function(token) {\n          var error = new Error(\"Invalid token (\" +\n                                token.type + \"): \\\"\" +\n                                token.value + \"\\\"\");\n          error.name = \"ParserError\";\n          throw error;\n      },\n\n\n      _parseIndexExpression: function() {\n          if (this._lookahead(0) === TOK_COLON || this._lookahead(1) === TOK_COLON) {\n              return this._parseSliceExpression();\n          } else {\n              var node = {\n                  type: \"Index\",\n                  value: this._lookaheadToken(0).value};\n              this._advance();\n              this._match(TOK_RBRACKET);\n              return node;\n          }\n      },\n\n      _projectIfSlice: function(left, right) {\n          var indexExpr = {type: \"IndexExpression\", children: [left, right]};\n          if (right.type === \"Slice\") {\n              return {\n                  type: \"Projection\",\n                  children: [indexExpr, this._parseProjectionRHS(bindingPower.Star)]\n              };\n          } else {\n              return indexExpr;\n          }\n      },\n\n      _parseSliceExpression: function() {\n          // [start:end:step] where each part is optional, as well as the last\n          // colon.\n          var parts = [null, null, null];\n          var index = 0;\n          var currentToken = this._lookahead(0);\n          while (currentToken !== TOK_RBRACKET && index < 3) {\n              if (currentToken === TOK_COLON) {\n                  index++;\n                  this._advance();\n              } else if (currentToken === TOK_NUMBER) {\n                  parts[index] = this._lookaheadToken(0).value;\n                  this._advance();\n              } else {\n                  var t = this._lookahead(0);\n                  var error = new Error(\"Syntax error, unexpected token: \" +\n                                        t.value + \"(\" + t.type + \")\");\n                  error.name = \"Parsererror\";\n                  throw error;\n              }\n              currentToken = this._lookahead(0);\n          }\n          this._match(TOK_RBRACKET);\n          return {\n              type: \"Slice\",\n              children: parts\n          };\n      },\n\n      _parseComparator: function(left, comparator) {\n        var right = this.expression(bindingPower[comparator]);\n        return {type: \"Comparator\", name: comparator, children: [left, right]};\n      },\n\n      _parseDotRHS: function(rbp) {\n          var lookahead = this._lookahead(0);\n          var exprTokens = [TOK_UNQUOTEDIDENTIFIER, TOK_QUOTEDIDENTIFIER, TOK_STAR];\n          if (exprTokens.indexOf(lookahead) >= 0) {\n              return this.expression(rbp);\n          } else if (lookahead === TOK_LBRACKET) {\n              this._match(TOK_LBRACKET);\n              return this._parseMultiselectList();\n          } else if (lookahead === TOK_LBRACE) {\n              this._match(TOK_LBRACE);\n              return this._parseMultiselectHash();\n          }\n      },\n\n      _parseProjectionRHS: function(rbp) {\n          var right;\n          if (bindingPower[this._lookahead(0)] < 10) {\n              right = {type: \"Identity\"};\n          } else if (this._lookahead(0) === TOK_LBRACKET) {\n              right = this.expression(rbp);\n          } else if (this._lookahead(0) === TOK_FILTER) {\n              right = this.expression(rbp);\n          } else if (this._lookahead(0) === TOK_DOT) {\n              this._match(TOK_DOT);\n              right = this._parseDotRHS(rbp);\n          } else {\n              var t = this._lookaheadToken(0);\n              var error = new Error(\"Sytanx error, unexpected token: \" +\n                                    t.value + \"(\" + t.type + \")\");\n              error.name = \"ParserError\";\n              throw error;\n          }\n          return right;\n      },\n\n      _parseMultiselectList: function() {\n          var expressions = [];\n          while (this._lookahead(0) !== TOK_RBRACKET) {\n              var expression = this.expression(0);\n              expressions.push(expression);\n              if (this._lookahead(0) === TOK_COMMA) {\n                  this._match(TOK_COMMA);\n                  if (this._lookahead(0) === TOK_RBRACKET) {\n                    throw new Error(\"Unexpected token Rbracket\");\n                  }\n              }\n          }\n          this._match(TOK_RBRACKET);\n          return {type: \"MultiSelectList\", children: expressions};\n      },\n\n      _parseMultiselectHash: function() {\n        var pairs = [];\n        var identifierTypes = [TOK_UNQUOTEDIDENTIFIER, TOK_QUOTEDIDENTIFIER];\n        var keyToken, keyName, value, node;\n        for (;;) {\n          keyToken = this._lookaheadToken(0);\n          if (identifierTypes.indexOf(keyToken.type) < 0) {\n            throw new Error(\"Expecting an identifier token, got: \" +\n                            keyToken.type);\n          }\n          keyName = keyToken.value;\n          this._advance();\n          this._match(TOK_COLON);\n          value = this.expression(0);\n          node = {type: \"KeyValuePair\", name: keyName, value: value};\n          pairs.push(node);\n          if (this._lookahead(0) === TOK_COMMA) {\n            this._match(TOK_COMMA);\n          } else if (this._lookahead(0) === TOK_RBRACE) {\n            this._match(TOK_RBRACE);\n            break;\n          }\n        }\n        return {type: \"MultiSelectHash\", children: pairs};\n      }\n  };\n\n\n  function TreeInterpreter(runtime) {\n    this.runtime = runtime;\n  }\n\n  TreeInterpreter.prototype = {\n      search: function(node, value) {\n          return this.visit(node, value);\n      },\n\n      visit: function(node, value) {\n          var matched, current, result, first, second, field, left, right, collected, i;\n          switch (node.type) {\n            case \"Field\":\n              if (value === null ) {\n                  return null;\n              } else if (isObject(value)) {\n                  field = value[node.name];\n                  if (field === undefined) {\n                      return null;\n                  } else {\n                      return field;\n                  }\n              } else {\n                return null;\n              }\n              break;\n            case \"Subexpression\":\n              result = this.visit(node.children[0], value);\n              for (i = 1; i < node.children.length; i++) {\n                  result = this.visit(node.children[1], result);\n                  if (result === null) {\n                      return null;\n                  }\n              }\n              return result;\n            case \"IndexExpression\":\n              left = this.visit(node.children[0], value);\n              right = this.visit(node.children[1], left);\n              return right;\n            case \"Index\":\n              if (!isArray(value)) {\n                return null;\n              }\n              var index = node.value;\n              if (index < 0) {\n                index = value.length + index;\n              }\n              result = value[index];\n              if (result === undefined) {\n                result = null;\n              }\n              return result;\n            case \"Slice\":\n              if (!isArray(value)) {\n                return null;\n              }\n              var sliceParams = node.children.slice(0);\n              var computed = this.computeSliceParams(value.length, sliceParams);\n              var start = computed[0];\n              var stop = computed[1];\n              var step = computed[2];\n              result = [];\n              if (step > 0) {\n                  for (i = start; i < stop; i += step) {\n                      result.push(value[i]);\n                  }\n              } else {\n                  for (i = start; i > stop; i += step) {\n                      result.push(value[i]);\n                  }\n              }\n              return result;\n            case \"Projection\":\n              // Evaluate left child.\n              var base = this.visit(node.children[0], value);\n              if (!isArray(base)) {\n                return null;\n              }\n              collected = [];\n              for (i = 0; i < base.length; i++) {\n                current = this.visit(node.children[1], base[i]);\n                if (current !== null) {\n                  collected.push(current);\n                }\n              }\n              return collected;\n            case \"ValueProjection\":\n              // Evaluate left child.\n              base = this.visit(node.children[0], value);\n              if (!isObject(base)) {\n                return null;\n              }\n              collected = [];\n              var values = objValues(base);\n              for (i = 0; i < values.length; i++) {\n                current = this.visit(node.children[1], values[i]);\n                if (current !== null) {\n                  collected.push(current);\n                }\n              }\n              return collected;\n            case \"FilterProjection\":\n              base = this.visit(node.children[0], value);\n              if (!isArray(base)) {\n                return null;\n              }\n              var filtered = [];\n              var finalResults = [];\n              for (i = 0; i < base.length; i++) {\n                matched = this.visit(node.children[2], base[i]);\n                if (!isFalse(matched)) {\n                  filtered.push(base[i]);\n                }\n              }\n              for (var j = 0; j < filtered.length; j++) {\n                current = this.visit(node.children[1], filtered[j]);\n                if (current !== null) {\n                  finalResults.push(current);\n                }\n              }\n              return finalResults;\n            case \"Comparator\":\n              first = this.visit(node.children[0], value);\n              second = this.visit(node.children[1], value);\n              switch(node.name) {\n                case TOK_EQ:\n                  result = strictDeepEqual(first, second);\n                  break;\n                case TOK_NE:\n                  result = !strictDeepEqual(first, second);\n                  break;\n                case TOK_GT:\n                  result = first > second;\n                  break;\n                case TOK_GTE:\n                  result = first >= second;\n                  break;\n                case TOK_LT:\n                  result = first < second;\n                  break;\n                case TOK_LTE:\n                  result = first <= second;\n                  break;\n                default:\n                  throw new Error(\"Unknown comparator: \" + node.name);\n              }\n              return result;\n            case TOK_FLATTEN:\n              var original = this.visit(node.children[0], value);\n              if (!isArray(original)) {\n                return null;\n              }\n              var merged = [];\n              for (i = 0; i < original.length; i++) {\n                current = original[i];\n                if (isArray(current)) {\n                  merged.push.apply(merged, current);\n                } else {\n                  merged.push(current);\n                }\n              }\n              return merged;\n            case \"Identity\":\n              return value;\n            case \"MultiSelectList\":\n              if (value === null) {\n                return null;\n              }\n              collected = [];\n              for (i = 0; i < node.children.length; i++) {\n                  collected.push(this.visit(node.children[i], value));\n              }\n              return collected;\n            case \"MultiSelectHash\":\n              if (value === null) {\n                return null;\n              }\n              collected = {};\n              var child;\n              for (i = 0; i < node.children.length; i++) {\n                child = node.children[i];\n                collected[child.name] = this.visit(child.value, value);\n              }\n              return collected;\n            case \"OrExpression\":\n              matched = this.visit(node.children[0], value);\n              if (isFalse(matched)) {\n                  matched = this.visit(node.children[1], value);\n              }\n              return matched;\n            case \"AndExpression\":\n              first = this.visit(node.children[0], value);\n\n              if (isFalse(first) === true) {\n                return first;\n              }\n              return this.visit(node.children[1], value);\n            case \"NotExpression\":\n              first = this.visit(node.children[0], value);\n              return isFalse(first);\n            case \"Literal\":\n              return node.value;\n            case TOK_PIPE:\n              left = this.visit(node.children[0], value);\n              return this.visit(node.children[1], left);\n            case TOK_CURRENT:\n              return value;\n            case \"Function\":\n              var resolvedArgs = [];\n              for (i = 0; i < node.children.length; i++) {\n                  resolvedArgs.push(this.visit(node.children[i], value));\n              }\n              return this.runtime.callFunction(node.name, resolvedArgs);\n            case \"ExpressionReference\":\n              var refNode = node.children[0];\n              // Tag the node with a specific attribute so the type\n              // checker verify the type.\n              refNode.jmespathType = TOK_EXPREF;\n              return refNode;\n            default:\n              throw new Error(\"Unknown node type: \" + node.type);\n          }\n      },\n\n      computeSliceParams: function(arrayLength, sliceParams) {\n        var start = sliceParams[0];\n        var stop = sliceParams[1];\n        var step = sliceParams[2];\n        var computed = [null, null, null];\n        if (step === null) {\n          step = 1;\n        } else if (step === 0) {\n          var error = new Error(\"Invalid slice, step cannot be 0\");\n          error.name = \"RuntimeError\";\n          throw error;\n        }\n        var stepValueNegative = step < 0 ? true : false;\n\n        if (start === null) {\n            start = stepValueNegative ? arrayLength - 1 : 0;\n        } else {\n            start = this.capSliceRange(arrayLength, start, step);\n        }\n\n        if (stop === null) {\n            stop = stepValueNegative ? -1 : arrayLength;\n        } else {\n            stop = this.capSliceRange(arrayLength, stop, step);\n        }\n        computed[0] = start;\n        computed[1] = stop;\n        computed[2] = step;\n        return computed;\n      },\n\n      capSliceRange: function(arrayLength, actualValue, step) {\n          if (actualValue < 0) {\n              actualValue += arrayLength;\n              if (actualValue < 0) {\n                  actualValue = step < 0 ? -1 : 0;\n              }\n          } else if (actualValue >= arrayLength) {\n              actualValue = step < 0 ? arrayLength - 1 : arrayLength;\n          }\n          return actualValue;\n      }\n\n  };\n\n  function Runtime(interpreter) {\n    this._interpreter = interpreter;\n    this.functionTable = {\n        // name: [function, <signature>]\n        // The <signature> can be:\n        //\n        // {\n        //   args: [[type1, type2], [type1, type2]],\n        //   variadic: true|false\n        // }\n        //\n        // Each arg in the arg list is a list of valid types\n        // (if the function is overloaded and supports multiple\n        // types.  If the type is \"any\" then no type checking\n        // occurs on the argument.  Variadic is optional\n        // and if not provided is assumed to be false.\n        abs: {_func: this._functionAbs, _signature: [{types: [TYPE_NUMBER]}]},\n        avg: {_func: this._functionAvg, _signature: [{types: [TYPE_ARRAY_NUMBER]}]},\n        ceil: {_func: this._functionCeil, _signature: [{types: [TYPE_NUMBER]}]},\n        contains: {\n            _func: this._functionContains,\n            _signature: [{types: [TYPE_STRING, TYPE_ARRAY]},\n                        {types: [TYPE_ANY]}]},\n        \"ends_with\": {\n            _func: this._functionEndsWith,\n            _signature: [{types: [TYPE_STRING]}, {types: [TYPE_STRING]}]},\n        floor: {_func: this._functionFloor, _signature: [{types: [TYPE_NUMBER]}]},\n        length: {\n            _func: this._functionLength,\n            _signature: [{types: [TYPE_STRING, TYPE_ARRAY, TYPE_OBJECT]}]},\n        map: {\n            _func: this._functionMap,\n            _signature: [{types: [TYPE_EXPREF]}, {types: [TYPE_ARRAY]}]},\n        max: {\n            _func: this._functionMax,\n            _signature: [{types: [TYPE_ARRAY_NUMBER, TYPE_ARRAY_STRING]}]},\n        \"merge\": {\n            _func: this._functionMerge,\n            _signature: [{types: [TYPE_OBJECT], variadic: true}]\n        },\n        \"max_by\": {\n          _func: this._functionMaxBy,\n          _signature: [{types: [TYPE_ARRAY]}, {types: [TYPE_EXPREF]}]\n        },\n        sum: {_func: this._functionSum, _signature: [{types: [TYPE_ARRAY_NUMBER]}]},\n        \"starts_with\": {\n            _func: this._functionStartsWith,\n            _signature: [{types: [TYPE_STRING]}, {types: [TYPE_STRING]}]},\n        min: {\n            _func: this._functionMin,\n            _signature: [{types: [TYPE_ARRAY_NUMBER, TYPE_ARRAY_STRING]}]},\n        \"min_by\": {\n          _func: this._functionMinBy,\n          _signature: [{types: [TYPE_ARRAY]}, {types: [TYPE_EXPREF]}]\n        },\n        type: {_func: this._functionType, _signature: [{types: [TYPE_ANY]}]},\n        keys: {_func: this._functionKeys, _signature: [{types: [TYPE_OBJECT]}]},\n        values: {_func: this._functionValues, _signature: [{types: [TYPE_OBJECT]}]},\n        sort: {_func: this._functionSort, _signature: [{types: [TYPE_ARRAY_STRING, TYPE_ARRAY_NUMBER]}]},\n        \"sort_by\": {\n          _func: this._functionSortBy,\n          _signature: [{types: [TYPE_ARRAY]}, {types: [TYPE_EXPREF]}]\n        },\n        join: {\n            _func: this._functionJoin,\n            _signature: [\n                {types: [TYPE_STRING]},\n                {types: [TYPE_ARRAY_STRING]}\n            ]\n        },\n        reverse: {\n            _func: this._functionReverse,\n            _signature: [{types: [TYPE_STRING, TYPE_ARRAY]}]},\n        \"to_array\": {_func: this._functionToArray, _signature: [{types: [TYPE_ANY]}]},\n        \"to_string\": {_func: this._functionToString, _signature: [{types: [TYPE_ANY]}]},\n        \"to_number\": {_func: this._functionToNumber, _signature: [{types: [TYPE_ANY]}]},\n        \"not_null\": {\n            _func: this._functionNotNull,\n            _signature: [{types: [TYPE_ANY], variadic: true}]\n        }\n    };\n  }\n\n  Runtime.prototype = {\n    callFunction: function(name, resolvedArgs) {\n      var functionEntry = this.functionTable[name];\n      if (functionEntry === undefined) {\n          throw new Error(\"Unknown function: \" + name + \"()\");\n      }\n      this._validateArgs(name, resolvedArgs, functionEntry._signature);\n      return functionEntry._func.call(this, resolvedArgs);\n    },\n\n    _validateArgs: function(name, args, signature) {\n        // Validating the args requires validating\n        // the correct arity and the correct type of each arg.\n        // If the last argument is declared as variadic, then we need\n        // a minimum number of args to be required.  Otherwise it has to\n        // be an exact amount.\n        var pluralized;\n        if (signature[signature.length - 1].variadic) {\n            if (args.length < signature.length) {\n                pluralized = signature.length === 1 ? \" argument\" : \" arguments\";\n                throw new Error(\"ArgumentError: \" + name + \"() \" +\n                                \"takes at least\" + signature.length + pluralized +\n                                \" but received \" + args.length);\n            }\n        } else if (args.length !== signature.length) {\n            pluralized = signature.length === 1 ? \" argument\" : \" arguments\";\n            throw new Error(\"ArgumentError: \" + name + \"() \" +\n                            \"takes \" + signature.length + pluralized +\n                            \" but received \" + args.length);\n        }\n        var currentSpec;\n        var actualType;\n        var typeMatched;\n        for (var i = 0; i < signature.length; i++) {\n            typeMatched = false;\n            currentSpec = signature[i].types;\n            actualType = this._getTypeName(args[i]);\n            for (var j = 0; j < currentSpec.length; j++) {\n                if (this._typeMatches(actualType, currentSpec[j], args[i])) {\n                    typeMatched = true;\n                    break;\n                }\n            }\n            if (!typeMatched) {\n                throw new Error(\"TypeError: \" + name + \"() \" +\n                                \"expected argument \" + (i + 1) +\n                                \" to be type \" + currentSpec +\n                                \" but received type \" + actualType +\n                                \" instead.\");\n            }\n        }\n    },\n\n    _typeMatches: function(actual, expected, argValue) {\n        if (expected === TYPE_ANY) {\n            return true;\n        }\n        if (expected === TYPE_ARRAY_STRING ||\n            expected === TYPE_ARRAY_NUMBER ||\n            expected === TYPE_ARRAY) {\n            // The expected type can either just be array,\n            // or it can require a specific subtype (array of numbers).\n            //\n            // The simplest case is if \"array\" with no subtype is specified.\n            if (expected === TYPE_ARRAY) {\n                return actual === TYPE_ARRAY;\n            } else if (actual === TYPE_ARRAY) {\n                // Otherwise we need to check subtypes.\n                // I think this has potential to be improved.\n                var subtype;\n                if (expected === TYPE_ARRAY_NUMBER) {\n                  subtype = TYPE_NUMBER;\n                } else if (expected === TYPE_ARRAY_STRING) {\n                  subtype = TYPE_STRING;\n                }\n                for (var i = 0; i < argValue.length; i++) {\n                    if (!this._typeMatches(\n                            this._getTypeName(argValue[i]), subtype,\n                                             argValue[i])) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n        } else {\n            return actual === expected;\n        }\n    },\n    _getTypeName: function(obj) {\n        switch (Object.prototype.toString.call(obj)) {\n            case \"[object String]\":\n              return TYPE_STRING;\n            case \"[object Number]\":\n              return TYPE_NUMBER;\n            case \"[object Array]\":\n              return TYPE_ARRAY;\n            case \"[object Boolean]\":\n              return TYPE_BOOLEAN;\n            case \"[object Null]\":\n              return TYPE_NULL;\n            case \"[object Object]\":\n              // Check if it's an expref.  If it has, it's been\n              // tagged with a jmespathType attr of 'Expref';\n              if (obj.jmespathType === TOK_EXPREF) {\n                return TYPE_EXPREF;\n              } else {\n                return TYPE_OBJECT;\n              }\n        }\n    },\n\n    _functionStartsWith: function(resolvedArgs) {\n        return resolvedArgs[0].lastIndexOf(resolvedArgs[1]) === 0;\n    },\n\n    _functionEndsWith: function(resolvedArgs) {\n        var searchStr = resolvedArgs[0];\n        var suffix = resolvedArgs[1];\n        return searchStr.indexOf(suffix, searchStr.length - suffix.length) !== -1;\n    },\n\n    _functionReverse: function(resolvedArgs) {\n        var typeName = this._getTypeName(resolvedArgs[0]);\n        if (typeName === TYPE_STRING) {\n          var originalStr = resolvedArgs[0];\n          var reversedStr = \"\";\n          for (var i = originalStr.length - 1; i >= 0; i--) {\n              reversedStr += originalStr[i];\n          }\n          return reversedStr;\n        } else {\n          var reversedArray = resolvedArgs[0].slice(0);\n          reversedArray.reverse();\n          return reversedArray;\n        }\n    },\n\n    _functionAbs: function(resolvedArgs) {\n      return Math.abs(resolvedArgs[0]);\n    },\n\n    _functionCeil: function(resolvedArgs) {\n        return Math.ceil(resolvedArgs[0]);\n    },\n\n    _functionAvg: function(resolvedArgs) {\n        var sum = 0;\n        var inputArray = resolvedArgs[0];\n        for (var i = 0; i < inputArray.length; i++) {\n            sum += inputArray[i];\n        }\n        return sum / inputArray.length;\n    },\n\n    _functionContains: function(resolvedArgs) {\n        return resolvedArgs[0].indexOf(resolvedArgs[1]) >= 0;\n    },\n\n    _functionFloor: function(resolvedArgs) {\n        return Math.floor(resolvedArgs[0]);\n    },\n\n    _functionLength: function(resolvedArgs) {\n       if (!isObject(resolvedArgs[0])) {\n         return resolvedArgs[0].length;\n       } else {\n         // As far as I can tell, there's no way to get the length\n         // of an object without O(n) iteration through the object.\n         return Object.keys(resolvedArgs[0]).length;\n       }\n    },\n\n    _functionMap: function(resolvedArgs) {\n      var mapped = [];\n      var interpreter = this._interpreter;\n      var exprefNode = resolvedArgs[0];\n      var elements = resolvedArgs[1];\n      for (var i = 0; i < elements.length; i++) {\n          mapped.push(interpreter.visit(exprefNode, elements[i]));\n      }\n      return mapped;\n    },\n\n    _functionMerge: function(resolvedArgs) {\n      var merged = {};\n      for (var i = 0; i < resolvedArgs.length; i++) {\n        var current = resolvedArgs[i];\n        for (var key in current) {\n          merged[key] = current[key];\n        }\n      }\n      return merged;\n    },\n\n    _functionMax: function(resolvedArgs) {\n      if (resolvedArgs[0].length > 0) {\n        var typeName = this._getTypeName(resolvedArgs[0][0]);\n        if (typeName === TYPE_NUMBER) {\n          return Math.max.apply(Math, resolvedArgs[0]);\n        } else {\n          var elements = resolvedArgs[0];\n          var maxElement = elements[0];\n          for (var i = 1; i < elements.length; i++) {\n              if (maxElement.localeCompare(elements[i]) < 0) {\n                  maxElement = elements[i];\n              }\n          }\n          return maxElement;\n        }\n      } else {\n          return null;\n      }\n    },\n\n    _functionMin: function(resolvedArgs) {\n      if (resolvedArgs[0].length > 0) {\n        var typeName = this._getTypeName(resolvedArgs[0][0]);\n        if (typeName === TYPE_NUMBER) {\n          return Math.min.apply(Math, resolvedArgs[0]);\n        } else {\n          var elements = resolvedArgs[0];\n          var minElement = elements[0];\n          for (var i = 1; i < elements.length; i++) {\n              if (elements[i].localeCompare(minElement) < 0) {\n                  minElement = elements[i];\n              }\n          }\n          return minElement;\n        }\n      } else {\n        return null;\n      }\n    },\n\n    _functionSum: function(resolvedArgs) {\n      var sum = 0;\n      var listToSum = resolvedArgs[0];\n      for (var i = 0; i < listToSum.length; i++) {\n        sum += listToSum[i];\n      }\n      return sum;\n    },\n\n    _functionType: function(resolvedArgs) {\n        switch (this._getTypeName(resolvedArgs[0])) {\n          case TYPE_NUMBER:\n            return \"number\";\n          case TYPE_STRING:\n            return \"string\";\n          case TYPE_ARRAY:\n            return \"array\";\n          case TYPE_OBJECT:\n            return \"object\";\n          case TYPE_BOOLEAN:\n            return \"boolean\";\n          case TYPE_EXPREF:\n            return \"expref\";\n          case TYPE_NULL:\n            return \"null\";\n        }\n    },\n\n    _functionKeys: function(resolvedArgs) {\n        return Object.keys(resolvedArgs[0]);\n    },\n\n    _functionValues: function(resolvedArgs) {\n        var obj = resolvedArgs[0];\n        var keys = Object.keys(obj);\n        var values = [];\n        for (var i = 0; i < keys.length; i++) {\n            values.push(obj[keys[i]]);\n        }\n        return values;\n    },\n\n    _functionJoin: function(resolvedArgs) {\n        var joinChar = resolvedArgs[0];\n        var listJoin = resolvedArgs[1];\n        return listJoin.join(joinChar);\n    },\n\n    _functionToArray: function(resolvedArgs) {\n        if (this._getTypeName(resolvedArgs[0]) === TYPE_ARRAY) {\n            return resolvedArgs[0];\n        } else {\n            return [resolvedArgs[0]];\n        }\n    },\n\n    _functionToString: function(resolvedArgs) {\n        if (this._getTypeName(resolvedArgs[0]) === TYPE_STRING) {\n            return resolvedArgs[0];\n        } else {\n            return JSON.stringify(resolvedArgs[0]);\n        }\n    },\n\n    _functionToNumber: function(resolvedArgs) {\n        var typeName = this._getTypeName(resolvedArgs[0]);\n        var convertedValue;\n        if (typeName === TYPE_NUMBER) {\n            return resolvedArgs[0];\n        } else if (typeName === TYPE_STRING) {\n            convertedValue = +resolvedArgs[0];\n            if (!isNaN(convertedValue)) {\n                return convertedValue;\n            }\n        }\n        return null;\n    },\n\n    _functionNotNull: function(resolvedArgs) {\n        for (var i = 0; i < resolvedArgs.length; i++) {\n            if (this._getTypeName(resolvedArgs[i]) !== TYPE_NULL) {\n                return resolvedArgs[i];\n            }\n        }\n        return null;\n    },\n\n    _functionSort: function(resolvedArgs) {\n        var sortedArray = resolvedArgs[0].slice(0);\n        sortedArray.sort();\n        return sortedArray;\n    },\n\n    _functionSortBy: function(resolvedArgs) {\n        var sortedArray = resolvedArgs[0].slice(0);\n        if (sortedArray.length === 0) {\n            return sortedArray;\n        }\n        var interpreter = this._interpreter;\n        var exprefNode = resolvedArgs[1];\n        var requiredType = this._getTypeName(\n            interpreter.visit(exprefNode, sortedArray[0]));\n        if ([TYPE_NUMBER, TYPE_STRING].indexOf(requiredType) < 0) {\n            throw new Error(\"TypeError\");\n        }\n        var that = this;\n        // In order to get a stable sort out of an unstable\n        // sort algorithm, we decorate/sort/undecorate (DSU)\n        // by creating a new list of [index, element] pairs.\n        // In the cmp function, if the evaluated elements are\n        // equal, then the index will be used as the tiebreaker.\n        // After the decorated list has been sorted, it will be\n        // undecorated to extract the original elements.\n        var decorated = [];\n        for (var i = 0; i < sortedArray.length; i++) {\n          decorated.push([i, sortedArray[i]]);\n        }\n        decorated.sort(function(a, b) {\n          var exprA = interpreter.visit(exprefNode, a[1]);\n          var exprB = interpreter.visit(exprefNode, b[1]);\n          if (that._getTypeName(exprA) !== requiredType) {\n              throw new Error(\n                  \"TypeError: expected \" + requiredType + \", received \" +\n                  that._getTypeName(exprA));\n          } else if (that._getTypeName(exprB) !== requiredType) {\n              throw new Error(\n                  \"TypeError: expected \" + requiredType + \", received \" +\n                  that._getTypeName(exprB));\n          }\n          if (exprA > exprB) {\n            return 1;\n          } else if (exprA < exprB) {\n            return -1;\n          } else {\n            // If they're equal compare the items by their\n            // order to maintain relative order of equal keys\n            // (i.e. to get a stable sort).\n            return a[0] - b[0];\n          }\n        });\n        // Undecorate: extract out the original list elements.\n        for (var j = 0; j < decorated.length; j++) {\n          sortedArray[j] = decorated[j][1];\n        }\n        return sortedArray;\n    },\n\n    _functionMaxBy: function(resolvedArgs) {\n      var exprefNode = resolvedArgs[1];\n      var resolvedArray = resolvedArgs[0];\n      var keyFunction = this.createKeyFunction(exprefNode, [TYPE_NUMBER, TYPE_STRING]);\n      var maxNumber = -Infinity;\n      var maxRecord;\n      var current;\n      for (var i = 0; i < resolvedArray.length; i++) {\n        current = keyFunction(resolvedArray[i]);\n        if (current > maxNumber) {\n          maxNumber = current;\n          maxRecord = resolvedArray[i];\n        }\n      }\n      return maxRecord;\n    },\n\n    _functionMinBy: function(resolvedArgs) {\n      var exprefNode = resolvedArgs[1];\n      var resolvedArray = resolvedArgs[0];\n      var keyFunction = this.createKeyFunction(exprefNode, [TYPE_NUMBER, TYPE_STRING]);\n      var minNumber = Infinity;\n      var minRecord;\n      var current;\n      for (var i = 0; i < resolvedArray.length; i++) {\n        current = keyFunction(resolvedArray[i]);\n        if (current < minNumber) {\n          minNumber = current;\n          minRecord = resolvedArray[i];\n        }\n      }\n      return minRecord;\n    },\n\n    createKeyFunction: function(exprefNode, allowedTypes) {\n      var that = this;\n      var interpreter = this._interpreter;\n      var keyFunc = function(x) {\n        var current = interpreter.visit(exprefNode, x);\n        if (allowedTypes.indexOf(that._getTypeName(current)) < 0) {\n          var msg = \"TypeError: expected one of \" + allowedTypes +\n                    \", received \" + that._getTypeName(current);\n          throw new Error(msg);\n        }\n        return current;\n      };\n      return keyFunc;\n    }\n\n  };\n\n  function compile(stream) {\n    var parser = new Parser();\n    var ast = parser.parse(stream);\n    return ast;\n  }\n\n  function tokenize(stream) {\n      var lexer = new Lexer();\n      return lexer.tokenize(stream);\n  }\n\n  function search(data, expression) {\n      var parser = new Parser();\n      // This needs to be improved.  Both the interpreter and runtime depend on\n      // each other.  The runtime needs the interpreter to support exprefs.\n      // There's likely a clean way to avoid the cyclic dependency.\n      var runtime = new Runtime();\n      var interpreter = new TreeInterpreter(runtime);\n      runtime._interpreter = interpreter;\n      var node = parser.parse(expression);\n      return interpreter.search(node, data);\n  }\n\n  exports.tokenize = tokenize;\n  exports.compile = compile;\n  exports.search = search;\n  exports.strictDeepEqual = strictDeepEqual;\n})(typeof exports === \"undefined\" ? this.jmespath = {} : exports);\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  exports.stripBOM = function(str) {\n    if (str[0] === '\\uFEFF') {\n      return str.substring(1);\n    } else {\n      return str;\n    }\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var builder, defaults, escapeCDATA, requiresCDATA, wrapCDATA,\n    hasProp = {}.hasOwnProperty;\n\n  builder = require('xmlbuilder');\n\n  defaults = require('./defaults').defaults;\n\n  requiresCDATA = function(entry) {\n    return typeof entry === \"string\" && (entry.indexOf('&') >= 0 || entry.indexOf('>') >= 0 || entry.indexOf('<') >= 0);\n  };\n\n  wrapCDATA = function(entry) {\n    return \"<![CDATA[\" + (escapeCDATA(entry)) + \"]]>\";\n  };\n\n  escapeCDATA = function(entry) {\n    return entry.replace(']]>', ']]]]><![CDATA[>');\n  };\n\n  exports.Builder = (function() {\n    function Builder(opts) {\n      var key, ref, value;\n      this.options = {};\n      ref = defaults[\"0.2\"];\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this.options[key] = value;\n      }\n      for (key in opts) {\n        if (!hasProp.call(opts, key)) continue;\n        value = opts[key];\n        this.options[key] = value;\n      }\n    }\n\n    Builder.prototype.buildObject = function(rootObj) {\n      var attrkey, charkey, render, rootElement, rootName;\n      attrkey = this.options.attrkey;\n      charkey = this.options.charkey;\n      if ((Object.keys(rootObj).length === 1) && (this.options.rootName === defaults['0.2'].rootName)) {\n        rootName = Object.keys(rootObj)[0];\n        rootObj = rootObj[rootName];\n      } else {\n        rootName = this.options.rootName;\n      }\n      render = (function(_this) {\n        return function(element, obj) {\n          var attr, child, entry, index, key, value;\n          if (typeof obj !== 'object') {\n            if (_this.options.cdata && requiresCDATA(obj)) {\n              element.raw(wrapCDATA(obj));\n            } else {\n              element.txt(obj);\n            }\n          } else if (Array.isArray(obj)) {\n            for (index in obj) {\n              if (!hasProp.call(obj, index)) continue;\n              child = obj[index];\n              for (key in child) {\n                entry = child[key];\n                element = render(element.ele(key), entry).up();\n              }\n            }\n          } else {\n            for (key in obj) {\n              if (!hasProp.call(obj, key)) continue;\n              child = obj[key];\n              if (key === attrkey) {\n                if (typeof child === \"object\") {\n                  for (attr in child) {\n                    value = child[attr];\n                    element = element.att(attr, value);\n                  }\n                }\n              } else if (key === charkey) {\n                if (_this.options.cdata && requiresCDATA(child)) {\n                  element = element.raw(wrapCDATA(child));\n                } else {\n                  element = element.txt(child);\n                }\n              } else if (Array.isArray(child)) {\n                for (index in child) {\n                  if (!hasProp.call(child, index)) continue;\n                  entry = child[index];\n                  if (typeof entry === 'string') {\n                    if (_this.options.cdata && requiresCDATA(entry)) {\n                      element = element.ele(key).raw(wrapCDATA(entry)).up();\n                    } else {\n                      element = element.ele(key, entry).up();\n                    }\n                  } else {\n                    element = render(element.ele(key), entry).up();\n                  }\n                }\n              } else if (typeof child === \"object\") {\n                element = render(element.ele(key), child).up();\n              } else {\n                if (typeof child === 'string' && _this.options.cdata && requiresCDATA(child)) {\n                  element = element.ele(key).raw(wrapCDATA(child)).up();\n                } else {\n                  if (child == null) {\n                    child = '';\n                  }\n                  element = element.ele(key, child.toString()).up();\n                }\n              }\n            }\n          }\n          return element;\n        };\n      })(this);\n      rootElement = builder.create(rootName, this.options.xmldec, this.options.doctype, {\n        headless: this.options.headless,\n        allowSurrogateChars: this.options.allowSurrogateChars\n      });\n      return render(rootElement, rootObj).end(this.options.renderOpts);\n    };\n\n    return Builder;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  exports.defaults = {\n    \"0.1\": {\n      explicitCharkey: false,\n      trim: true,\n      normalize: true,\n      normalizeTags: false,\n      attrkey: \"@\",\n      charkey: \"#\",\n      explicitArray: false,\n      ignoreAttrs: false,\n      mergeAttrs: false,\n      explicitRoot: false,\n      validator: null,\n      xmlns: false,\n      explicitChildren: false,\n      childkey: '@@',\n      charsAsChildren: false,\n      includeWhiteChars: false,\n      async: false,\n      strict: true,\n      attrNameProcessors: null,\n      attrValueProcessors: null,\n      tagNameProcessors: null,\n      valueProcessors: null,\n      emptyTag: ''\n    },\n    \"0.2\": {\n      explicitCharkey: false,\n      trim: false,\n      normalize: false,\n      normalizeTags: false,\n      attrkey: \"$\",\n      charkey: \"_\",\n      explicitArray: true,\n      ignoreAttrs: false,\n      mergeAttrs: false,\n      explicitRoot: true,\n      validator: null,\n      xmlns: false,\n      explicitChildren: false,\n      preserveChildrenOrder: false,\n      childkey: '$$',\n      charsAsChildren: false,\n      includeWhiteChars: false,\n      async: false,\n      strict: true,\n      attrNameProcessors: null,\n      attrValueProcessors: null,\n      tagNameProcessors: null,\n      valueProcessors: null,\n      rootName: 'root',\n      xmldec: {\n        'version': '1.0',\n        'encoding': 'UTF-8',\n        'standalone': true\n      },\n      doctype: null,\n      renderOpts: {\n        'pretty': true,\n        'indent': '  ',\n        'newline': '\\n'\n      },\n      headless: false,\n      chunkSize: 10000,\n      emptyTag: '',\n      cdata: false\n    }\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var bom, defaults, events, isEmpty, processItem, processors, sax, setImmediate,\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  sax = require('sax');\n\n  events = require('events');\n\n  bom = require('./bom');\n\n  processors = require('./processors');\n\n  setImmediate = require('timers').setImmediate;\n\n  defaults = require('./defaults').defaults;\n\n  isEmpty = function(thing) {\n    return typeof thing === \"object\" && (thing != null) && Object.keys(thing).length === 0;\n  };\n\n  processItem = function(processors, item, key) {\n    var i, len, process;\n    for (i = 0, len = processors.length; i < len; i++) {\n      process = processors[i];\n      item = process(item, key);\n    }\n    return item;\n  };\n\n  exports.Parser = (function(superClass) {\n    extend(Parser, superClass);\n\n    function Parser(opts) {\n      this.parseString = bind(this.parseString, this);\n      this.reset = bind(this.reset, this);\n      this.assignOrPush = bind(this.assignOrPush, this);\n      this.processAsync = bind(this.processAsync, this);\n      var key, ref, value;\n      if (!(this instanceof exports.Parser)) {\n        return new exports.Parser(opts);\n      }\n      this.options = {};\n      ref = defaults[\"0.2\"];\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this.options[key] = value;\n      }\n      for (key in opts) {\n        if (!hasProp.call(opts, key)) continue;\n        value = opts[key];\n        this.options[key] = value;\n      }\n      if (this.options.xmlns) {\n        this.options.xmlnskey = this.options.attrkey + \"ns\";\n      }\n      if (this.options.normalizeTags) {\n        if (!this.options.tagNameProcessors) {\n          this.options.tagNameProcessors = [];\n        }\n        this.options.tagNameProcessors.unshift(processors.normalize);\n      }\n      this.reset();\n    }\n\n    Parser.prototype.processAsync = function() {\n      var chunk, err;\n      try {\n        if (this.remaining.length <= this.options.chunkSize) {\n          chunk = this.remaining;\n          this.remaining = '';\n          this.saxParser = this.saxParser.write(chunk);\n          return this.saxParser.close();\n        } else {\n          chunk = this.remaining.substr(0, this.options.chunkSize);\n          this.remaining = this.remaining.substr(this.options.chunkSize, this.remaining.length);\n          this.saxParser = this.saxParser.write(chunk);\n          return setImmediate(this.processAsync);\n        }\n      } catch (error1) {\n        err = error1;\n        if (!this.saxParser.errThrown) {\n          this.saxParser.errThrown = true;\n          return this.emit(err);\n        }\n      }\n    };\n\n    Parser.prototype.assignOrPush = function(obj, key, newValue) {\n      if (!(key in obj)) {\n        if (!this.options.explicitArray) {\n          return obj[key] = newValue;\n        } else {\n          return obj[key] = [newValue];\n        }\n      } else {\n        if (!(obj[key] instanceof Array)) {\n          obj[key] = [obj[key]];\n        }\n        return obj[key].push(newValue);\n      }\n    };\n\n    Parser.prototype.reset = function() {\n      var attrkey, charkey, ontext, stack;\n      this.removeAllListeners();\n      this.saxParser = sax.parser(this.options.strict, {\n        trim: false,\n        normalize: false,\n        xmlns: this.options.xmlns\n      });\n      this.saxParser.errThrown = false;\n      this.saxParser.onerror = (function(_this) {\n        return function(error) {\n          _this.saxParser.resume();\n          if (!_this.saxParser.errThrown) {\n            _this.saxParser.errThrown = true;\n            return _this.emit(\"error\", error);\n          }\n        };\n      })(this);\n      this.saxParser.onend = (function(_this) {\n        return function() {\n          if (!_this.saxParser.ended) {\n            _this.saxParser.ended = true;\n            return _this.emit(\"end\", _this.resultObject);\n          }\n        };\n      })(this);\n      this.saxParser.ended = false;\n      this.EXPLICIT_CHARKEY = this.options.explicitCharkey;\n      this.resultObject = null;\n      stack = [];\n      attrkey = this.options.attrkey;\n      charkey = this.options.charkey;\n      this.saxParser.onopentag = (function(_this) {\n        return function(node) {\n          var key, newValue, obj, processedKey, ref;\n          obj = {};\n          obj[charkey] = \"\";\n          if (!_this.options.ignoreAttrs) {\n            ref = node.attributes;\n            for (key in ref) {\n              if (!hasProp.call(ref, key)) continue;\n              if (!(attrkey in obj) && !_this.options.mergeAttrs) {\n                obj[attrkey] = {};\n              }\n              newValue = _this.options.attrValueProcessors ? processItem(_this.options.attrValueProcessors, node.attributes[key], key) : node.attributes[key];\n              processedKey = _this.options.attrNameProcessors ? processItem(_this.options.attrNameProcessors, key) : key;\n              if (_this.options.mergeAttrs) {\n                _this.assignOrPush(obj, processedKey, newValue);\n              } else {\n                obj[attrkey][processedKey] = newValue;\n              }\n            }\n          }\n          obj[\"#name\"] = _this.options.tagNameProcessors ? processItem(_this.options.tagNameProcessors, node.name) : node.name;\n          if (_this.options.xmlns) {\n            obj[_this.options.xmlnskey] = {\n              uri: node.uri,\n              local: node.local\n            };\n          }\n          return stack.push(obj);\n        };\n      })(this);\n      this.saxParser.onclosetag = (function(_this) {\n        return function() {\n          var cdata, emptyStr, key, node, nodeName, obj, objClone, old, s, xpath;\n          obj = stack.pop();\n          nodeName = obj[\"#name\"];\n          if (!_this.options.explicitChildren || !_this.options.preserveChildrenOrder) {\n            delete obj[\"#name\"];\n          }\n          if (obj.cdata === true) {\n            cdata = obj.cdata;\n            delete obj.cdata;\n          }\n          s = stack[stack.length - 1];\n          if (obj[charkey].match(/^\\s*$/) && !cdata) {\n            emptyStr = obj[charkey];\n            delete obj[charkey];\n          } else {\n            if (_this.options.trim) {\n              obj[charkey] = obj[charkey].trim();\n            }\n            if (_this.options.normalize) {\n              obj[charkey] = obj[charkey].replace(/\\s{2,}/g, \" \").trim();\n            }\n            obj[charkey] = _this.options.valueProcessors ? processItem(_this.options.valueProcessors, obj[charkey], nodeName) : obj[charkey];\n            if (Object.keys(obj).length === 1 && charkey in obj && !_this.EXPLICIT_CHARKEY) {\n              obj = obj[charkey];\n            }\n          }\n          if (isEmpty(obj)) {\n            obj = _this.options.emptyTag !== '' ? _this.options.emptyTag : emptyStr;\n          }\n          if (_this.options.validator != null) {\n            xpath = \"/\" + ((function() {\n              var i, len, results;\n              results = [];\n              for (i = 0, len = stack.length; i < len; i++) {\n                node = stack[i];\n                results.push(node[\"#name\"]);\n              }\n              return results;\n            })()).concat(nodeName).join(\"/\");\n            (function() {\n              var err;\n              try {\n                return obj = _this.options.validator(xpath, s && s[nodeName], obj);\n              } catch (error1) {\n                err = error1;\n                return _this.emit(\"error\", err);\n              }\n            })();\n          }\n          if (_this.options.explicitChildren && !_this.options.mergeAttrs && typeof obj === 'object') {\n            if (!_this.options.preserveChildrenOrder) {\n              node = {};\n              if (_this.options.attrkey in obj) {\n                node[_this.options.attrkey] = obj[_this.options.attrkey];\n                delete obj[_this.options.attrkey];\n              }\n              if (!_this.options.charsAsChildren && _this.options.charkey in obj) {\n                node[_this.options.charkey] = obj[_this.options.charkey];\n                delete obj[_this.options.charkey];\n              }\n              if (Object.getOwnPropertyNames(obj).length > 0) {\n                node[_this.options.childkey] = obj;\n              }\n              obj = node;\n            } else if (s) {\n              s[_this.options.childkey] = s[_this.options.childkey] || [];\n              objClone = {};\n              for (key in obj) {\n                if (!hasProp.call(obj, key)) continue;\n                objClone[key] = obj[key];\n              }\n              s[_this.options.childkey].push(objClone);\n              delete obj[\"#name\"];\n              if (Object.keys(obj).length === 1 && charkey in obj && !_this.EXPLICIT_CHARKEY) {\n                obj = obj[charkey];\n              }\n            }\n          }\n          if (stack.length > 0) {\n            return _this.assignOrPush(s, nodeName, obj);\n          } else {\n            if (_this.options.explicitRoot) {\n              old = obj;\n              obj = {};\n              obj[nodeName] = old;\n            }\n            _this.resultObject = obj;\n            _this.saxParser.ended = true;\n            return _this.emit(\"end\", _this.resultObject);\n          }\n        };\n      })(this);\n      ontext = (function(_this) {\n        return function(text) {\n          var charChild, s;\n          s = stack[stack.length - 1];\n          if (s) {\n            s[charkey] += text;\n            if (_this.options.explicitChildren && _this.options.preserveChildrenOrder && _this.options.charsAsChildren && (_this.options.includeWhiteChars || text.replace(/\\\\n/g, '').trim() !== '')) {\n              s[_this.options.childkey] = s[_this.options.childkey] || [];\n              charChild = {\n                '#name': '__text__'\n              };\n              charChild[charkey] = text;\n              if (_this.options.normalize) {\n                charChild[charkey] = charChild[charkey].replace(/\\s{2,}/g, \" \").trim();\n              }\n              s[_this.options.childkey].push(charChild);\n            }\n            return s;\n          }\n        };\n      })(this);\n      this.saxParser.ontext = ontext;\n      return this.saxParser.oncdata = (function(_this) {\n        return function(text) {\n          var s;\n          s = ontext(text);\n          if (s) {\n            return s.cdata = true;\n          }\n        };\n      })(this);\n    };\n\n    Parser.prototype.parseString = function(str, cb) {\n      var err;\n      if ((cb != null) && typeof cb === \"function\") {\n        this.on(\"end\", function(result) {\n          this.reset();\n          return cb(null, result);\n        });\n        this.on(\"error\", function(err) {\n          this.reset();\n          return cb(err);\n        });\n      }\n      try {\n        str = str.toString();\n        if (str.trim() === '') {\n          this.emit(\"end\", null);\n          return true;\n        }\n        str = bom.stripBOM(str);\n        if (this.options.async) {\n          this.remaining = str;\n          setImmediate(this.processAsync);\n          return this.saxParser;\n        }\n        return this.saxParser.write(str).close();\n      } catch (error1) {\n        err = error1;\n        if (!(this.saxParser.errThrown || this.saxParser.ended)) {\n          this.emit('error', err);\n          return this.saxParser.errThrown = true;\n        } else if (this.saxParser.ended) {\n          throw err;\n        }\n      }\n    };\n\n    return Parser;\n\n  })(events.EventEmitter);\n\n  exports.parseString = function(str, a, b) {\n    var cb, options, parser;\n    if (b != null) {\n      if (typeof b === 'function') {\n        cb = b;\n      }\n      if (typeof a === 'object') {\n        options = a;\n      }\n    } else {\n      if (typeof a === 'function') {\n        cb = a;\n      }\n      options = {};\n    }\n    parser = new exports.Parser(options);\n    return parser.parseString(str, cb);\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var prefixMatch;\n\n  prefixMatch = new RegExp(/(?!xmlns)^.*:/);\n\n  exports.normalize = function(str) {\n    return str.toLowerCase();\n  };\n\n  exports.firstCharLowerCase = function(str) {\n    return str.charAt(0).toLowerCase() + str.slice(1);\n  };\n\n  exports.stripPrefix = function(str) {\n    return str.replace(prefixMatch, '');\n  };\n\n  exports.parseNumbers = function(str) {\n    if (!isNaN(str)) {\n      str = str % 1 === 0 ? parseInt(str, 10) : parseFloat(str);\n    }\n    return str;\n  };\n\n  exports.parseBooleans = function(str) {\n    if (/^(?:true|false)$/i.test(str)) {\n      str = str.toLowerCase() === 'true';\n    }\n    return str;\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var builder, defaults, parser, processors,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  defaults = require('./defaults');\n\n  builder = require('./builder');\n\n  parser = require('./parser');\n\n  processors = require('./processors');\n\n  exports.defaults = defaults.defaults;\n\n  exports.processors = processors;\n\n  exports.ValidationError = (function(superClass) {\n    extend(ValidationError, superClass);\n\n    function ValidationError(message) {\n      this.message = message;\n    }\n\n    return ValidationError;\n\n  })(Error);\n\n  exports.Builder = builder.Builder;\n\n  exports.Parser = parser.Parser;\n\n  exports.parseString = parser.parseString;\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var assign, isArray, isEmpty, isFunction, isObject, isPlainObject,\n    slice = [].slice,\n    hasProp = {}.hasOwnProperty;\n\n  assign = function() {\n    var i, key, len, source, sources, target;\n    target = arguments[0], sources = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    if (isFunction(Object.assign)) {\n      Object.assign.apply(null, arguments);\n    } else {\n      for (i = 0, len = sources.length; i < len; i++) {\n        source = sources[i];\n        if (source != null) {\n          for (key in source) {\n            if (!hasProp.call(source, key)) continue;\n            target[key] = source[key];\n          }\n        }\n      }\n    }\n    return target;\n  };\n\n  isFunction = function(val) {\n    return !!val && Object.prototype.toString.call(val) === '[object Function]';\n  };\n\n  isObject = function(val) {\n    var ref;\n    return !!val && ((ref = typeof val) === 'function' || ref === 'object');\n  };\n\n  isArray = function(val) {\n    if (isFunction(Array.isArray)) {\n      return Array.isArray(val);\n    } else {\n      return Object.prototype.toString.call(val) === '[object Array]';\n    }\n  };\n\n  isEmpty = function(val) {\n    var key;\n    if (isArray(val)) {\n      return !val.length;\n    } else {\n      for (key in val) {\n        if (!hasProp.call(val, key)) continue;\n        return false;\n      }\n      return true;\n    }\n  };\n\n  isPlainObject = function(val) {\n    var ctor, proto;\n    return isObject(val) && (proto = Object.getPrototypeOf(val)) && (ctor = proto.constructor) && (typeof ctor === 'function') && (ctor instanceof ctor) && (Function.prototype.toString.call(ctor) === Function.prototype.toString.call(Object));\n  };\n\n  module.exports.assign = assign;\n\n  module.exports.isFunction = isFunction;\n\n  module.exports.isObject = isObject;\n\n  module.exports.isArray = isArray;\n\n  module.exports.isEmpty = isEmpty;\n\n  module.exports.isPlainObject = isPlainObject;\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLAttribute;\n\n  module.exports = XMLAttribute = (function() {\n    function XMLAttribute(parent, name, value) {\n      this.options = parent.options;\n      this.stringify = parent.stringify;\n      if (name == null) {\n        throw new Error(\"Missing attribute name of element \" + parent.name);\n      }\n      if (value == null) {\n        throw new Error(\"Missing attribute value for attribute \" + name + \" of element \" + parent.name);\n      }\n      this.name = this.stringify.attName(name);\n      this.value = this.stringify.attValue(value);\n    }\n\n    XMLAttribute.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLAttribute.prototype.toString = function(options) {\n      return this.options.writer.set(options).attribute(this);\n    };\n\n    return XMLAttribute;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLCData, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLCData = (function(superClass) {\n    extend(XMLCData, superClass);\n\n    function XMLCData(parent, text) {\n      XMLCData.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing CDATA text\");\n      }\n      this.text = this.stringify.cdata(text);\n    }\n\n    XMLCData.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLCData.prototype.toString = function(options) {\n      return this.options.writer.set(options).cdata(this);\n    };\n\n    return XMLCData;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLComment, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLComment = (function(superClass) {\n    extend(XMLComment, superClass);\n\n    function XMLComment(parent, text) {\n      XMLComment.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing comment text\");\n      }\n      this.text = this.stringify.comment(text);\n    }\n\n    XMLComment.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLComment.prototype.toString = function(options) {\n      return this.options.writer.set(options).comment(this);\n    };\n\n    return XMLComment;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDTDAttList, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLDTDAttList = (function(superClass) {\n    extend(XMLDTDAttList, superClass);\n\n    function XMLDTDAttList(parent, elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      XMLDTDAttList.__super__.constructor.call(this, parent);\n      if (elementName == null) {\n        throw new Error(\"Missing DTD element name\");\n      }\n      if (attributeName == null) {\n        throw new Error(\"Missing DTD attribute name\");\n      }\n      if (!attributeType) {\n        throw new Error(\"Missing DTD attribute type\");\n      }\n      if (!defaultValueType) {\n        throw new Error(\"Missing DTD attribute default\");\n      }\n      if (defaultValueType.indexOf('#') !== 0) {\n        defaultValueType = '#' + defaultValueType;\n      }\n      if (!defaultValueType.match(/^(#REQUIRED|#IMPLIED|#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Invalid default value type; expected: #REQUIRED, #IMPLIED, #FIXED or #DEFAULT\");\n      }\n      if (defaultValue && !defaultValueType.match(/^(#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Default value only applies to #FIXED or #DEFAULT\");\n      }\n      this.elementName = this.stringify.eleName(elementName);\n      this.attributeName = this.stringify.attName(attributeName);\n      this.attributeType = this.stringify.dtdAttType(attributeType);\n      this.defaultValue = this.stringify.dtdAttDefault(defaultValue);\n      this.defaultValueType = defaultValueType;\n    }\n\n    XMLDTDAttList.prototype.toString = function(options) {\n      return this.options.writer.set(options).dtdAttList(this);\n    };\n\n    return XMLDTDAttList;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDTDElement, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLDTDElement = (function(superClass) {\n    extend(XMLDTDElement, superClass);\n\n    function XMLDTDElement(parent, name, value) {\n      XMLDTDElement.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing DTD element name\");\n      }\n      if (!value) {\n        value = '(#PCDATA)';\n      }\n      if (Array.isArray(value)) {\n        value = '(' + value.join(',') + ')';\n      }\n      this.name = this.stringify.eleName(name);\n      this.value = this.stringify.dtdElementValue(value);\n    }\n\n    XMLDTDElement.prototype.toString = function(options) {\n      return this.options.writer.set(options).dtdElement(this);\n    };\n\n    return XMLDTDElement;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDTDEntity, XMLNode, isObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isObject = require('./Utility').isObject;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLDTDEntity = (function(superClass) {\n    extend(XMLDTDEntity, superClass);\n\n    function XMLDTDEntity(parent, pe, name, value) {\n      XMLDTDEntity.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing entity name\");\n      }\n      if (value == null) {\n        throw new Error(\"Missing entity value\");\n      }\n      this.pe = !!pe;\n      this.name = this.stringify.eleName(name);\n      if (!isObject(value)) {\n        this.value = this.stringify.dtdEntityValue(value);\n      } else {\n        if (!value.pubID && !value.sysID) {\n          throw new Error(\"Public and/or system identifiers are required for an external entity\");\n        }\n        if (value.pubID && !value.sysID) {\n          throw new Error(\"System identifier is required for a public external entity\");\n        }\n        if (value.pubID != null) {\n          this.pubID = this.stringify.dtdPubID(value.pubID);\n        }\n        if (value.sysID != null) {\n          this.sysID = this.stringify.dtdSysID(value.sysID);\n        }\n        if (value.nData != null) {\n          this.nData = this.stringify.dtdNData(value.nData);\n        }\n        if (this.pe && this.nData) {\n          throw new Error(\"Notation declaration is not allowed in a parameter entity\");\n        }\n      }\n    }\n\n    XMLDTDEntity.prototype.toString = function(options) {\n      return this.options.writer.set(options).dtdEntity(this);\n    };\n\n    return XMLDTDEntity;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDTDNotation, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLDTDNotation = (function(superClass) {\n    extend(XMLDTDNotation, superClass);\n\n    function XMLDTDNotation(parent, name, value) {\n      XMLDTDNotation.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing notation name\");\n      }\n      if (!value.pubID && !value.sysID) {\n        throw new Error(\"Public or system identifiers are required for an external entity\");\n      }\n      this.name = this.stringify.eleName(name);\n      if (value.pubID != null) {\n        this.pubID = this.stringify.dtdPubID(value.pubID);\n      }\n      if (value.sysID != null) {\n        this.sysID = this.stringify.dtdSysID(value.sysID);\n      }\n    }\n\n    XMLDTDNotation.prototype.toString = function(options) {\n      return this.options.writer.set(options).dtdNotation(this);\n    };\n\n    return XMLDTDNotation;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDeclaration, XMLNode, isObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isObject = require('./Utility').isObject;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLDeclaration = (function(superClass) {\n    extend(XMLDeclaration, superClass);\n\n    function XMLDeclaration(parent, version, encoding, standalone) {\n      var ref;\n      XMLDeclaration.__super__.constructor.call(this, parent);\n      if (isObject(version)) {\n        ref = version, version = ref.version, encoding = ref.encoding, standalone = ref.standalone;\n      }\n      if (!version) {\n        version = '1.0';\n      }\n      this.version = this.stringify.xmlVersion(version);\n      if (encoding != null) {\n        this.encoding = this.stringify.xmlEncoding(encoding);\n      }\n      if (standalone != null) {\n        this.standalone = this.stringify.xmlStandalone(standalone);\n      }\n    }\n\n    XMLDeclaration.prototype.toString = function(options) {\n      return this.options.writer.set(options).declaration(this);\n    };\n\n    return XMLDeclaration;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDocType, XMLNode, isObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isObject = require('./Utility').isObject;\n\n  XMLNode = require('./XMLNode');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  module.exports = XMLDocType = (function(superClass) {\n    extend(XMLDocType, superClass);\n\n    function XMLDocType(parent, pubID, sysID) {\n      var ref, ref1;\n      XMLDocType.__super__.constructor.call(this, parent);\n      this.documentObject = parent;\n      if (isObject(pubID)) {\n        ref = pubID, pubID = ref.pubID, sysID = ref.sysID;\n      }\n      if (sysID == null) {\n        ref1 = [pubID, sysID], sysID = ref1[0], pubID = ref1[1];\n      }\n      if (pubID != null) {\n        this.pubID = this.stringify.dtdPubID(pubID);\n      }\n      if (sysID != null) {\n        this.sysID = this.stringify.dtdSysID(sysID);\n      }\n    }\n\n    XMLDocType.prototype.element = function(name, value) {\n      var child;\n      child = new XMLDTDElement(this, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.attList = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      var child;\n      child = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.entity = function(name, value) {\n      var child;\n      child = new XMLDTDEntity(this, false, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.pEntity = function(name, value) {\n      var child;\n      child = new XMLDTDEntity(this, true, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.notation = function(name, value) {\n      var child;\n      child = new XMLDTDNotation(this, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.toString = function(options) {\n      return this.options.writer.set(options).docType(this);\n    };\n\n    XMLDocType.prototype.ele = function(name, value) {\n      return this.element(name, value);\n    };\n\n    XMLDocType.prototype.att = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      return this.attList(elementName, attributeName, attributeType, defaultValueType, defaultValue);\n    };\n\n    XMLDocType.prototype.ent = function(name, value) {\n      return this.entity(name, value);\n    };\n\n    XMLDocType.prototype.pent = function(name, value) {\n      return this.pEntity(name, value);\n    };\n\n    XMLDocType.prototype.not = function(name, value) {\n      return this.notation(name, value);\n    };\n\n    XMLDocType.prototype.up = function() {\n      return this.root() || this.documentObject;\n    };\n\n    return XMLDocType;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDocument, XMLNode, XMLStringWriter, XMLStringifier, isPlainObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isPlainObject = require('./Utility').isPlainObject;\n\n  XMLNode = require('./XMLNode');\n\n  XMLStringifier = require('./XMLStringifier');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  module.exports = XMLDocument = (function(superClass) {\n    extend(XMLDocument, superClass);\n\n    function XMLDocument(options) {\n      XMLDocument.__super__.constructor.call(this, null);\n      options || (options = {});\n      if (!options.writer) {\n        options.writer = new XMLStringWriter();\n      }\n      this.options = options;\n      this.stringify = new XMLStringifier(options);\n      this.isDocument = true;\n    }\n\n    XMLDocument.prototype.end = function(writer) {\n      var writerOptions;\n      if (!writer) {\n        writer = this.options.writer;\n      } else if (isPlainObject(writer)) {\n        writerOptions = writer;\n        writer = this.options.writer.set(writerOptions);\n      }\n      return writer.document(this);\n    };\n\n    XMLDocument.prototype.toString = function(options) {\n      return this.options.writer.set(options).document(this);\n    };\n\n    return XMLDocument;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLAttribute, XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLDocumentCB, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStringWriter, XMLStringifier, XMLText, isFunction, isObject, isPlainObject, ref,\n    hasProp = {}.hasOwnProperty;\n\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction, isPlainObject = ref.isPlainObject;\n\n  XMLElement = require('./XMLElement');\n\n  XMLCData = require('./XMLCData');\n\n  XMLComment = require('./XMLComment');\n\n  XMLRaw = require('./XMLRaw');\n\n  XMLText = require('./XMLText');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  XMLAttribute = require('./XMLAttribute');\n\n  XMLStringifier = require('./XMLStringifier');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  module.exports = XMLDocumentCB = (function() {\n    function XMLDocumentCB(options, onData, onEnd) {\n      var writerOptions;\n      options || (options = {});\n      if (!options.writer) {\n        options.writer = new XMLStringWriter(options);\n      } else if (isPlainObject(options.writer)) {\n        writerOptions = options.writer;\n        options.writer = new XMLStringWriter(writerOptions);\n      }\n      this.options = options;\n      this.writer = options.writer;\n      this.stringify = new XMLStringifier(options);\n      this.onDataCallback = onData || function() {};\n      this.onEndCallback = onEnd || function() {};\n      this.currentNode = null;\n      this.currentLevel = -1;\n      this.openTags = {};\n      this.documentStarted = false;\n      this.documentCompleted = false;\n      this.root = null;\n    }\n\n    XMLDocumentCB.prototype.node = function(name, attributes, text) {\n      var ref1;\n      if (name == null) {\n        throw new Error(\"Missing node name\");\n      }\n      if (this.root && this.currentLevel === -1) {\n        throw new Error(\"Document can only have one root node\");\n      }\n      this.openCurrent();\n      name = name.valueOf();\n      if (attributes == null) {\n        attributes = {};\n      }\n      attributes = attributes.valueOf();\n      if (!isObject(attributes)) {\n        ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];\n      }\n      this.currentNode = new XMLElement(this, name, attributes);\n      this.currentNode.children = false;\n      this.currentLevel++;\n      this.openTags[this.currentLevel] = this.currentNode;\n      if (text != null) {\n        this.text(text);\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.element = function(name, attributes, text) {\n      if (this.currentNode && this.currentNode instanceof XMLDocType) {\n        return this.dtdElement.apply(this, arguments);\n      } else {\n        return this.node(name, attributes, text);\n      }\n    };\n\n    XMLDocumentCB.prototype.attribute = function(name, value) {\n      var attName, attValue;\n      if (!this.currentNode || this.currentNode.children) {\n        throw new Error(\"att() can only be used immediately after an ele() call in callback mode\");\n      }\n      if (name != null) {\n        name = name.valueOf();\n      }\n      if (isObject(name)) {\n        for (attName in name) {\n          if (!hasProp.call(name, attName)) continue;\n          attValue = name[attName];\n          this.attribute(attName, attValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        if (!this.options.skipNullAttributes || (value != null)) {\n          this.currentNode.attributes[name] = new XMLAttribute(this, name, value);\n        }\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.text = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLText(this, value);\n      this.onData(this.writer.text(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.cdata = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLCData(this, value);\n      this.onData(this.writer.cdata(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.comment = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLComment(this, value);\n      this.onData(this.writer.comment(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.raw = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLRaw(this, value);\n      this.onData(this.writer.raw(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.instruction = function(target, value) {\n      var i, insTarget, insValue, len, node;\n      this.openCurrent();\n      if (target != null) {\n        target = target.valueOf();\n      }\n      if (value != null) {\n        value = value.valueOf();\n      }\n      if (Array.isArray(target)) {\n        for (i = 0, len = target.length; i < len; i++) {\n          insTarget = target[i];\n          this.instruction(insTarget);\n        }\n      } else if (isObject(target)) {\n        for (insTarget in target) {\n          if (!hasProp.call(target, insTarget)) continue;\n          insValue = target[insTarget];\n          this.instruction(insTarget, insValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        node = new XMLProcessingInstruction(this, target, value);\n        this.onData(this.writer.processingInstruction(node, this.currentLevel + 1));\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.declaration = function(version, encoding, standalone) {\n      var node;\n      this.openCurrent();\n      if (this.documentStarted) {\n        throw new Error(\"declaration() must be the first node\");\n      }\n      node = new XMLDeclaration(this, version, encoding, standalone);\n      this.onData(this.writer.declaration(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.doctype = function(root, pubID, sysID) {\n      this.openCurrent();\n      if (root == null) {\n        throw new Error(\"Missing root node name\");\n      }\n      if (this.root) {\n        throw new Error(\"dtd() must come before the root node\");\n      }\n      this.currentNode = new XMLDocType(this, pubID, sysID);\n      this.currentNode.rootNodeName = root;\n      this.currentNode.children = false;\n      this.currentLevel++;\n      this.openTags[this.currentLevel] = this.currentNode;\n      return this;\n    };\n\n    XMLDocumentCB.prototype.dtdElement = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDElement(this, name, value);\n      this.onData(this.writer.dtdElement(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.attList = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\n      this.onData(this.writer.dtdAttList(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.entity = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDEntity(this, false, name, value);\n      this.onData(this.writer.dtdEntity(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.pEntity = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDEntity(this, true, name, value);\n      this.onData(this.writer.dtdEntity(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.notation = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDNotation(this, name, value);\n      this.onData(this.writer.dtdNotation(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.up = function() {\n      if (this.currentLevel < 0) {\n        throw new Error(\"The document node has no parent\");\n      }\n      if (this.currentNode) {\n        if (this.currentNode.children) {\n          this.closeNode(this.currentNode);\n        } else {\n          this.openNode(this.currentNode);\n        }\n        this.currentNode = null;\n      } else {\n        this.closeNode(this.openTags[this.currentLevel]);\n      }\n      delete this.openTags[this.currentLevel];\n      this.currentLevel--;\n      return this;\n    };\n\n    XMLDocumentCB.prototype.end = function() {\n      while (this.currentLevel >= 0) {\n        this.up();\n      }\n      return this.onEnd();\n    };\n\n    XMLDocumentCB.prototype.openCurrent = function() {\n      if (this.currentNode) {\n        this.currentNode.children = true;\n        return this.openNode(this.currentNode);\n      }\n    };\n\n    XMLDocumentCB.prototype.openNode = function(node) {\n      if (!node.isOpen) {\n        if (!this.root && this.currentLevel === 0 && node instanceof XMLElement) {\n          this.root = node;\n        }\n        this.onData(this.writer.openNode(node, this.currentLevel));\n        return node.isOpen = true;\n      }\n    };\n\n    XMLDocumentCB.prototype.closeNode = function(node) {\n      if (!node.isClosed) {\n        this.onData(this.writer.closeNode(node, this.currentLevel));\n        return node.isClosed = true;\n      }\n    };\n\n    XMLDocumentCB.prototype.onData = function(chunk) {\n      this.documentStarted = true;\n      return this.onDataCallback(chunk);\n    };\n\n    XMLDocumentCB.prototype.onEnd = function() {\n      this.documentCompleted = true;\n      return this.onEndCallback();\n    };\n\n    XMLDocumentCB.prototype.ele = function() {\n      return this.element.apply(this, arguments);\n    };\n\n    XMLDocumentCB.prototype.nod = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.txt = function(value) {\n      return this.text(value);\n    };\n\n    XMLDocumentCB.prototype.dat = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLDocumentCB.prototype.com = function(value) {\n      return this.comment(value);\n    };\n\n    XMLDocumentCB.prototype.ins = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLDocumentCB.prototype.dec = function(version, encoding, standalone) {\n      return this.declaration(version, encoding, standalone);\n    };\n\n    XMLDocumentCB.prototype.dtd = function(root, pubID, sysID) {\n      return this.doctype(root, pubID, sysID);\n    };\n\n    XMLDocumentCB.prototype.e = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.n = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.t = function(value) {\n      return this.text(value);\n    };\n\n    XMLDocumentCB.prototype.d = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLDocumentCB.prototype.c = function(value) {\n      return this.comment(value);\n    };\n\n    XMLDocumentCB.prototype.r = function(value) {\n      return this.raw(value);\n    };\n\n    XMLDocumentCB.prototype.i = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLDocumentCB.prototype.att = function() {\n      if (this.currentNode && this.currentNode instanceof XMLDocType) {\n        return this.attList.apply(this, arguments);\n      } else {\n        return this.attribute.apply(this, arguments);\n      }\n    };\n\n    XMLDocumentCB.prototype.a = function() {\n      if (this.currentNode && this.currentNode instanceof XMLDocType) {\n        return this.attList.apply(this, arguments);\n      } else {\n        return this.attribute.apply(this, arguments);\n      }\n    };\n\n    XMLDocumentCB.prototype.ent = function(name, value) {\n      return this.entity(name, value);\n    };\n\n    XMLDocumentCB.prototype.pent = function(name, value) {\n      return this.pEntity(name, value);\n    };\n\n    XMLDocumentCB.prototype.not = function(name, value) {\n      return this.notation(name, value);\n    };\n\n    return XMLDocumentCB;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLAttribute, XMLElement, XMLNode, isFunction, isObject, ref,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction;\n\n  XMLNode = require('./XMLNode');\n\n  XMLAttribute = require('./XMLAttribute');\n\n  module.exports = XMLElement = (function(superClass) {\n    extend(XMLElement, superClass);\n\n    function XMLElement(parent, name, attributes) {\n      XMLElement.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing element name\");\n      }\n      this.name = this.stringify.eleName(name);\n      this.attributes = {};\n      if (attributes != null) {\n        this.attribute(attributes);\n      }\n      if (parent.isDocument) {\n        this.isRoot = true;\n        this.documentObject = parent;\n        parent.rootObject = this;\n      }\n    }\n\n    XMLElement.prototype.clone = function() {\n      var att, attName, clonedSelf, ref1;\n      clonedSelf = Object.create(this);\n      if (clonedSelf.isRoot) {\n        clonedSelf.documentObject = null;\n      }\n      clonedSelf.attributes = {};\n      ref1 = this.attributes;\n      for (attName in ref1) {\n        if (!hasProp.call(ref1, attName)) continue;\n        att = ref1[attName];\n        clonedSelf.attributes[attName] = att.clone();\n      }\n      clonedSelf.children = [];\n      this.children.forEach(function(child) {\n        var clonedChild;\n        clonedChild = child.clone();\n        clonedChild.parent = clonedSelf;\n        return clonedSelf.children.push(clonedChild);\n      });\n      return clonedSelf;\n    };\n\n    XMLElement.prototype.attribute = function(name, value) {\n      var attName, attValue;\n      if (name != null) {\n        name = name.valueOf();\n      }\n      if (isObject(name)) {\n        for (attName in name) {\n          if (!hasProp.call(name, attName)) continue;\n          attValue = name[attName];\n          this.attribute(attName, attValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        if (!this.options.skipNullAttributes || (value != null)) {\n          this.attributes[name] = new XMLAttribute(this, name, value);\n        }\n      }\n      return this;\n    };\n\n    XMLElement.prototype.removeAttribute = function(name) {\n      var attName, i, len;\n      if (name == null) {\n        throw new Error(\"Missing attribute name\");\n      }\n      name = name.valueOf();\n      if (Array.isArray(name)) {\n        for (i = 0, len = name.length; i < len; i++) {\n          attName = name[i];\n          delete this.attributes[attName];\n        }\n      } else {\n        delete this.attributes[name];\n      }\n      return this;\n    };\n\n    XMLElement.prototype.toString = function(options) {\n      return this.options.writer.set(options).element(this);\n    };\n\n    XMLElement.prototype.att = function(name, value) {\n      return this.attribute(name, value);\n    };\n\n    XMLElement.prototype.a = function(name, value) {\n      return this.attribute(name, value);\n    };\n\n    return XMLElement;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLCData, XMLComment, XMLDeclaration, XMLDocType, XMLElement, XMLNode, XMLProcessingInstruction, XMLRaw, XMLText, isEmpty, isFunction, isObject, ref,\n    hasProp = {}.hasOwnProperty;\n\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction, isEmpty = ref.isEmpty;\n\n  XMLElement = null;\n\n  XMLCData = null;\n\n  XMLComment = null;\n\n  XMLDeclaration = null;\n\n  XMLDocType = null;\n\n  XMLRaw = null;\n\n  XMLText = null;\n\n  XMLProcessingInstruction = null;\n\n  module.exports = XMLNode = (function() {\n    function XMLNode(parent) {\n      this.parent = parent;\n      if (this.parent) {\n        this.options = this.parent.options;\n        this.stringify = this.parent.stringify;\n      }\n      this.children = [];\n      if (!XMLElement) {\n        XMLElement = require('./XMLElement');\n        XMLCData = require('./XMLCData');\n        XMLComment = require('./XMLComment');\n        XMLDeclaration = require('./XMLDeclaration');\n        XMLDocType = require('./XMLDocType');\n        XMLRaw = require('./XMLRaw');\n        XMLText = require('./XMLText');\n        XMLProcessingInstruction = require('./XMLProcessingInstruction');\n      }\n    }\n\n    XMLNode.prototype.element = function(name, attributes, text) {\n      var childNode, item, j, k, key, lastChild, len, len1, ref1, val;\n      lastChild = null;\n      if (attributes == null) {\n        attributes = {};\n      }\n      attributes = attributes.valueOf();\n      if (!isObject(attributes)) {\n        ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];\n      }\n      if (name != null) {\n        name = name.valueOf();\n      }\n      if (Array.isArray(name)) {\n        for (j = 0, len = name.length; j < len; j++) {\n          item = name[j];\n          lastChild = this.element(item);\n        }\n      } else if (isFunction(name)) {\n        lastChild = this.element(name.apply());\n      } else if (isObject(name)) {\n        for (key in name) {\n          if (!hasProp.call(name, key)) continue;\n          val = name[key];\n          if (isFunction(val)) {\n            val = val.apply();\n          }\n          if ((isObject(val)) && (isEmpty(val))) {\n            val = null;\n          }\n          if (!this.options.ignoreDecorators && this.stringify.convertAttKey && key.indexOf(this.stringify.convertAttKey) === 0) {\n            lastChild = this.attribute(key.substr(this.stringify.convertAttKey.length), val);\n          } else if (!this.options.separateArrayItems && Array.isArray(val)) {\n            for (k = 0, len1 = val.length; k < len1; k++) {\n              item = val[k];\n              childNode = {};\n              childNode[key] = item;\n              lastChild = this.element(childNode);\n            }\n          } else if (isObject(val)) {\n            lastChild = this.element(key);\n            lastChild.element(val);\n          } else {\n            lastChild = this.element(key, val);\n          }\n        }\n      } else {\n        if (!this.options.ignoreDecorators && this.stringify.convertTextKey && name.indexOf(this.stringify.convertTextKey) === 0) {\n          lastChild = this.text(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertCDataKey && name.indexOf(this.stringify.convertCDataKey) === 0) {\n          lastChild = this.cdata(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertCommentKey && name.indexOf(this.stringify.convertCommentKey) === 0) {\n          lastChild = this.comment(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertRawKey && name.indexOf(this.stringify.convertRawKey) === 0) {\n          lastChild = this.raw(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertPIKey && name.indexOf(this.stringify.convertPIKey) === 0) {\n          lastChild = this.instruction(name.substr(this.stringify.convertPIKey.length), text);\n        } else {\n          lastChild = this.node(name, attributes, text);\n        }\n      }\n      if (lastChild == null) {\n        throw new Error(\"Could not create any elements with: \" + name);\n      }\n      return lastChild;\n    };\n\n    XMLNode.prototype.insertBefore = function(name, attributes, text) {\n      var child, i, removed;\n      if (this.isRoot) {\n        throw new Error(\"Cannot insert elements at root level\");\n      }\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.element(name, attributes, text);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return child;\n    };\n\n    XMLNode.prototype.insertAfter = function(name, attributes, text) {\n      var child, i, removed;\n      if (this.isRoot) {\n        throw new Error(\"Cannot insert elements at root level\");\n      }\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.element(name, attributes, text);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return child;\n    };\n\n    XMLNode.prototype.remove = function() {\n      var i, ref1;\n      if (this.isRoot) {\n        throw new Error(\"Cannot remove the root element\");\n      }\n      i = this.parent.children.indexOf(this);\n      [].splice.apply(this.parent.children, [i, i - i + 1].concat(ref1 = [])), ref1;\n      return this.parent;\n    };\n\n    XMLNode.prototype.node = function(name, attributes, text) {\n      var child, ref1;\n      if (name != null) {\n        name = name.valueOf();\n      }\n      attributes || (attributes = {});\n      attributes = attributes.valueOf();\n      if (!isObject(attributes)) {\n        ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];\n      }\n      child = new XMLElement(this, name, attributes);\n      if (text != null) {\n        child.text(text);\n      }\n      this.children.push(child);\n      return child;\n    };\n\n    XMLNode.prototype.text = function(value) {\n      var child;\n      child = new XMLText(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.cdata = function(value) {\n      var child;\n      child = new XMLCData(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.comment = function(value) {\n      var child;\n      child = new XMLComment(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.commentBefore = function(value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.comment(value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.commentAfter = function(value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.comment(value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.raw = function(value) {\n      var child;\n      child = new XMLRaw(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.instruction = function(target, value) {\n      var insTarget, insValue, instruction, j, len;\n      if (target != null) {\n        target = target.valueOf();\n      }\n      if (value != null) {\n        value = value.valueOf();\n      }\n      if (Array.isArray(target)) {\n        for (j = 0, len = target.length; j < len; j++) {\n          insTarget = target[j];\n          this.instruction(insTarget);\n        }\n      } else if (isObject(target)) {\n        for (insTarget in target) {\n          if (!hasProp.call(target, insTarget)) continue;\n          insValue = target[insTarget];\n          this.instruction(insTarget, insValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        instruction = new XMLProcessingInstruction(this, target, value);\n        this.children.push(instruction);\n      }\n      return this;\n    };\n\n    XMLNode.prototype.instructionBefore = function(target, value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.instruction(target, value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.instructionAfter = function(target, value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.instruction(target, value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.declaration = function(version, encoding, standalone) {\n      var doc, xmldec;\n      doc = this.document();\n      xmldec = new XMLDeclaration(doc, version, encoding, standalone);\n      if (doc.children[0] instanceof XMLDeclaration) {\n        doc.children[0] = xmldec;\n      } else {\n        doc.children.unshift(xmldec);\n      }\n      return doc.root() || doc;\n    };\n\n    XMLNode.prototype.doctype = function(pubID, sysID) {\n      var child, doc, doctype, i, j, k, len, len1, ref1, ref2;\n      doc = this.document();\n      doctype = new XMLDocType(doc, pubID, sysID);\n      ref1 = doc.children;\n      for (i = j = 0, len = ref1.length; j < len; i = ++j) {\n        child = ref1[i];\n        if (child instanceof XMLDocType) {\n          doc.children[i] = doctype;\n          return doctype;\n        }\n      }\n      ref2 = doc.children;\n      for (i = k = 0, len1 = ref2.length; k < len1; i = ++k) {\n        child = ref2[i];\n        if (child.isRoot) {\n          doc.children.splice(i, 0, doctype);\n          return doctype;\n        }\n      }\n      doc.children.push(doctype);\n      return doctype;\n    };\n\n    XMLNode.prototype.up = function() {\n      if (this.isRoot) {\n        throw new Error(\"The root node has no parent. Use doc() if you need to get the document object.\");\n      }\n      return this.parent;\n    };\n\n    XMLNode.prototype.root = function() {\n      var node;\n      node = this;\n      while (node) {\n        if (node.isDocument) {\n          return node.rootObject;\n        } else if (node.isRoot) {\n          return node;\n        } else {\n          node = node.parent;\n        }\n      }\n    };\n\n    XMLNode.prototype.document = function() {\n      var node;\n      node = this;\n      while (node) {\n        if (node.isDocument) {\n          return node;\n        } else {\n          node = node.parent;\n        }\n      }\n    };\n\n    XMLNode.prototype.end = function(options) {\n      return this.document().end(options);\n    };\n\n    XMLNode.prototype.prev = function() {\n      var i;\n      i = this.parent.children.indexOf(this);\n      if (i < 1) {\n        throw new Error(\"Already at the first node\");\n      }\n      return this.parent.children[i - 1];\n    };\n\n    XMLNode.prototype.next = function() {\n      var i;\n      i = this.parent.children.indexOf(this);\n      if (i === -1 || i === this.parent.children.length - 1) {\n        throw new Error(\"Already at the last node\");\n      }\n      return this.parent.children[i + 1];\n    };\n\n    XMLNode.prototype.importDocument = function(doc) {\n      var clonedRoot;\n      clonedRoot = doc.root().clone();\n      clonedRoot.parent = this;\n      clonedRoot.isRoot = false;\n      this.children.push(clonedRoot);\n      return this;\n    };\n\n    XMLNode.prototype.ele = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLNode.prototype.nod = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLNode.prototype.txt = function(value) {\n      return this.text(value);\n    };\n\n    XMLNode.prototype.dat = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLNode.prototype.com = function(value) {\n      return this.comment(value);\n    };\n\n    XMLNode.prototype.ins = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLNode.prototype.doc = function() {\n      return this.document();\n    };\n\n    XMLNode.prototype.dec = function(version, encoding, standalone) {\n      return this.declaration(version, encoding, standalone);\n    };\n\n    XMLNode.prototype.dtd = function(pubID, sysID) {\n      return this.doctype(pubID, sysID);\n    };\n\n    XMLNode.prototype.e = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLNode.prototype.n = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLNode.prototype.t = function(value) {\n      return this.text(value);\n    };\n\n    XMLNode.prototype.d = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLNode.prototype.c = function(value) {\n      return this.comment(value);\n    };\n\n    XMLNode.prototype.r = function(value) {\n      return this.raw(value);\n    };\n\n    XMLNode.prototype.i = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLNode.prototype.u = function() {\n      return this.up();\n    };\n\n    XMLNode.prototype.importXMLBuilder = function(doc) {\n      return this.importDocument(doc);\n    };\n\n    return XMLNode;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLNode, XMLProcessingInstruction,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLProcessingInstruction = (function(superClass) {\n    extend(XMLProcessingInstruction, superClass);\n\n    function XMLProcessingInstruction(parent, target, value) {\n      XMLProcessingInstruction.__super__.constructor.call(this, parent);\n      if (target == null) {\n        throw new Error(\"Missing instruction target\");\n      }\n      this.target = this.stringify.insTarget(target);\n      if (value) {\n        this.value = this.stringify.insValue(value);\n      }\n    }\n\n    XMLProcessingInstruction.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLProcessingInstruction.prototype.toString = function(options) {\n      return this.options.writer.set(options).processingInstruction(this);\n    };\n\n    return XMLProcessingInstruction;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLNode, XMLRaw,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLRaw = (function(superClass) {\n    extend(XMLRaw, superClass);\n\n    function XMLRaw(parent, text) {\n      XMLRaw.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing raw text\");\n      }\n      this.value = this.stringify.raw(text);\n    }\n\n    XMLRaw.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLRaw.prototype.toString = function(options) {\n      return this.options.writer.set(options).raw(this);\n    };\n\n    return XMLRaw;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStreamWriter, XMLText, XMLWriterBase,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLCData = require('./XMLCData');\n\n  XMLComment = require('./XMLComment');\n\n  XMLElement = require('./XMLElement');\n\n  XMLRaw = require('./XMLRaw');\n\n  XMLText = require('./XMLText');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  XMLWriterBase = require('./XMLWriterBase');\n\n  module.exports = XMLStreamWriter = (function(superClass) {\n    extend(XMLStreamWriter, superClass);\n\n    function XMLStreamWriter(stream, options) {\n      XMLStreamWriter.__super__.constructor.call(this, options);\n      this.stream = stream;\n    }\n\n    XMLStreamWriter.prototype.document = function(doc) {\n      var child, i, j, len, len1, ref, ref1, results;\n      ref = doc.children;\n      for (i = 0, len = ref.length; i < len; i++) {\n        child = ref[i];\n        child.isLastRootNode = false;\n      }\n      doc.children[doc.children.length - 1].isLastRootNode = true;\n      ref1 = doc.children;\n      results = [];\n      for (j = 0, len1 = ref1.length; j < len1; j++) {\n        child = ref1[j];\n        switch (false) {\n          case !(child instanceof XMLDeclaration):\n            results.push(this.declaration(child));\n            break;\n          case !(child instanceof XMLDocType):\n            results.push(this.docType(child));\n            break;\n          case !(child instanceof XMLComment):\n            results.push(this.comment(child));\n            break;\n          case !(child instanceof XMLProcessingInstruction):\n            results.push(this.processingInstruction(child));\n            break;\n          default:\n            results.push(this.element(child));\n        }\n      }\n      return results;\n    };\n\n    XMLStreamWriter.prototype.attribute = function(att) {\n      return this.stream.write(' ' + att.name + '=\"' + att.value + '\"');\n    };\n\n    XMLStreamWriter.prototype.cdata = function(node, level) {\n      return this.stream.write(this.space(level) + '<![CDATA[' + node.text + ']]>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.comment = function(node, level) {\n      return this.stream.write(this.space(level) + '<!-- ' + node.text + ' -->' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.declaration = function(node, level) {\n      this.stream.write(this.space(level));\n      this.stream.write('<?xml version=\"' + node.version + '\"');\n      if (node.encoding != null) {\n        this.stream.write(' encoding=\"' + node.encoding + '\"');\n      }\n      if (node.standalone != null) {\n        this.stream.write(' standalone=\"' + node.standalone + '\"');\n      }\n      this.stream.write(this.spacebeforeslash + '?>');\n      return this.stream.write(this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.docType = function(node, level) {\n      var child, i, len, ref;\n      level || (level = 0);\n      this.stream.write(this.space(level));\n      this.stream.write('<!DOCTYPE ' + node.root().name);\n      if (node.pubID && node.sysID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n      } else if (node.sysID) {\n        this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n      }\n      if (node.children.length > 0) {\n        this.stream.write(' [');\n        this.stream.write(this.endline(node));\n        ref = node.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          switch (false) {\n            case !(child instanceof XMLDTDAttList):\n              this.dtdAttList(child, level + 1);\n              break;\n            case !(child instanceof XMLDTDElement):\n              this.dtdElement(child, level + 1);\n              break;\n            case !(child instanceof XMLDTDEntity):\n              this.dtdEntity(child, level + 1);\n              break;\n            case !(child instanceof XMLDTDNotation):\n              this.dtdNotation(child, level + 1);\n              break;\n            case !(child instanceof XMLCData):\n              this.cdata(child, level + 1);\n              break;\n            case !(child instanceof XMLComment):\n              this.comment(child, level + 1);\n              break;\n            case !(child instanceof XMLProcessingInstruction):\n              this.processingInstruction(child, level + 1);\n              break;\n            default:\n              throw new Error(\"Unknown DTD node type: \" + child.constructor.name);\n          }\n        }\n        this.stream.write(']');\n      }\n      this.stream.write(this.spacebeforeslash + '>');\n      return this.stream.write(this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.element = function(node, level) {\n      var att, child, i, len, name, ref, ref1, space;\n      level || (level = 0);\n      space = this.space(level);\n      this.stream.write(space + '<' + node.name);\n      ref = node.attributes;\n      for (name in ref) {\n        if (!hasProp.call(ref, name)) continue;\n        att = ref[name];\n        this.attribute(att);\n      }\n      if (node.children.length === 0 || node.children.every(function(e) {\n        return e.value === '';\n      })) {\n        if (this.allowEmpty) {\n          this.stream.write('></' + node.name + '>');\n        } else {\n          this.stream.write(this.spacebeforeslash + '/>');\n        }\n      } else if (this.pretty && node.children.length === 1 && (node.children[0].value != null)) {\n        this.stream.write('>');\n        this.stream.write(node.children[0].value);\n        this.stream.write('</' + node.name + '>');\n      } else {\n        this.stream.write('>' + this.newline);\n        ref1 = node.children;\n        for (i = 0, len = ref1.length; i < len; i++) {\n          child = ref1[i];\n          switch (false) {\n            case !(child instanceof XMLCData):\n              this.cdata(child, level + 1);\n              break;\n            case !(child instanceof XMLComment):\n              this.comment(child, level + 1);\n              break;\n            case !(child instanceof XMLElement):\n              this.element(child, level + 1);\n              break;\n            case !(child instanceof XMLRaw):\n              this.raw(child, level + 1);\n              break;\n            case !(child instanceof XMLText):\n              this.text(child, level + 1);\n              break;\n            case !(child instanceof XMLProcessingInstruction):\n              this.processingInstruction(child, level + 1);\n              break;\n            default:\n              throw new Error(\"Unknown XML node type: \" + child.constructor.name);\n          }\n        }\n        this.stream.write(space + '</' + node.name + '>');\n      }\n      return this.stream.write(this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.processingInstruction = function(node, level) {\n      this.stream.write(this.space(level) + '<?' + node.target);\n      if (node.value) {\n        this.stream.write(' ' + node.value);\n      }\n      return this.stream.write(this.spacebeforeslash + '?>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.raw = function(node, level) {\n      return this.stream.write(this.space(level) + node.value + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.text = function(node, level) {\n      return this.stream.write(this.space(level) + node.value + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.dtdAttList = function(node, level) {\n      this.stream.write(this.space(level) + '<!ATTLIST ' + node.elementName + ' ' + node.attributeName + ' ' + node.attributeType);\n      if (node.defaultValueType !== '#DEFAULT') {\n        this.stream.write(' ' + node.defaultValueType);\n      }\n      if (node.defaultValue) {\n        this.stream.write(' \"' + node.defaultValue + '\"');\n      }\n      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.dtdElement = function(node, level) {\n      this.stream.write(this.space(level) + '<!ELEMENT ' + node.name + ' ' + node.value);\n      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.dtdEntity = function(node, level) {\n      this.stream.write(this.space(level) + '<!ENTITY');\n      if (node.pe) {\n        this.stream.write(' %');\n      }\n      this.stream.write(' ' + node.name);\n      if (node.value) {\n        this.stream.write(' \"' + node.value + '\"');\n      } else {\n        if (node.pubID && node.sysID) {\n          this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n        } else if (node.sysID) {\n          this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n        }\n        if (node.nData) {\n          this.stream.write(' NDATA ' + node.nData);\n        }\n      }\n      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.dtdNotation = function(node, level) {\n      this.stream.write(this.space(level) + '<!NOTATION ' + node.name);\n      if (node.pubID && node.sysID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n      } else if (node.pubID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\"');\n      } else if (node.sysID) {\n        this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n      }\n      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.endline = function(node) {\n      if (!node.isLastRootNode) {\n        return this.newline;\n      } else {\n        return '';\n      }\n    };\n\n    return XMLStreamWriter;\n\n  })(XMLWriterBase);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStringWriter, XMLText, XMLWriterBase,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLCData = require('./XMLCData');\n\n  XMLComment = require('./XMLComment');\n\n  XMLElement = require('./XMLElement');\n\n  XMLRaw = require('./XMLRaw');\n\n  XMLText = require('./XMLText');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  XMLWriterBase = require('./XMLWriterBase');\n\n  module.exports = XMLStringWriter = (function(superClass) {\n    extend(XMLStringWriter, superClass);\n\n    function XMLStringWriter(options) {\n      XMLStringWriter.__super__.constructor.call(this, options);\n    }\n\n    XMLStringWriter.prototype.document = function(doc) {\n      var child, i, len, r, ref;\n      this.textispresent = false;\n      r = '';\n      ref = doc.children;\n      for (i = 0, len = ref.length; i < len; i++) {\n        child = ref[i];\n        r += (function() {\n          switch (false) {\n            case !(child instanceof XMLDeclaration):\n              return this.declaration(child);\n            case !(child instanceof XMLDocType):\n              return this.docType(child);\n            case !(child instanceof XMLComment):\n              return this.comment(child);\n            case !(child instanceof XMLProcessingInstruction):\n              return this.processingInstruction(child);\n            default:\n              return this.element(child, 0);\n          }\n        }).call(this);\n      }\n      if (this.pretty && r.slice(-this.newline.length) === this.newline) {\n        r = r.slice(0, -this.newline.length);\n      }\n      return r;\n    };\n\n    XMLStringWriter.prototype.attribute = function(att) {\n      return ' ' + att.name + '=\"' + att.value + '\"';\n    };\n\n    XMLStringWriter.prototype.cdata = function(node, level) {\n      return this.space(level) + '<![CDATA[' + node.text + ']]>' + this.newline;\n    };\n\n    XMLStringWriter.prototype.comment = function(node, level) {\n      return this.space(level) + '<!-- ' + node.text + ' -->' + this.newline;\n    };\n\n    XMLStringWriter.prototype.declaration = function(node, level) {\n      var r;\n      r = this.space(level);\n      r += '<?xml version=\"' + node.version + '\"';\n      if (node.encoding != null) {\n        r += ' encoding=\"' + node.encoding + '\"';\n      }\n      if (node.standalone != null) {\n        r += ' standalone=\"' + node.standalone + '\"';\n      }\n      r += this.spacebeforeslash + '?>';\n      r += this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.docType = function(node, level) {\n      var child, i, len, r, ref;\n      level || (level = 0);\n      r = this.space(level);\n      r += '<!DOCTYPE ' + node.root().name;\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      if (node.children.length > 0) {\n        r += ' [';\n        r += this.newline;\n        ref = node.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          r += (function() {\n            switch (false) {\n              case !(child instanceof XMLDTDAttList):\n                return this.dtdAttList(child, level + 1);\n              case !(child instanceof XMLDTDElement):\n                return this.dtdElement(child, level + 1);\n              case !(child instanceof XMLDTDEntity):\n                return this.dtdEntity(child, level + 1);\n              case !(child instanceof XMLDTDNotation):\n                return this.dtdNotation(child, level + 1);\n              case !(child instanceof XMLCData):\n                return this.cdata(child, level + 1);\n              case !(child instanceof XMLComment):\n                return this.comment(child, level + 1);\n              case !(child instanceof XMLProcessingInstruction):\n                return this.processingInstruction(child, level + 1);\n              default:\n                throw new Error(\"Unknown DTD node type: \" + child.constructor.name);\n            }\n          }).call(this);\n        }\n        r += ']';\n      }\n      r += this.spacebeforeslash + '>';\n      r += this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.element = function(node, level) {\n      var att, child, i, j, len, len1, name, r, ref, ref1, ref2, space, textispresentwasset;\n      level || (level = 0);\n      textispresentwasset = false;\n      if (this.textispresent) {\n        this.newline = '';\n        this.pretty = false;\n      } else {\n        this.newline = this.newlinedefault;\n        this.pretty = this.prettydefault;\n      }\n      space = this.space(level);\n      r = '';\n      r += space + '<' + node.name;\n      ref = node.attributes;\n      for (name in ref) {\n        if (!hasProp.call(ref, name)) continue;\n        att = ref[name];\n        r += this.attribute(att);\n      }\n      if (node.children.length === 0 || node.children.every(function(e) {\n        return e.value === '';\n      })) {\n        if (this.allowEmpty) {\n          r += '></' + node.name + '>' + this.newline;\n        } else {\n          r += this.spacebeforeslash + '/>' + this.newline;\n        }\n      } else if (this.pretty && node.children.length === 1 && (node.children[0].value != null)) {\n        r += '>';\n        r += node.children[0].value;\n        r += '</' + node.name + '>' + this.newline;\n      } else {\n        if (this.dontprettytextnodes) {\n          ref1 = node.children;\n          for (i = 0, len = ref1.length; i < len; i++) {\n            child = ref1[i];\n            if (child.value != null) {\n              this.textispresent++;\n              textispresentwasset = true;\n              break;\n            }\n          }\n        }\n        if (this.textispresent) {\n          this.newline = '';\n          this.pretty = false;\n          space = this.space(level);\n        }\n        r += '>' + this.newline;\n        ref2 = node.children;\n        for (j = 0, len1 = ref2.length; j < len1; j++) {\n          child = ref2[j];\n          r += (function() {\n            switch (false) {\n              case !(child instanceof XMLCData):\n                return this.cdata(child, level + 1);\n              case !(child instanceof XMLComment):\n                return this.comment(child, level + 1);\n              case !(child instanceof XMLElement):\n                return this.element(child, level + 1);\n              case !(child instanceof XMLRaw):\n                return this.raw(child, level + 1);\n              case !(child instanceof XMLText):\n                return this.text(child, level + 1);\n              case !(child instanceof XMLProcessingInstruction):\n                return this.processingInstruction(child, level + 1);\n              default:\n                throw new Error(\"Unknown XML node type: \" + child.constructor.name);\n            }\n          }).call(this);\n        }\n        if (textispresentwasset) {\n          this.textispresent--;\n        }\n        if (!this.textispresent) {\n          this.newline = this.newlinedefault;\n          this.pretty = this.prettydefault;\n        }\n        r += space + '</' + node.name + '>' + this.newline;\n      }\n      return r;\n    };\n\n    XMLStringWriter.prototype.processingInstruction = function(node, level) {\n      var r;\n      r = this.space(level) + '<?' + node.target;\n      if (node.value) {\n        r += ' ' + node.value;\n      }\n      r += this.spacebeforeslash + '?>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.raw = function(node, level) {\n      return this.space(level) + node.value + this.newline;\n    };\n\n    XMLStringWriter.prototype.text = function(node, level) {\n      return this.space(level) + node.value + this.newline;\n    };\n\n    XMLStringWriter.prototype.dtdAttList = function(node, level) {\n      var r;\n      r = this.space(level) + '<!ATTLIST ' + node.elementName + ' ' + node.attributeName + ' ' + node.attributeType;\n      if (node.defaultValueType !== '#DEFAULT') {\n        r += ' ' + node.defaultValueType;\n      }\n      if (node.defaultValue) {\n        r += ' \"' + node.defaultValue + '\"';\n      }\n      r += this.spacebeforeslash + '>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.dtdElement = function(node, level) {\n      return this.space(level) + '<!ELEMENT ' + node.name + ' ' + node.value + this.spacebeforeslash + '>' + this.newline;\n    };\n\n    XMLStringWriter.prototype.dtdEntity = function(node, level) {\n      var r;\n      r = this.space(level) + '<!ENTITY';\n      if (node.pe) {\n        r += ' %';\n      }\n      r += ' ' + node.name;\n      if (node.value) {\n        r += ' \"' + node.value + '\"';\n      } else {\n        if (node.pubID && node.sysID) {\n          r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n        } else if (node.sysID) {\n          r += ' SYSTEM \"' + node.sysID + '\"';\n        }\n        if (node.nData) {\n          r += ' NDATA ' + node.nData;\n        }\n      }\n      r += this.spacebeforeslash + '>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.dtdNotation = function(node, level) {\n      var r;\n      r = this.space(level) + '<!NOTATION ' + node.name;\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.pubID) {\n        r += ' PUBLIC \"' + node.pubID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      r += this.spacebeforeslash + '>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.openNode = function(node, level) {\n      var att, name, r, ref;\n      level || (level = 0);\n      if (node instanceof XMLElement) {\n        r = this.space(level) + '<' + node.name;\n        ref = node.attributes;\n        for (name in ref) {\n          if (!hasProp.call(ref, name)) continue;\n          att = ref[name];\n          r += this.attribute(att);\n        }\n        r += (node.children ? '>' : '/>') + this.newline;\n        return r;\n      } else {\n        r = this.space(level) + '<!DOCTYPE ' + node.rootNodeName;\n        if (node.pubID && node.sysID) {\n          r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n        } else if (node.sysID) {\n          r += ' SYSTEM \"' + node.sysID + '\"';\n        }\n        r += (node.children ? ' [' : '>') + this.newline;\n        return r;\n      }\n    };\n\n    XMLStringWriter.prototype.closeNode = function(node, level) {\n      level || (level = 0);\n      switch (false) {\n        case !(node instanceof XMLElement):\n          return this.space(level) + '</' + node.name + '>' + this.newline;\n        case !(node instanceof XMLDocType):\n          return this.space(level) + ']>' + this.newline;\n      }\n    };\n\n    return XMLStringWriter;\n\n  })(XMLWriterBase);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLStringifier,\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    hasProp = {}.hasOwnProperty;\n\n  module.exports = XMLStringifier = (function() {\n    function XMLStringifier(options) {\n      this.assertLegalChar = bind(this.assertLegalChar, this);\n      var key, ref, value;\n      options || (options = {});\n      this.noDoubleEncoding = options.noDoubleEncoding;\n      ref = options.stringify || {};\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this[key] = value;\n      }\n    }\n\n    XMLStringifier.prototype.eleName = function(val) {\n      val = '' + val || '';\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.eleText = function(val) {\n      val = '' + val || '';\n      return this.assertLegalChar(this.elEscape(val));\n    };\n\n    XMLStringifier.prototype.cdata = function(val) {\n      val = '' + val || '';\n      val = val.replace(']]>', ']]]]><![CDATA[>');\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.comment = function(val) {\n      val = '' + val || '';\n      if (val.match(/--/)) {\n        throw new Error(\"Comment text cannot contain double-hypen: \" + val);\n      }\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.raw = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.attName = function(val) {\n      return val = '' + val || '';\n    };\n\n    XMLStringifier.prototype.attValue = function(val) {\n      val = '' + val || '';\n      return this.attEscape(val);\n    };\n\n    XMLStringifier.prototype.insTarget = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.insValue = function(val) {\n      val = '' + val || '';\n      if (val.match(/\\?>/)) {\n        throw new Error(\"Invalid processing instruction value: \" + val);\n      }\n      return val;\n    };\n\n    XMLStringifier.prototype.xmlVersion = function(val) {\n      val = '' + val || '';\n      if (!val.match(/1\\.[0-9]+/)) {\n        throw new Error(\"Invalid version number: \" + val);\n      }\n      return val;\n    };\n\n    XMLStringifier.prototype.xmlEncoding = function(val) {\n      val = '' + val || '';\n      if (!val.match(/^[A-Za-z](?:[A-Za-z0-9._-])*$/)) {\n        throw new Error(\"Invalid encoding: \" + val);\n      }\n      return val;\n    };\n\n    XMLStringifier.prototype.xmlStandalone = function(val) {\n      if (val) {\n        return \"yes\";\n      } else {\n        return \"no\";\n      }\n    };\n\n    XMLStringifier.prototype.dtdPubID = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdSysID = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdElementValue = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdAttType = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdAttDefault = function(val) {\n      if (val != null) {\n        return '' + val || '';\n      } else {\n        return val;\n      }\n    };\n\n    XMLStringifier.prototype.dtdEntityValue = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdNData = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.convertAttKey = '@';\n\n    XMLStringifier.prototype.convertPIKey = '?';\n\n    XMLStringifier.prototype.convertTextKey = '#text';\n\n    XMLStringifier.prototype.convertCDataKey = '#cdata';\n\n    XMLStringifier.prototype.convertCommentKey = '#comment';\n\n    XMLStringifier.prototype.convertRawKey = '#raw';\n\n    XMLStringifier.prototype.assertLegalChar = function(str) {\n      var res;\n      res = str.match(/[\\0\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/);\n      if (res) {\n        throw new Error(\"Invalid character in string: \" + str + \" at index \" + res.index);\n      }\n      return str;\n    };\n\n    XMLStringifier.prototype.elEscape = function(str) {\n      var ampregex;\n      ampregex = this.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\r/g, '&#xD;');\n    };\n\n    XMLStringifier.prototype.attEscape = function(str) {\n      var ampregex;\n      ampregex = this.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/\"/g, '&quot;').replace(/\\t/g, '&#x9;').replace(/\\n/g, '&#xA;').replace(/\\r/g, '&#xD;');\n    };\n\n    return XMLStringifier;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLNode, XMLText,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLText = (function(superClass) {\n    extend(XMLText, superClass);\n\n    function XMLText(parent, text) {\n      XMLText.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing element text\");\n      }\n      this.value = this.stringify.eleText(text);\n    }\n\n    XMLText.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLText.prototype.toString = function(options) {\n      return this.options.writer.set(options).text(this);\n    };\n\n    return XMLText;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLWriterBase,\n    hasProp = {}.hasOwnProperty;\n\n  module.exports = XMLWriterBase = (function() {\n    function XMLWriterBase(options) {\n      var key, ref, ref1, ref2, ref3, ref4, ref5, ref6, value;\n      options || (options = {});\n      this.pretty = options.pretty || false;\n      this.allowEmpty = (ref = options.allowEmpty) != null ? ref : false;\n      if (this.pretty) {\n        this.indent = (ref1 = options.indent) != null ? ref1 : '  ';\n        this.newline = (ref2 = options.newline) != null ? ref2 : '\\n';\n        this.offset = (ref3 = options.offset) != null ? ref3 : 0;\n        this.dontprettytextnodes = (ref4 = options.dontprettytextnodes) != null ? ref4 : 0;\n      } else {\n        this.indent = '';\n        this.newline = '';\n        this.offset = 0;\n        this.dontprettytextnodes = 0;\n      }\n      this.spacebeforeslash = (ref5 = options.spacebeforeslash) != null ? ref5 : '';\n      if (this.spacebeforeslash === true) {\n        this.spacebeforeslash = ' ';\n      }\n      this.newlinedefault = this.newline;\n      this.prettydefault = this.pretty;\n      ref6 = options.writer || {};\n      for (key in ref6) {\n        if (!hasProp.call(ref6, key)) continue;\n        value = ref6[key];\n        this[key] = value;\n      }\n    }\n\n    XMLWriterBase.prototype.set = function(options) {\n      var key, ref, value;\n      options || (options = {});\n      if (\"pretty\" in options) {\n        this.pretty = options.pretty;\n      }\n      if (\"allowEmpty\" in options) {\n        this.allowEmpty = options.allowEmpty;\n      }\n      if (this.pretty) {\n        this.indent = \"indent\" in options ? options.indent : '  ';\n        this.newline = \"newline\" in options ? options.newline : '\\n';\n        this.offset = \"offset\" in options ? options.offset : 0;\n        this.dontprettytextnodes = \"dontprettytextnodes\" in options ? options.dontprettytextnodes : 0;\n      } else {\n        this.indent = '';\n        this.newline = '';\n        this.offset = 0;\n        this.dontprettytextnodes = 0;\n      }\n      this.spacebeforeslash = \"spacebeforeslash\" in options ? options.spacebeforeslash : '';\n      if (this.spacebeforeslash === true) {\n        this.spacebeforeslash = ' ';\n      }\n      this.newlinedefault = this.newline;\n      this.prettydefault = this.pretty;\n      ref = options.writer || {};\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this[key] = value;\n      }\n      return this;\n    };\n\n    XMLWriterBase.prototype.space = function(level) {\n      var indent;\n      if (this.pretty) {\n        indent = (level || 0) + this.offset + 1;\n        if (indent > 0) {\n          return new Array(indent).join(this.indent);\n        } else {\n          return '';\n        }\n      } else {\n        return '';\n      }\n    };\n\n    return XMLWriterBase;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDocument, XMLDocumentCB, XMLStreamWriter, XMLStringWriter, assign, isFunction, ref;\n\n  ref = require('./Utility'), assign = ref.assign, isFunction = ref.isFunction;\n\n  XMLDocument = require('./XMLDocument');\n\n  XMLDocumentCB = require('./XMLDocumentCB');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  XMLStreamWriter = require('./XMLStreamWriter');\n\n  module.exports.create = function(name, xmldec, doctype, options) {\n    var doc, root;\n    if (name == null) {\n      throw new Error(\"Root element needs a name\");\n    }\n    options = assign({}, xmldec, doctype, options);\n    doc = new XMLDocument(options);\n    root = doc.element(name);\n    if (!options.headless) {\n      doc.declaration(options);\n      if ((options.pubID != null) || (options.sysID != null)) {\n        doc.doctype(options);\n      }\n    }\n    return root;\n  };\n\n  module.exports.begin = function(options, onData, onEnd) {\n    var ref1;\n    if (isFunction(options)) {\n      ref1 = [options, onData], onData = ref1[0], onEnd = ref1[1];\n      options = {};\n    }\n    if (onData) {\n      return new XMLDocumentCB(options, onData, onEnd);\n    } else {\n      return new XMLDocument(options);\n    }\n  };\n\n  module.exports.stringWriter = function(options) {\n    return new XMLStringWriter(options);\n  };\n\n  module.exports.streamWriter = function(stream, options) {\n    return new XMLStreamWriter(stream, options);\n  };\n\n}).call(this);\n","import user from './user'\n\nexport default {\n  tabs: [\n    user.Query,\n    user.Mutation\n  ]\n}\n","import { User, Login } from '../constants'\nexport default {\n  Query: {\n    name: 'User Queries',\n    endpoint: '',\n    headers: { sessiontoken: 'MY^PR3TTYP0NY' },\n    query: `\n    {\n      getUser {\n        ${User}\n      }\n    }`\n  },\n  Mutation: {\n    name: 'User Mutations',\n    endpoint: '',\n    headers: { sessiontoken: 'MY^PR3TTYP0NY' },\n    query: `\n    mutation {\n      login(username: \"\", password: \"\") {\n        ${Login}\n      }\n      logout(sessionToken: \"\")\n      sendResetPassword(email: \"\")\n    }`\n  }\n}\n","import { GraphQLScalarType } from 'graphql'\nimport { Kind } from 'graphql/language'\nimport user from './user'\nimport merge from 'lodash.merge'\n\nexport default {\n  ...merge(\n    user\n  ),\n  Date: new GraphQLScalarType({\n    name: 'Date',\n    description: 'Date custom scalar type',\n    parseValue (value) {\n      return new Date(value)\n    },\n    serialize (value) {\n      return new Date(value).getTime()\n    },\n    parseLiteral (ast) {\n      if (ast.kind === Kind.INT) {\n        return parseInt(ast.value, 10)\n      }\n      return null\n    }\n  })\n}\n","import { AuthenticationError, ForbiddenError } from 'apollo-server-lambda'\nimport { AdvitoUser, AdvitoUserSession } from '../models'\nimport { saltHash, generateAccessToken, getExpirationDate, sendEmail } from '../util'\nimport { SESSION, RECOVERY } from '../constants'\nimport { APP_URL } from '../config'\nimport crypto from 'crypto'\n\nexport default {\n  Query: {\n    getUser: async (_, __) => AdvitoUser.query().findById(711)\n  },\n  Mutation: {\n    login: async (_, { username, password }) => {\n      const user = await AdvitoUser.query().where('username', username).first()\n      if (!user) throw new AuthenticationError('User not found')\n      if (!user.is_enabled) throw new AuthenticationError('User is not enabled')\n      const { pwd: dbPassword, user_salt: userSalt } = user\n      const { passwordHashed } = saltHash(password, userSalt)\n      if (dbPassword !== passwordHashed) throw new AuthenticationError('Password is incorrect`')\n\n      const roleIds = await user.$relatedQuery('advitoUserRoleLink').map(role => role.advito_role_id)\n      const session = await user.$relatedQuery('advitoUserSession').where('session_end', null).first()\n      const sessionToken = crypto.randomBytes(16).toString('base64')\n      if (session) await user.$relatedQuery('advitoUserSession').patch({ session_end: new Date() }).where('session_end', null)\n      await user.$relatedQuery('advitoUserSession').insert({\n        advito_user_id: user.id,\n        session_token: sessionToken,\n        session_start: new Date(),\n        session_end: null,\n        session_duration_sec: 3600,\n        session_type: null,\n        session_expiration: getExpirationDate(SESSION),\n        session_note: null,\n        created: new Date(),\n        modified: new Date()\n      })\n\n      return {\n        displayName: user.fullName(),\n        clientId: user.client_id,\n        profilePicturePath: user.profile_picture_path,\n        sessionToken,\n        roleIds\n      }\n    },\n    logout: async (_, { sessionToken }) => {\n      const session = await AdvitoUserSession.query().where('session_token', sessionToken).where('session_end', null).first()\n      if (!session) throw new AuthenticationError('User session not found')\n      await AdvitoUserSession.query().patch({ session_end: new Date() }).where('session_token', sessionToken).where('session_end', null)\n    },\n    sendResetPassword: async (_, { email }) => {\n      const user = await AdvitoUser.query().where('email', email).first()\n      if (!user) throw new AuthenticationError('User not found')\n      const oldToken = await user.$relatedQuery('accessToken').where('is_active', true).first()\n      if (oldToken) await await user.$relatedQuery('accessToken').patch({ is_active: false }).where('is_active', true).first()\n      const token = generateAccessToken('PASS')\n      await user.$relatedQuery('accessToken').insert({\n        advito_user_id: user.id,\n        token_type: 'RECOVERY',\n        token,\n        token_expiration: getExpirationDate(RECOVERY)\n      })\n      const placeholders = {\n        NAMEFIRST: user.name_first,\n        URL: `${APP_URL}/resetpassword?t=${token}`\n      }\n      try {\n        await sendEmail('Password Recovery', user.email, placeholders)\n        return token\n      } catch (err) {\n        throw new ForbiddenError(err.message)\n      }\n    }\n  }\n}\n","import { gql } from 'apollo-server-lambda'\nimport user from './user'\n\nexport default gql`\n  scalar Date\n  ${user}\n  type Query {\n    _empty: String\n  }\n  type Mutation {\n    _empty: String\n  }\n`\n","export default `\ntype User {\n  id: String,\n  client_id: String,\n  username: String,\n  pwd: String,\n  name_last: String,\n  name_first: String,\n  is_enabled: Boolean,\n  is_verified: Boolean,\n  must_change_pwd: Boolean,\n  pwd_expiration: Date,\n  email: String,\n  phone: String,\n  profile_picture_path: String,\n  default_timezone: String,\n  default_language: String,\n  user_salt: String,\n  default_date_format: String,\n  address: String,\n  created: String,\n  modified: String\n}\ntype Login {\n  displayName: String,\n  clientId: Int,\n  profilePicturePath: String,\n  sessionToken: String,\n  roleIds: [Int]\n}\n\nextend type Query {\n  getUser: User\n}\nextend type Mutation {\n  login(username: String!, password: String!): Login\n  logout(sessionToken: String!): Int\n  sendResetPassword(email: String!): String\n}\n`\n","import AWS from 'aws-sdk'\nimport { EmailTemplate } from '../models'\nimport { EMAIL_SENDER, EMAIL_BCC, ADVITO_AIR_APPLICATION } from '../config'\nconst ses = new AWS.SES({\n  accessKeyId: process.env.AWS_SES_ACCESS_KEY_ID,\n  secretAccessKey: process.env.AWS_SES_SECRET_ACCESS_KEY,\n  region: process.env.AWS_SES_REGION\n})\n\nexport const sendEmail = async (templateName, recipient, placeholders) => {\n  const { email_subject: emailSubject, email_body: emailBody } = await EmailTemplate.query().where('template_name', templateName).where('advito_application_id', ADVITO_AIR_APPLICATION).first()\n  let message = emailBody\n  Object.keys(placeholders).forEach(key => {\n    const regex = new RegExp(String.raw`\\[\\[${key}]]`, 'g')\n    message = message.replace(regex, placeholders[key])\n  })\n  const params = {\n    Source: EMAIL_SENDER,\n    Destination: {\n      ToAddresses: [recipient],\n      BccAddresses: EMAIL_BCC\n    },\n    Message: {\n      Body: {\n        Html: {\n          Charset: 'UTF-8',\n          Data: message\n        }\n      },\n      Subject: {\n        Charset: 'UTF-8',\n        Data: emailSubject\n      }\n    }\n  }\n\n  await ses.sendEmail(params).promise()\n}\n","export * from './password'\nexport * from './email'\n","import crypto from 'crypto'\nimport { SESSION, RECOVERY } from '../constants'\n\nexport const saltHash = (password, salt = null) => {\n  const saltHashed = salt || crypto.randomBytes(16).toString('base64')\n  const passwordHashed = crypto.createHash('sha256')\n    .update(password)\n    .update(saltHashed, 'base64')\n    .digest('base64')\n  return {\n    saltHashed,\n    passwordHashed\n  }\n}\n\nexport const generateAccessToken = (prefix = '') => prefix + crypto.randomBytes(16).toString('hex')\n\nexport const getExpirationDate = (type) => {\n  const expirationDate = new Date()\n  if (type === SESSION) {\n    expirationDate.setHours(expirationDate.getHours() + 1)\n  } else if (type === RECOVERY) {\n    expirationDate.setHours(expirationDate.getHours() + 24)\n  }\n  return new Date(expirationDate)\n}\n","module.exports = require(\"ajv\");","module.exports = require(\"apollo-server-lambda\");","module.exports = require(\"bluebird\");","module.exports = require(\"buffer\");","module.exports = require(\"child_process\");","module.exports = require(\"crypto\");","module.exports = require(\"dgram\");","module.exports = require(\"domain\");","module.exports = require(\"dotenv\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"graphql\");","module.exports = require(\"graphql/language\");","module.exports = require(\"http\");","module.exports = require(\"https\");","module.exports = require(\"knex\");","module.exports = require(\"lodash\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"querystring\");","module.exports = require(\"sax\");","module.exports = require(\"source-map-support/register\");","module.exports = require(\"stream\");","module.exports = require(\"timers\");","module.exports = require(\"url\");","module.exports = require(\"util\");","module.exports = require(\"uuid\");"],"sourceRoot":""}