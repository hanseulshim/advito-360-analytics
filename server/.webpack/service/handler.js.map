{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./handler.js","webpack:///./resolvers/index.js","webpack:///./typeDefs/index.js","webpack:///external \"apollo-server-lambda\"","webpack:///external \"dotenv\"","webpack:///external \"graphql\"","webpack:///external \"graphql/language\"","webpack:///external \"source-map-support/register\""],"names":["require","config","server","ApolloServer","typeDefs","resolvers","graphqlHandler","createHandler","cors","origin","credentials","Query","getUser","id","name","gql"],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;;;;;;;;;;AClFA;AACA;AACA;;AACAA,mBAAO,CAAC,sBAAD,CAAP,CAAkBC,MAAlB,G,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,MAAM,GAAG,IAAIC,iEAAJ,CAAiB;AAC9BC,6DAD8B;AAE9BC,+DAF8B,CAG9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAX8B,CAAjB,CAAf;AAcO,MAAMC,cAAc,GAAGJ,MAAM,CAACK,aAAP,CAAqB;AACjDC,MAAI,EAAE;AACJC,UAAM,EAAE,IADJ;AAEJC,eAAW,EAAE;AAFT;AAD2C,CAArB,CAAvB,C;;;;;;;;;;;;;;;;;;;;ACtCP;AACA;AAEe;AACbC,OAAK,EAAE;AACLC,WAAO,EAAE,OAAO;AAAEC,QAAE,EAAE,CAAN;AAASC,UAAI,EAAE;AAAf,KAAP,CADJ,CAGP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAlBO;AADM,CAAf,E;;;;;;;;;;;;;;;;;;ACHA;AAEeC,uHAAI;;;;;;;;;CAAnB,E;;;;;;;;;;;ACFA,iD;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,oC;;;;;;;;;;;ACAA,6C;;;;;;;;;;;ACAA,wD","file":"handler.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./handler.js\");\n","import { ApolloServer } from 'apollo-server-lambda'\nimport typeDefs from './typeDefs'\nimport resolvers from './resolvers'\nrequire('dotenv').config()\n\n// const db = require('knex')({\n//   client: 'pg',\n//   connection: {\n//     host: process.env.DB_HOST,\n//     user: process.env.DB_USER,\n//     password: process.env.DB_PASSWORD,\n//     database: process.env.AIR_DB_DATABASE\n//   }\n// })\n// const advitoDb = require('knex')({\n//   client: 'pg',\n//   connection: {\n//     host: process.env.DB_HOST,\n//     user: process.env.DB_USER,\n//     password: process.env.DB_PASSWORD,\n//     database: process.env.ADVITO_DB_DATABASE\n//   }\n// })\n\nconst server = new ApolloServer({\n  typeDefs,\n  resolvers\n  // context: async ({ event }) => {\n  //   const sessionToken = event.headers.sessiontoken || ''\n  //   const user = await authenticateUser(sessionToken, advitoDb)\n  //   return { user, db }\n  // },\n  // schemaDirectives: {\n  //   auth: requireAuthDirective\n  // },\n  // playground\n})\n\nexport const graphqlHandler = server.createHandler({\n  cors: {\n    origin: true,\n    credentials: true\n  }\n})\n","import { GraphQLScalarType } from 'graphql'\nimport { Kind } from 'graphql/language'\n\nexport default {\n  Query: {\n    getUser: () => ({ id: 1, name: 'test' })\n  }\n  // Date: new GraphQLScalarType({\n  //   name: 'Date',\n  //   description: 'Date custom scalar type',\n  //   parseValue (value) {\n  //     return new Date(value).toISOString()\n  //   },\n  //   serialize (value) {\n  //     return new Date(value).getTime()\n  //   },\n  //   parseLiteral (ast) {\n  //     if (ast.kind === Kind.INT) {\n  //       return parseInt(ast.value, 10)\n  //     }\n  //     return null\n  //   }\n  // })\n}\n","import { gql } from 'apollo-server-lambda'\n\nexport default gql`\n type User {\n   id: Int\n   name: String\n }\n\n type Query {\n   getUser: User\n }\n`\n","module.exports = require(\"apollo-server-lambda\");","module.exports = require(\"dotenv\");","module.exports = require(\"graphql\");","module.exports = require(\"graphql/language\");","module.exports = require(\"source-map-support/register\");"],"sourceRoot":""}